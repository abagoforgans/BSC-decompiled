contract main {




// =====================  Runtime code  =====================


#
#  - queryPairListInfo(address[] arg1)
#
const LIST_TOKEN_FAILURE_BURN_PRECENT = 'LIST_TOKEN_FAILURE_BURN_PRECENT'

const UNSTAKE_DURATION = 0x554e5354414b455f4455524154494f4e00000000000000000000000000000000

const VOTE_REWARD_PERCENT = 0x564f54455f5245574152445f50455243454e5400000000000000000000000000

const PAIR_SWITCH = 0x504149525f535749544348000000000000000000000000000000000000000000

const VOTE_DURATION = 0x564f54455f4455524154494f4e00000000000000000000000000000000000000

const LIST_DGAS_AMOUNT = 0x4c4953545f444741535f414d4f554e5400000000000000000000000000000000

const LIST_TOKEN_SUCCESS_BURN_PRECENT = 'LIST_TOKEN_SUCCESS_BURN_PRECENT'

const TOKEN_TO_DGAS_PAIR_MIN_PERCENT = 'TOKEN_TO_DGAS_PAIR_MIN_PERCENT'

const PRODUCE_DGAS_RATE = ('PRODUCE_DGAS_RATE' << 120)

const TOKEN_PENGDING_TIME = ('TOKEN_PENGDING_TIME' << 104)

const SWAP_FEE_PERCENT = 0x535741505f4645455f50455243454e5400000000000000000000000000000000

const TOKEN_PENGDING_SWITCH = 0x544f4b454e5f50454e4744494e475f5357495443480000000000000000000000

const REMOVE_LIQUIDITY_DURATION = 0x52454d4f56455f4c49515549444954595f4455524154494f4e00000000000000

const PROPOSAL_DGAS_AMOUNT = 0x50524f504f53414c5f444741535f414d4f554e54000000000000000000000000


address configAddr;
address platformAddress;
address factoryAddress;
address owner;
address governanceAddress;
address sub_538ee007Address;

function platform() payable {
    return platformAddress
}

function sub_538ee007(?) payable {
    return sub_538ee007Address
}

function governance() payable {
    return governanceAddress
}

function configAddr() payable {
    return configAddr
}

function owner() payable {
    return owner
}

function factory() payable {
    return factoryAddress
}

function _fallback() payable {
    revert
}

function countTokenList() payable {
    require ext_code.size(configAddr)
    staticcall configAddr.tokenCount() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function countProposalList() payable {
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.ballotCount() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function countLiquidityList() payable {
    require ext_code.size(factoryAddress)
    staticcall factoryAddress.getPlayerPairCount(address rg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function upgrade(address arg1, address arg2, address arg3, address arg4, address arg5) payable {
    require calldata.size - 4 >= 160
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    require arg5 == arg5
    require msg.sender == owner
    configAddr = arg1
    platformAddress = arg2
    factoryAddress = arg3
    governanceAddress = arg4
    sub_538ee007Address = arg5
}

function queryConfigInfo(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(configAddr)
    staticcall configAddr.configs(bytes32 rg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 160
    require bool(ceil32(return_data.size) + 416 <= test266151307())
    return ext_call.return_data[0], 
           ext_call.return_data[32],
           ext_call.return_data[64],
           ext_call.return_data[96],
           ext_call.return_data[128]
}

function queryStakeInfo() payable {
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.0x70a08231 with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.allowance(address rg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.stakingSupply() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0]
}

function queryCondition(address[] arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 >= 96 and (32 * arg1.length) + 128 <= test266151307()
    mem[64] = (32 * arg1.length) + 128
    mem[96] = arg1.length
    require calldata.size >= arg1 + (32 * arg1.length) + 36
    s = arg1 + 36
    t = 128
    idx = 0
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    idx = 0
    while idx < arg1.length:
        require idx < mem[96]
        _26 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        require ext_code.size(platformAddress)
        staticcall platformAddress.swapPrecondition(address rg1) with:
                gas gas_remaining wei
               args address(_26)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _30 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_30] == bool(mem[_30])
        if mem[_30]:
            idx = idx + 1
            continue 
        return (idx + 1)
    return 0
}

function queryConfig() payable {
    require ext_code.size(configAddr)
    staticcall configAddr.getConfigValue(bytes32 rg1) with:
            gas gas_remaining wei
           args 0x535741505f4645455f50455243454e5400000000000000000000000000000000
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(configAddr)
    staticcall configAddr.getConfigValue(bytes32 rg1) with:
            gas gas_remaining wei
           args 0x50524f504f53414c5f444741535f414d4f554e54000000000000000000000000
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(configAddr)
    staticcall configAddr.getConfigValue(bytes32 rg1) with:
            gas gas_remaining wei
           args 0x554e5354414b455f4455524154494f4e00000000000000000000000000000000
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(configAddr)
    staticcall configAddr.getConfigValue(bytes32 rg1) with:
            gas gas_remaining wei
           args 0x52454d4f56455f4c49515549444954595f4455524154494f4e00000000000000
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(configAddr)
    staticcall configAddr.getConfigValue(bytes32 rg1) with:
            gas gas_remaining wei
           args 0x4c4953545f444741535f414d4f554e5400000000000000000000000000000000
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(configAddr)
    staticcall configAddr.getConfigValue(bytes32 rg1) with:
            gas gas_remaining wei
           args 0x564f54455f5245574152445f50455243454e5400000000000000000000000000
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0], 
           ext_call.return_data[0],
           ext_call.return_data[0],
           ext_call.return_data[0],
           ext_call.return_data[0],
           ext_call.return_data[0]
}

function sub_ba63f4f4(?) payable {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    s = cd[4] + 36
    t = 128
    idx = 0
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    require ('cd', 4).length <= test266151307()
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
    mem[64] = (64 * ('cd', 4).length) + 160
    if not ('cd', 4).length:
        idx = 0
        while idx < ('cd', 4).length:
            require idx < mem[96]
            _53 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            require ext_code.size(sub_538ee007Address)
            staticcall sub_538ee007Address.pairWeights(address rg1) with:
                    gas gas_remaining wei
                   args address(_53)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _63 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require idx < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_63]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _58 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 32] = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 64 len 32 * _58] = mem[(32 * ('cd', 4).length) + 160 len 32 * _58]
        return 32, mem[mem[64] + 32 len (32 * _58) + 32]
    mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    idx = 0
    while idx < ('cd', 4).length:
        require idx < mem[96]
        _56 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        require ext_code.size(sub_538ee007Address)
        staticcall sub_538ee007Address.pairWeights(address rg1) with:
                gas gas_remaining wei
               args address(_56)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _65 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require idx < mem[(32 * ('cd', 4).length) + 128]
        mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_65]
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    _60 = mem[(32 * ('cd', 4).length) + 128]
    mem[mem[64] + 32] = mem[(32 * ('cd', 4).length) + 128]
    mem[mem[64] + 64 len 32 * _60] = mem[(32 * ('cd', 4).length) + 160 len 32 * _60]
    return 32, mem[mem[64] + 32 len (32 * _60) + 32]
}

function queryTokenItemInfo(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    mem[96] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
    require ext_code.size(arg1)
    staticcall arg1.0x95d89b41 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    _4 = mem[96]
    require mem[96] <= test266151307()
    require mem[96] + 127 < return_data.size + 96
    _5 = mem[mem[96] + 96]
    require mem[mem[96] + 96] <= test266151307()
    require ceil32(mem[mem[96] + 96]) + 32 >= 0 and ceil32(return_data.size) + ceil32(mem[mem[96] + 96]) + 128 <= test266151307()
    mem[64] = ceil32(return_data.size) + ceil32(mem[mem[96] + 96]) + 128
    mem[ceil32(return_data.size) + 96] = _5
    require _4 + _5 + 32 <= return_data.size
    mem[ceil32(return_data.size) + 128 len ceil32(_5)] = mem[_4 + 128 len ceil32(_5)]
    if ceil32(_5) <= _5:
        require ext_code.size(arg1)
        staticcall arg1.0x313ce567 with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _55 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _57 = mem[_55]
        require mem[_55] == mem[_55 + 31 len 1]
        require ext_code.size(arg1)
        staticcall arg1.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _63 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _65 = mem[_63]
        mem[mem[64] + 4] = msg.sender
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _71 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _73 = mem[_71]
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = platformAddress
        require ext_code.size(arg1)
        staticcall arg1.0xdd62ed3e with:
                gas gas_remaining wei
               args msg.sender, platformAddress
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _79 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _81 = mem[_79]
        _83 = mem[64]
        mem[mem[64]] = 160
        mem[mem[64] + 160] = _5
        mem[mem[64] + 192 len ceil32(_5)] = mem[ceil32(return_data.size) + 128 len ceil32(_5)]
        if ceil32(_5) <= _5:
            mem[mem[64] + 64] = _65
            mem[mem[64] + 96] = _73
            return Array(len=_5, data=mem[mem[64] + 192 len ceil32(_5)]), _57 << 248, _65, _73, _81
        mem[mem[64] + _5 + 192] = 0
        mem[mem[64] + 32] = uint8(_57)
        mem[_83 + 64] = _65
        mem[_83 + 96] = _73
        mem[_83 + 128] = _81
        return memory
          from mem[64]
           len ceil32(_5) + _83 + -mem[64] + 192
    mem[ceil32(return_data.size) + _5 + 128] = 0
    require ext_code.size(arg1)
    staticcall arg1.0x313ce567 with:
            gas gas_remaining wei
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _56 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _58 = mem[_56]
    require mem[_56] == mem[_56 + 31 len 1]
    require ext_code.size(arg1)
    staticcall arg1.0x18160ddd with:
            gas gas_remaining wei
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _64 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _67 = mem[_64]
    mem[mem[64] + 4] = msg.sender
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args msg.sender
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _72 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _75 = mem[_72]
    mem[mem[64] + 4] = msg.sender
    mem[mem[64] + 36] = platformAddress
    require ext_code.size(arg1)
    staticcall arg1.0xdd62ed3e with:
            gas gas_remaining wei
           args msg.sender, platformAddress
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _80 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _82 = mem[_80]
    _84 = mem[64]
    mem[mem[64]] = 160
    mem[mem[64] + 160] = _5
    mem[mem[64] + 192 len ceil32(_5)] = mem[ceil32(return_data.size) + 128 len ceil32(_5)]
    if ceil32(_5) <= _5:
        mem[mem[64] + 64] = _67
        mem[mem[64] + 96] = _75
        return Array(len=_5, data=mem[mem[64] + 192 len ceil32(_5)]), _58 << 248, _67, _75, _82
    mem[mem[64] + _5 + 192] = 0
    mem[mem[64] + 32] = uint8(_58)
    mem[_84 + 64] = _67
    mem[_84 + 96] = _75
    mem[_84 + 128] = _82
    return memory
      from mem[64]
       len ceil32(_5) + _84 + -mem[64] + 192
}

function queryLiquidityList() payable {
    mem[100] = msg.sender
    require ext_code.size(factoryAddress)
    staticcall factoryAddress.getPlayerPairCount(address rg1) with:
            gas gas_remaining wei
           args msg.sender
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        mem[ceil32(return_data.size) + 96] = 32
        mem[ceil32(return_data.size) + 128] = ext_call.return_data[0]
        idx = 0
        s = 128
        t = ceil32(return_data.size) + 160
        while idx < ext_call.return_data[0]:
            _71 = mem[s]
            mem[t] = mem[mem[s] + 12 len 20]
            mem[t + 32] = mem[_71 + 32]
            mem[t + 64] = mem[_71 + 64]
            mem[t + 96] = mem[_71 + 96]
            idx = idx + 1
            s = s + 32
            t = t + 128
            continue 
        return Array(len=ext_call.return_data[0], data=mem[ceil32(return_data.size) + 160 len 128 * ext_call.return_data[0]])
    require ext_call.return_data[0] <= test266151307()
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128
    if not ext_call.return_data[0]:
        idx = 0
        while idx < ext_call.return_data[0]:
            _78 = mem[64]
            mem[64] = mem[64] + 128
            mem[_78] = 0
            mem[_78 + 32] = 0
            mem[_78 + 64] = 0
            mem[_78 + 96] = 0
            mem[mem[64] + 4] = msg.sender
            mem[mem[64] + 36] = idx
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.playerPairs(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args msg.sender, idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _89 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _93 = mem[_89]
            require mem[_89] == mem[_89 + 12 len 20]
            mem[_78] = mem[_89 + 12 len 20]
            mem[mem[64] + 4] = msg.sender
            require ext_code.size(address(_93))
            staticcall address(_93).0x70a08231 with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _106 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[_78 + 32] = mem[_106]
            require ext_code.size(mem[_78 + 12 len 20])
            staticcall mem[_78 + 12 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _113 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[_78 + 64] = mem[_113]
            _117 = mem[_78]
            mem[mem[64] + 4] = msg.sender
            require ext_code.size(address(_117))
            staticcall address(_117).lastMintBlock(address rg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _124 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[_78 + 96] = mem[_124]
            require idx < mem[ceil32(return_data.size) + 96]
            mem[(32 * idx) + ceil32(return_data.size) + 128] = _78
            idx = idx + 1
            continue 
        _79 = mem[64]
        mem[mem[64]] = 32
        _81 = mem[ceil32(return_data.size) + 96]
        mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
        idx = 0
        s = ceil32(return_data.size) + 128
        t = mem[64] + 64
        while idx < _81:
            _135 = mem[s]
            mem[t] = mem[mem[s] + 12 len 20]
            mem[t + 32] = mem[_135 + 32]
            mem[t + 64] = mem[_135 + 64]
            mem[t + 96] = mem[_135 + 96]
            idx = idx + 1
            s = s + 32
            t = t + 128
            continue 
        return memory
          from mem[64]
           len _79 + (128 * _81) + -mem[64] + 64
    mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 256
    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128] = 0
    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 160] = 0
    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 192] = 0
    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 224] = 0
    mem[var16001] = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128
    s = var16001
    idx = var16002
    while idx - 1:
        mem[64] = mem[64] + 128
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 160] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 192] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 224] = 0
        mem[s + 32] = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128
        s = s + 32
        idx = idx - 1
        continue 
    idx = 0
    while idx < ext_call.return_data[0]:
        _169 = mem[64]
        mem[64] = mem[64] + 128
        mem[_169] = 0
        mem[_169 + 32] = 0
        mem[_169 + 64] = 0
        mem[_169 + 96] = 0
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = idx
        require ext_code.size(factoryAddress)
        staticcall factoryAddress.playerPairs(address rg1, uint256 rg2) with:
                gas gas_remaining wei
               args msg.sender, idx
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _180 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _181 = mem[_180]
        require mem[_180] == mem[_180 + 12 len 20]
        mem[_169] = mem[_180 + 12 len 20]
        mem[mem[64] + 4] = msg.sender
        require ext_code.size(address(_181))
        staticcall address(_181).0x70a08231 with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _184 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[_169 + 32] = mem[_184]
        require ext_code.size(mem[_169 + 12 len 20])
        staticcall mem[_169 + 12 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _189 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[_169 + 64] = mem[_189]
        _191 = mem[_169]
        mem[mem[64] + 4] = msg.sender
        require ext_code.size(address(_191))
        staticcall address(_191).lastMintBlock(address rg1) with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _194 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[_169 + 96] = mem[_194]
        require idx < mem[ceil32(return_data.size) + 96]
        mem[(32 * idx) + ceil32(return_data.size) + 128] = _169
        idx = idx + 1
        continue 
    _170 = mem[64]
    mem[mem[64]] = 32
    _172 = mem[ceil32(return_data.size) + 96]
    mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
    idx = 0
    s = ceil32(return_data.size) + 128
    t = mem[64] + 64
    while idx < _172:
        _197 = mem[s]
        mem[t] = mem[mem[s] + 12 len 20]
        mem[t + 32] = mem[_197 + 32]
        mem[t + 64] = mem[_197 + 64]
        mem[t + 96] = mem[_197 + 96]
        idx = idx + 1
        s = s + 32
        t = t + 128
        continue 
    return memory
      from mem[64]
       len _170 + (128 * _172) + -mem[64] + 64
}

function iterateLiquidityList(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg1 > arg2:
        revert with 0, 'INVAID_PARAMTERS'
    mem[100] = msg.sender
    require ext_code.size(factoryAddress)
    staticcall factoryAddress.getPlayerPairCount(address rg1) with:
            gas gas_remaining wei
           args msg.sender
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        mem[ceil32(return_data.size) + 96] = 32
        mem[ceil32(return_data.size) + 128] = ext_call.return_data[0]
        idx = 0
        s = 128
        t = ceil32(return_data.size) + 160
        while idx < ext_call.return_data[0]:
            _131 = mem[s]
            mem[t] = mem[mem[s] + 12 len 20]
            mem[t + 32] = mem[_131 + 32]
            mem[t + 64] = mem[_131 + 64]
            mem[t + 96] = mem[_131 + 96]
            idx = idx + 1
            s = s + 32
            t = t + 128
            continue 
        return Array(len=ext_call.return_data[0], data=mem[ceil32(return_data.size) + 160 len 128 * ext_call.return_data[0]])
    if arg2 <= ext_call.return_data[0]:
        require arg2 - arg1 <= test266151307()
        mem[ceil32(return_data.size) + 96] = arg2 - arg1
        mem[64] = ceil32(return_data.size) + (32 * arg2 - arg1) + 128
        if not arg2 - arg1:
            idx = 0
            s = 0
            while idx < arg2 - arg1:
                _139 = mem[64]
                mem[64] = mem[64] + 128
                mem[_139] = 0
                mem[_139 + 32] = 0
                mem[_139 + 64] = 0
                mem[_139 + 96] = 0
                mem[mem[64] + 4] = msg.sender
                mem[mem[64] + 36] = idx
                require ext_code.size(factoryAddress)
                staticcall factoryAddress.playerPairs(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args msg.sender, idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _160 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _169 = mem[_160]
                require mem[_160] == mem[_160 + 12 len 20]
                mem[_139] = mem[_160 + 12 len 20]
                mem[mem[64] + 4] = msg.sender
                require ext_code.size(address(_169))
                staticcall address(_169).0x70a08231 with:
                        gas gas_remaining wei
                       args msg.sender
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _195 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                mem[_139 + 32] = mem[_195]
                require ext_code.size(mem[_139 + 12 len 20])
                staticcall mem[_139 + 12 len 20].0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _209 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                mem[_139 + 64] = mem[_209]
                _217 = mem[_139]
                mem[mem[64] + 4] = msg.sender
                require ext_code.size(address(_217))
                staticcall address(_217).lastMintBlock(address rg1) with:
                        gas gas_remaining wei
                       args msg.sender
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _231 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                mem[_139 + 96] = mem[_231]
                require s < mem[ceil32(return_data.size) + 96]
                mem[(32 * s) + ceil32(return_data.size) + 128] = _139
                idx = idx + 1
                s = s + 1
                continue 
            _141 = mem[64]
            mem[mem[64]] = 32
            _145 = mem[ceil32(return_data.size) + 96]
            mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
            idx = 0
            s = ceil32(return_data.size) + 128
            t = mem[64] + 64
            while idx < _145:
                _253 = mem[s]
                mem[t] = mem[mem[s] + 12 len 20]
                mem[t + 32] = mem[_253 + 32]
                mem[t + 64] = mem[_253 + 64]
                mem[t + 96] = mem[_253 + 96]
                idx = idx + 1
                s = s + 32
                t = t + 128
                continue 
            return memory
              from mem[64]
               len _141 + (128 * _145) + -mem[64] + 64
        mem[64] = ceil32(return_data.size) + (32 * arg2 - arg1) + 256
        mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 128] = 0
        mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 160] = 0
        mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 192] = 0
        mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 224] = 0
        mem[var25001] = ceil32(return_data.size) + (32 * arg2 - arg1) + 128
        s = var25001
        idx = var25002
        while idx - 1:
            mem[64] = mem[64] + 128
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 128] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 160] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 192] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 224] = 0
            mem[s + 32] = ceil32(return_data.size) + (32 * arg2 - arg1) + 128
            s = s + 32
            idx = idx - 1
            continue 
        idx = 0
        s = 0
        while idx < arg2 - arg1:
            _321 = mem[64]
            mem[64] = mem[64] + 128
            mem[_321] = 0
            mem[_321 + 32] = 0
            mem[_321 + 64] = 0
            mem[_321 + 96] = 0
            mem[mem[64] + 4] = msg.sender
            mem[mem[64] + 36] = idx
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.playerPairs(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args msg.sender, idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _342 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _345 = mem[_342]
            require mem[_342] == mem[_342 + 12 len 20]
            mem[_321] = mem[_342 + 12 len 20]
            mem[mem[64] + 4] = msg.sender
            require ext_code.size(address(_345))
            staticcall address(_345).0x70a08231 with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _351 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[_321 + 32] = mem[_351]
            require ext_code.size(mem[_321 + 12 len 20])
            staticcall mem[_321 + 12 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _361 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[_321 + 64] = mem[_361]
            _365 = mem[_321]
            mem[mem[64] + 4] = msg.sender
            require ext_code.size(address(_365))
            staticcall address(_365).lastMintBlock(address rg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _371 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[_321 + 96] = mem[_371]
            require s < mem[ceil32(return_data.size) + 96]
            mem[(32 * s) + ceil32(return_data.size) + 128] = _321
            idx = idx + 1
            s = s + 1
            continue 
        _323 = mem[64]
        mem[mem[64]] = 32
        _327 = mem[ceil32(return_data.size) + 96]
        mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
        idx = 0
        s = ceil32(return_data.size) + 128
        t = mem[64] + 64
        while idx < _327:
            _377 = mem[s]
            mem[t] = mem[mem[s] + 12 len 20]
            mem[t + 32] = mem[_377 + 32]
            mem[t + 64] = mem[_377 + 64]
            mem[t + 96] = mem[_377 + 96]
            idx = idx + 1
            s = s + 32
            t = t + 128
            continue 
        return memory
          from mem[64]
           len _323 + (128 * _327) + -mem[64] + 64
    require ext_call.return_data[0] - arg1 <= test266151307()
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0] - arg1
    mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128
    if not ext_call.return_data[0] - arg1:
        idx = 0
        s = 0
        while idx < ext_call.return_data[0] - arg1:
            _140 = mem[64]
            mem[64] = mem[64] + 128
            mem[_140] = 0
            mem[_140 + 32] = 0
            mem[_140 + 64] = 0
            mem[_140 + 96] = 0
            mem[mem[64] + 4] = msg.sender
            mem[mem[64] + 36] = idx
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.playerPairs(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args msg.sender, idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _163 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _171 = mem[_163]
            require mem[_163] == mem[_163 + 12 len 20]
            mem[_140] = mem[_163 + 12 len 20]
            mem[mem[64] + 4] = msg.sender
            require ext_code.size(address(_171))
            staticcall address(_171).0x70a08231 with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _196 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[_140 + 32] = mem[_196]
            require ext_code.size(mem[_140 + 12 len 20])
            staticcall mem[_140 + 12 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _211 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[_140 + 64] = mem[_211]
            _222 = mem[_140]
            mem[mem[64] + 4] = msg.sender
            require ext_code.size(address(_222))
            staticcall address(_222).lastMintBlock(address rg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _233 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[_140 + 96] = mem[_233]
            require s < mem[ceil32(return_data.size) + 96]
            mem[(32 * s) + ceil32(return_data.size) + 128] = _140
            idx = idx + 1
            s = s + 1
            continue 
        _143 = mem[64]
        mem[mem[64]] = 32
        _146 = mem[ceil32(return_data.size) + 96]
        mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
        idx = 0
        s = ceil32(return_data.size) + 128
        t = mem[64] + 64
        while idx < _146:
            _258 = mem[s]
            mem[t] = mem[mem[s] + 12 len 20]
            mem[t + 32] = mem[_258 + 32]
            mem[t + 64] = mem[_258 + 64]
            mem[t + 96] = mem[_258 + 96]
            idx = idx + 1
            s = s + 32
            t = t + 128
            continue 
        return memory
          from mem[64]
           len _143 + (128 * _146) + -mem[64] + 64
    mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 256
    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128] = 0
    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 160] = 0
    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 192] = 0
    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 224] = 0
    mem[var26001] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128
    s = var26001
    idx = var26002
    while idx - 1:
        mem[64] = mem[64] + 128
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 160] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 192] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 224] = 0
        mem[s + 32] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128
        s = s + 32
        idx = idx - 1
        continue 
    idx = 0
    s = 0
    while idx < ext_call.return_data[0] - arg1:
        _322 = mem[64]
        mem[64] = mem[64] + 128
        mem[_322] = 0
        mem[_322 + 32] = 0
        mem[_322 + 64] = 0
        mem[_322 + 96] = 0
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = idx
        require ext_code.size(factoryAddress)
        staticcall factoryAddress.playerPairs(address rg1, uint256 rg2) with:
                gas gas_remaining wei
               args msg.sender, idx
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _344 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _346 = mem[_344]
        require mem[_344] == mem[_344 + 12 len 20]
        mem[_322] = mem[_344 + 12 len 20]
        mem[mem[64] + 4] = msg.sender
        require ext_code.size(address(_346))
        staticcall address(_346).0x70a08231 with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _352 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[_322 + 32] = mem[_352]
        require ext_code.size(mem[_322 + 12 len 20])
        staticcall mem[_322 + 12 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _362 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[_322 + 64] = mem[_362]
        _367 = mem[_322]
        mem[mem[64] + 4] = msg.sender
        require ext_code.size(address(_367))
        staticcall address(_367).lastMintBlock(address rg1) with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _372 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[_322 + 96] = mem[_372]
        require s < mem[ceil32(return_data.size) + 96]
        mem[(32 * s) + ceil32(return_data.size) + 128] = _322
        idx = idx + 1
        s = s + 1
        continue 
    _325 = mem[64]
    mem[mem[64]] = 32
    _328 = mem[ceil32(return_data.size) + 96]
    mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
    idx = 0
    s = ceil32(return_data.size) + 128
    t = mem[64] + 64
    while idx < _328:
        _382 = mem[s]
        mem[t] = mem[mem[s] + 12 len 20]
        mem[t + 32] = mem[_382 + 32]
        mem[t + 64] = mem[_382 + 64]
        mem[t + 96] = mem[_382 + 96]
        idx = idx + 1
        s = s + 32
        t = t + 128
        continue 
    return memory
      from mem[64]
       len _325 + (128 * _328) + -mem[64] + 64
}

function queryTokenList() payable {
    require ext_code.size(configAddr)
    staticcall configAddr.tokenCount() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        mem[ceil32(return_data.size) + 96] = 32
        mem[ceil32(return_data.size) + 128] = ext_call.return_data[0]
        idx = 0
        s = 128
        t = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 160
        u = ceil32(return_data.size) + 160
        while idx < ext_call.return_data[0]:
            mem[u] = t + -ceil32(return_data.size) - 160
            _215 = mem[s]
            mem[t] = mem[mem[s] + 12 len 20]
            _220 = mem[_215 + 32]
            mem[t + 32] = 256
            _223 = mem[_220]
            mem[t + 256] = mem[_220]
            v = 0
            while v < _223:
                mem[v + t + 288] = mem[v + _220 + 32]
                v = v + 32
                continue 
            if ceil32(_223) > _223:
                mem[t + _223 + 288] = 0
            mem[t + 64] = mem[_215 + 64]
            mem[t + 96] = mem[_215 + 96]
            mem[t + 128] = mem[_215 + 128]
            mem[t + 160] = mem[_215 + 160]
            mem[t + 192] = mem[_215 + 192]
            mem[t + 224] = mem[_215 + 224]
            idx = idx + 1
            s = s + 32
            t = ceil32(_223) + t + 288
            u = u + 32
            continue 
    else:
        require ext_call.return_data[0] <= test266151307()
        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
        mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128
        if not ext_call.return_data[0]:
            idx = 0
            while idx < ext_call.return_data[0]:
                _219 = mem[64]
                mem[64] = mem[64] + 256
                mem[_219] = 0
                mem[_219 + 32] = 96
                mem[_219 + 64] = 0
                mem[_219 + 96] = 0
                mem[_219 + 128] = 0
                mem[_219 + 160] = 0
                mem[_219 + 192] = 0
                mem[_219 + 224] = 0
                mem[mem[64] + 4] = idx
                require ext_code.size(configAddr)
                staticcall configAddr.tokenList(uint256 rg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _230 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _236 = mem[_230]
                require mem[_230] == mem[_230 + 12 len 20]
                mem[_219] = mem[_230 + 12 len 20]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_236))
                staticcall address(_236).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _267 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _274 = mem[_267]
                require mem[_267] <= test266151307()
                require _267 + mem[_267] + 31 < _267 + return_data.size
                _278 = mem[_267 + mem[_267]]
                require mem[_267 + mem[_267]] <= test266151307()
                require ceil32(mem[_267 + mem[_267]]) + 32 >= 0 and _267 + ceil32(return_data.size) + ceil32(mem[_267 + mem[_267]]) + 32 <= test266151307()
                mem[64] = _267 + ceil32(return_data.size) + ceil32(mem[_267 + mem[_267]]) + 32
                mem[_267 + ceil32(return_data.size)] = _278
                require _274 + _278 + 32 <= return_data.size
                s = 0
                while s < _278:
                    mem[s + _267 + ceil32(return_data.size) + 32] = mem[s + _267 + _274 + 32]
                    s = s + 32
                    continue 
                if ceil32(_278) <= _278:
                    mem[_219 + 32] = _267 + ceil32(return_data.size)
                    require ext_code.size(mem[_219 + 12 len 20])
                    staticcall mem[_219 + 12 len 20].0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _448 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_448] == mem[_448 + 31 len 1]
                    mem[_219 + 64] = mem[_448 + 31 len 1]
                    _464 = mem[_219]
                    mem[mem[64] + 4] = msg.sender
                    require ext_code.size(address(_464))
                    staticcall address(_464).0x70a08231 with:
                            gas gas_remaining wei
                           args msg.sender
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _483 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_219 + 96] = mem[_483]
                    _487 = mem[_219]
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = platformAddress
                    require ext_code.size(address(_487))
                    staticcall address(_487).0xdd62ed3e with:
                            gas gas_remaining wei
                           args msg.sender, platformAddress
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _509 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_219 + 128] = mem[_509]
                    _514 = mem[_219]
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = governanceAddress
                    require ext_code.size(address(_514))
                    staticcall address(_514).0xdd62ed3e with:
                            gas gas_remaining wei
                           args msg.sender, governanceAddress
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _522 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_219 + 160] = mem[_522]
                    _525 = mem[_219]
                    mem[mem[64] + 4] = mem[_219 + 12 len 20]
                    require ext_code.size(configAddr)
                    staticcall configAddr.tokenStatus(address rg1) with:
                            gas gas_remaining wei
                           args address(_525)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _536 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_219 + 192] = mem[_536]
                    require ext_code.size(mem[_219 + 12 len 20])
                    staticcall mem[_219 + 12 len 20].0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _553 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_219 + 224] = mem[_553]
                else:
                    mem[_267 + ceil32(return_data.size) + _278 + 32] = 0
                    mem[_219 + 32] = _267 + ceil32(return_data.size)
                    require ext_code.size(mem[_219 + 12 len 20])
                    staticcall mem[_219 + 12 len 20].0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _451 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_451] == mem[_451 + 31 len 1]
                    mem[_219 + 64] = mem[_451 + 31 len 1]
                    _474 = mem[_219]
                    mem[mem[64] + 4] = msg.sender
                    require ext_code.size(address(_474))
                    staticcall address(_474).0x70a08231 with:
                            gas gas_remaining wei
                           args msg.sender
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _484 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_219 + 96] = mem[_484]
                    _492 = mem[_219]
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = platformAddress
                    require ext_code.size(address(_492))
                    staticcall address(_492).0xdd62ed3e with:
                            gas gas_remaining wei
                           args msg.sender, platformAddress
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _511 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_219 + 128] = mem[_511]
                    _517 = mem[_219]
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = governanceAddress
                    require ext_code.size(address(_517))
                    staticcall address(_517).0xdd62ed3e with:
                            gas gas_remaining wei
                           args msg.sender, governanceAddress
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _523 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_219 + 160] = mem[_523]
                    _529 = mem[_219]
                    mem[mem[64] + 4] = mem[_219 + 12 len 20]
                    require ext_code.size(configAddr)
                    staticcall configAddr.tokenStatus(address rg1) with:
                            gas gas_remaining wei
                           args address(_529)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _540 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_219 + 192] = mem[_540]
                    require ext_code.size(mem[_219 + 12 len 20])
                    staticcall mem[_219 + 12 len 20].0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _556 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_219 + 224] = mem[_556]
                require idx < mem[ceil32(return_data.size) + 96]
                mem[(32 * idx) + ceil32(return_data.size) + 128] = _219
                idx = idx + 1
                continue 
            _221 = mem[64]
            mem[mem[64]] = 32
            _224 = mem[ceil32(return_data.size) + 96]
            mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
            idx = 0
            s = ceil32(return_data.size) + 128
            t = mem[64] + (32 * _224) + 64
            u = mem[64] + 64
            while idx < _224:
                mem[u] = t + -_221 - 64
                _424 = mem[s]
                mem[t] = mem[mem[s] + 12 len 20]
                _428 = mem[_424 + 32]
                mem[t + 32] = 256
                _435 = mem[_428]
                mem[t + 256] = mem[_428]
                v = 0
                while v < _435:
                    mem[v + t + 288] = mem[v + _428 + 32]
                    v = v + 32
                    continue 
                if ceil32(_435) > _435:
                    mem[t + _435 + 288] = 0
                mem[t + 64] = mem[_424 + 64]
                mem[t + 96] = mem[_424 + 96]
                mem[t + 128] = mem[_424 + 128]
                mem[t + 160] = mem[_424 + 160]
                mem[t + 192] = mem[_424 + 192]
                mem[t + 224] = mem[_424 + 224]
                idx = idx + 1
                s = s + 32
                t = ceil32(_435) + t + 288
                u = u + 32
                continue 
        else:
            mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 384
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 160] = 96
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 192] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 224] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 256] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 288] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 320] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 352] = 0
            mem[var14001] = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128
            s = var14001
            idx = var14002
            while idx - 1:
                mem[64] = mem[64] + 256
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 160] = 96
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 192] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 224] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 256] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 288] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 320] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 352] = 0
                mem[s + 32] = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128
                s = s + 32
                idx = idx - 1
                continue 
            idx = 0
            while idx < ext_call.return_data[0]:
                _612 = mem[64]
                mem[64] = mem[64] + 256
                mem[_612] = 0
                mem[_612 + 32] = 96
                mem[_612 + 64] = 0
                mem[_612 + 96] = 0
                mem[_612 + 128] = 0
                mem[_612 + 160] = 0
                mem[_612 + 192] = 0
                mem[_612 + 224] = 0
                mem[mem[64] + 4] = idx
                require ext_code.size(configAddr)
                staticcall configAddr.tokenList(uint256 rg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _632 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _635 = mem[_632]
                require mem[_632] == mem[_632 + 12 len 20]
                mem[_612] = mem[_632 + 12 len 20]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_635))
                staticcall address(_635).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _645 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _652 = mem[_645]
                require mem[_645] <= test266151307()
                require _645 + mem[_645] + 31 < _645 + return_data.size
                _653 = mem[_645 + mem[_645]]
                require mem[_645 + mem[_645]] <= test266151307()
                require ceil32(mem[_645 + mem[_645]]) + 32 >= 0 and _645 + ceil32(return_data.size) + ceil32(mem[_645 + mem[_645]]) + 32 <= test266151307()
                mem[64] = _645 + ceil32(return_data.size) + ceil32(mem[_645 + mem[_645]]) + 32
                mem[_645 + ceil32(return_data.size)] = _653
                require _652 + _653 + 32 <= return_data.size
                s = 0
                while s < _653:
                    mem[s + _645 + ceil32(return_data.size) + 32] = mem[s + _645 + _652 + 32]
                    s = s + 32
                    continue 
                if ceil32(_653) <= _653:
                    mem[_612 + 32] = _645 + ceil32(return_data.size)
                    require ext_code.size(mem[_612 + 12 len 20])
                    staticcall mem[_612 + 12 len 20].0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _730 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_730] == mem[_730 + 31 len 1]
                    mem[_612 + 64] = mem[_730 + 31 len 1]
                    _741 = mem[_612]
                    mem[mem[64] + 4] = msg.sender
                    require ext_code.size(address(_741))
                    staticcall address(_741).0x70a08231 with:
                            gas gas_remaining wei
                           args msg.sender
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _753 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_612 + 96] = mem[_753]
                    _756 = mem[_612]
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = platformAddress
                    require ext_code.size(address(_756))
                    staticcall address(_756).0xdd62ed3e with:
                            gas gas_remaining wei
                           args msg.sender, platformAddress
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _763 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_612 + 128] = mem[_763]
                    _766 = mem[_612]
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = governanceAddress
                    require ext_code.size(address(_766))
                    staticcall address(_766).0xdd62ed3e with:
                            gas gas_remaining wei
                           args msg.sender, governanceAddress
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _773 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_612 + 160] = mem[_773]
                    _776 = mem[_612]
                    mem[mem[64] + 4] = mem[_612 + 12 len 20]
                    require ext_code.size(configAddr)
                    staticcall configAddr.tokenStatus(address rg1) with:
                            gas gas_remaining wei
                           args address(_776)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _783 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_612 + 192] = mem[_783]
                    require ext_code.size(mem[_612 + 12 len 20])
                    staticcall mem[_612 + 12 len 20].0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _793 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_612 + 224] = mem[_793]
                else:
                    mem[_645 + ceil32(return_data.size) + _653 + 32] = 0
                    mem[_612 + 32] = _645 + ceil32(return_data.size)
                    require ext_code.size(mem[_612 + 12 len 20])
                    staticcall mem[_612 + 12 len 20].0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _732 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_732] == mem[_732 + 31 len 1]
                    mem[_612 + 64] = mem[_732 + 31 len 1]
                    _749 = mem[_612]
                    mem[mem[64] + 4] = msg.sender
                    require ext_code.size(address(_749))
                    staticcall address(_749).0x70a08231 with:
                            gas gas_remaining wei
                           args msg.sender
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _754 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_612 + 96] = mem[_754]
                    _759 = mem[_612]
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = platformAddress
                    require ext_code.size(address(_759))
                    staticcall address(_759).0xdd62ed3e with:
                            gas gas_remaining wei
                           args msg.sender, platformAddress
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _764 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_612 + 128] = mem[_764]
                    _769 = mem[_612]
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = governanceAddress
                    require ext_code.size(address(_769))
                    staticcall address(_769).0xdd62ed3e with:
                            gas gas_remaining wei
                           args msg.sender, governanceAddress
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _774 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_612 + 160] = mem[_774]
                    _779 = mem[_612]
                    mem[mem[64] + 4] = mem[_612 + 12 len 20]
                    require ext_code.size(configAddr)
                    staticcall configAddr.tokenStatus(address rg1) with:
                            gas gas_remaining wei
                           args address(_779)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _784 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_612 + 192] = mem[_784]
                    require ext_code.size(mem[_612 + 12 len 20])
                    staticcall mem[_612 + 12 len 20].0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _794 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_612 + 224] = mem[_794]
                require idx < mem[ceil32(return_data.size) + 96]
                mem[(32 * idx) + ceil32(return_data.size) + 128] = _612
                idx = idx + 1
                continue 
            _613 = mem[64]
            mem[mem[64]] = 32
            _621 = mem[ceil32(return_data.size) + 96]
            mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
            idx = 0
            s = ceil32(return_data.size) + 128
            t = mem[64] + (32 * _621) + 64
            u = mem[64] + 64
            while idx < _621:
                mem[u] = t + -_613 - 64
                _718 = mem[s]
                mem[t] = mem[mem[s] + 12 len 20]
                _722 = mem[_718 + 32]
                mem[t + 32] = 256
                _723 = mem[_722]
                mem[t + 256] = mem[_722]
                v = 0
                while v < _723:
                    mem[v + t + 288] = mem[v + _722 + 32]
                    v = v + 32
                    continue 
                if ceil32(_723) > _723:
                    mem[t + _723 + 288] = 0
                mem[t + 64] = mem[_718 + 64]
                mem[t + 96] = mem[_718 + 96]
                mem[t + 128] = mem[_718 + 128]
                mem[t + 160] = mem[_718 + 160]
                mem[t + 192] = mem[_718 + 192]
                mem[t + 224] = mem[_718 + 224]
                idx = idx + 1
                s = s + 32
                t = ceil32(_723) + t + 288
                u = u + 32
                continue 
    return memory
      from mem[64]
       len t - mem[64]
}

function queryPairReserve(address[] arg1, address[] arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 >= 96 and (32 * arg1.length) + 128 <= test266151307()
    mem[96] = arg1.length
    require calldata.size >= arg1 + (32 * arg1.length) + 36
    s = arg1 + 36
    t = 128
    idx = 0
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require (32 * arg2.length) + 160 >= 128 and (32 * arg1.length) + (32 * arg2.length) + 160 <= test266151307()
    mem[(32 * arg1.length) + 128] = arg2.length
    require calldata.size >= arg2 + (32 * arg2.length) + 36
    s = arg2 + 36
    t = (32 * arg1.length) + 160
    idx = 0
    while idx < arg2.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    if not arg1.length:
        mem[(32 * arg1.length) + (32 * arg2.length) + 160] = 96
        mem[(32 * arg1.length) + (32 * arg2.length) + 256] = arg1.length
        mem[(32 * arg1.length) + (32 * arg2.length) + 288 len 32 * arg1.length] = mem[128 len 32 * arg1.length]
        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = (32 * arg1.length) + 128
        mem[(64 * arg1.length) + (32 * arg2.length) + 288] = arg1.length
        mem[(64 * arg1.length) + (32 * arg2.length) + 320 len 32 * arg1.length] = mem[128 len 32 * arg1.length]
        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = (64 * arg1.length) + 160
        mem[(3 * 32 * arg1.length) + (32 * arg2.length) + 320] = arg1.length
        idx = 0
        s = 128
        t = (3 * 32 * arg1.length) + (32 * arg2.length) + 352
        while idx < arg1.length:
            mem[t] = bool(mem[s])
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from (32 * arg1.length) + (32 * arg2.length) + 160
           len (160 * arg1.length) + 192
    require arg1.length <= test266151307()
    if not arg1.length:
        require arg1.length <= test266151307()
        mem[(64 * arg1.length) + (32 * arg2.length) + 192] = arg1.length
        if not arg1.length:
            require arg1.length <= test266151307()
            mem[(98 * arg1.length) + (32 * arg2.length) + 224] = arg1.length
            mem[64] = (131 * arg1.length) + (32 * arg2.length) + 256
            if not arg1.length:
                idx = 0
                while idx < arg1.length:
                    require idx < mem[96]
                    require idx < mem[(32 * arg1.length) + 128]
                    _775 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_775)
                    require ext_code.size(platformAddress)
                    staticcall platformAddress.existPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_775)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _817 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_817] == bool(mem[_817])
                    if not mem[_817]:
                        require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                        mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 0
                    else:
                        require idx < mem[96]
                        require idx < mem[(32 * arg1.length) + 128]
                        _899 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                        mem[mem[64] + 36] = address(_899)
                        require ext_code.size(platformAddress)
                        staticcall platformAddress.getReserves(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_899)
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _938 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _946 = mem[_938]
                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        require idx < mem[(64 * arg1.length) + (32 * arg2.length) + 192]
                        mem[(32 * idx) + (64 * arg1.length) + (32 * arg2.length) + 224] = mem[_938 + 32]
                        mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = _946
                        require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                        mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 1
                    idx = idx + 1
                    continue 
                _774 = mem[64]
                mem[mem[64]] = 96
                _799 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                mem[mem[64] + 96] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                mem[mem[64] + 128 len 32 * _799] = mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 32 * _799]
                mem[mem[64] + 32] = (32 * _799) + 128
                _996 = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
                mem[_774 + (32 * _799) + 128] = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
                mem[_774 + (32 * _799) + 160 len 32 * _996] = mem[(64 * arg1.length) + (32 * arg2.length) + 224 len 32 * _996]
                mem[_774 + 64] = (32 * _799) + (32 * _996) + 160
                _1048 = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                mem[_774 + (32 * _799) + (32 * _996) + 160] = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                idx = 0
                s = (98 * arg1.length) + (32 * arg2.length) + 256
                t = _774 + (32 * _799) + (32 * _996) + 192
                while idx < _1048:
                    mem[t] = bool(mem[s])
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _774 + (32 * _799) + (32 * _996) + (32 * _1048) + -mem[64] + 192
            mem[(98 * arg1.length) + (32 * arg2.length) + 256 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
            idx = 0
            while idx < arg1.length:
                require idx < mem[96]
                require idx < mem[(32 * arg1.length) + 128]
                _778 = mem[(32 * idx) + (32 * arg1.length) + 160]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_778)
                require ext_code.size(platformAddress)
                staticcall platformAddress.existPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_778)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _819 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_819] == bool(mem[_819])
                if not mem[_819]:
                    require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                    mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 0
                else:
                    require idx < mem[96]
                    require idx < mem[(32 * arg1.length) + 128]
                    _902 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_902)
                    require ext_code.size(platformAddress)
                    staticcall platformAddress.getReserves(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_902)
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _939 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _948 = mem[_939]
                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    require idx < mem[(64 * arg1.length) + (32 * arg2.length) + 192]
                    mem[(32 * idx) + (64 * arg1.length) + (32 * arg2.length) + 224] = mem[_939 + 32]
                    mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = _948
                    require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                    mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 1
                idx = idx + 1
                continue 
            _777 = mem[64]
            mem[mem[64]] = 96
            _801 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
            mem[mem[64] + 96] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
            mem[mem[64] + 128 len 32 * _801] = mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 32 * _801]
            mem[mem[64] + 32] = (32 * _801) + 128
            _997 = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
            mem[_777 + (32 * _801) + 128] = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
            mem[_777 + (32 * _801) + 160 len 32 * _997] = mem[(64 * arg1.length) + (32 * arg2.length) + 224 len 32 * _997]
            mem[_777 + 64] = (32 * _801) + (32 * _997) + 160
            _1049 = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
            mem[_777 + (32 * _801) + (32 * _997) + 160] = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
            idx = 0
            s = (98 * arg1.length) + (32 * arg2.length) + 256
            t = _777 + (32 * _801) + (32 * _997) + 192
            while idx < _1049:
                mem[t] = bool(mem[s])
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _777 + (32 * _801) + (32 * _997) + (32 * _1049) + -mem[64] + 192
        mem[(64 * arg1.length) + (32 * arg2.length) + 224 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
        require arg1.length <= test266151307()
        mem[(98 * arg1.length) + (32 * arg2.length) + 224] = arg1.length
        mem[64] = (131 * arg1.length) + (32 * arg2.length) + 256
        if not arg1.length:
            idx = 0
            while idx < arg1.length:
                require idx < mem[96]
                require idx < mem[(32 * arg1.length) + 128]
                _781 = mem[(32 * idx) + (32 * arg1.length) + 160]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_781)
                require ext_code.size(platformAddress)
                staticcall platformAddress.existPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_781)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _821 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_821] == bool(mem[_821])
                if not mem[_821]:
                    require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                    mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 0
                else:
                    require idx < mem[96]
                    require idx < mem[(32 * arg1.length) + 128]
                    _905 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_905)
                    require ext_code.size(platformAddress)
                    staticcall platformAddress.getReserves(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_905)
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _940 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _950 = mem[_940]
                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    require idx < mem[(64 * arg1.length) + (32 * arg2.length) + 192]
                    mem[(32 * idx) + (64 * arg1.length) + (32 * arg2.length) + 224] = mem[_940 + 32]
                    mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = _950
                    require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                    mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 1
                idx = idx + 1
                continue 
            _780 = mem[64]
            mem[mem[64]] = 96
            _803 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
            mem[mem[64] + 96] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
            mem[mem[64] + 128 len 32 * _803] = mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 32 * _803]
            mem[mem[64] + 32] = (32 * _803) + 128
            _998 = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
            mem[_780 + (32 * _803) + 128] = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
            mem[_780 + (32 * _803) + 160 len 32 * _998] = mem[(64 * arg1.length) + (32 * arg2.length) + 224 len 32 * _998]
            mem[_780 + 64] = (32 * _803) + (32 * _998) + 160
            _1050 = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
            mem[_780 + (32 * _803) + (32 * _998) + 160] = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
            idx = 0
            s = (98 * arg1.length) + (32 * arg2.length) + 256
            t = _780 + (32 * _803) + (32 * _998) + 192
            while idx < _1050:
                mem[t] = bool(mem[s])
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _780 + (32 * _803) + (32 * _998) + (32 * _1050) + -mem[64] + 192
        mem[(98 * arg1.length) + (32 * arg2.length) + 256 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
        idx = 0
        while idx < arg1.length:
            require idx < mem[96]
            require idx < mem[(32 * arg1.length) + 128]
            _784 = mem[(32 * idx) + (32 * arg1.length) + 160]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_784)
            require ext_code.size(platformAddress)
            staticcall platformAddress.existPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_784)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _823 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_823] == bool(mem[_823])
            if not mem[_823]:
                require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 0
            else:
                require idx < mem[96]
                require idx < mem[(32 * arg1.length) + 128]
                _908 = mem[(32 * idx) + (32 * arg1.length) + 160]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_908)
                require ext_code.size(platformAddress)
                staticcall platformAddress.getReserves(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_908)
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _941 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _952 = mem[_941]
                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                require idx < mem[(64 * arg1.length) + (32 * arg2.length) + 192]
                mem[(32 * idx) + (64 * arg1.length) + (32 * arg2.length) + 224] = mem[_941 + 32]
                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = _952
                require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 1
            idx = idx + 1
            continue 
        _783 = mem[64]
        mem[mem[64]] = 96
        _805 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        mem[mem[64] + 96] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        mem[mem[64] + 128 len 32 * _805] = mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 32 * _805]
        mem[mem[64] + 32] = (32 * _805) + 128
        _999 = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
        mem[_783 + (32 * _805) + 128] = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
        mem[_783 + (32 * _805) + 160 len 32 * _999] = mem[(64 * arg1.length) + (32 * arg2.length) + 224 len 32 * _999]
        mem[_783 + 64] = (32 * _805) + (32 * _999) + 160
        _1051 = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
        mem[_783 + (32 * _805) + (32 * _999) + 160] = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
        idx = 0
        s = (98 * arg1.length) + (32 * arg2.length) + 256
        t = _783 + (32 * _805) + (32 * _999) + 192
        while idx < _1051:
            mem[t] = bool(mem[s])
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _783 + (32 * _805) + (32 * _999) + (32 * _1051) + -mem[64] + 192
    mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
    require arg1.length <= test266151307()
    mem[(64 * arg1.length) + (32 * arg2.length) + 192] = arg1.length
    if not arg1.length:
        require arg1.length <= test266151307()
        mem[(98 * arg1.length) + (32 * arg2.length) + 224] = arg1.length
        mem[64] = (131 * arg1.length) + (32 * arg2.length) + 256
        if not arg1.length:
            idx = 0
            while idx < arg1.length:
                require idx < mem[96]
                require idx < mem[(32 * arg1.length) + 128]
                _787 = mem[(32 * idx) + (32 * arg1.length) + 160]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_787)
                require ext_code.size(platformAddress)
                staticcall platformAddress.existPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_787)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _825 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_825] == bool(mem[_825])
                if not mem[_825]:
                    require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                    mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 0
                else:
                    require idx < mem[96]
                    require idx < mem[(32 * arg1.length) + 128]
                    _911 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_911)
                    require ext_code.size(platformAddress)
                    staticcall platformAddress.getReserves(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_911)
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _942 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _954 = mem[_942]
                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    require idx < mem[(64 * arg1.length) + (32 * arg2.length) + 192]
                    mem[(32 * idx) + (64 * arg1.length) + (32 * arg2.length) + 224] = mem[_942 + 32]
                    mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = _954
                    require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                    mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 1
                idx = idx + 1
                continue 
            _786 = mem[64]
            mem[mem[64]] = 96
            _807 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
            mem[mem[64] + 96] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
            mem[mem[64] + 128 len 32 * _807] = mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 32 * _807]
            mem[_786 + 32] = (32 * _807) + 128
            _1000 = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
            mem[_786 + (32 * _807) + 128] = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
            mem[_786 + (32 * _807) + 160 len 32 * _1000] = mem[(64 * arg1.length) + (32 * arg2.length) + 224 len 32 * _1000]
            mem[_786 + 64] = (32 * _807) + (32 * _1000) + 160
            _1052 = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
            mem[_786 + (32 * _807) + (32 * _1000) + 160] = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
            idx = 0
            s = (98 * arg1.length) + (32 * arg2.length) + 256
            t = _786 + (32 * _807) + (32 * _1000) + 192
            while idx < _1052:
                mem[t] = bool(mem[s])
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _786 + (32 * _807) + (32 * _1000) + (32 * _1052) + -mem[64] + 192
        mem[(98 * arg1.length) + (32 * arg2.length) + 256 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
        idx = 0
        while idx < arg1.length:
            require idx < mem[96]
            require idx < mem[(32 * arg1.length) + 128]
            _790 = mem[(32 * idx) + (32 * arg1.length) + 160]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_790)
            require ext_code.size(platformAddress)
            staticcall platformAddress.existPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_790)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _827 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_827] == bool(mem[_827])
            if not mem[_827]:
                require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 0
            else:
                require idx < mem[96]
                require idx < mem[(32 * arg1.length) + 128]
                _914 = mem[(32 * idx) + (32 * arg1.length) + 160]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_914)
                require ext_code.size(platformAddress)
                staticcall platformAddress.getReserves(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_914)
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _943 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _956 = mem[_943]
                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                require idx < mem[(64 * arg1.length) + (32 * arg2.length) + 192]
                mem[(32 * idx) + (64 * arg1.length) + (32 * arg2.length) + 224] = mem[_943 + 32]
                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = _956
                require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 1
            idx = idx + 1
            continue 
        _789 = mem[64]
        mem[mem[64]] = 96
        _809 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        mem[mem[64] + 96] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        mem[mem[64] + 128 len 32 * _809] = mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 32 * _809]
        mem[mem[64] + 32] = (32 * _809) + 128
        _1001 = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
        mem[_789 + (32 * _809) + 128] = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
        mem[_789 + (32 * _809) + 160 len 32 * _1001] = mem[(64 * arg1.length) + (32 * arg2.length) + 224 len 32 * _1001]
        mem[_789 + 64] = (32 * _809) + (32 * _1001) + 160
        _1053 = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
        mem[_789 + (32 * _809) + (32 * _1001) + 160] = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
        idx = 0
        s = (98 * arg1.length) + (32 * arg2.length) + 256
        t = _789 + (32 * _809) + (32 * _1001) + 192
        while idx < _1053:
            mem[t] = bool(mem[s])
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _789 + (32 * _809) + (32 * _1001) + (32 * _1053) + -mem[64] + 192
    mem[(64 * arg1.length) + (32 * arg2.length) + 224 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
    require arg1.length <= test266151307()
    mem[(98 * arg1.length) + (32 * arg2.length) + 224] = arg1.length
    mem[64] = (131 * arg1.length) + (32 * arg2.length) + 256
    if not arg1.length:
        idx = 0
        while idx < arg1.length:
            require idx < mem[96]
            require idx < mem[(32 * arg1.length) + 128]
            _793 = mem[(32 * idx) + (32 * arg1.length) + 160]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_793)
            require ext_code.size(platformAddress)
            staticcall platformAddress.existPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_793)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _829 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_829] == bool(mem[_829])
            if not mem[_829]:
                require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 0
            else:
                require idx < mem[96]
                require idx < mem[(32 * arg1.length) + 128]
                _917 = mem[(32 * idx) + (32 * arg1.length) + 160]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_917)
                require ext_code.size(platformAddress)
                staticcall platformAddress.getReserves(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_917)
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _944 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _958 = mem[_944]
                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                require idx < mem[(64 * arg1.length) + (32 * arg2.length) + 192]
                mem[(32 * idx) + (64 * arg1.length) + (32 * arg2.length) + 224] = mem[_944 + 32]
                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = _958
                require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
                mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 1
            idx = idx + 1
            continue 
        _792 = mem[64]
        mem[mem[64]] = 96
        _811 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        mem[mem[64] + 96] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        mem[mem[64] + 128 len 32 * _811] = mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 32 * _811]
        mem[mem[64] + 32] = (32 * _811) + 128
        _1002 = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
        mem[_792 + (32 * _811) + 128] = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
        mem[_792 + (32 * _811) + 160 len 32 * _1002] = mem[(64 * arg1.length) + (32 * arg2.length) + 224 len 32 * _1002]
        mem[_792 + 64] = (32 * _811) + (32 * _1002) + 160
        _1054 = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
        mem[_792 + (32 * _811) + (32 * _1002) + 160] = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
        idx = 0
        s = (98 * arg1.length) + (32 * arg2.length) + 256
        t = _792 + (32 * _811) + (32 * _1002) + 192
        while idx < _1054:
            mem[t] = bool(mem[s])
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _792 + (32 * _811) + (32 * _1002) + (32 * _1054) + -mem[64] + 192
    mem[(98 * arg1.length) + (32 * arg2.length) + 256 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
    idx = 0
    while idx < arg1.length:
        require idx < mem[96]
        require idx < mem[(32 * arg1.length) + 128]
        _796 = mem[(32 * idx) + (32 * arg1.length) + 160]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        mem[mem[64] + 36] = address(_796)
        require ext_code.size(platformAddress)
        staticcall platformAddress.existPair(address rg1, address rg2) with:
                gas gas_remaining wei
               args mem[mem[64] + 4], address(_796)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _831 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_831] == bool(mem[_831])
        if not mem[_831]:
            require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
            mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 0
        else:
            require idx < mem[96]
            require idx < mem[(32 * arg1.length) + 128]
            _920 = mem[(32 * idx) + (32 * arg1.length) + 160]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_920)
            require ext_code.size(platformAddress)
            staticcall platformAddress.getReserves(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_920)
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _945 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _960 = mem[_945]
            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
            require idx < mem[(64 * arg1.length) + (32 * arg2.length) + 192]
            mem[(32 * idx) + (64 * arg1.length) + (32 * arg2.length) + 224] = mem[_945 + 32]
            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = _960
            require idx < mem[(98 * arg1.length) + (32 * arg2.length) + 224]
            mem[(32 * idx) + (98 * arg1.length) + (32 * arg2.length) + 256] = 1
        idx = idx + 1
        continue 
    _795 = mem[64]
    mem[mem[64]] = 96
    _813 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
    mem[mem[64] + 96] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
    mem[mem[64] + 128 len 32 * _813] = mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 32 * _813]
    mem[_795 + 32] = (32 * _813) + 128
    _1003 = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
    mem[_795 + (32 * _813) + 128] = mem[(64 * arg1.length) + (32 * arg2.length) + 192]
    mem[_795 + (32 * _813) + 160 len 32 * _1003] = mem[(64 * arg1.length) + (32 * arg2.length) + 224 len 32 * _1003]
    mem[_795 + 64] = (32 * _813) + (32 * _1003) + 160
    _1055 = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
    mem[_795 + (32 * _813) + (32 * _1003) + 160] = mem[(98 * arg1.length) + (32 * arg2.length) + 224]
    idx = 0
    s = (98 * arg1.length) + (32 * arg2.length) + 256
    t = _795 + (32 * _813) + (32 * _1003) + 192
    while idx < _1055:
        mem[t] = bool(mem[s])
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _795 + (32 * _813) + (32 * _1003) + (32 * _1055) + -mem[64] + 192
}

function iterateTokenList(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg1 > arg2:
        revert with 0, 'INVAID_PARAMTERS'
    require ext_code.size(configAddr)
    staticcall configAddr.tokenCount() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        mem[ceil32(return_data.size) + 96] = 32
        mem[ceil32(return_data.size) + 128] = ext_call.return_data[0]
        idx = 0
        s = 128
        t = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 160
        u = ceil32(return_data.size) + 160
        while idx < ext_call.return_data[0]:
            mem[u] = t + -ceil32(return_data.size) - 160
            _407 = mem[s]
            mem[t] = mem[mem[s] + 12 len 20]
            _414 = mem[_407 + 32]
            mem[t + 32] = 256
            _419 = mem[_414]
            mem[t + 256] = mem[_414]
            v = 0
            while v < _419:
                mem[v + t + 288] = mem[v + _414 + 32]
                v = v + 32
                continue 
            if ceil32(_419) > _419:
                mem[t + _419 + 288] = 0
            mem[t + 64] = mem[_407 + 64]
            mem[t + 96] = mem[_407 + 96]
            mem[t + 128] = mem[_407 + 128]
            mem[t + 160] = mem[_407 + 160]
            mem[t + 192] = mem[_407 + 192]
            mem[t + 224] = mem[_407 + 224]
            idx = idx + 1
            s = s + 32
            t = ceil32(_419) + t + 288
            u = u + 32
            continue 
    else:
        if arg2 <= ext_call.return_data[0]:
            require arg2 - arg1 <= test266151307()
            mem[ceil32(return_data.size) + 96] = arg2 - arg1
            mem[64] = ceil32(return_data.size) + (32 * arg2 - arg1) + 128
            if not arg2 - arg1:
                idx = arg1
                s = 0
                while idx < arg2:
                    _412 = mem[64]
                    mem[64] = mem[64] + 256
                    mem[_412] = 0
                    mem[_412 + 32] = 96
                    mem[_412 + 64] = 0
                    mem[_412 + 96] = 0
                    mem[_412 + 128] = 0
                    mem[_412 + 160] = 0
                    mem[_412 + 192] = 0
                    mem[_412 + 224] = 0
                    mem[mem[64] + 4] = idx
                    require ext_code.size(configAddr)
                    staticcall configAddr.tokenList(uint256 rg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _430 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _442 = mem[_430]
                    require mem[_430] == mem[_430 + 12 len 20]
                    mem[_412] = mem[_430 + 12 len 20]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_442))
                    staticcall address(_442).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _487 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _507 = mem[_487]
                    require mem[_487] <= test266151307()
                    require _487 + mem[_487] + 31 < _487 + return_data.size
                    _515 = mem[_487 + mem[_487]]
                    require mem[_487 + mem[_487]] <= test266151307()
                    require ceil32(mem[_487 + mem[_487]]) + 32 >= 0 and _487 + ceil32(return_data.size) + ceil32(mem[_487 + mem[_487]]) + 32 <= test266151307()
                    mem[64] = _487 + ceil32(return_data.size) + ceil32(mem[_487 + mem[_487]]) + 32
                    mem[_487 + ceil32(return_data.size)] = _515
                    require _507 + _515 + 32 <= return_data.size
                    t = 0
                    while t < _515:
                        mem[t + _487 + ceil32(return_data.size) + 32] = mem[t + _487 + _507 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_515) <= _515:
                        mem[_412 + 32] = _487 + ceil32(return_data.size)
                        require ext_code.size(mem[_412 + 12 len 20])
                        staticcall mem[_412 + 12 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _842 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_842] == mem[_842 + 31 len 1]
                        mem[_412 + 64] = mem[_842 + 31 len 1]
                        _868 = mem[_412]
                        mem[mem[64] + 4] = msg.sender
                        require ext_code.size(address(_868))
                        staticcall address(_868).0x70a08231 with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _912 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_412 + 96] = mem[_912]
                        _920 = mem[_412]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = platformAddress
                        require ext_code.size(address(_920))
                        staticcall address(_920).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, platformAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _964 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_412 + 128] = mem[_964]
                        _974 = mem[_412]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = governanceAddress
                        require ext_code.size(address(_974))
                        staticcall address(_974).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, governanceAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _990 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_412 + 160] = mem[_990]
                        _996 = mem[_412]
                        mem[mem[64] + 4] = mem[_412 + 12 len 20]
                        require ext_code.size(configAddr)
                        staticcall configAddr.tokenStatus(address rg1) with:
                                gas gas_remaining wei
                               args address(_996)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1018 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_412 + 192] = mem[_1018]
                        require ext_code.size(mem[_412 + 12 len 20])
                        staticcall mem[_412 + 12 len 20].0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1052 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_412 + 224] = mem[_1052]
                    else:
                        mem[_487 + ceil32(return_data.size) + _515 + 32] = 0
                        mem[_412 + 32] = _487 + ceil32(return_data.size)
                        require ext_code.size(mem[_412 + 12 len 20])
                        staticcall mem[_412 + 12 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _847 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_847] == mem[_847 + 31 len 1]
                        mem[_412 + 64] = mem[_847 + 31 len 1]
                        _888 = mem[_412]
                        mem[mem[64] + 4] = msg.sender
                        require ext_code.size(address(_888))
                        staticcall address(_888).0x70a08231 with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _914 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_412 + 96] = mem[_914]
                        _930 = mem[_412]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = platformAddress
                        require ext_code.size(address(_930))
                        staticcall address(_930).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, platformAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _968 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_412 + 128] = mem[_968]
                        _980 = mem[_412]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = governanceAddress
                        require ext_code.size(address(_980))
                        staticcall address(_980).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, governanceAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _992 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_412 + 160] = mem[_992]
                        _1004 = mem[_412]
                        mem[mem[64] + 4] = mem[_412 + 12 len 20]
                        require ext_code.size(configAddr)
                        staticcall configAddr.tokenStatus(address rg1) with:
                                gas gas_remaining wei
                               args address(_1004)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1026 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_412 + 192] = mem[_1026]
                        require ext_code.size(mem[_412 + 12 len 20])
                        staticcall mem[_412 + 12 len 20].0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1058 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_412 + 224] = mem[_1058]
                    require s < mem[ceil32(return_data.size) + 96]
                    mem[(32 * s) + ceil32(return_data.size) + 128] = _412
                    idx = idx + 1
                    s = s + 1
                    continue 
                _415 = mem[64]
                mem[mem[64]] = 32
                _420 = mem[ceil32(return_data.size) + 96]
                mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
                idx = 0
                s = ceil32(return_data.size) + 128
                t = mem[64] + (32 * _420) + 64
                u = mem[64] + 64
                while idx < _420:
                    mem[u] = t + -_415 - 64
                    _806 = mem[s]
                    mem[t] = mem[mem[s] + 12 len 20]
                    _814 = mem[_806 + 32]
                    mem[t + 32] = 256
                    _822 = mem[_814]
                    mem[t + 256] = mem[_814]
                    v = 0
                    while v < _822:
                        mem[v + t + 288] = mem[v + _814 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_822) > _822:
                        mem[t + _822 + 288] = 0
                    mem[t + 64] = mem[_806 + 64]
                    mem[t + 96] = mem[_806 + 96]
                    mem[t + 128] = mem[_806 + 128]
                    mem[t + 160] = mem[_806 + 160]
                    mem[t + 192] = mem[_806 + 192]
                    mem[t + 224] = mem[_806 + 224]
                    idx = idx + 1
                    s = s + 32
                    t = ceil32(_822) + t + 288
                    u = u + 32
                    continue 
            else:
                mem[64] = ceil32(return_data.size) + (32 * arg2 - arg1) + 384
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 128] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 160] = 96
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 192] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 224] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 256] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 288] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 320] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 352] = 0
                mem[var23001] = ceil32(return_data.size) + (32 * arg2 - arg1) + 128
                s = var23001
                idx = var23002
                while idx - 1:
                    mem[64] = mem[64] + 256
                    mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 128] = 0
                    mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 160] = 96
                    mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 192] = 0
                    mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 224] = 0
                    mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 256] = 0
                    mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 288] = 0
                    mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 320] = 0
                    mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 352] = 0
                    mem[s + 32] = ceil32(return_data.size) + (32 * arg2 - arg1) + 128
                    s = s + 32
                    idx = idx - 1
                    continue 
                idx = arg1
                s = 0
                while idx < arg2:
                    _1170 = mem[64]
                    mem[64] = mem[64] + 256
                    mem[_1170] = 0
                    mem[_1170 + 32] = 96
                    mem[_1170 + 64] = 0
                    mem[_1170 + 96] = 0
                    mem[_1170 + 128] = 0
                    mem[_1170 + 160] = 0
                    mem[_1170 + 192] = 0
                    mem[_1170 + 224] = 0
                    mem[mem[64] + 4] = idx
                    require ext_code.size(configAddr)
                    staticcall configAddr.tokenList(uint256 rg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1209 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1215 = mem[_1209]
                    require mem[_1209] == mem[_1209 + 12 len 20]
                    mem[_1170] = mem[_1209 + 12 len 20]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1215))
                    staticcall address(_1215).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1230 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1250 = mem[_1230]
                    require mem[_1230] <= test266151307()
                    require _1230 + mem[_1230] + 31 < _1230 + return_data.size
                    _1252 = mem[_1230 + mem[_1230]]
                    require mem[_1230 + mem[_1230]] <= test266151307()
                    require ceil32(mem[_1230 + mem[_1230]]) + 32 >= 0 and _1230 + ceil32(return_data.size) + ceil32(mem[_1230 + mem[_1230]]) + 32 <= test266151307()
                    mem[64] = _1230 + ceil32(return_data.size) + ceil32(mem[_1230 + mem[_1230]]) + 32
                    mem[_1230 + ceil32(return_data.size)] = _1252
                    require _1250 + _1252 + 32 <= return_data.size
                    t = 0
                    while t < _1252:
                        mem[t + _1230 + ceil32(return_data.size) + 32] = mem[t + _1230 + _1250 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_1252) <= _1252:
                        mem[_1170 + 32] = _1230 + ceil32(return_data.size)
                        require ext_code.size(mem[_1170 + 12 len 20])
                        staticcall mem[_1170 + 12 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1406 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1406] == mem[_1406 + 31 len 1]
                        mem[_1170 + 64] = mem[_1406 + 31 len 1]
                        _1422 = mem[_1170]
                        mem[mem[64] + 4] = msg.sender
                        require ext_code.size(address(_1422))
                        staticcall address(_1422).0x70a08231 with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1452 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1170 + 96] = mem[_1452]
                        _1458 = mem[_1170]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = platformAddress
                        require ext_code.size(address(_1458))
                        staticcall address(_1458).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, platformAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1472 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1170 + 128] = mem[_1472]
                        _1478 = mem[_1170]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = governanceAddress
                        require ext_code.size(address(_1478))
                        staticcall address(_1478).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, governanceAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1492 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1170 + 160] = mem[_1492]
                        _1498 = mem[_1170]
                        mem[mem[64] + 4] = mem[_1170 + 12 len 20]
                        require ext_code.size(configAddr)
                        staticcall configAddr.tokenStatus(address rg1) with:
                                gas gas_remaining wei
                               args address(_1498)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1512 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1170 + 192] = mem[_1512]
                        require ext_code.size(mem[_1170 + 12 len 20])
                        staticcall mem[_1170 + 12 len 20].0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1532 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1170 + 224] = mem[_1532]
                    else:
                        mem[_1230 + ceil32(return_data.size) + _1252 + 32] = 0
                        mem[_1170 + 32] = _1230 + ceil32(return_data.size)
                        require ext_code.size(mem[_1170 + 12 len 20])
                        staticcall mem[_1170 + 12 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1409 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1409] == mem[_1409 + 31 len 1]
                        mem[_1170 + 64] = mem[_1409 + 31 len 1]
                        _1438 = mem[_1170]
                        mem[mem[64] + 4] = msg.sender
                        require ext_code.size(address(_1438))
                        staticcall address(_1438).0x70a08231 with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1454 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1170 + 96] = mem[_1454]
                        _1464 = mem[_1170]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = platformAddress
                        require ext_code.size(address(_1464))
                        staticcall address(_1464).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, platformAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1474 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1170 + 128] = mem[_1474]
                        _1484 = mem[_1170]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = governanceAddress
                        require ext_code.size(address(_1484))
                        staticcall address(_1484).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, governanceAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1494 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1170 + 160] = mem[_1494]
                        _1504 = mem[_1170]
                        mem[mem[64] + 4] = mem[_1170 + 12 len 20]
                        require ext_code.size(configAddr)
                        staticcall configAddr.tokenStatus(address rg1) with:
                                gas gas_remaining wei
                               args address(_1504)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1514 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1170 + 192] = mem[_1514]
                        require ext_code.size(mem[_1170 + 12 len 20])
                        staticcall mem[_1170 + 12 len 20].0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1534 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1170 + 224] = mem[_1534]
                    require s < mem[ceil32(return_data.size) + 96]
                    mem[(32 * s) + ceil32(return_data.size) + 128] = _1170
                    idx = idx + 1
                    s = s + 1
                    continue 
                _1172 = mem[64]
                mem[mem[64]] = 32
                _1182 = mem[ceil32(return_data.size) + 96]
                mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
                idx = 0
                s = ceil32(return_data.size) + 128
                t = mem[64] + (32 * _1182) + 64
                u = mem[64] + 64
                while idx < _1182:
                    mem[u] = t + -_1172 - 64
                    _1382 = mem[s]
                    mem[t] = mem[mem[s] + 12 len 20]
                    _1390 = mem[_1382 + 32]
                    mem[t + 32] = 256
                    _1392 = mem[_1390]
                    mem[t + 256] = mem[_1390]
                    v = 0
                    while v < _1392:
                        mem[v + t + 288] = mem[v + _1390 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_1392) > _1392:
                        mem[t + _1392 + 288] = 0
                    mem[t + 64] = mem[_1382 + 64]
                    mem[t + 96] = mem[_1382 + 96]
                    mem[t + 128] = mem[_1382 + 128]
                    mem[t + 160] = mem[_1382 + 160]
                    mem[t + 192] = mem[_1382 + 192]
                    mem[t + 224] = mem[_1382 + 224]
                    idx = idx + 1
                    s = s + 32
                    t = ceil32(_1392) + t + 288
                    u = u + 32
                    continue 
        else:
            require ext_call.return_data[0] - arg1 <= test266151307()
            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0] - arg1
            mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128
            if not ext_call.return_data[0] - arg1:
                idx = arg1
                s = 0
                while idx < ext_call.return_data[0]:
                    _413 = mem[64]
                    mem[64] = mem[64] + 256
                    mem[_413] = 0
                    mem[_413 + 32] = 96
                    mem[_413 + 64] = 0
                    mem[_413 + 96] = 0
                    mem[_413 + 128] = 0
                    mem[_413 + 160] = 0
                    mem[_413 + 192] = 0
                    mem[_413 + 224] = 0
                    mem[mem[64] + 4] = idx
                    require ext_code.size(configAddr)
                    staticcall configAddr.tokenList(uint256 rg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _433 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _445 = mem[_433]
                    require mem[_433] == mem[_433 + 12 len 20]
                    mem[_413] = mem[_433 + 12 len 20]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_445))
                    staticcall address(_445).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _494 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _509 = mem[_494]
                    require mem[_494] <= test266151307()
                    require _494 + mem[_494] + 31 < _494 + return_data.size
                    _516 = mem[_494 + mem[_494]]
                    require mem[_494 + mem[_494]] <= test266151307()
                    require ceil32(mem[_494 + mem[_494]]) + 32 >= 0 and _494 + ceil32(return_data.size) + ceil32(mem[_494 + mem[_494]]) + 32 <= test266151307()
                    mem[64] = _494 + ceil32(return_data.size) + ceil32(mem[_494 + mem[_494]]) + 32
                    mem[_494 + ceil32(return_data.size)] = _516
                    require _509 + _516 + 32 <= return_data.size
                    t = 0
                    while t < _516:
                        mem[t + _494 + ceil32(return_data.size) + 32] = mem[t + _494 + _509 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_516) <= _516:
                        mem[_413 + 32] = _494 + ceil32(return_data.size)
                        require ext_code.size(mem[_413 + 12 len 20])
                        staticcall mem[_413 + 12 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _844 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_844] == mem[_844 + 31 len 1]
                        mem[_413 + 64] = mem[_844 + 31 len 1]
                        _878 = mem[_413]
                        mem[mem[64] + 4] = msg.sender
                        require ext_code.size(address(_878))
                        staticcall address(_878).0x70a08231 with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _913 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_413 + 96] = mem[_913]
                        _925 = mem[_413]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = platformAddress
                        require ext_code.size(address(_925))
                        staticcall address(_925).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, platformAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _966 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_413 + 128] = mem[_966]
                        _977 = mem[_413]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = governanceAddress
                        require ext_code.size(address(_977))
                        staticcall address(_977).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, governanceAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _991 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_413 + 160] = mem[_991]
                        _1000 = mem[_413]
                        mem[mem[64] + 4] = mem[_413 + 12 len 20]
                        require ext_code.size(configAddr)
                        staticcall configAddr.tokenStatus(address rg1) with:
                                gas gas_remaining wei
                               args address(_1000)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1022 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_413 + 192] = mem[_1022]
                        require ext_code.size(mem[_413 + 12 len 20])
                        staticcall mem[_413 + 12 len 20].0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1055 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_413 + 224] = mem[_1055]
                    else:
                        mem[_494 + ceil32(return_data.size) + _516 + 32] = 0
                        mem[_413 + 32] = _494 + ceil32(return_data.size)
                        require ext_code.size(mem[_413 + 12 len 20])
                        staticcall mem[_413 + 12 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _851 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_851] == mem[_851 + 31 len 1]
                        mem[_413 + 64] = mem[_851 + 31 len 1]
                        _898 = mem[_413]
                        mem[mem[64] + 4] = msg.sender
                        require ext_code.size(address(_898))
                        staticcall address(_898).0x70a08231 with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _915 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_413 + 96] = mem[_915]
                        _932 = mem[_413]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = platformAddress
                        require ext_code.size(address(_932))
                        staticcall address(_932).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, platformAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _969 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_413 + 128] = mem[_969]
                        _983 = mem[_413]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = governanceAddress
                        require ext_code.size(address(_983))
                        staticcall address(_983).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, governanceAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _993 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_413 + 160] = mem[_993]
                        _1006 = mem[_413]
                        mem[mem[64] + 4] = mem[_413 + 12 len 20]
                        require ext_code.size(configAddr)
                        staticcall configAddr.tokenStatus(address rg1) with:
                                gas gas_remaining wei
                               args address(_1006)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1028 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_413 + 192] = mem[_1028]
                        require ext_code.size(mem[_413 + 12 len 20])
                        staticcall mem[_413 + 12 len 20].0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1061 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_413 + 224] = mem[_1061]
                    require s < mem[ceil32(return_data.size) + 96]
                    mem[(32 * s) + ceil32(return_data.size) + 128] = _413
                    idx = idx + 1
                    s = s + 1
                    continue 
                _417 = mem[64]
                mem[mem[64]] = 32
                _421 = mem[ceil32(return_data.size) + 96]
                mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
                idx = 0
                s = ceil32(return_data.size) + 128
                t = mem[64] + (32 * _421) + 64
                u = mem[64] + 64
                while idx < _421:
                    mem[u] = t + -_417 - 64
                    _809 = mem[s]
                    mem[t] = mem[mem[s] + 12 len 20]
                    _815 = mem[_809 + 32]
                    mem[t + 32] = 256
                    _826 = mem[_815]
                    mem[t + 256] = mem[_815]
                    v = 0
                    while v < _826:
                        mem[v + t + 288] = mem[v + _815 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_826) > _826:
                        mem[t + _826 + 288] = 0
                    mem[t + 64] = mem[_809 + 64]
                    mem[t + 96] = mem[_809 + 96]
                    mem[t + 128] = mem[_809 + 128]
                    mem[t + 160] = mem[_809 + 160]
                    mem[t + 192] = mem[_809 + 192]
                    mem[t + 224] = mem[_809 + 224]
                    idx = idx + 1
                    s = s + 32
                    t = ceil32(_826) + t + 288
                    u = u + 32
                    continue 
            else:
                mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 384
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 160] = 96
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 192] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 224] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 256] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 288] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 320] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 352] = 0
                mem[var24001] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128
                s = var24001
                idx = var24002
                while idx - 1:
                    mem[64] = mem[64] + 256
                    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128] = 0
                    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 160] = 96
                    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 192] = 0
                    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 224] = 0
                    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 256] = 0
                    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 288] = 0
                    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 320] = 0
                    mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 352] = 0
                    mem[s + 32] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128
                    s = s + 32
                    idx = idx - 1
                    continue 
                idx = arg1
                s = 0
                while idx < ext_call.return_data[0]:
                    _1171 = mem[64]
                    mem[64] = mem[64] + 256
                    mem[_1171] = 0
                    mem[_1171 + 32] = 96
                    mem[_1171 + 64] = 0
                    mem[_1171 + 96] = 0
                    mem[_1171 + 128] = 0
                    mem[_1171 + 160] = 0
                    mem[_1171 + 192] = 0
                    mem[_1171 + 224] = 0
                    mem[mem[64] + 4] = idx
                    require ext_code.size(configAddr)
                    staticcall configAddr.tokenList(uint256 rg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1211 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1217 = mem[_1211]
                    require mem[_1211] == mem[_1211 + 12 len 20]
                    mem[_1171] = mem[_1211 + 12 len 20]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1217))
                    staticcall address(_1217).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1237 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1251 = mem[_1237]
                    require mem[_1237] <= test266151307()
                    require _1237 + mem[_1237] + 31 < _1237 + return_data.size
                    _1253 = mem[_1237 + mem[_1237]]
                    require mem[_1237 + mem[_1237]] <= test266151307()
                    require ceil32(mem[_1237 + mem[_1237]]) + 32 >= 0 and _1237 + ceil32(return_data.size) + ceil32(mem[_1237 + mem[_1237]]) + 32 <= test266151307()
                    mem[64] = _1237 + ceil32(return_data.size) + ceil32(mem[_1237 + mem[_1237]]) + 32
                    mem[_1237 + ceil32(return_data.size)] = _1253
                    require _1251 + _1253 + 32 <= return_data.size
                    t = 0
                    while t < _1253:
                        mem[t + _1237 + ceil32(return_data.size) + 32] = mem[t + _1237 + _1251 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_1253) <= _1253:
                        mem[_1171 + 32] = _1237 + ceil32(return_data.size)
                        require ext_code.size(mem[_1171 + 12 len 20])
                        staticcall mem[_1171 + 12 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1407 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1407] == mem[_1407 + 31 len 1]
                        mem[_1171 + 64] = mem[_1407 + 31 len 1]
                        _1430 = mem[_1171]
                        mem[mem[64] + 4] = msg.sender
                        require ext_code.size(address(_1430))
                        staticcall address(_1430).0x70a08231 with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1453 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1171 + 96] = mem[_1453]
                        _1461 = mem[_1171]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = platformAddress
                        require ext_code.size(address(_1461))
                        staticcall address(_1461).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, platformAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1473 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1171 + 128] = mem[_1473]
                        _1481 = mem[_1171]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = governanceAddress
                        require ext_code.size(address(_1481))
                        staticcall address(_1481).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, governanceAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1493 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1171 + 160] = mem[_1493]
                        _1501 = mem[_1171]
                        mem[mem[64] + 4] = mem[_1171 + 12 len 20]
                        require ext_code.size(configAddr)
                        staticcall configAddr.tokenStatus(address rg1) with:
                                gas gas_remaining wei
                               args address(_1501)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1513 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1171 + 192] = mem[_1513]
                        require ext_code.size(mem[_1171 + 12 len 20])
                        staticcall mem[_1171 + 12 len 20].0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1533 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1171 + 224] = mem[_1533]
                    else:
                        mem[_1237 + ceil32(return_data.size) + _1253 + 32] = 0
                        mem[_1171 + 32] = _1237 + ceil32(return_data.size)
                        require ext_code.size(mem[_1171 + 12 len 20])
                        staticcall mem[_1171 + 12 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1411 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1411] == mem[_1411 + 31 len 1]
                        mem[_1171 + 64] = mem[_1411 + 31 len 1]
                        _1446 = mem[_1171]
                        mem[mem[64] + 4] = msg.sender
                        require ext_code.size(address(_1446))
                        staticcall address(_1446).0x70a08231 with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1455 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1171 + 96] = mem[_1455]
                        _1466 = mem[_1171]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = platformAddress
                        require ext_code.size(address(_1466))
                        staticcall address(_1466).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, platformAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1475 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1171 + 128] = mem[_1475]
                        _1486 = mem[_1171]
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = governanceAddress
                        require ext_code.size(address(_1486))
                        staticcall address(_1486).0xdd62ed3e with:
                                gas gas_remaining wei
                               args msg.sender, governanceAddress
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1495 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1171 + 160] = mem[_1495]
                        _1506 = mem[_1171]
                        mem[mem[64] + 4] = mem[_1171 + 12 len 20]
                        require ext_code.size(configAddr)
                        staticcall configAddr.tokenStatus(address rg1) with:
                                gas gas_remaining wei
                               args address(_1506)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1515 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1171 + 192] = mem[_1515]
                        require ext_code.size(mem[_1171 + 12 len 20])
                        staticcall mem[_1171 + 12 len 20].0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1535 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1171 + 224] = mem[_1535]
                    require s < mem[ceil32(return_data.size) + 96]
                    mem[(32 * s) + ceil32(return_data.size) + 128] = _1171
                    idx = idx + 1
                    s = s + 1
                    continue 
                _1174 = mem[64]
                mem[mem[64]] = 32
                _1189 = mem[ceil32(return_data.size) + 96]
                mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
                idx = 0
                s = ceil32(return_data.size) + 128
                t = mem[64] + (32 * _1189) + 64
                u = mem[64] + 64
                while idx < _1189:
                    mem[u] = t + -_1174 - 64
                    _1385 = mem[s]
                    mem[t] = mem[mem[s] + 12 len 20]
                    _1391 = mem[_1385 + 32]
                    mem[t + 32] = 256
                    _1396 = mem[_1391]
                    mem[t + 256] = mem[_1391]
                    v = 0
                    while v < _1396:
                        mem[v + t + 288] = mem[v + _1391 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_1396) > _1396:
                        mem[t + _1396 + 288] = 0
                    mem[t + 64] = mem[_1385 + 64]
                    mem[t + 96] = mem[_1385 + 96]
                    mem[t + 128] = mem[_1385 + 128]
                    mem[t + 160] = mem[_1385 + 160]
                    mem[t + 192] = mem[_1385 + 192]
                    mem[t + 224] = mem[_1385 + 224]
                    idx = idx + 1
                    s = s + 32
                    t = ceil32(_1396) + t + 288
                    u = u + 32
                    continue 
    return memory
      from mem[64]
       len t - mem[64]
}

function generateProposal(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    mem[128] = 0
    mem[160] = 0
    mem[224] = 96
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 0
    mem[384] = 0
    mem[416] = 0
    mem[448] = 0
    mem[480] = 0
    mem[512] = 0
    mem[544] = 0
    mem[576] = 0
    mem[608] = 0
    mem[640] = 0
    mem[672] = 0
    mem[704] = 0
    require ext_code.size(arg1)
    staticcall arg1.proposer() with:
            gas gas_remaining wei
    mem[736] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    mem[96] = ext_call.return_data[12 len 20]
    mem[ceil32(return_data.size) + 736] = 0xa59a98c00000000000000000000000000000000000000000000000000000000
    require ext_code.size(arg1)
    staticcall arg1.subject() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[ceil32(return_data.size) + 736 len return_data.size] = ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    _9 = mem[ceil32(return_data.size) + 736]
    require mem[ceil32(return_data.size) + 736] <= test266151307()
    require ceil32(return_data.size) + mem[ceil32(return_data.size) + 736] + 767 < ceil32(return_data.size) + return_data.size + 736
    _10 = mem[ceil32(return_data.size) + mem[ceil32(return_data.size) + 736] + 736]
    require mem[ceil32(return_data.size) + mem[ceil32(return_data.size) + 736] + 736] <= test266151307()
    require ceil32(mem[ceil32(return_data.size) + mem[ceil32(return_data.size) + 736] + 736]) + 32 >= 0 and (2 * ceil32(return_data.size)) + ceil32(mem[ceil32(return_data.size) + mem[ceil32(return_data.size) + 736] + 736]) + 768 <= test266151307()
    mem[64] = (2 * ceil32(return_data.size)) + ceil32(mem[ceil32(return_data.size) + mem[ceil32(return_data.size) + 736] + 736]) + 768
    mem[(2 * ceil32(return_data.size)) + 736] = mem[ceil32(return_data.size) + mem[ceil32(return_data.size) + 736] + 736]
    require _9 + _10 + 32 <= return_data.size
    mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_10)] = mem[ceil32(return_data.size) + _9 + 768 len ceil32(_10)]
    if ceil32(_10) <= _10:
        mem[192] = (2 * ceil32(return_data.size)) + 736
        mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
        require ext_code.size(arg1)
        staticcall arg1.content() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1204 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1206 = mem[_1204]
        require mem[_1204] <= test266151307()
        require _1204 + mem[_1204] + 31 < _1204 + return_data.size
        _1208 = mem[_1204 + mem[_1204]]
        require mem[_1204 + mem[_1204]] <= test266151307()
        require ceil32(mem[_1204 + mem[_1204]]) + 32 >= 0 and _1204 + ceil32(return_data.size) + ceil32(mem[_1204 + mem[_1204]]) + 32 <= test266151307()
        mem[64] = _1204 + ceil32(return_data.size) + ceil32(mem[_1204 + mem[_1204]]) + 32
        mem[_1204 + ceil32(return_data.size)] = _1208
        require _1206 + _1208 + 32 <= return_data.size
        mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)] = mem[_1204 + _1206 + 32 len ceil32(_1208)]
        if ceil32(_1208) <= _1208:
            mem[224] = _1204 + ceil32(return_data.size)
            require ext_code.size(arg1)
            staticcall arg1.createTime() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3048 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[256] = mem[_3048]
            require ext_code.size(arg1)
            staticcall arg1.endBlockNumber() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3064 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[288] = mem[_3064]
            require ext_code.size(arg1)
            staticcall arg1.endBlockNumber() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3080 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if block.number > mem[_3080]:
                mem[320] = 1
                require ext_code.size(arg1)
                staticcall arg1.ended() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3104 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3104] == bool(mem[_3104])
                mem[608] = bool(mem[_3104])
                mem[mem[64] + 4] = 1
                require ext_code.size(arg1)
                staticcall arg1.proposals(uint256 rg1) with:
                        gas gas_remaining wei
                       args 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3136 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                mem[352] = mem[_3136]
                mem[mem[64] + 4] = 2
                require ext_code.size(arg1)
                staticcall arg1.proposals(uint256 rg1) with:
                        gas gas_remaining wei
                       args 2
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3168 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                mem[384] = mem[_3168]
                mem[mem[64] + 4] = arg1
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.ballotOf(address rg1) with:
                        gas gas_remaining wei
                       args address(arg1)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3200 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                mem[416] = mem[_3200]
                mem[128] = arg1
                require ext_code.size(arg1)
                staticcall arg1.voters(address rg1) with:
                        gas gas_remaining wei
                       args msg.sender
                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3232 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 128
                _3240 = mem[64]
                require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                mem[64] = mem[64] + 128
                mem[_3240] = mem[_3232]
                require mem[_3232 + 32] == bool(mem[_3232 + 32])
                mem[_3240 + 32] = mem[_3232 + 32]
                require mem[_3232 + 64] == mem[_3232 + 76 len 20]
                mem[_3240 + 64] = mem[_3232 + 64]
                mem[_3240 + 96] = mem[_3232 + 96]
                mem[544] = bool(mem[_3240 + 32])
                require ext_code.size(arg1)
                staticcall arg1.voters(address rg1) with:
                        gas gas_remaining wei
                       args msg.sender
                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3304 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 128
                _3312 = mem[64]
                require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                mem[64] = mem[64] + 128
                mem[_3312] = mem[_3304]
                require mem[_3304 + 32] == bool(mem[_3304 + 32])
                mem[_3312 + 32] = mem[_3304 + 32]
                require mem[_3304 + 64] == mem[_3304 + 76 len 20]
                mem[_3312 + 64] = mem[_3304 + 64]
                mem[_3312 + 96] = mem[_3304 + 96]
                mem[576] = mem[_3312 + 96]
                require ext_code.size(arg1)
                staticcall arg1.voters(address rg1) with:
                        gas gas_remaining wei
                       args msg.sender
                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3376 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 128
                _3384 = mem[64]
                require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                mem[64] = mem[64] + 128
                mem[_3384] = mem[_3376]
                require mem[_3376 + 32] == bool(mem[_3376 + 32])
                mem[_3384 + 32] = mem[_3376 + 32]
                require mem[_3376 + 64] == mem[_3376 + 76 len 20]
                mem[_3384 + 64] = mem[_3376 + 64]
                mem[_3384 + 96] = mem[_3376 + 96]
                mem[480] = mem[_3384]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = msg.sender
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(arg1), msg.sender
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3448 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                mem[512] = 1 == mem[_3448]
                mem[mem[64] + 4] = arg1
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.ballotTypes(address rg1) with:
                        gas gas_remaining wei
                       args address(arg1)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3480 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                mem[448] = mem[_3480]
                mem[mem[64] + 4] = arg1
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.tokenBallots(address rg1) with:
                        gas gas_remaining wei
                       args address(arg1)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3512 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3512] == mem[_3512 + 12 len 20]
                mem[160] = mem[_3512 + 12 len 20]
                require ext_code.size(arg1)
                staticcall arg1.value() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3544 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                mem[640] = mem[_3544]
                if mem[448] != 1:
                    mem[mem[64]] = 32
                    mem[mem[64] + 32] = mem[108 len 20]
                    mem[mem[64] + 64] = arg1
                    mem[mem[64] + 96] = mem[172 len 20]
                    mem[mem[64] + 128] = 640
                    _3648 = mem[(2 * ceil32(return_data.size)) + 736]
                    mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
                    mem[mem[64] + 704 len ceil32(_3648)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3648)]
                    if ceil32(_3648) <= _3648:
                        mem[mem[64] + 160] = ceil32(_3648) + 672
                        mem[ceil32(_3648) + mem[64] + 704] = _1208
                        mem[ceil32(_3648) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
                        if ceil32(_1208) > _1208:
                            mem[ceil32(_3648) + mem[64] + _1208 + 736] = 0
                        mem[mem[64] + 192] = mem[256]
                        mem[mem[64] + 224] = mem[288]
                        mem[mem[64] + 256] = 1
                        mem[mem[64] + 288] = mem[352]
                        mem[mem[64] + 320] = mem[384]
                        mem[mem[64] + 352] = mem[416]
                        mem[mem[64] + 384] = mem[448]
                        mem[mem[64] + 416] = mem[480]
                        mem[mem[64] + 448] = bool(mem[512])
                        mem[mem[64] + 480] = bool(mem[544])
                        mem[mem[64] + 512] = mem[576]
                        mem[mem[64] + 544] = bool(mem[608])
                        mem[mem[64] + 640] = 0
                        return 32, mem[mem[64] + 32], 
                               address(arg1),
                               mem[mem[64] + 96],
                               640,
                               ceil32(_3648) + 672,
                               mem[mem[64] + 192 len 64],
                               1,
                               mem[mem[64] + 288 len 192],
                               bool(mem[544]),
                               mem[576],
                               mem[mem[64] + 544],
                               mem[640],
                               0,
                               0,
                               mem[mem[64] + 672 len ceil32(_3648) + 32],
                               _1208,
                               mem[mem[64] + ceil32(_3648) + 736 len ceil32(_1208)]
                    mem[mem[64] + _3648 + 704] = 0
                    mem[mem[64] + 160] = ceil32(_3648) + 672
                    mem[ceil32(_3648) + mem[64] + 704] = _1208
                    mem[ceil32(_3648) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
                    if ceil32(_1208) > _1208:
                        mem[ceil32(_3648) + mem[64] + _1208 + 736] = 0
                    mem[mem[64] + 192] = mem[256]
                    mem[mem[64] + 224] = mem[288]
                    mem[mem[64] + 256] = 1
                    mem[mem[64] + 288] = mem[352]
                    mem[mem[64] + 320] = mem[384]
                    mem[mem[64] + 352] = mem[416]
                    mem[mem[64] + 384] = mem[448]
                    mem[mem[64] + 416] = mem[480]
                    mem[mem[64] + 448] = bool(mem[512])
                    mem[mem[64] + 480] = bool(mem[544])
                    mem[mem[64] + 512] = mem[576]
                    mem[mem[64] + 544] = bool(mem[608])
                    mem[mem[64] + 640] = 0
                    return 32, mem[mem[64] + 32], 
                           address(arg1),
                           mem[mem[64] + 96],
                           640,
                           ceil32(_3648) + 672,
                           mem[mem[64] + 192 len 64],
                           1,
                           mem[mem[64] + 288 len 192],
                           bool(mem[544]),
                           mem[576],
                           mem[mem[64] + 544],
                           mem[640],
                           0,
                           0,
                           mem[mem[64] + 672 len _3648 + 32],
                           0,
                           mem[mem[64] + _3648 + 736 len ceil32(_1208) + ceil32(_3648) - _3648]
                mem[mem[64] + 4] = arg1
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.configBallots(address rg1) with:
                        gas gas_remaining wei
                       args address(arg1)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3596 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3612 = mem[_3596]
                mem[672] = mem[_3596]
                mem[mem[64] + 4] = _3612
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                        gas gas_remaining wei
                       args _3612
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3660 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                mem[704] = mem[_3660]
                mem[mem[64]] = 32
                mem[mem[64] + 32] = mem[108 len 20]
                mem[mem[64] + 64] = arg1
                mem[mem[64] + 96] = mem[172 len 20]
                mem[mem[64] + 128] = 640
                _3829 = mem[(2 * ceil32(return_data.size)) + 736]
                mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
                mem[mem[64] + 704 len ceil32(_3829)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3829)]
                if ceil32(_3829) <= _3829:
                    mem[mem[64] + 160] = ceil32(_3829) + 672
                    mem[ceil32(_3829) + mem[64] + 704] = _1208
                    mem[ceil32(_3829) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
                    if ceil32(_1208) > _1208:
                        mem[ceil32(_3829) + mem[64] + _1208 + 736] = 0
                    mem[mem[64] + 192] = mem[256]
                    mem[mem[64] + 224] = mem[288]
                    mem[mem[64] + 256] = 1
                    mem[mem[64] + 288] = mem[352]
                    mem[mem[64] + 320] = mem[384]
                    mem[mem[64] + 352] = mem[416]
                    mem[mem[64] + 384] = mem[448]
                    mem[mem[64] + 416] = mem[480]
                    mem[mem[64] + 448] = bool(mem[512])
                    mem[mem[64] + 480] = bool(mem[544])
                    mem[mem[64] + 512] = mem[576]
                    mem[mem[64] + 544] = bool(mem[608])
                    mem[mem[64] + 576] = mem[640]
                    mem[mem[64] + 608] = mem[672]
                    mem[mem[64] + 640] = mem[704]
                    return 32, mem[mem[64] + 32], 
                           address(arg1),
                           mem[mem[64] + 96],
                           640,
                           ceil32(_3829) + 672,
                           mem[mem[64] + 192 len 64],
                           1,
                           mem[mem[64] + 288 len 288],
                           mem[640],
                           mem[672],
                           mem[704],
                           mem[mem[64] + 672 len ceil32(_3829) + 32],
                           _1208,
                           mem[mem[64] + ceil32(_3829) + 736 len ceil32(_1208)]
                mem[mem[64] + _3829 + 704] = 0
                mem[mem[64] + 160] = ceil32(_3829) + 672
                mem[ceil32(_3829) + mem[64] + 704] = _1208
                mem[ceil32(_3829) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
                if ceil32(_1208) > _1208:
                    mem[ceil32(_3829) + mem[64] + _1208 + 736] = 0
                mem[mem[64] + 192] = mem[256]
                mem[mem[64] + 224] = mem[288]
                mem[mem[64] + 256] = 1
                mem[mem[64] + 288] = mem[352]
                mem[mem[64] + 320] = mem[384]
                mem[mem[64] + 352] = mem[416]
                mem[mem[64] + 384] = mem[448]
                mem[mem[64] + 416] = mem[480]
                mem[mem[64] + 448] = bool(mem[512])
                mem[mem[64] + 480] = bool(mem[544])
                mem[mem[64] + 512] = mem[576]
                mem[mem[64] + 544] = bool(mem[608])
                mem[mem[64] + 576] = mem[640]
                mem[mem[64] + 608] = mem[672]
                mem[mem[64] + 640] = mem[704]
                return 32, mem[mem[64] + 32], 
                       address(arg1),
                       mem[mem[64] + 96],
                       640,
                       ceil32(_3829) + 672,
                       mem[mem[64] + 192 len 64],
                       1,
                       mem[mem[64] + 288 len 288],
                       mem[640],
                       mem[672],
                       mem[704],
                       mem[mem[64] + 672 len _3829 + 32],
                       0,
                       mem[mem[64] + _3829 + 736 len ceil32(_1208) + ceil32(_3829) - _3829]
            mem[320] = 0
            require ext_code.size(arg1)
            staticcall arg1.ended() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3105 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_3105] == bool(mem[_3105])
            mem[608] = bool(mem[_3105])
            mem[mem[64] + 4] = 1
            require ext_code.size(arg1)
            staticcall arg1.proposals(uint256 rg1) with:
                    gas gas_remaining wei
                   args 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3137 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[352] = mem[_3137]
            mem[mem[64] + 4] = 2
            require ext_code.size(arg1)
            staticcall arg1.proposals(uint256 rg1) with:
                    gas gas_remaining wei
                   args 2
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3169 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[384] = mem[_3169]
            mem[mem[64] + 4] = arg1
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.ballotOf(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3201 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[416] = mem[_3201]
            mem[128] = arg1
            require ext_code.size(arg1)
            staticcall arg1.voters(address rg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3233 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 128
            _3241 = mem[64]
            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
            mem[64] = mem[64] + 128
            mem[_3241] = mem[_3233]
            require mem[_3233 + 32] == bool(mem[_3233 + 32])
            mem[_3241 + 32] = mem[_3233 + 32]
            require mem[_3233 + 64] == mem[_3233 + 76 len 20]
            mem[_3241 + 64] = mem[_3233 + 64]
            mem[_3241 + 96] = mem[_3233 + 96]
            mem[544] = bool(mem[_3241 + 32])
            require ext_code.size(arg1)
            staticcall arg1.voters(address rg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3305 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 128
            _3313 = mem[64]
            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
            mem[64] = mem[64] + 128
            mem[_3313] = mem[_3305]
            require mem[_3305 + 32] == bool(mem[_3305 + 32])
            mem[_3313 + 32] = mem[_3305 + 32]
            require mem[_3305 + 64] == mem[_3305 + 76 len 20]
            mem[_3313 + 64] = mem[_3305 + 64]
            mem[_3313 + 96] = mem[_3305 + 96]
            mem[576] = mem[_3313 + 96]
            require ext_code.size(arg1)
            staticcall arg1.voters(address rg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3377 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 128
            _3385 = mem[64]
            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
            mem[64] = mem[64] + 128
            mem[_3385] = mem[_3377]
            require mem[_3377 + 32] == bool(mem[_3377 + 32])
            mem[_3385 + 32] = mem[_3377 + 32]
            require mem[_3377 + 64] == mem[_3377 + 76 len 20]
            mem[_3385 + 64] = mem[_3377 + 64]
            mem[_3385 + 96] = mem[_3377 + 96]
            mem[480] = mem[_3385]
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = msg.sender
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args address(arg1), msg.sender
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3449 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[512] = 1 == mem[_3449]
            mem[mem[64] + 4] = arg1
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.ballotTypes(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3481 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[448] = mem[_3481]
            mem[mem[64] + 4] = arg1
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.tokenBallots(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3513 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_3513] == mem[_3513 + 12 len 20]
            mem[160] = mem[_3513 + 12 len 20]
            require ext_code.size(arg1)
            staticcall arg1.value() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3545 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[640] = mem[_3545]
            if mem[448] != 1:
                mem[mem[64]] = 32
                mem[mem[64] + 32] = mem[108 len 20]
                mem[mem[64] + 64] = arg1
                mem[mem[64] + 96] = mem[172 len 20]
                mem[mem[64] + 128] = 640
                _3649 = mem[(2 * ceil32(return_data.size)) + 736]
                mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
                mem[mem[64] + 704 len ceil32(_3649)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3649)]
                if ceil32(_3649) <= _3649:
                    mem[mem[64] + 160] = ceil32(_3649) + 672
                    mem[ceil32(_3649) + mem[64] + 704] = _1208
                    mem[ceil32(_3649) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
                    if ceil32(_1208) > _1208:
                        mem[ceil32(_3649) + mem[64] + _1208 + 736] = 0
                    mem[mem[64] + 192] = mem[256]
                    mem[mem[64] + 224] = mem[288]
                    mem[mem[64] + 256] = 0
                    mem[mem[64] + 288] = mem[352]
                    mem[mem[64] + 320] = mem[384]
                    mem[mem[64] + 352] = mem[416]
                    mem[mem[64] + 384] = mem[448]
                    mem[mem[64] + 416] = mem[480]
                    mem[mem[64] + 448] = bool(mem[512])
                    mem[mem[64] + 480] = bool(mem[544])
                    mem[mem[64] + 512] = mem[576]
                    mem[mem[64] + 544] = bool(mem[608])
                    mem[mem[64] + 640] = 0
                    return 32, mem[mem[64] + 32], 
                           address(arg1),
                           mem[mem[64] + 96],
                           640,
                           ceil32(_3649) + 672,
                           mem[mem[64] + 192 len 64],
                           0,
                           mem[mem[64] + 288 len 192],
                           bool(mem[544]),
                           mem[576],
                           mem[mem[64] + 544],
                           mem[640],
                           0,
                           0,
                           mem[mem[64] + 672 len ceil32(_3649) + 32],
                           _1208,
                           mem[mem[64] + ceil32(_3649) + 736 len ceil32(_1208)]
                mem[mem[64] + _3649 + 704] = 0
                mem[mem[64] + 160] = ceil32(_3649) + 672
                mem[ceil32(_3649) + mem[64] + 704] = _1208
                mem[ceil32(_3649) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
                if ceil32(_1208) > _1208:
                    mem[ceil32(_3649) + mem[64] + _1208 + 736] = 0
                mem[mem[64] + 192] = mem[256]
                mem[mem[64] + 224] = mem[288]
                mem[mem[64] + 256] = 0
                mem[mem[64] + 288] = mem[352]
                mem[mem[64] + 320] = mem[384]
                mem[mem[64] + 352] = mem[416]
                mem[mem[64] + 384] = mem[448]
                mem[mem[64] + 416] = mem[480]
                mem[mem[64] + 448] = bool(mem[512])
                mem[mem[64] + 480] = bool(mem[544])
                mem[mem[64] + 512] = mem[576]
                mem[mem[64] + 544] = bool(mem[608])
                mem[mem[64] + 640] = 0
                return 32, mem[mem[64] + 32], 
                       address(arg1),
                       mem[mem[64] + 96],
                       640,
                       ceil32(_3649) + 672,
                       mem[mem[64] + 192 len 64],
                       0,
                       mem[mem[64] + 288 len 192],
                       bool(mem[544]),
                       mem[576],
                       mem[mem[64] + 544],
                       mem[640],
                       0,
                       0,
                       mem[mem[64] + 672 len _3649 + 32],
                       0,
                       mem[mem[64] + _3649 + 736 len ceil32(_1208) + ceil32(_3649) - _3649]
            mem[mem[64] + 4] = arg1
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.configBallots(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3597 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3613 = mem[_3597]
            mem[672] = mem[_3597]
            mem[mem[64] + 4] = _3613
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                    gas gas_remaining wei
                   args _3613
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3661 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[704] = mem[_3661]
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[108 len 20]
            mem[mem[64] + 64] = arg1
            mem[mem[64] + 96] = mem[172 len 20]
            mem[mem[64] + 128] = 640
            _3839 = mem[(2 * ceil32(return_data.size)) + 736]
            mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
            mem[mem[64] + 704 len ceil32(_3839)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3839)]
            if ceil32(_3839) <= _3839:
                mem[mem[64] + 160] = ceil32(_3839) + 672
                mem[ceil32(_3839) + mem[64] + 704] = _1208
                mem[ceil32(_3839) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
                if ceil32(_1208) > _1208:
                    mem[ceil32(_3839) + mem[64] + _1208 + 736] = 0
                mem[mem[64] + 192] = mem[256]
                mem[mem[64] + 224] = mem[288]
                mem[mem[64] + 256] = 0
                mem[mem[64] + 288] = mem[352]
                mem[mem[64] + 320] = mem[384]
                mem[mem[64] + 352] = mem[416]
                mem[mem[64] + 384] = mem[448]
                mem[mem[64] + 416] = mem[480]
                mem[mem[64] + 448] = bool(mem[512])
                mem[mem[64] + 480] = bool(mem[544])
                mem[mem[64] + 512] = mem[576]
                mem[mem[64] + 544] = bool(mem[608])
                mem[mem[64] + 576] = mem[640]
                mem[mem[64] + 608] = mem[672]
                mem[mem[64] + 640] = mem[704]
                return 32, mem[mem[64] + 32], 
                       address(arg1),
                       mem[mem[64] + 96],
                       640,
                       ceil32(_3839) + 672,
                       mem[mem[64] + 192 len 64],
                       0,
                       mem[mem[64] + 288 len 288],
                       mem[640],
                       mem[672],
                       mem[704],
                       mem[mem[64] + 672 len ceil32(_3839) + 32],
                       _1208,
                       mem[mem[64] + ceil32(_3839) + 736 len ceil32(_1208)]
            mem[mem[64] + _3839 + 704] = 0
            mem[mem[64] + 160] = ceil32(_3839) + 672
            mem[ceil32(_3839) + mem[64] + 704] = _1208
            mem[ceil32(_3839) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
            if ceil32(_1208) > _1208:
                mem[ceil32(_3839) + mem[64] + _1208 + 736] = 0
            mem[mem[64] + 192] = mem[256]
            mem[mem[64] + 224] = mem[288]
            mem[mem[64] + 256] = 0
            mem[mem[64] + 288] = mem[352]
            mem[mem[64] + 320] = mem[384]
            mem[mem[64] + 352] = mem[416]
            mem[mem[64] + 384] = mem[448]
            mem[mem[64] + 416] = mem[480]
            mem[mem[64] + 448] = bool(mem[512])
            mem[mem[64] + 480] = bool(mem[544])
            mem[mem[64] + 512] = mem[576]
            mem[mem[64] + 544] = bool(mem[608])
            mem[mem[64] + 576] = mem[640]
            mem[mem[64] + 608] = mem[672]
            mem[mem[64] + 640] = mem[704]
            return 32, mem[mem[64] + 32], 
                   address(arg1),
                   mem[mem[64] + 96],
                   640,
                   ceil32(_3839) + 672,
                   mem[mem[64] + 192 len 64],
                   0,
                   mem[mem[64] + 288 len 288],
                   mem[640],
                   mem[672],
                   mem[704],
                   mem[mem[64] + 672 len _3839 + 32],
                   0,
                   mem[mem[64] + _3839 + 736 len ceil32(_1208) + ceil32(_3839) - _3839]
        mem[_1204 + ceil32(return_data.size) + _1208 + 32] = 0
        mem[224] = _1204 + ceil32(return_data.size)
        require ext_code.size(arg1)
        staticcall arg1.createTime() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3050 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[256] = mem[_3050]
        require ext_code.size(arg1)
        staticcall arg1.endBlockNumber() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3066 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[288] = mem[_3066]
        require ext_code.size(arg1)
        staticcall arg1.endBlockNumber() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3082 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if block.number > mem[_3082]:
            mem[320] = 1
            require ext_code.size(arg1)
            staticcall arg1.ended() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3108 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_3108] == bool(mem[_3108])
            mem[608] = bool(mem[_3108])
            mem[mem[64] + 4] = 1
            require ext_code.size(arg1)
            staticcall arg1.proposals(uint256 rg1) with:
                    gas gas_remaining wei
                   args 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3140 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[352] = mem[_3140]
            mem[mem[64] + 4] = 2
            require ext_code.size(arg1)
            staticcall arg1.proposals(uint256 rg1) with:
                    gas gas_remaining wei
                   args 2
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3172 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[384] = mem[_3172]
            mem[mem[64] + 4] = arg1
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.ballotOf(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3204 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[416] = mem[_3204]
            mem[128] = arg1
            require ext_code.size(arg1)
            staticcall arg1.voters(address rg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3236 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 128
            _3244 = mem[64]
            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
            mem[64] = mem[64] + 128
            mem[_3244] = mem[_3236]
            require mem[_3236 + 32] == bool(mem[_3236 + 32])
            mem[_3244 + 32] = mem[_3236 + 32]
            require mem[_3236 + 64] == mem[_3236 + 76 len 20]
            mem[_3244 + 64] = mem[_3236 + 64]
            mem[_3244 + 96] = mem[_3236 + 96]
            mem[544] = bool(mem[_3244 + 32])
            require ext_code.size(arg1)
            staticcall arg1.voters(address rg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3308 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 128
            _3316 = mem[64]
            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
            mem[64] = mem[64] + 128
            mem[_3316] = mem[_3308]
            require mem[_3308 + 32] == bool(mem[_3308 + 32])
            mem[_3316 + 32] = mem[_3308 + 32]
            require mem[_3308 + 64] == mem[_3308 + 76 len 20]
            mem[_3316 + 64] = mem[_3308 + 64]
            mem[_3316 + 96] = mem[_3308 + 96]
            mem[576] = mem[_3316 + 96]
            require ext_code.size(arg1)
            staticcall arg1.voters(address rg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3380 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 128
            _3388 = mem[64]
            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
            mem[64] = mem[64] + 128
            mem[_3388] = mem[_3380]
            require mem[_3380 + 32] == bool(mem[_3380 + 32])
            mem[_3388 + 32] = mem[_3380 + 32]
            require mem[_3380 + 64] == mem[_3380 + 76 len 20]
            mem[_3388 + 64] = mem[_3380 + 64]
            mem[_3388 + 96] = mem[_3380 + 96]
            mem[480] = mem[_3388]
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = msg.sender
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args address(arg1), msg.sender
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3452 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[512] = 1 == mem[_3452]
            mem[mem[64] + 4] = arg1
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.ballotTypes(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3484 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[448] = mem[_3484]
            mem[mem[64] + 4] = arg1
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.tokenBallots(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3516 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_3516] == mem[_3516 + 12 len 20]
            mem[160] = mem[_3516 + 12 len 20]
            require ext_code.size(arg1)
            staticcall arg1.value() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3548 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[640] = mem[_3548]
            if mem[448] != 1:
                mem[mem[64]] = 32
                mem[mem[64] + 32] = mem[108 len 20]
                mem[mem[64] + 64] = arg1
                mem[mem[64] + 96] = mem[172 len 20]
                mem[mem[64] + 128] = 640
                _3662 = mem[(2 * ceil32(return_data.size)) + 736]
                mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
                mem[mem[64] + 704 len ceil32(_3662)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3662)]
                if ceil32(_3662) <= _3662:
                    mem[mem[64] + 160] = ceil32(_3662) + 672
                    mem[ceil32(_3662) + mem[64] + 704] = _1208
                    mem[ceil32(_3662) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
                    if ceil32(_1208) > _1208:
                        mem[ceil32(_3662) + mem[64] + _1208 + 736] = 0
                    mem[mem[64] + 192] = mem[256]
                    mem[mem[64] + 224] = mem[288]
                    mem[mem[64] + 256] = 1
                    mem[mem[64] + 288] = mem[352]
                    mem[mem[64] + 320] = mem[384]
                    mem[mem[64] + 352] = mem[416]
                    mem[mem[64] + 384] = mem[448]
                    mem[mem[64] + 416] = mem[480]
                    mem[mem[64] + 448] = bool(mem[512])
                    mem[mem[64] + 480] = bool(mem[544])
                    mem[mem[64] + 512] = mem[576]
                    mem[mem[64] + 544] = bool(mem[608])
                    mem[mem[64] + 640] = 0
                    return 32, mem[mem[64] + 32], 
                           address(arg1),
                           mem[mem[64] + 96],
                           640,
                           ceil32(_3662) + 672,
                           mem[mem[64] + 192 len 64],
                           1,
                           mem[mem[64] + 288 len 192],
                           bool(mem[544]),
                           mem[576],
                           mem[mem[64] + 544],
                           mem[640],
                           0,
                           0,
                           mem[mem[64] + 672 len ceil32(_3662) + 32],
                           _1208,
                           mem[mem[64] + ceil32(_3662) + 736 len ceil32(_1208)]
                mem[mem[64] + _3662 + 704] = 0
                mem[mem[64] + 160] = ceil32(_3662) + 672
                mem[ceil32(_3662) + mem[64] + 704] = _1208
                mem[ceil32(_3662) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
                if ceil32(_1208) > _1208:
                    mem[ceil32(_3662) + mem[64] + _1208 + 736] = 0
                mem[mem[64] + 192] = mem[256]
                mem[mem[64] + 224] = mem[288]
                mem[mem[64] + 256] = 1
                mem[mem[64] + 288] = mem[352]
                mem[mem[64] + 320] = mem[384]
                mem[mem[64] + 352] = mem[416]
                mem[mem[64] + 384] = mem[448]
                mem[mem[64] + 416] = mem[480]
                mem[mem[64] + 448] = bool(mem[512])
                mem[mem[64] + 480] = bool(mem[544])
                mem[mem[64] + 512] = mem[576]
                mem[mem[64] + 544] = bool(mem[608])
                mem[mem[64] + 640] = 0
                return 32, mem[mem[64] + 32], 
                       address(arg1),
                       mem[mem[64] + 96],
                       640,
                       ceil32(_3662) + 672,
                       mem[mem[64] + 192 len 64],
                       1,
                       mem[mem[64] + 288 len 192],
                       bool(mem[544]),
                       mem[576],
                       mem[mem[64] + 544],
                       mem[640],
                       0,
                       0,
                       mem[mem[64] + 672 len _3662 + 32],
                       0,
                       mem[mem[64] + _3662 + 736 len ceil32(_1208) + ceil32(_3662) - _3662]
            mem[mem[64] + 4] = arg1
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.configBallots(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3606 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3624 = mem[_3606]
            mem[672] = mem[_3606]
            mem[mem[64] + 4] = _3624
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                    gas gas_remaining wei
                   args _3624
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3668 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[704] = mem[_3668]
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[108 len 20]
            mem[mem[64] + 64] = arg1
            mem[mem[64] + 96] = mem[172 len 20]
            mem[mem[64] + 128] = 640
            _3921 = mem[(2 * ceil32(return_data.size)) + 736]
            mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
            mem[mem[64] + 704 len ceil32(_3921)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3921)]
            if ceil32(_3921) <= _3921:
                mem[mem[64] + 160] = ceil32(_3921) + 672
                mem[ceil32(_3921) + mem[64] + 704] = _1208
                mem[ceil32(_3921) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
                if ceil32(_1208) > _1208:
                    mem[ceil32(_3921) + mem[64] + _1208 + 736] = 0
                mem[mem[64] + 192] = mem[256]
                mem[mem[64] + 224] = mem[288]
                mem[mem[64] + 256] = 1
                mem[mem[64] + 288] = mem[352]
                mem[mem[64] + 320] = mem[384]
                mem[mem[64] + 352] = mem[416]
                mem[mem[64] + 384] = mem[448]
                mem[mem[64] + 416] = mem[480]
                mem[mem[64] + 448] = bool(mem[512])
                mem[mem[64] + 480] = bool(mem[544])
                mem[mem[64] + 512] = mem[576]
                mem[mem[64] + 544] = bool(mem[608])
                mem[mem[64] + 576] = mem[640]
                mem[mem[64] + 608] = mem[672]
                mem[mem[64] + 640] = mem[704]
                return 32, mem[mem[64] + 32], 
                       address(arg1),
                       mem[mem[64] + 96],
                       640,
                       ceil32(_3921) + 672,
                       mem[mem[64] + 192 len 64],
                       1,
                       mem[mem[64] + 288 len 288],
                       mem[640],
                       mem[672],
                       mem[704],
                       mem[mem[64] + 672 len ceil32(_3921) + 32],
                       _1208,
                       mem[mem[64] + ceil32(_3921) + 736 len ceil32(_1208)]
            mem[mem[64] + _3921 + 704] = 0
            mem[mem[64] + 160] = ceil32(_3921) + 672
            mem[ceil32(_3921) + mem[64] + 704] = _1208
            mem[ceil32(_3921) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
            if ceil32(_1208) > _1208:
                mem[ceil32(_3921) + mem[64] + _1208 + 736] = 0
            mem[mem[64] + 192] = mem[256]
            mem[mem[64] + 224] = mem[288]
            mem[mem[64] + 256] = 1
            mem[mem[64] + 288] = mem[352]
            mem[mem[64] + 320] = mem[384]
            mem[mem[64] + 352] = mem[416]
            mem[mem[64] + 384] = mem[448]
            mem[mem[64] + 416] = mem[480]
            mem[mem[64] + 448] = bool(mem[512])
            mem[mem[64] + 480] = bool(mem[544])
            mem[mem[64] + 512] = mem[576]
            mem[mem[64] + 544] = bool(mem[608])
            mem[mem[64] + 576] = mem[640]
            mem[mem[64] + 608] = mem[672]
            mem[mem[64] + 640] = mem[704]
            return 32, mem[mem[64] + 32], 
                   address(arg1),
                   mem[mem[64] + 96],
                   640,
                   ceil32(_3921) + 672,
                   mem[mem[64] + 192 len 64],
                   1,
                   mem[mem[64] + 288 len 288],
                   mem[640],
                   mem[672],
                   mem[704],
                   mem[mem[64] + 672 len _3921 + 32],
                   0,
                   mem[mem[64] + _3921 + 736 len ceil32(_1208) + ceil32(_3921) - _3921]
        mem[320] = 0
        require ext_code.size(arg1)
        staticcall arg1.ended() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3109 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_3109] == bool(mem[_3109])
        mem[608] = bool(mem[_3109])
        mem[mem[64] + 4] = 1
        require ext_code.size(arg1)
        staticcall arg1.proposals(uint256 rg1) with:
                gas gas_remaining wei
               args 1
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3141 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[352] = mem[_3141]
        mem[mem[64] + 4] = 2
        require ext_code.size(arg1)
        staticcall arg1.proposals(uint256 rg1) with:
                gas gas_remaining wei
               args 2
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3173 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[384] = mem[_3173]
        mem[mem[64] + 4] = arg1
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.ballotOf(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3205 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[416] = mem[_3205]
        mem[128] = arg1
        require ext_code.size(arg1)
        staticcall arg1.voters(address rg1) with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3237 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 128
        _3245 = mem[64]
        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
        mem[64] = mem[64] + 128
        mem[_3245] = mem[_3237]
        require mem[_3237 + 32] == bool(mem[_3237 + 32])
        mem[_3245 + 32] = mem[_3237 + 32]
        require mem[_3237 + 64] == mem[_3237 + 76 len 20]
        mem[_3245 + 64] = mem[_3237 + 64]
        mem[_3245 + 96] = mem[_3237 + 96]
        mem[544] = bool(mem[_3245 + 32])
        require ext_code.size(arg1)
        staticcall arg1.voters(address rg1) with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3309 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 128
        _3317 = mem[64]
        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
        mem[64] = mem[64] + 128
        mem[_3317] = mem[_3309]
        require mem[_3309 + 32] == bool(mem[_3309 + 32])
        mem[_3317 + 32] = mem[_3309 + 32]
        require mem[_3309 + 64] == mem[_3309 + 76 len 20]
        mem[_3317 + 64] = mem[_3309 + 64]
        mem[_3317 + 96] = mem[_3309 + 96]
        mem[576] = mem[_3317 + 96]
        require ext_code.size(arg1)
        staticcall arg1.voters(address rg1) with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3381 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 128
        _3389 = mem[64]
        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
        mem[64] = mem[64] + 128
        mem[_3389] = mem[_3381]
        require mem[_3381 + 32] == bool(mem[_3381 + 32])
        mem[_3389 + 32] = mem[_3381 + 32]
        require mem[_3381 + 64] == mem[_3381 + 76 len 20]
        mem[_3389 + 64] = mem[_3381 + 64]
        mem[_3389 + 96] = mem[_3381 + 96]
        mem[480] = mem[_3389]
        mem[mem[64] + 4] = arg1
        mem[mem[64] + 36] = msg.sender
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                gas gas_remaining wei
               args address(arg1), msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3453 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[512] = 1 == mem[_3453]
        mem[mem[64] + 4] = arg1
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.ballotTypes(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3485 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[448] = mem[_3485]
        mem[mem[64] + 4] = arg1
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.tokenBallots(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3517 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_3517] == mem[_3517 + 12 len 20]
        mem[160] = mem[_3517 + 12 len 20]
        require ext_code.size(arg1)
        staticcall arg1.value() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3549 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[640] = mem[_3549]
        if mem[448] != 1:
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[108 len 20]
            mem[mem[64] + 64] = arg1
            mem[mem[64] + 96] = mem[172 len 20]
            mem[mem[64] + 128] = 640
            _3663 = mem[(2 * ceil32(return_data.size)) + 736]
            mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
            mem[mem[64] + 704 len ceil32(_3663)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3663)]
            if ceil32(_3663) <= _3663:
                mem[mem[64] + 160] = ceil32(_3663) + 672
                mem[ceil32(_3663) + mem[64] + 704] = _1208
                mem[ceil32(_3663) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
                if ceil32(_1208) > _1208:
                    mem[ceil32(_3663) + mem[64] + _1208 + 736] = 0
                mem[mem[64] + 192] = mem[256]
                mem[mem[64] + 224] = mem[288]
                mem[mem[64] + 256] = 0
                mem[mem[64] + 288] = mem[352]
                mem[mem[64] + 320] = mem[384]
                mem[mem[64] + 352] = mem[416]
                mem[mem[64] + 384] = mem[448]
                mem[mem[64] + 416] = mem[480]
                mem[mem[64] + 448] = bool(mem[512])
                mem[mem[64] + 480] = bool(mem[544])
                mem[mem[64] + 512] = mem[576]
                mem[mem[64] + 544] = bool(mem[608])
                mem[mem[64] + 640] = 0
                return 32, mem[mem[64] + 32], 
                       address(arg1),
                       mem[mem[64] + 96],
                       640,
                       ceil32(_3663) + 672,
                       mem[mem[64] + 192 len 64],
                       0,
                       mem[mem[64] + 288 len 192],
                       bool(mem[544]),
                       mem[576],
                       mem[mem[64] + 544],
                       mem[640],
                       0,
                       0,
                       mem[mem[64] + 672 len ceil32(_3663) + 32],
                       _1208,
                       mem[mem[64] + ceil32(_3663) + 736 len ceil32(_1208)]
            mem[mem[64] + _3663 + 704] = 0
            mem[mem[64] + 160] = ceil32(_3663) + 672
            mem[ceil32(_3663) + mem[64] + 704] = _1208
            mem[ceil32(_3663) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
            if ceil32(_1208) > _1208:
                mem[ceil32(_3663) + mem[64] + _1208 + 736] = 0
            mem[mem[64] + 192] = mem[256]
            mem[mem[64] + 224] = mem[288]
            mem[mem[64] + 256] = 0
            mem[mem[64] + 288] = mem[352]
            mem[mem[64] + 320] = mem[384]
            mem[mem[64] + 352] = mem[416]
            mem[mem[64] + 384] = mem[448]
            mem[mem[64] + 416] = mem[480]
            mem[mem[64] + 448] = bool(mem[512])
            mem[mem[64] + 480] = bool(mem[544])
            mem[mem[64] + 512] = mem[576]
            mem[mem[64] + 544] = bool(mem[608])
            mem[mem[64] + 640] = 0
            return 32, mem[mem[64] + 32], 
                   address(arg1),
                   mem[mem[64] + 96],
                   640,
                   ceil32(_3663) + 672,
                   mem[mem[64] + 192 len 64],
                   0,
                   mem[mem[64] + 288 len 192],
                   bool(mem[544]),
                   mem[576],
                   mem[mem[64] + 544],
                   mem[640],
                   0,
                   0,
                   mem[mem[64] + 672 len _3663 + 32],
                   0,
                   mem[mem[64] + _3663 + 736 len ceil32(_1208) + ceil32(_3663) - _3663]
        mem[mem[64] + 4] = arg1
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.configBallots(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3607 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3625 = mem[_3607]
        mem[672] = mem[_3607]
        mem[mem[64] + 4] = _3625
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                gas gas_remaining wei
               args _3625
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3669 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[704] = mem[_3669]
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[108 len 20]
        mem[mem[64] + 64] = arg1
        mem[mem[64] + 96] = mem[172 len 20]
        mem[mem[64] + 128] = 640
        _3931 = mem[(2 * ceil32(return_data.size)) + 736]
        mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
        mem[mem[64] + 704 len ceil32(_3931)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3931)]
        if ceil32(_3931) <= _3931:
            mem[mem[64] + 160] = ceil32(_3931) + 672
            mem[ceil32(_3931) + mem[64] + 704] = _1208
            mem[ceil32(_3931) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
            if ceil32(_1208) > _1208:
                mem[ceil32(_3931) + mem[64] + _1208 + 736] = 0
            mem[mem[64] + 192] = mem[256]
            mem[mem[64] + 224] = mem[288]
            mem[mem[64] + 256] = 0
            mem[mem[64] + 288] = mem[352]
            mem[mem[64] + 320] = mem[384]
            mem[mem[64] + 352] = mem[416]
            mem[mem[64] + 384] = mem[448]
            mem[mem[64] + 416] = mem[480]
            mem[mem[64] + 448] = bool(mem[512])
            mem[mem[64] + 480] = bool(mem[544])
            mem[mem[64] + 512] = mem[576]
            mem[mem[64] + 544] = bool(mem[608])
            mem[mem[64] + 576] = mem[640]
            mem[mem[64] + 608] = mem[672]
            mem[mem[64] + 640] = mem[704]
            return 32, mem[mem[64] + 32], 
                   address(arg1),
                   mem[mem[64] + 96],
                   640,
                   ceil32(_3931) + 672,
                   mem[mem[64] + 192 len 64],
                   0,
                   mem[mem[64] + 288 len 288],
                   mem[640],
                   mem[672],
                   mem[704],
                   mem[mem[64] + 672 len ceil32(_3931) + 32],
                   _1208,
                   mem[mem[64] + ceil32(_3931) + 736 len ceil32(_1208)]
        mem[mem[64] + _3931 + 704] = 0
        mem[mem[64] + 160] = ceil32(_3931) + 672
        mem[ceil32(_3931) + mem[64] + 704] = _1208
        mem[ceil32(_3931) + mem[64] + 736 len ceil32(_1208)] = mem[_1204 + ceil32(return_data.size) + 32 len ceil32(_1208)]
        if ceil32(_1208) > _1208:
            mem[ceil32(_3931) + mem[64] + _1208 + 736] = 0
        mem[mem[64] + 192] = mem[256]
        mem[mem[64] + 224] = mem[288]
        mem[mem[64] + 256] = 0
        mem[mem[64] + 288] = mem[352]
        mem[mem[64] + 320] = mem[384]
        mem[mem[64] + 352] = mem[416]
        mem[mem[64] + 384] = mem[448]
        mem[mem[64] + 416] = mem[480]
        mem[mem[64] + 448] = bool(mem[512])
        mem[mem[64] + 480] = bool(mem[544])
        mem[mem[64] + 512] = mem[576]
        mem[mem[64] + 544] = bool(mem[608])
        mem[mem[64] + 576] = mem[640]
        mem[mem[64] + 608] = mem[672]
        mem[mem[64] + 640] = mem[704]
        return 32, mem[mem[64] + 32], 
               address(arg1),
               mem[mem[64] + 96],
               640,
               ceil32(_3931) + 672,
               mem[mem[64] + 192 len 64],
               0,
               mem[mem[64] + 288 len 288],
               mem[640],
               mem[672],
               mem[704],
               mem[mem[64] + 672 len _3931 + 32],
               0,
               mem[mem[64] + _3931 + 736 len ceil32(_1208) + ceil32(_3931) - _3931]
    mem[(2 * ceil32(return_data.size)) + _10 + 768] = 0
    mem[192] = (2 * ceil32(return_data.size)) + 736
    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
    require ext_code.size(arg1)
    staticcall arg1.content() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _1205 = mem[64]
    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _1207 = mem[_1205]
    require mem[_1205] <= test266151307()
    require _1205 + mem[_1205] + 31 < _1205 + return_data.size
    _1209 = mem[_1205 + mem[_1205]]
    require mem[_1205 + mem[_1205]] <= test266151307()
    require ceil32(mem[_1205 + mem[_1205]]) + 32 >= 0 and _1205 + ceil32(return_data.size) + ceil32(mem[_1205 + mem[_1205]]) + 32 <= test266151307()
    mem[64] = _1205 + ceil32(return_data.size) + ceil32(mem[_1205 + mem[_1205]]) + 32
    mem[_1205 + ceil32(return_data.size)] = _1209
    require _1207 + _1209 + 32 <= return_data.size
    mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)] = mem[_1205 + _1207 + 32 len ceil32(_1209)]
    if ceil32(_1209) <= _1209:
        mem[224] = _1205 + ceil32(return_data.size)
        require ext_code.size(arg1)
        staticcall arg1.createTime() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3049 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[256] = mem[_3049]
        require ext_code.size(arg1)
        staticcall arg1.endBlockNumber() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3065 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[288] = mem[_3065]
        require ext_code.size(arg1)
        staticcall arg1.endBlockNumber() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3081 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if block.number > mem[_3081]:
            mem[320] = 1
            require ext_code.size(arg1)
            staticcall arg1.ended() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3106 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_3106] == bool(mem[_3106])
            mem[608] = bool(mem[_3106])
            mem[mem[64] + 4] = 1
            require ext_code.size(arg1)
            staticcall arg1.proposals(uint256 rg1) with:
                    gas gas_remaining wei
                   args 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3138 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[352] = mem[_3138]
            mem[mem[64] + 4] = 2
            require ext_code.size(arg1)
            staticcall arg1.proposals(uint256 rg1) with:
                    gas gas_remaining wei
                   args 2
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3170 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[384] = mem[_3170]
            mem[mem[64] + 4] = arg1
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.ballotOf(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3202 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[416] = mem[_3202]
            mem[128] = arg1
            require ext_code.size(arg1)
            staticcall arg1.voters(address rg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3234 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 128
            _3242 = mem[64]
            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
            mem[64] = mem[64] + 128
            mem[_3242] = mem[_3234]
            require mem[_3234 + 32] == bool(mem[_3234 + 32])
            mem[_3242 + 32] = mem[_3234 + 32]
            require mem[_3234 + 64] == mem[_3234 + 76 len 20]
            mem[_3242 + 64] = mem[_3234 + 64]
            mem[_3242 + 96] = mem[_3234 + 96]
            mem[544] = bool(mem[_3242 + 32])
            require ext_code.size(arg1)
            staticcall arg1.voters(address rg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3306 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 128
            _3314 = mem[64]
            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
            mem[64] = mem[64] + 128
            mem[_3314] = mem[_3306]
            require mem[_3306 + 32] == bool(mem[_3306 + 32])
            mem[_3314 + 32] = mem[_3306 + 32]
            require mem[_3306 + 64] == mem[_3306 + 76 len 20]
            mem[_3314 + 64] = mem[_3306 + 64]
            mem[_3314 + 96] = mem[_3306 + 96]
            mem[576] = mem[_3314 + 96]
            require ext_code.size(arg1)
            staticcall arg1.voters(address rg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3378 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 128
            _3386 = mem[64]
            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
            mem[64] = mem[64] + 128
            mem[_3386] = mem[_3378]
            require mem[_3378 + 32] == bool(mem[_3378 + 32])
            mem[_3386 + 32] = mem[_3378 + 32]
            require mem[_3378 + 64] == mem[_3378 + 76 len 20]
            mem[_3386 + 64] = mem[_3378 + 64]
            mem[_3386 + 96] = mem[_3378 + 96]
            mem[480] = mem[_3386]
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = msg.sender
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args address(arg1), msg.sender
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3450 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[512] = 1 == mem[_3450]
            mem[mem[64] + 4] = arg1
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.ballotTypes(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3482 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[448] = mem[_3482]
            mem[mem[64] + 4] = arg1
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.tokenBallots(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3514 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_3514] == mem[_3514 + 12 len 20]
            mem[160] = mem[_3514 + 12 len 20]
            require ext_code.size(arg1)
            staticcall arg1.value() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3546 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[640] = mem[_3546]
            if mem[448] != 1:
                mem[mem[64]] = 32
                mem[mem[64] + 32] = mem[108 len 20]
                mem[mem[64] + 64] = arg1
                mem[mem[64] + 96] = mem[172 len 20]
                mem[mem[64] + 128] = 640
                _3654 = mem[(2 * ceil32(return_data.size)) + 736]
                mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
                mem[mem[64] + 704 len ceil32(_3654)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3654)]
                if ceil32(_3654) <= _3654:
                    mem[mem[64] + 160] = ceil32(_3654) + 672
                    mem[ceil32(_3654) + mem[64] + 704] = _1209
                    mem[ceil32(_3654) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
                    if ceil32(_1209) > _1209:
                        mem[ceil32(_3654) + mem[64] + _1209 + 736] = 0
                    mem[mem[64] + 192] = mem[256]
                    mem[mem[64] + 224] = mem[288]
                    mem[mem[64] + 256] = 1
                    mem[mem[64] + 288] = mem[352]
                    mem[mem[64] + 320] = mem[384]
                    mem[mem[64] + 352] = mem[416]
                    mem[mem[64] + 384] = mem[448]
                    mem[mem[64] + 416] = mem[480]
                    mem[mem[64] + 448] = bool(mem[512])
                    mem[mem[64] + 480] = bool(mem[544])
                    mem[mem[64] + 512] = mem[576]
                    mem[mem[64] + 544] = bool(mem[608])
                    mem[mem[64] + 640] = 0
                    return 32, mem[mem[64] + 32], 
                           address(arg1),
                           mem[mem[64] + 96],
                           640,
                           ceil32(_3654) + 672,
                           mem[mem[64] + 192 len 64],
                           1,
                           mem[mem[64] + 288 len 192],
                           bool(mem[544]),
                           mem[576],
                           mem[mem[64] + 544],
                           mem[640],
                           0,
                           0,
                           mem[mem[64] + 672 len ceil32(_3654) + 32],
                           _1209,
                           mem[mem[64] + ceil32(_3654) + 736 len ceil32(_1209)]
                mem[mem[64] + _3654 + 704] = 0
                mem[mem[64] + 160] = ceil32(_3654) + 672
                mem[ceil32(_3654) + mem[64] + 704] = _1209
                mem[ceil32(_3654) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
                if ceil32(_1209) > _1209:
                    mem[ceil32(_3654) + mem[64] + _1209 + 736] = 0
                mem[mem[64] + 192] = mem[256]
                mem[mem[64] + 224] = mem[288]
                mem[mem[64] + 256] = 1
                mem[mem[64] + 288] = mem[352]
                mem[mem[64] + 320] = mem[384]
                mem[mem[64] + 352] = mem[416]
                mem[mem[64] + 384] = mem[448]
                mem[mem[64] + 416] = mem[480]
                mem[mem[64] + 448] = bool(mem[512])
                mem[mem[64] + 480] = bool(mem[544])
                mem[mem[64] + 512] = mem[576]
                mem[mem[64] + 544] = bool(mem[608])
                mem[mem[64] + 640] = 0
                return 32, mem[mem[64] + 32], 
                       address(arg1),
                       mem[mem[64] + 96],
                       640,
                       ceil32(_3654) + 672,
                       mem[mem[64] + 192 len 64],
                       1,
                       mem[mem[64] + 288 len 192],
                       bool(mem[544]),
                       mem[576],
                       mem[mem[64] + 544],
                       mem[640],
                       0,
                       0,
                       mem[mem[64] + 672 len _3654 + 32],
                       0,
                       mem[mem[64] + _3654 + 736 len ceil32(_1209) + ceil32(_3654) - _3654]
            mem[mem[64] + 4] = arg1
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.configBallots(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3600 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3616 = mem[_3600]
            mem[672] = mem[_3600]
            mem[mem[64] + 4] = _3616
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                    gas gas_remaining wei
                   args _3616
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3664 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            mem[704] = mem[_3664]
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[108 len 20]
            mem[mem[64] + 64] = arg1
            mem[mem[64] + 96] = mem[172 len 20]
            mem[mem[64] + 128] = 640
            _3863 = mem[(2 * ceil32(return_data.size)) + 736]
            mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
            mem[mem[64] + 704 len ceil32(_3863)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3863)]
            if ceil32(_3863) <= _3863:
                mem[mem[64] + 160] = ceil32(_3863) + 672
                mem[ceil32(_3863) + mem[64] + 704] = _1209
                mem[ceil32(_3863) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
                if ceil32(_1209) > _1209:
                    mem[ceil32(_3863) + mem[64] + _1209 + 736] = 0
                mem[mem[64] + 192] = mem[256]
                mem[mem[64] + 224] = mem[288]
                mem[mem[64] + 256] = 1
                mem[mem[64] + 288] = mem[352]
                mem[mem[64] + 320] = mem[384]
                mem[mem[64] + 352] = mem[416]
                mem[mem[64] + 384] = mem[448]
                mem[mem[64] + 416] = mem[480]
                mem[mem[64] + 448] = bool(mem[512])
                mem[mem[64] + 480] = bool(mem[544])
                mem[mem[64] + 512] = mem[576]
                mem[mem[64] + 544] = bool(mem[608])
                mem[mem[64] + 576] = mem[640]
                mem[mem[64] + 608] = mem[672]
                mem[mem[64] + 640] = mem[704]
                return 32, mem[mem[64] + 32], 
                       address(arg1),
                       mem[mem[64] + 96],
                       640,
                       ceil32(_3863) + 672,
                       mem[mem[64] + 192 len 64],
                       1,
                       mem[mem[64] + 288 len 288],
                       mem[640],
                       mem[672],
                       mem[704],
                       mem[mem[64] + 672 len ceil32(_3863) + 32],
                       _1209,
                       mem[mem[64] + ceil32(_3863) + 736 len ceil32(_1209)]
            mem[mem[64] + _3863 + 704] = 0
            mem[mem[64] + 160] = ceil32(_3863) + 672
            mem[ceil32(_3863) + mem[64] + 704] = _1209
            mem[ceil32(_3863) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
            if ceil32(_1209) > _1209:
                mem[ceil32(_3863) + mem[64] + _1209 + 736] = 0
            mem[mem[64] + 192] = mem[256]
            mem[mem[64] + 224] = mem[288]
            mem[mem[64] + 256] = 1
            mem[mem[64] + 288] = mem[352]
            mem[mem[64] + 320] = mem[384]
            mem[mem[64] + 352] = mem[416]
            mem[mem[64] + 384] = mem[448]
            mem[mem[64] + 416] = mem[480]
            mem[mem[64] + 448] = bool(mem[512])
            mem[mem[64] + 480] = bool(mem[544])
            mem[mem[64] + 512] = mem[576]
            mem[mem[64] + 544] = bool(mem[608])
            mem[mem[64] + 576] = mem[640]
            mem[mem[64] + 608] = mem[672]
            mem[mem[64] + 640] = mem[704]
            return 32, mem[mem[64] + 32], 
                   address(arg1),
                   mem[mem[64] + 96],
                   640,
                   ceil32(_3863) + 672,
                   mem[mem[64] + 192 len 64],
                   1,
                   mem[mem[64] + 288 len 288],
                   mem[640],
                   mem[672],
                   mem[704],
                   mem[mem[64] + 672 len _3863 + 32],
                   0,
                   mem[mem[64] + _3863 + 736 len ceil32(_1209) + ceil32(_3863) - _3863]
        mem[320] = 0
        require ext_code.size(arg1)
        staticcall arg1.ended() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3107 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_3107] == bool(mem[_3107])
        mem[608] = bool(mem[_3107])
        mem[mem[64] + 4] = 1
        require ext_code.size(arg1)
        staticcall arg1.proposals(uint256 rg1) with:
                gas gas_remaining wei
               args 1
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3139 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[352] = mem[_3139]
        mem[mem[64] + 4] = 2
        require ext_code.size(arg1)
        staticcall arg1.proposals(uint256 rg1) with:
                gas gas_remaining wei
               args 2
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3171 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[384] = mem[_3171]
        mem[mem[64] + 4] = arg1
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.ballotOf(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3203 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[416] = mem[_3203]
        mem[128] = arg1
        require ext_code.size(arg1)
        staticcall arg1.voters(address rg1) with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3235 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 128
        _3243 = mem[64]
        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
        mem[64] = mem[64] + 128
        mem[_3243] = mem[_3235]
        require mem[_3235 + 32] == bool(mem[_3235 + 32])
        mem[_3243 + 32] = mem[_3235 + 32]
        require mem[_3235 + 64] == mem[_3235 + 76 len 20]
        mem[_3243 + 64] = mem[_3235 + 64]
        mem[_3243 + 96] = mem[_3235 + 96]
        mem[544] = bool(mem[_3243 + 32])
        require ext_code.size(arg1)
        staticcall arg1.voters(address rg1) with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3307 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 128
        _3315 = mem[64]
        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
        mem[64] = mem[64] + 128
        mem[_3315] = mem[_3307]
        require mem[_3307 + 32] == bool(mem[_3307 + 32])
        mem[_3315 + 32] = mem[_3307 + 32]
        require mem[_3307 + 64] == mem[_3307 + 76 len 20]
        mem[_3315 + 64] = mem[_3307 + 64]
        mem[_3315 + 96] = mem[_3307 + 96]
        mem[576] = mem[_3315 + 96]
        require ext_code.size(arg1)
        staticcall arg1.voters(address rg1) with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3379 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 128
        _3387 = mem[64]
        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
        mem[64] = mem[64] + 128
        mem[_3387] = mem[_3379]
        require mem[_3379 + 32] == bool(mem[_3379 + 32])
        mem[_3387 + 32] = mem[_3379 + 32]
        require mem[_3379 + 64] == mem[_3379 + 76 len 20]
        mem[_3387 + 64] = mem[_3379 + 64]
        mem[_3387 + 96] = mem[_3379 + 96]
        mem[480] = mem[_3387]
        mem[mem[64] + 4] = arg1
        mem[mem[64] + 36] = msg.sender
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                gas gas_remaining wei
               args address(arg1), msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3451 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[512] = 1 == mem[_3451]
        mem[mem[64] + 4] = arg1
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.ballotTypes(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3483 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[448] = mem[_3483]
        mem[mem[64] + 4] = arg1
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.tokenBallots(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3515 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_3515] == mem[_3515 + 12 len 20]
        mem[160] = mem[_3515 + 12 len 20]
        require ext_code.size(arg1)
        staticcall arg1.value() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3547 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[640] = mem[_3547]
        if mem[448] != 1:
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[108 len 20]
            mem[mem[64] + 64] = arg1
            mem[mem[64] + 96] = mem[172 len 20]
            mem[mem[64] + 128] = 640
            _3655 = mem[(2 * ceil32(return_data.size)) + 736]
            mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
            mem[mem[64] + 704 len ceil32(_3655)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3655)]
            if ceil32(_3655) <= _3655:
                mem[mem[64] + 160] = ceil32(_3655) + 672
                mem[ceil32(_3655) + mem[64] + 704] = _1209
                mem[ceil32(_3655) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
                if ceil32(_1209) > _1209:
                    mem[ceil32(_3655) + mem[64] + _1209 + 736] = 0
                mem[mem[64] + 192] = mem[256]
                mem[mem[64] + 224] = mem[288]
                mem[mem[64] + 256] = 0
                mem[mem[64] + 288] = mem[352]
                mem[mem[64] + 320] = mem[384]
                mem[mem[64] + 352] = mem[416]
                mem[mem[64] + 384] = mem[448]
                mem[mem[64] + 416] = mem[480]
                mem[mem[64] + 448] = bool(mem[512])
                mem[mem[64] + 480] = bool(mem[544])
                mem[mem[64] + 512] = mem[576]
                mem[mem[64] + 544] = bool(mem[608])
                mem[mem[64] + 640] = 0
                return 32, mem[mem[64] + 32], 
                       address(arg1),
                       mem[mem[64] + 96],
                       640,
                       ceil32(_3655) + 672,
                       mem[mem[64] + 192 len 64],
                       0,
                       mem[mem[64] + 288 len 192],
                       bool(mem[544]),
                       mem[576],
                       mem[mem[64] + 544],
                       mem[640],
                       0,
                       0,
                       mem[mem[64] + 672 len ceil32(_3655) + 32],
                       _1209,
                       mem[mem[64] + ceil32(_3655) + 736 len ceil32(_1209)]
            mem[mem[64] + _3655 + 704] = 0
            mem[mem[64] + 160] = ceil32(_3655) + 672
            mem[ceil32(_3655) + mem[64] + 704] = _1209
            mem[ceil32(_3655) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
            if ceil32(_1209) > _1209:
                mem[ceil32(_3655) + mem[64] + _1209 + 736] = 0
            mem[mem[64] + 192] = mem[256]
            mem[mem[64] + 224] = mem[288]
            mem[mem[64] + 256] = 0
            mem[mem[64] + 288] = mem[352]
            mem[mem[64] + 320] = mem[384]
            mem[mem[64] + 352] = mem[416]
            mem[mem[64] + 384] = mem[448]
            mem[mem[64] + 416] = mem[480]
            mem[mem[64] + 448] = bool(mem[512])
            mem[mem[64] + 480] = bool(mem[544])
            mem[mem[64] + 512] = mem[576]
            mem[mem[64] + 544] = bool(mem[608])
            mem[mem[64] + 640] = 0
            return 32, mem[mem[64] + 32], 
                   address(arg1),
                   mem[mem[64] + 96],
                   640,
                   ceil32(_3655) + 672,
                   mem[mem[64] + 192 len 64],
                   0,
                   mem[mem[64] + 288 len 192],
                   bool(mem[544]),
                   mem[576],
                   mem[mem[64] + 544],
                   mem[640],
                   0,
                   0,
                   mem[mem[64] + 672 len _3655 + 32],
                   0,
                   mem[mem[64] + _3655 + 736 len ceil32(_1209) + ceil32(_3655) - _3655]
        mem[mem[64] + 4] = arg1
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.configBallots(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3601 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3617 = mem[_3601]
        mem[672] = mem[_3601]
        mem[mem[64] + 4] = _3617
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                gas gas_remaining wei
               args _3617
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3665 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[704] = mem[_3665]
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[108 len 20]
        mem[mem[64] + 64] = arg1
        mem[mem[64] + 96] = mem[172 len 20]
        mem[mem[64] + 128] = 640
        _3873 = mem[(2 * ceil32(return_data.size)) + 736]
        mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
        mem[mem[64] + 704 len ceil32(_3873)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3873)]
        if ceil32(_3873) <= _3873:
            mem[mem[64] + 160] = ceil32(_3873) + 672
            mem[ceil32(_3873) + mem[64] + 704] = _1209
            mem[ceil32(_3873) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
            if ceil32(_1209) > _1209:
                mem[ceil32(_3873) + mem[64] + _1209 + 736] = 0
            mem[mem[64] + 192] = mem[256]
            mem[mem[64] + 224] = mem[288]
            mem[mem[64] + 256] = 0
            mem[mem[64] + 288] = mem[352]
            mem[mem[64] + 320] = mem[384]
            mem[mem[64] + 352] = mem[416]
            mem[mem[64] + 384] = mem[448]
            mem[mem[64] + 416] = mem[480]
            mem[mem[64] + 448] = bool(mem[512])
            mem[mem[64] + 480] = bool(mem[544])
            mem[mem[64] + 512] = mem[576]
            mem[mem[64] + 544] = bool(mem[608])
            mem[mem[64] + 576] = mem[640]
            mem[mem[64] + 608] = mem[672]
            mem[mem[64] + 640] = mem[704]
            return 32, mem[mem[64] + 32], 
                   address(arg1),
                   mem[mem[64] + 96],
                   640,
                   ceil32(_3873) + 672,
                   mem[mem[64] + 192 len 64],
                   0,
                   mem[mem[64] + 288 len 288],
                   mem[640],
                   mem[672],
                   mem[704],
                   mem[mem[64] + 672 len ceil32(_3873) + 32],
                   _1209,
                   mem[mem[64] + ceil32(_3873) + 736 len ceil32(_1209)]
        mem[mem[64] + _3873 + 704] = 0
        mem[mem[64] + 160] = ceil32(_3873) + 672
        mem[ceil32(_3873) + mem[64] + 704] = _1209
        mem[ceil32(_3873) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
        if ceil32(_1209) > _1209:
            mem[ceil32(_3873) + mem[64] + _1209 + 736] = 0
        mem[mem[64] + 192] = mem[256]
        mem[mem[64] + 224] = mem[288]
        mem[mem[64] + 256] = 0
        mem[mem[64] + 288] = mem[352]
        mem[mem[64] + 320] = mem[384]
        mem[mem[64] + 352] = mem[416]
        mem[mem[64] + 384] = mem[448]
        mem[mem[64] + 416] = mem[480]
        mem[mem[64] + 448] = bool(mem[512])
        mem[mem[64] + 480] = bool(mem[544])
        mem[mem[64] + 512] = mem[576]
        mem[mem[64] + 544] = bool(mem[608])
        mem[mem[64] + 576] = mem[640]
        mem[mem[64] + 608] = mem[672]
        mem[mem[64] + 640] = mem[704]
        return 32, mem[mem[64] + 32], 
               address(arg1),
               mem[mem[64] + 96],
               640,
               ceil32(_3873) + 672,
               mem[mem[64] + 192 len 64],
               0,
               mem[mem[64] + 288 len 288],
               mem[640],
               mem[672],
               mem[704],
               mem[mem[64] + 672 len _3873 + 32],
               0,
               mem[mem[64] + _3873 + 736 len ceil32(_1209) + ceil32(_3873) - _3873]
    mem[_1205 + ceil32(return_data.size) + _1209 + 32] = 0
    mem[224] = _1205 + ceil32(return_data.size)
    require ext_code.size(arg1)
    staticcall arg1.createTime() with:
            gas gas_remaining wei
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3051 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    mem[256] = mem[_3051]
    require ext_code.size(arg1)
    staticcall arg1.endBlockNumber() with:
            gas gas_remaining wei
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3067 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    mem[288] = mem[_3067]
    require ext_code.size(arg1)
    staticcall arg1.endBlockNumber() with:
            gas gas_remaining wei
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3083 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    if block.number > mem[_3083]:
        mem[320] = 1
        require ext_code.size(arg1)
        staticcall arg1.ended() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3110 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_3110] == bool(mem[_3110])
        mem[608] = bool(mem[_3110])
        mem[mem[64] + 4] = 1
        require ext_code.size(arg1)
        staticcall arg1.proposals(uint256 rg1) with:
                gas gas_remaining wei
               args 1
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3142 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[352] = mem[_3142]
        mem[mem[64] + 4] = 2
        require ext_code.size(arg1)
        staticcall arg1.proposals(uint256 rg1) with:
                gas gas_remaining wei
               args 2
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3174 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[384] = mem[_3174]
        mem[mem[64] + 4] = arg1
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.ballotOf(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3206 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[416] = mem[_3206]
        mem[128] = arg1
        require ext_code.size(arg1)
        staticcall arg1.voters(address rg1) with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3238 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 128
        _3246 = mem[64]
        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
        mem[64] = mem[64] + 128
        mem[_3246] = mem[_3238]
        require mem[_3238 + 32] == bool(mem[_3238 + 32])
        mem[_3246 + 32] = mem[_3238 + 32]
        require mem[_3238 + 64] == mem[_3238 + 76 len 20]
        mem[_3246 + 64] = mem[_3238 + 64]
        mem[_3246 + 96] = mem[_3238 + 96]
        mem[544] = bool(mem[_3246 + 32])
        require ext_code.size(arg1)
        staticcall arg1.voters(address rg1) with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3310 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 128
        _3318 = mem[64]
        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
        mem[64] = mem[64] + 128
        mem[_3318] = mem[_3310]
        require mem[_3310 + 32] == bool(mem[_3310 + 32])
        mem[_3318 + 32] = mem[_3310 + 32]
        require mem[_3310 + 64] == mem[_3310 + 76 len 20]
        mem[_3318 + 64] = mem[_3310 + 64]
        mem[_3318 + 96] = mem[_3310 + 96]
        mem[576] = mem[_3318 + 96]
        require ext_code.size(arg1)
        staticcall arg1.voters(address rg1) with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3382 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 128
        _3390 = mem[64]
        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
        mem[64] = mem[64] + 128
        mem[_3390] = mem[_3382]
        require mem[_3382 + 32] == bool(mem[_3382 + 32])
        mem[_3390 + 32] = mem[_3382 + 32]
        require mem[_3382 + 64] == mem[_3382 + 76 len 20]
        mem[_3390 + 64] = mem[_3382 + 64]
        mem[_3390 + 96] = mem[_3382 + 96]
        mem[480] = mem[_3390]
        mem[mem[64] + 4] = arg1
        mem[mem[64] + 36] = msg.sender
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                gas gas_remaining wei
               args address(arg1), msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3454 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[512] = 1 == mem[_3454]
        mem[mem[64] + 4] = arg1
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.ballotTypes(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3486 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[448] = mem[_3486]
        mem[mem[64] + 4] = arg1
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.tokenBallots(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3518 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_3518] == mem[_3518 + 12 len 20]
        mem[160] = mem[_3518 + 12 len 20]
        require ext_code.size(arg1)
        staticcall arg1.value() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3550 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[640] = mem[_3550]
        if mem[448] != 1:
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[108 len 20]
            mem[mem[64] + 64] = arg1
            mem[mem[64] + 96] = mem[172 len 20]
            mem[mem[64] + 128] = 640
            _3666 = mem[(2 * ceil32(return_data.size)) + 736]
            mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
            mem[mem[64] + 704 len ceil32(_3666)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3666)]
            if ceil32(_3666) <= _3666:
                mem[mem[64] + 160] = ceil32(_3666) + 672
                mem[ceil32(_3666) + mem[64] + 704] = _1209
                mem[ceil32(_3666) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
                if ceil32(_1209) > _1209:
                    mem[ceil32(_3666) + mem[64] + _1209 + 736] = 0
                mem[mem[64] + 192] = mem[256]
                mem[mem[64] + 224] = mem[288]
                mem[mem[64] + 256] = 1
                mem[mem[64] + 288] = mem[352]
                mem[mem[64] + 320] = mem[384]
                mem[mem[64] + 352] = mem[416]
                mem[mem[64] + 384] = mem[448]
                mem[mem[64] + 416] = mem[480]
                mem[mem[64] + 448] = bool(mem[512])
                mem[mem[64] + 480] = bool(mem[544])
                mem[mem[64] + 512] = mem[576]
                mem[mem[64] + 544] = bool(mem[608])
                mem[mem[64] + 640] = 0
                return 32, mem[mem[64] + 32], 
                       address(arg1),
                       mem[mem[64] + 96],
                       640,
                       ceil32(_3666) + 672,
                       mem[mem[64] + 192 len 64],
                       1,
                       mem[mem[64] + 288 len 192],
                       bool(mem[544]),
                       mem[576],
                       mem[mem[64] + 544],
                       mem[640],
                       0,
                       0,
                       mem[mem[64] + 672 len ceil32(_3666) + 32],
                       _1209,
                       mem[mem[64] + ceil32(_3666) + 736 len ceil32(_1209)]
            mem[mem[64] + _3666 + 704] = 0
            mem[mem[64] + 160] = ceil32(_3666) + 672
            mem[ceil32(_3666) + mem[64] + 704] = _1209
            mem[ceil32(_3666) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
            if ceil32(_1209) > _1209:
                mem[ceil32(_3666) + mem[64] + _1209 + 736] = 0
            mem[mem[64] + 192] = mem[256]
            mem[mem[64] + 224] = mem[288]
            mem[mem[64] + 256] = 1
            mem[mem[64] + 288] = mem[352]
            mem[mem[64] + 320] = mem[384]
            mem[mem[64] + 352] = mem[416]
            mem[mem[64] + 384] = mem[448]
            mem[mem[64] + 416] = mem[480]
            mem[mem[64] + 448] = bool(mem[512])
            mem[mem[64] + 480] = bool(mem[544])
            mem[mem[64] + 512] = mem[576]
            mem[mem[64] + 544] = bool(mem[608])
            mem[mem[64] + 640] = 0
            return 32, mem[mem[64] + 32], 
                   address(arg1),
                   mem[mem[64] + 96],
                   640,
                   ceil32(_3666) + 672,
                   mem[mem[64] + 192 len 64],
                   1,
                   mem[mem[64] + 288 len 192],
                   bool(mem[544]),
                   mem[576],
                   mem[mem[64] + 544],
                   mem[640],
                   0,
                   0,
                   mem[mem[64] + 672 len _3666 + 32],
                   0,
                   mem[mem[64] + _3666 + 736 len ceil32(_1209) + ceil32(_3666) - _3666]
        mem[mem[64] + 4] = arg1
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.configBallots(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3610 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3630 = mem[_3610]
        mem[672] = mem[_3610]
        mem[mem[64] + 4] = _3630
        require ext_code.size(governanceAddress)
        staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                gas gas_remaining wei
               args _3630
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3670 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        mem[704] = mem[_3670]
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[108 len 20]
        mem[mem[64] + 64] = arg1
        mem[mem[64] + 96] = mem[172 len 20]
        mem[mem[64] + 128] = 640
        _3965 = mem[(2 * ceil32(return_data.size)) + 736]
        mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
        mem[mem[64] + 704 len ceil32(_3965)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3965)]
        if ceil32(_3965) <= _3965:
            mem[mem[64] + 160] = ceil32(_3965) + 672
            mem[ceil32(_3965) + mem[64] + 704] = _1209
            mem[ceil32(_3965) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
            if ceil32(_1209) > _1209:
                mem[ceil32(_3965) + mem[64] + _1209 + 736] = 0
            mem[mem[64] + 192] = mem[256]
            mem[mem[64] + 224] = mem[288]
            mem[mem[64] + 256] = 1
            mem[mem[64] + 288] = mem[352]
            mem[mem[64] + 320] = mem[384]
            mem[mem[64] + 352] = mem[416]
            mem[mem[64] + 384] = mem[448]
            mem[mem[64] + 416] = mem[480]
            mem[mem[64] + 448] = bool(mem[512])
            mem[mem[64] + 480] = bool(mem[544])
            mem[mem[64] + 512] = mem[576]
            mem[mem[64] + 544] = bool(mem[608])
            mem[mem[64] + 576] = mem[640]
            mem[mem[64] + 608] = mem[672]
            mem[mem[64] + 640] = mem[704]
            return 32, mem[mem[64] + 32], 
                   address(arg1),
                   mem[mem[64] + 96],
                   640,
                   ceil32(_3965) + 672,
                   mem[mem[64] + 192 len 64],
                   1,
                   mem[mem[64] + 288 len 288],
                   mem[640],
                   mem[672],
                   mem[704],
                   mem[mem[64] + 672 len ceil32(_3965) + 32],
                   _1209,
                   mem[mem[64] + ceil32(_3965) + 736 len ceil32(_1209)]
        mem[mem[64] + _3965 + 704] = 0
        mem[mem[64] + 160] = ceil32(_3965) + 672
        mem[ceil32(_3965) + mem[64] + 704] = _1209
        mem[ceil32(_3965) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
        if ceil32(_1209) > _1209:
            mem[ceil32(_3965) + mem[64] + _1209 + 736] = 0
        mem[mem[64] + 192] = mem[256]
        mem[mem[64] + 224] = mem[288]
        mem[mem[64] + 256] = 1
        mem[mem[64] + 288] = mem[352]
        mem[mem[64] + 320] = mem[384]
        mem[mem[64] + 352] = mem[416]
        mem[mem[64] + 384] = mem[448]
        mem[mem[64] + 416] = mem[480]
        mem[mem[64] + 448] = bool(mem[512])
        mem[mem[64] + 480] = bool(mem[544])
        mem[mem[64] + 512] = mem[576]
        mem[mem[64] + 544] = bool(mem[608])
        mem[mem[64] + 576] = mem[640]
        mem[mem[64] + 608] = mem[672]
        mem[mem[64] + 640] = mem[704]
        return 32, mem[mem[64] + 32], 
               address(arg1),
               mem[mem[64] + 96],
               640,
               ceil32(_3965) + 672,
               mem[mem[64] + 192 len 64],
               1,
               mem[mem[64] + 288 len 288],
               mem[640],
               mem[672],
               mem[704],
               mem[mem[64] + 672 len _3965 + 32],
               0,
               mem[mem[64] + _3965 + 736 len ceil32(_1209) + ceil32(_3965) - _3965]
    mem[320] = 0
    require ext_code.size(arg1)
    staticcall arg1.ended() with:
            gas gas_remaining wei
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3111 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    require mem[_3111] == bool(mem[_3111])
    mem[608] = bool(mem[_3111])
    mem[mem[64] + 4] = 1
    require ext_code.size(arg1)
    staticcall arg1.proposals(uint256 rg1) with:
            gas gas_remaining wei
           args 1
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3143 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    mem[352] = mem[_3143]
    mem[mem[64] + 4] = 2
    require ext_code.size(arg1)
    staticcall arg1.proposals(uint256 rg1) with:
            gas gas_remaining wei
           args 2
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3175 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    mem[384] = mem[_3175]
    mem[mem[64] + 4] = arg1
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.ballotOf(address rg1) with:
            gas gas_remaining wei
           args address(arg1)
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3207 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    mem[416] = mem[_3207]
    mem[128] = arg1
    require ext_code.size(arg1)
    staticcall arg1.voters(address rg1) with:
            gas gas_remaining wei
           args msg.sender
    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3239 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 128
    _3247 = mem[64]
    require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
    mem[64] = mem[64] + 128
    mem[_3247] = mem[_3239]
    require mem[_3239 + 32] == bool(mem[_3239 + 32])
    mem[_3247 + 32] = mem[_3239 + 32]
    require mem[_3239 + 64] == mem[_3239 + 76 len 20]
    mem[_3247 + 64] = mem[_3239 + 64]
    mem[_3247 + 96] = mem[_3239 + 96]
    mem[544] = bool(mem[_3247 + 32])
    require ext_code.size(arg1)
    staticcall arg1.voters(address rg1) with:
            gas gas_remaining wei
           args msg.sender
    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3311 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 128
    _3319 = mem[64]
    require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
    mem[64] = mem[64] + 128
    mem[_3319] = mem[_3311]
    require mem[_3311 + 32] == bool(mem[_3311 + 32])
    mem[_3319 + 32] = mem[_3311 + 32]
    require mem[_3311 + 64] == mem[_3311 + 76 len 20]
    mem[_3319 + 64] = mem[_3311 + 64]
    mem[_3319 + 96] = mem[_3311 + 96]
    mem[576] = mem[_3319 + 96]
    require ext_code.size(arg1)
    staticcall arg1.voters(address rg1) with:
            gas gas_remaining wei
           args msg.sender
    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3383 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 128
    _3391 = mem[64]
    require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
    mem[64] = mem[64] + 128
    mem[_3391] = mem[_3383]
    require mem[_3383 + 32] == bool(mem[_3383 + 32])
    mem[_3391 + 32] = mem[_3383 + 32]
    require mem[_3383 + 64] == mem[_3383 + 76 len 20]
    mem[_3391 + 64] = mem[_3383 + 64]
    mem[_3391 + 96] = mem[_3383 + 96]
    mem[480] = mem[_3391]
    mem[mem[64] + 4] = arg1
    mem[mem[64] + 36] = msg.sender
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
            gas gas_remaining wei
           args address(arg1), msg.sender
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3455 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    mem[512] = 1 == mem[_3455]
    mem[mem[64] + 4] = arg1
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.ballotTypes(address rg1) with:
            gas gas_remaining wei
           args address(arg1)
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3487 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    mem[448] = mem[_3487]
    mem[mem[64] + 4] = arg1
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.tokenBallots(address rg1) with:
            gas gas_remaining wei
           args address(arg1)
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3519 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    require mem[_3519] == mem[_3519 + 12 len 20]
    mem[160] = mem[_3519 + 12 len 20]
    require ext_code.size(arg1)
    staticcall arg1.value() with:
            gas gas_remaining wei
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3551 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    mem[640] = mem[_3551]
    if mem[448] != 1:
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[108 len 20]
        mem[mem[64] + 64] = arg1
        mem[mem[64] + 96] = mem[172 len 20]
        mem[mem[64] + 128] = 640
        _3667 = mem[(2 * ceil32(return_data.size)) + 736]
        mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
        mem[mem[64] + 704 len ceil32(_3667)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3667)]
        if ceil32(_3667) <= _3667:
            mem[mem[64] + 160] = ceil32(_3667) + 672
            mem[ceil32(_3667) + mem[64] + 704] = _1209
            mem[ceil32(_3667) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
            if ceil32(_1209) > _1209:
                mem[ceil32(_3667) + mem[64] + _1209 + 736] = 0
            mem[mem[64] + 192] = mem[256]
            mem[mem[64] + 224] = mem[288]
            mem[mem[64] + 256] = 0
            mem[mem[64] + 288] = mem[352]
            mem[mem[64] + 320] = mem[384]
            mem[mem[64] + 352] = mem[416]
            mem[mem[64] + 384] = mem[448]
            mem[mem[64] + 416] = mem[480]
            mem[mem[64] + 448] = bool(mem[512])
            mem[mem[64] + 480] = bool(mem[544])
            mem[mem[64] + 512] = mem[576]
            mem[mem[64] + 544] = bool(mem[608])
            mem[mem[64] + 640] = 0
            return 32, mem[mem[64] + 32], 
                   address(arg1),
                   mem[mem[64] + 96],
                   640,
                   ceil32(_3667) + 672,
                   mem[mem[64] + 192 len 64],
                   0,
                   mem[mem[64] + 288 len 192],
                   bool(mem[544]),
                   mem[576],
                   mem[mem[64] + 544],
                   mem[640],
                   0,
                   0,
                   mem[mem[64] + 672 len ceil32(_3667) + 32],
                   _1209,
                   mem[mem[64] + ceil32(_3667) + 736 len ceil32(_1209)]
        mem[mem[64] + _3667 + 704] = 0
        mem[mem[64] + 160] = ceil32(_3667) + 672
        mem[ceil32(_3667) + mem[64] + 704] = _1209
        mem[ceil32(_3667) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
        if ceil32(_1209) > _1209:
            mem[ceil32(_3667) + mem[64] + _1209 + 736] = 0
        mem[mem[64] + 192] = mem[256]
        mem[mem[64] + 224] = mem[288]
        mem[mem[64] + 256] = 0
        mem[mem[64] + 288] = mem[352]
        mem[mem[64] + 320] = mem[384]
        mem[mem[64] + 352] = mem[416]
        mem[mem[64] + 384] = mem[448]
        mem[mem[64] + 416] = mem[480]
        mem[mem[64] + 448] = bool(mem[512])
        mem[mem[64] + 480] = bool(mem[544])
        mem[mem[64] + 512] = mem[576]
        mem[mem[64] + 544] = bool(mem[608])
        mem[mem[64] + 640] = 0
        return 32, mem[mem[64] + 32], 
               address(arg1),
               mem[mem[64] + 96],
               640,
               ceil32(_3667) + 672,
               mem[mem[64] + 192 len 64],
               0,
               mem[mem[64] + 288 len 192],
               bool(mem[544]),
               mem[576],
               mem[mem[64] + 544],
               mem[640],
               0,
               0,
               mem[mem[64] + 672 len _3667 + 32],
               0,
               mem[mem[64] + _3667 + 736 len ceil32(_1209) + ceil32(_3667) - _3667]
    mem[mem[64] + 4] = arg1
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.configBallots(address rg1) with:
            gas gas_remaining wei
           args address(arg1)
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3611 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _3631 = mem[_3611]
    mem[672] = mem[_3611]
    mem[mem[64] + 4] = _3631
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
            gas gas_remaining wei
           args _3631
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _3671 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    mem[704] = mem[_3671]
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[108 len 20]
    mem[mem[64] + 64] = arg1
    mem[mem[64] + 96] = mem[172 len 20]
    mem[mem[64] + 128] = 640
    _3975 = mem[(2 * ceil32(return_data.size)) + 736]
    mem[mem[64] + 672] = mem[(2 * ceil32(return_data.size)) + 736]
    mem[mem[64] + 704 len ceil32(_3975)] = mem[(2 * ceil32(return_data.size)) + 768 len ceil32(_3975)]
    if ceil32(_3975) <= _3975:
        mem[mem[64] + 160] = ceil32(_3975) + 672
        mem[ceil32(_3975) + mem[64] + 704] = _1209
        mem[ceil32(_3975) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
        if ceil32(_1209) > _1209:
            mem[ceil32(_3975) + mem[64] + _1209 + 736] = 0
        mem[mem[64] + 192] = mem[256]
        mem[mem[64] + 224] = mem[288]
        mem[mem[64] + 256] = 0
        mem[mem[64] + 288] = mem[352]
        mem[mem[64] + 320] = mem[384]
        mem[mem[64] + 352] = mem[416]
        mem[mem[64] + 384] = mem[448]
        mem[mem[64] + 416] = mem[480]
        mem[mem[64] + 448] = bool(mem[512])
        mem[mem[64] + 480] = bool(mem[544])
        mem[mem[64] + 512] = mem[576]
        mem[mem[64] + 544] = bool(mem[608])
        mem[mem[64] + 576] = mem[640]
        mem[mem[64] + 608] = mem[672]
        mem[mem[64] + 640] = mem[704]
        return 32, mem[mem[64] + 32], 
               address(arg1),
               mem[mem[64] + 96],
               640,
               ceil32(_3975) + 672,
               mem[mem[64] + 192 len 64],
               0,
               mem[mem[64] + 288 len 288],
               mem[640],
               mem[672],
               mem[704],
               mem[mem[64] + 672 len ceil32(_3975) + 32],
               _1209,
               mem[mem[64] + ceil32(_3975) + 736 len ceil32(_1209)]
    mem[mem[64] + _3975 + 704] = 0
    mem[mem[64] + 160] = ceil32(_3975) + 672
    mem[ceil32(_3975) + mem[64] + 704] = _1209
    mem[ceil32(_3975) + mem[64] + 736 len ceil32(_1209)] = mem[_1205 + ceil32(return_data.size) + 32 len ceil32(_1209)]
    if ceil32(_1209) > _1209:
        mem[ceil32(_3975) + mem[64] + _1209 + 736] = 0
    mem[mem[64] + 192] = mem[256]
    mem[mem[64] + 224] = mem[288]
    mem[mem[64] + 256] = 0
    mem[mem[64] + 288] = mem[352]
    mem[mem[64] + 320] = mem[384]
    mem[mem[64] + 352] = mem[416]
    mem[mem[64] + 384] = mem[448]
    mem[mem[64] + 416] = mem[480]
    mem[mem[64] + 448] = bool(mem[512])
    mem[mem[64] + 480] = bool(mem[544])
    mem[mem[64] + 512] = mem[576]
    mem[mem[64] + 544] = bool(mem[608])
    mem[mem[64] + 576] = mem[640]
    mem[mem[64] + 608] = mem[672]
    mem[mem[64] + 640] = mem[704]
    return 32, mem[mem[64] + 32], 
           address(arg1),
           mem[mem[64] + 96],
           640,
           ceil32(_3975) + 672,
           mem[mem[64] + 192 len 64],
           0,
           mem[mem[64] + 288 len 288],
           mem[640],
           mem[672],
           mem[704],
           mem[mem[64] + 672 len _3975 + 32],
           0,
           mem[mem[64] + _3975 + 736 len ceil32(_1209) + ceil32(_3975) - _3975]
}

function queryProposalList() payable {
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.ballotCount() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] <= test266151307()
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128
    if not ext_call.return_data[0]:
        idx = 0
        while idx < ext_call.return_data[0]:
            mem[mem[64] + 4] = idx
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.ballots(uint256 rg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1426 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1431 = mem[_1426]
            require mem[_1426] == mem[_1426 + 12 len 20]
            _1443 = mem[64]
            mem[64] = mem[64] + 640
            mem[_1443] = 0
            mem[_1443 + 32] = 0
            mem[_1443 + 64] = 0
            mem[_1443 + 96] = 96
            mem[_1443 + 128] = 96
            mem[_1443 + 160] = 0
            mem[_1443 + 192] = 0
            mem[_1443 + 224] = 0
            mem[_1443 + 256] = 0
            mem[_1443 + 288] = 0
            mem[_1443 + 320] = 0
            mem[_1443 + 352] = 0
            mem[_1443 + 384] = 0
            mem[_1443 + 416] = 0
            mem[_1443 + 448] = 0
            mem[_1443 + 480] = 0
            mem[_1443 + 512] = 0
            mem[_1443 + 544] = 0
            mem[_1443 + 576] = 0
            mem[_1443 + 608] = 0
            require ext_code.size(address(_1431))
            staticcall address(_1431).proposer() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1448 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_1448] == mem[_1448 + 12 len 20]
            mem[_1443] = mem[_1448 + 12 len 20]
            mem[mem[64]] = 0xa59a98c00000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1431))
            staticcall address(_1431).subject() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1467 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1470 = mem[_1467]
            require mem[_1467] <= test266151307()
            require _1467 + mem[_1467] + 31 < _1467 + return_data.size
            _1485 = mem[_1467 + mem[_1467]]
            require mem[_1467 + mem[_1467]] <= test266151307()
            require ceil32(mem[_1467 + mem[_1467]]) + 32 >= 0 and _1467 + ceil32(return_data.size) + ceil32(mem[_1467 + mem[_1467]]) + 32 <= test266151307()
            mem[64] = _1467 + ceil32(return_data.size) + ceil32(mem[_1467 + mem[_1467]]) + 32
            mem[_1467 + ceil32(return_data.size)] = _1485
            require _1470 + _1485 + 32 <= return_data.size
            s = 0
            while s < _1485:
                mem[s + _1467 + ceil32(return_data.size) + 32] = mem[s + _1467 + _1470 + 32]
                s = s + 32
                continue 
            if ceil32(_1485) <= _1485:
                mem[_1443 + 96] = _1467 + ceil32(return_data.size)
                mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1431))
                staticcall address(_1431).content() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2862 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2867 = mem[_2862]
                require mem[_2862] <= test266151307()
                require _2862 + mem[_2862] + 31 < _2862 + return_data.size
                _2872 = mem[_2862 + mem[_2862]]
                require mem[_2862 + mem[_2862]] <= test266151307()
                require ceil32(mem[_2862 + mem[_2862]]) + 32 >= 0 and _2862 + ceil32(return_data.size) + ceil32(mem[_2862 + mem[_2862]]) + 32 <= test266151307()
                mem[64] = _2862 + ceil32(return_data.size) + ceil32(mem[_2862 + mem[_2862]]) + 32
                mem[_2862 + ceil32(return_data.size)] = _2872
                require _2867 + _2872 + 32 <= return_data.size
                s = 0
                while s < _2872:
                    mem[s + _2862 + ceil32(return_data.size) + 32] = mem[s + _2862 + _2867 + 32]
                    s = s + 32
                    continue 
                if ceil32(_2872) <= _2872:
                    mem[_1443 + 128] = _2862 + ceil32(return_data.size)
                    require ext_code.size(address(_1431))
                    staticcall address(_1431).createTime() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4282 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_1443 + 160] = mem[_4282]
                    require ext_code.size(address(_1431))
                    staticcall address(_1431).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4308 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_1443 + 192] = mem[_4308]
                    require ext_code.size(address(_1431))
                    staticcall address(_1431).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4366 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if block.number > mem[_4366]:
                        mem[_1443 + 224] = 1
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4420 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_4420] == bool(mem[_4420])
                        mem[_1443 + 512] = bool(mem[_4420])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4488 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 256] = mem[_4488]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4551 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 288] = mem[_4551]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4591 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 320] = mem[_4591]
                        mem[_1443 + 32] = address(_1431)
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4627 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4637 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4637] = mem[_4627]
                        require mem[_4627 + 32] == bool(mem[_4627 + 32])
                        mem[_4637 + 32] = mem[_4627 + 32]
                        require mem[_4627 + 64] == mem[_4627 + 76 len 20]
                        mem[_4637 + 64] = mem[_4627 + 64]
                        mem[_4637 + 96] = mem[_4627 + 96]
                        mem[_1443 + 448] = bool(mem[_4637 + 32])
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4730 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4750 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4750] = mem[_4730]
                        require mem[_4730 + 32] == bool(mem[_4730 + 32])
                        mem[_4750 + 32] = mem[_4730 + 32]
                        require mem[_4730 + 64] == mem[_4730 + 76 len 20]
                        mem[_4750 + 64] = mem[_4730 + 64]
                        mem[_4750 + 96] = mem[_4730 + 96]
                        mem[_1443 + 480] = mem[_4750 + 96]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4855 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4875 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4875] = mem[_4855]
                        require mem[_4855 + 32] == bool(mem[_4855 + 32])
                        mem[_4875 + 32] = mem[_4855 + 32]
                        require mem[_4855 + 64] == mem[_4855 + 76 len 20]
                        mem[_4875 + 64] = mem[_4855 + 64]
                        mem[_4875 + 96] = mem[_4855 + 96]
                        mem[_1443 + 384] = mem[_4875]
                        mem[mem[64] + 4] = address(_1431)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_1431), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4989 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 416] = 1 == mem[_4989]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5053 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 352] = mem[_5053]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5111 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5111] == mem[_5111 + 12 len 20]
                        mem[_1443 + 64] = mem[_5111 + 12 len 20]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5193 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 544] = mem[_5193]
                        if 1 == mem[_1443 + 352]:
                            mem[mem[64] + 4] = address(_1431)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_1431)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5273 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5299 = mem[_5273]
                            mem[_1443 + 576] = mem[_5273]
                            mem[mem[64] + 4] = _5299
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _5299
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5351 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1443 + 608] = mem[_5351]
                    else:
                        mem[_1443 + 224] = 0
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4421 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_4421] == bool(mem[_4421])
                        mem[_1443 + 512] = bool(mem[_4421])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4489 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 256] = mem[_4489]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4552 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 288] = mem[_4552]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4592 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 320] = mem[_4592]
                        mem[_1443 + 32] = address(_1431)
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4628 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4638 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4638] = mem[_4628]
                        require mem[_4628 + 32] == bool(mem[_4628 + 32])
                        mem[_4638 + 32] = mem[_4628 + 32]
                        require mem[_4628 + 64] == mem[_4628 + 76 len 20]
                        mem[_4638 + 64] = mem[_4628 + 64]
                        mem[_4638 + 96] = mem[_4628 + 96]
                        mem[_1443 + 448] = bool(mem[_4638 + 32])
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4731 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4751 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4751] = mem[_4731]
                        require mem[_4731 + 32] == bool(mem[_4731 + 32])
                        mem[_4751 + 32] = mem[_4731 + 32]
                        require mem[_4731 + 64] == mem[_4731 + 76 len 20]
                        mem[_4751 + 64] = mem[_4731 + 64]
                        mem[_4751 + 96] = mem[_4731 + 96]
                        mem[_1443 + 480] = mem[_4751 + 96]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4856 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4876 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4876] = mem[_4856]
                        require mem[_4856 + 32] == bool(mem[_4856 + 32])
                        mem[_4876 + 32] = mem[_4856 + 32]
                        require mem[_4856 + 64] == mem[_4856 + 76 len 20]
                        mem[_4876 + 64] = mem[_4856 + 64]
                        mem[_4876 + 96] = mem[_4856 + 96]
                        mem[_1443 + 384] = mem[_4876]
                        mem[mem[64] + 4] = address(_1431)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_1431), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4990 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 416] = 1 == mem[_4990]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5054 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 352] = mem[_5054]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5112 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5112] == mem[_5112 + 12 len 20]
                        mem[_1443 + 64] = mem[_5112 + 12 len 20]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5194 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 544] = mem[_5194]
                        if 1 == mem[_1443 + 352]:
                            mem[mem[64] + 4] = address(_1431)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_1431)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5274 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5300 = mem[_5274]
                            mem[_1443 + 576] = mem[_5274]
                            mem[mem[64] + 4] = _5300
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _5300
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5352 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1443 + 608] = mem[_5352]
                else:
                    mem[_2862 + ceil32(return_data.size) + _2872 + 32] = 0
                    mem[_1443 + 128] = _2862 + ceil32(return_data.size)
                    require ext_code.size(address(_1431))
                    staticcall address(_1431).createTime() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4285 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_1443 + 160] = mem[_4285]
                    require ext_code.size(address(_1431))
                    staticcall address(_1431).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4317 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_1443 + 192] = mem[_4317]
                    require ext_code.size(address(_1431))
                    staticcall address(_1431).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4372 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if block.number > mem[_4372]:
                        mem[_1443 + 224] = 1
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4424 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_4424] == bool(mem[_4424])
                        mem[_1443 + 512] = bool(mem[_4424])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4499 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 256] = mem[_4499]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4555 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 288] = mem[_4555]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4596 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 320] = mem[_4596]
                        mem[_1443 + 32] = address(_1431)
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4631 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4641 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4641] = mem[_4631]
                        require mem[_4631 + 32] == bool(mem[_4631 + 32])
                        mem[_4641 + 32] = mem[_4631 + 32]
                        require mem[_4631 + 64] == mem[_4631 + 76 len 20]
                        mem[_4641 + 64] = mem[_4631 + 64]
                        mem[_4641 + 96] = mem[_4631 + 96]
                        mem[_1443 + 448] = bool(mem[_4641 + 32])
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4738 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4756 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4756] = mem[_4738]
                        require mem[_4738 + 32] == bool(mem[_4738 + 32])
                        mem[_4756 + 32] = mem[_4738 + 32]
                        require mem[_4738 + 64] == mem[_4738 + 76 len 20]
                        mem[_4756 + 64] = mem[_4738 + 64]
                        mem[_4756 + 96] = mem[_4738 + 96]
                        mem[_1443 + 480] = mem[_4756 + 96]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4863 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4883 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4883] = mem[_4863]
                        require mem[_4863 + 32] == bool(mem[_4863 + 32])
                        mem[_4883 + 32] = mem[_4863 + 32]
                        require mem[_4863 + 64] == mem[_4863 + 76 len 20]
                        mem[_4883 + 64] = mem[_4863 + 64]
                        mem[_4883 + 96] = mem[_4863 + 96]
                        mem[_1443 + 384] = mem[_4883]
                        mem[mem[64] + 4] = address(_1431)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_1431), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4999 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 416] = 1 == mem[_4999]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5063 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 352] = mem[_5063]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5119 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5119] == mem[_5119 + 12 len 20]
                        mem[_1443 + 64] = mem[_5119 + 12 len 20]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5203 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 544] = mem[_5203]
                        if 1 == mem[_1443 + 352]:
                            mem[mem[64] + 4] = address(_1431)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_1431)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5287 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5307 = mem[_5287]
                            mem[_1443 + 576] = mem[_5287]
                            mem[mem[64] + 4] = _5307
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _5307
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5359 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1443 + 608] = mem[_5359]
                    else:
                        mem[_1443 + 224] = 0
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4425 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_4425] == bool(mem[_4425])
                        mem[_1443 + 512] = bool(mem[_4425])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4500 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 256] = mem[_4500]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4556 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 288] = mem[_4556]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4597 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 320] = mem[_4597]
                        mem[_1443 + 32] = address(_1431)
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4632 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4642 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4642] = mem[_4632]
                        require mem[_4632 + 32] == bool(mem[_4632 + 32])
                        mem[_4642 + 32] = mem[_4632 + 32]
                        require mem[_4632 + 64] == mem[_4632 + 76 len 20]
                        mem[_4642 + 64] = mem[_4632 + 64]
                        mem[_4642 + 96] = mem[_4632 + 96]
                        mem[_1443 + 448] = bool(mem[_4642 + 32])
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4739 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4757 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4757] = mem[_4739]
                        require mem[_4739 + 32] == bool(mem[_4739 + 32])
                        mem[_4757 + 32] = mem[_4739 + 32]
                        require mem[_4739 + 64] == mem[_4739 + 76 len 20]
                        mem[_4757 + 64] = mem[_4739 + 64]
                        mem[_4757 + 96] = mem[_4739 + 96]
                        mem[_1443 + 480] = mem[_4757 + 96]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4864 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4884 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4884] = mem[_4864]
                        require mem[_4864 + 32] == bool(mem[_4864 + 32])
                        mem[_4884 + 32] = mem[_4864 + 32]
                        require mem[_4864 + 64] == mem[_4864 + 76 len 20]
                        mem[_4884 + 64] = mem[_4864 + 64]
                        mem[_4884 + 96] = mem[_4864 + 96]
                        mem[_1443 + 384] = mem[_4884]
                        mem[mem[64] + 4] = address(_1431)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_1431), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5000 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 416] = 1 == mem[_5000]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5064 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 352] = mem[_5064]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5120 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5120] == mem[_5120 + 12 len 20]
                        mem[_1443 + 64] = mem[_5120 + 12 len 20]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5204 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 544] = mem[_5204]
                        if 1 == mem[_1443 + 352]:
                            mem[mem[64] + 4] = address(_1431)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_1431)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5288 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5308 = mem[_5288]
                            mem[_1443 + 576] = mem[_5288]
                            mem[mem[64] + 4] = _5308
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _5308
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5360 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1443 + 608] = mem[_5360]
            else:
                mem[_1467 + ceil32(return_data.size) + _1485 + 32] = 0
                mem[_1443 + 96] = _1467 + ceil32(return_data.size)
                mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1431))
                staticcall address(_1431).content() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2863 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2870 = mem[_2863]
                require mem[_2863] <= test266151307()
                require _2863 + mem[_2863] + 31 < _2863 + return_data.size
                _2874 = mem[_2863 + mem[_2863]]
                require mem[_2863 + mem[_2863]] <= test266151307()
                require ceil32(mem[_2863 + mem[_2863]]) + 32 >= 0 and _2863 + ceil32(return_data.size) + ceil32(mem[_2863 + mem[_2863]]) + 32 <= test266151307()
                mem[64] = _2863 + ceil32(return_data.size) + ceil32(mem[_2863 + mem[_2863]]) + 32
                mem[_2863 + ceil32(return_data.size)] = _2874
                require _2870 + _2874 + 32 <= return_data.size
                s = 0
                while s < _2874:
                    mem[s + _2863 + ceil32(return_data.size) + 32] = mem[s + _2863 + _2870 + 32]
                    s = s + 32
                    continue 
                if ceil32(_2874) <= _2874:
                    mem[_1443 + 128] = _2863 + ceil32(return_data.size)
                    require ext_code.size(address(_1431))
                    staticcall address(_1431).createTime() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4283 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_1443 + 160] = mem[_4283]
                    require ext_code.size(address(_1431))
                    staticcall address(_1431).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4309 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_1443 + 192] = mem[_4309]
                    require ext_code.size(address(_1431))
                    staticcall address(_1431).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4367 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if block.number > mem[_4367]:
                        mem[_1443 + 224] = 1
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4422 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_4422] == bool(mem[_4422])
                        mem[_1443 + 512] = bool(mem[_4422])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4490 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 256] = mem[_4490]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4553 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 288] = mem[_4553]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4593 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 320] = mem[_4593]
                        mem[_1443 + 32] = address(_1431)
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4629 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4639 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4639] = mem[_4629]
                        require mem[_4629 + 32] == bool(mem[_4629 + 32])
                        mem[_4639 + 32] = mem[_4629 + 32]
                        require mem[_4629 + 64] == mem[_4629 + 76 len 20]
                        mem[_4639 + 64] = mem[_4629 + 64]
                        mem[_4639 + 96] = mem[_4629 + 96]
                        mem[_1443 + 448] = bool(mem[_4639 + 32])
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4732 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4752 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4752] = mem[_4732]
                        require mem[_4732 + 32] == bool(mem[_4732 + 32])
                        mem[_4752 + 32] = mem[_4732 + 32]
                        require mem[_4732 + 64] == mem[_4732 + 76 len 20]
                        mem[_4752 + 64] = mem[_4732 + 64]
                        mem[_4752 + 96] = mem[_4732 + 96]
                        mem[_1443 + 480] = mem[_4752 + 96]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4857 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4877 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4877] = mem[_4857]
                        require mem[_4857 + 32] == bool(mem[_4857 + 32])
                        mem[_4877 + 32] = mem[_4857 + 32]
                        require mem[_4857 + 64] == mem[_4857 + 76 len 20]
                        mem[_4877 + 64] = mem[_4857 + 64]
                        mem[_4877 + 96] = mem[_4857 + 96]
                        mem[_1443 + 384] = mem[_4877]
                        mem[mem[64] + 4] = address(_1431)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_1431), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4991 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 416] = 1 == mem[_4991]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5055 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 352] = mem[_5055]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5113 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5113] == mem[_5113 + 12 len 20]
                        mem[_1443 + 64] = mem[_5113 + 12 len 20]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5195 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 544] = mem[_5195]
                        if 1 == mem[_1443 + 352]:
                            mem[mem[64] + 4] = address(_1431)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_1431)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5275 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5301 = mem[_5275]
                            mem[_1443 + 576] = mem[_5275]
                            mem[mem[64] + 4] = _5301
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _5301
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5353 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1443 + 608] = mem[_5353]
                    else:
                        mem[_1443 + 224] = 0
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4423 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_4423] == bool(mem[_4423])
                        mem[_1443 + 512] = bool(mem[_4423])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4491 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 256] = mem[_4491]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4554 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 288] = mem[_4554]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4594 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 320] = mem[_4594]
                        mem[_1443 + 32] = address(_1431)
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4630 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4640 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4640] = mem[_4630]
                        require mem[_4630 + 32] == bool(mem[_4630 + 32])
                        mem[_4640 + 32] = mem[_4630 + 32]
                        require mem[_4630 + 64] == mem[_4630 + 76 len 20]
                        mem[_4640 + 64] = mem[_4630 + 64]
                        mem[_4640 + 96] = mem[_4630 + 96]
                        mem[_1443 + 448] = bool(mem[_4640 + 32])
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4733 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4753 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4753] = mem[_4733]
                        require mem[_4733 + 32] == bool(mem[_4733 + 32])
                        mem[_4753 + 32] = mem[_4733 + 32]
                        require mem[_4733 + 64] == mem[_4733 + 76 len 20]
                        mem[_4753 + 64] = mem[_4733 + 64]
                        mem[_4753 + 96] = mem[_4733 + 96]
                        mem[_1443 + 480] = mem[_4753 + 96]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4858 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4878 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4878] = mem[_4858]
                        require mem[_4858 + 32] == bool(mem[_4858 + 32])
                        mem[_4878 + 32] = mem[_4858 + 32]
                        require mem[_4858 + 64] == mem[_4858 + 76 len 20]
                        mem[_4878 + 64] = mem[_4858 + 64]
                        mem[_4878 + 96] = mem[_4858 + 96]
                        mem[_1443 + 384] = mem[_4878]
                        mem[mem[64] + 4] = address(_1431)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_1431), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4992 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 416] = 1 == mem[_4992]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5056 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 352] = mem[_5056]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5114 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5114] == mem[_5114 + 12 len 20]
                        mem[_1443 + 64] = mem[_5114 + 12 len 20]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5196 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 544] = mem[_5196]
                        if 1 == mem[_1443 + 352]:
                            mem[mem[64] + 4] = address(_1431)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_1431)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5276 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5302 = mem[_5276]
                            mem[_1443 + 576] = mem[_5276]
                            mem[mem[64] + 4] = _5302
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _5302
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5354 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1443 + 608] = mem[_5354]
                else:
                    mem[_2863 + ceil32(return_data.size) + _2874 + 32] = 0
                    mem[_1443 + 128] = _2863 + ceil32(return_data.size)
                    require ext_code.size(address(_1431))
                    staticcall address(_1431).createTime() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4286 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_1443 + 160] = mem[_4286]
                    require ext_code.size(address(_1431))
                    staticcall address(_1431).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4318 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_1443 + 192] = mem[_4318]
                    require ext_code.size(address(_1431))
                    staticcall address(_1431).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4373 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if block.number > mem[_4373]:
                        mem[_1443 + 224] = 1
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4426 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_4426] == bool(mem[_4426])
                        mem[_1443 + 512] = bool(mem[_4426])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4501 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 256] = mem[_4501]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4557 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 288] = mem[_4557]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4598 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 320] = mem[_4598]
                        mem[_1443 + 32] = address(_1431)
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4633 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4643 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4643] = mem[_4633]
                        require mem[_4633 + 32] == bool(mem[_4633 + 32])
                        mem[_4643 + 32] = mem[_4633 + 32]
                        require mem[_4633 + 64] == mem[_4633 + 76 len 20]
                        mem[_4643 + 64] = mem[_4633 + 64]
                        mem[_4643 + 96] = mem[_4633 + 96]
                        mem[_1443 + 448] = bool(mem[_4643 + 32])
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4740 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4758 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4758] = mem[_4740]
                        require mem[_4740 + 32] == bool(mem[_4740 + 32])
                        mem[_4758 + 32] = mem[_4740 + 32]
                        require mem[_4740 + 64] == mem[_4740 + 76 len 20]
                        mem[_4758 + 64] = mem[_4740 + 64]
                        mem[_4758 + 96] = mem[_4740 + 96]
                        mem[_1443 + 480] = mem[_4758 + 96]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4865 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4885 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4885] = mem[_4865]
                        require mem[_4865 + 32] == bool(mem[_4865 + 32])
                        mem[_4885 + 32] = mem[_4865 + 32]
                        require mem[_4865 + 64] == mem[_4865 + 76 len 20]
                        mem[_4885 + 64] = mem[_4865 + 64]
                        mem[_4885 + 96] = mem[_4865 + 96]
                        mem[_1443 + 384] = mem[_4885]
                        mem[mem[64] + 4] = address(_1431)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_1431), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5001 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 416] = 1 == mem[_5001]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5065 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 352] = mem[_5065]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5121 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5121] == mem[_5121 + 12 len 20]
                        mem[_1443 + 64] = mem[_5121 + 12 len 20]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5205 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 544] = mem[_5205]
                        if 1 == mem[_1443 + 352]:
                            mem[mem[64] + 4] = address(_1431)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_1431)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5289 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5311 = mem[_5289]
                            mem[_1443 + 576] = mem[_5289]
                            mem[mem[64] + 4] = _5311
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _5311
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5361 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1443 + 608] = mem[_5361]
                    else:
                        mem[_1443 + 224] = 0
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4427 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_4427] == bool(mem[_4427])
                        mem[_1443 + 512] = bool(mem[_4427])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4502 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 256] = mem[_4502]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4558 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 288] = mem[_4558]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4599 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 320] = mem[_4599]
                        mem[_1443 + 32] = address(_1431)
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4634 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4644 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4644] = mem[_4634]
                        require mem[_4634 + 32] == bool(mem[_4634 + 32])
                        mem[_4644 + 32] = mem[_4634 + 32]
                        require mem[_4634 + 64] == mem[_4634 + 76 len 20]
                        mem[_4644 + 64] = mem[_4634 + 64]
                        mem[_4644 + 96] = mem[_4634 + 96]
                        mem[_1443 + 448] = bool(mem[_4644 + 32])
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4741 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4759 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4759] = mem[_4741]
                        require mem[_4741 + 32] == bool(mem[_4741 + 32])
                        mem[_4759 + 32] = mem[_4741 + 32]
                        require mem[_4741 + 64] == mem[_4741 + 76 len 20]
                        mem[_4759 + 64] = mem[_4741 + 64]
                        mem[_4759 + 96] = mem[_4741 + 96]
                        mem[_1443 + 480] = mem[_4759 + 96]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4866 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _4886 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_4886] = mem[_4866]
                        require mem[_4866 + 32] == bool(mem[_4866 + 32])
                        mem[_4886 + 32] = mem[_4866 + 32]
                        require mem[_4866 + 64] == mem[_4866 + 76 len 20]
                        mem[_4886 + 64] = mem[_4866 + 64]
                        mem[_4886 + 96] = mem[_4866 + 96]
                        mem[_1443 + 384] = mem[_4886]
                        mem[mem[64] + 4] = address(_1431)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_1431), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5002 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 416] = 1 == mem[_5002]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5066 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 352] = mem[_5066]
                        mem[mem[64] + 4] = address(_1431)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_1431)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5122 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5122] == mem[_5122 + 12 len 20]
                        mem[_1443 + 64] = mem[_5122 + 12 len 20]
                        require ext_code.size(address(_1431))
                        staticcall address(_1431).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5206 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1443 + 544] = mem[_5206]
                        if 1 == mem[_1443 + 352]:
                            mem[mem[64] + 4] = address(_1431)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_1431)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5290 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5312 = mem[_5290]
                            mem[_1443 + 576] = mem[_5290]
                            mem[mem[64] + 4] = _5312
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _5312
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5362 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1443 + 608] = mem[_5362]
            require ext_call.return_data[0] + -idx - 1 < mem[ceil32(return_data.size) + 96]
            mem[(32 * ext_call.return_data[0] + -idx - 1) + ceil32(return_data.size) + 128] = _1443
            idx = idx + 1
            continue 
        _1423 = mem[64]
        mem[mem[64]] = 32
        _1425 = mem[ceil32(return_data.size) + 96]
        mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
        idx = 0
        s = ceil32(return_data.size) + 128
        t = mem[64] + 64
        u = mem[64] + (32 * _1425) + 64
        while idx < _1425:
            mem[t] = u + -_1423 - 64
            _2851 = mem[s]
            mem[u] = mem[mem[s] + 12 len 20]
            mem[u + 32] = mem[_2851 + 44 len 20]
            mem[u + 64] = mem[_2851 + 76 len 20]
            _2866 = mem[_2851 + 96]
            mem[u + 96] = 640
            _2869 = mem[_2866]
            mem[u + 640] = mem[_2866]
            v = 0
            while v < _2869:
                mem[v + u + 672] = mem[v + _2866 + 32]
                v = v + 32
                continue 
            if ceil32(_2869) <= _2869:
                _4268 = mem[_2851 + 128]
                mem[u + 128] = ceil32(_2869) + 672
                _4274 = mem[_4268]
                mem[ceil32(_2869) + u + 672] = mem[_4268]
                v = 0
                while v < _4274:
                    mem[v + ceil32(_2869) + u + 704] = mem[v + _4268 + 32]
                    v = v + 32
                    continue 
                if ceil32(_4274) > _4274:
                    mem[ceil32(_2869) + u + _4274 + 704] = 0
                mem[u + 160] = mem[_2851 + 160]
                mem[u + 192] = mem[_2851 + 192]
                mem[u + 224] = bool(mem[_2851 + 224])
                mem[u + 256] = mem[_2851 + 256]
                mem[u + 288] = mem[_2851 + 288]
                mem[u + 320] = mem[_2851 + 320]
                mem[u + 352] = mem[_2851 + 352]
                mem[u + 384] = mem[_2851 + 384]
                mem[u + 416] = bool(mem[_2851 + 416])
                mem[u + 448] = bool(mem[_2851 + 448])
                mem[u + 480] = mem[_2851 + 480]
                mem[u + 512] = bool(mem[_2851 + 512])
                mem[u + 544] = mem[_2851 + 544]
                mem[u + 576] = mem[_2851 + 576]
                mem[u + 608] = mem[_2851 + 608]
                idx = idx + 1
                s = s + 32
                t = t + 32
                u = ceil32(_4274) + ceil32(_2869) + u + 704
                continue 
            mem[u + _2869 + 672] = 0
            _4275 = mem[_2851 + 128]
            mem[u + 128] = ceil32(_2869) + 672
            _4281 = mem[_4275]
            mem[ceil32(_2869) + u + 672] = mem[_4275]
            v = 0
            while v < _4281:
                mem[v + ceil32(_2869) + u + 704] = mem[v + _4275 + 32]
                v = v + 32
                continue 
            if ceil32(_4281) > _4281:
                mem[ceil32(_2869) + u + _4281 + 704] = 0
            mem[u + 160] = mem[_2851 + 160]
            mem[u + 192] = mem[_2851 + 192]
            mem[u + 224] = bool(mem[_2851 + 224])
            mem[u + 256] = mem[_2851 + 256]
            mem[u + 288] = mem[_2851 + 288]
            mem[u + 320] = mem[_2851 + 320]
            mem[u + 352] = mem[_2851 + 352]
            mem[u + 384] = mem[_2851 + 384]
            mem[u + 416] = bool(mem[_2851 + 416])
            mem[u + 448] = bool(mem[_2851 + 448])
            mem[u + 480] = mem[_2851 + 480]
            mem[u + 512] = bool(mem[_2851 + 512])
            mem[u + 544] = mem[_2851 + 544]
            mem[u + 576] = mem[_2851 + 576]
            mem[u + 608] = mem[_2851 + 608]
            idx = idx + 1
            s = s + 32
            t = t + 32
            u = ceil32(_4281) + ceil32(_2869) + u + 704
            continue 
    else:
        mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 768
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 160] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 192] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 224] = 96
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 256] = 96
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 288] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 320] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 352] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 384] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 416] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 448] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 480] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 512] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 544] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 576] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 608] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 640] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 672] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 704] = 0
        mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 736] = 0
        mem[var13001] = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128
        s = var13001
        idx = var13002
        while idx - 1:
            mem[64] = mem[64] + 640
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 160] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 192] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 224] = 96
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 256] = 96
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 288] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 320] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 352] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 384] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 416] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 448] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 480] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 512] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 544] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 576] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 608] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 640] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 672] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 704] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 736] = 0
            mem[s + 32] = ceil32(return_data.size) + (32 * ext_call.return_data[0]) + 128
            s = s + 32
            idx = idx - 1
            continue 
        idx = 0
        while idx < ext_call.return_data[0]:
            mem[mem[64] + 4] = idx
            require ext_code.size(governanceAddress)
            staticcall governanceAddress.ballots(uint256 rg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4280 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4289 = mem[_4280]
            require mem[_4280] == mem[_4280 + 12 len 20]
            _4331 = mem[64]
            mem[64] = mem[64] + 640
            mem[_4331] = 0
            mem[_4331 + 32] = 0
            mem[_4331 + 64] = 0
            mem[_4331 + 96] = 96
            mem[_4331 + 128] = 96
            mem[_4331 + 160] = 0
            mem[_4331 + 192] = 0
            mem[_4331 + 224] = 0
            mem[_4331 + 256] = 0
            mem[_4331 + 288] = 0
            mem[_4331 + 320] = 0
            mem[_4331 + 352] = 0
            mem[_4331 + 384] = 0
            mem[_4331 + 416] = 0
            mem[_4331 + 448] = 0
            mem[_4331 + 480] = 0
            mem[_4331 + 512] = 0
            mem[_4331 + 544] = 0
            mem[_4331 + 576] = 0
            mem[_4331 + 608] = 0
            require ext_code.size(address(_4289))
            staticcall address(_4289).proposer() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4368 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_4368] == mem[_4368 + 12 len 20]
            mem[_4331] = mem[_4368 + 12 len 20]
            mem[mem[64]] = 0xa59a98c00000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_4289))
            staticcall address(_4289).subject() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4429 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4439 = mem[_4429]
            require mem[_4429] <= test266151307()
            require _4429 + mem[_4429] + 31 < _4429 + return_data.size
            _4457 = mem[_4429 + mem[_4429]]
            require mem[_4429 + mem[_4429]] <= test266151307()
            require ceil32(mem[_4429 + mem[_4429]]) + 32 >= 0 and _4429 + ceil32(return_data.size) + ceil32(mem[_4429 + mem[_4429]]) + 32 <= test266151307()
            mem[64] = _4429 + ceil32(return_data.size) + ceil32(mem[_4429 + mem[_4429]]) + 32
            mem[_4429 + ceil32(return_data.size)] = _4457
            require _4439 + _4457 + 32 <= return_data.size
            s = 0
            while s < _4457:
                mem[s + _4429 + ceil32(return_data.size) + 32] = mem[s + _4429 + _4439 + 32]
                s = s + 32
                continue 
            if ceil32(_4457) <= _4457:
                mem[_4331 + 96] = _4429 + ceil32(return_data.size)
                mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_4289))
                staticcall address(_4289).content() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5689 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5706 = mem[_5689]
                require mem[_5689] <= test266151307()
                require _5689 + mem[_5689] + 31 < _5689 + return_data.size
                _5715 = mem[_5689 + mem[_5689]]
                require mem[_5689 + mem[_5689]] <= test266151307()
                require ceil32(mem[_5689 + mem[_5689]]) + 32 >= 0 and _5689 + ceil32(return_data.size) + ceil32(mem[_5689 + mem[_5689]]) + 32 <= test266151307()
                mem[64] = _5689 + ceil32(return_data.size) + ceil32(mem[_5689 + mem[_5689]]) + 32
                mem[_5689 + ceil32(return_data.size)] = _5715
                require _5706 + _5715 + 32 <= return_data.size
                s = 0
                while s < _5715:
                    mem[s + _5689 + ceil32(return_data.size) + 32] = mem[s + _5689 + _5706 + 32]
                    s = s + 32
                    continue 
                if ceil32(_5715) <= _5715:
                    mem[_4331 + 128] = _5689 + ceil32(return_data.size)
                    require ext_code.size(address(_4289))
                    staticcall address(_4289).createTime() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6427 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_4331 + 160] = mem[_6427]
                    require ext_code.size(address(_4289))
                    staticcall address(_4289).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6448 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_4331 + 192] = mem[_6448]
                    require ext_code.size(address(_4289))
                    staticcall address(_4289).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6500 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if block.number > mem[_6500]:
                        mem[_4331 + 224] = 1
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6545 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6545] == bool(mem[_6545])
                        mem[_4331 + 512] = bool(mem[_6545])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6577 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 256] = mem[_6577]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6609 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 288] = mem[_6609]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6641 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 320] = mem[_6641]
                        mem[_4331 + 32] = address(_4289)
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6673 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6681 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6681] = mem[_6673]
                        require mem[_6673 + 32] == bool(mem[_6673 + 32])
                        mem[_6681 + 32] = mem[_6673 + 32]
                        require mem[_6673 + 64] == mem[_6673 + 76 len 20]
                        mem[_6681 + 64] = mem[_6673 + 64]
                        mem[_6681 + 96] = mem[_6673 + 96]
                        mem[_4331 + 448] = bool(mem[_6681 + 32])
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6745 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6753 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6753] = mem[_6745]
                        require mem[_6745 + 32] == bool(mem[_6745 + 32])
                        mem[_6753 + 32] = mem[_6745 + 32]
                        require mem[_6745 + 64] == mem[_6745 + 76 len 20]
                        mem[_6753 + 64] = mem[_6745 + 64]
                        mem[_6753 + 96] = mem[_6745 + 96]
                        mem[_4331 + 480] = mem[_6753 + 96]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6817 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6825 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6825] = mem[_6817]
                        require mem[_6817 + 32] == bool(mem[_6817 + 32])
                        mem[_6825 + 32] = mem[_6817 + 32]
                        require mem[_6817 + 64] == mem[_6817 + 76 len 20]
                        mem[_6825 + 64] = mem[_6817 + 64]
                        mem[_6825 + 96] = mem[_6817 + 96]
                        mem[_4331 + 384] = mem[_6825]
                        mem[mem[64] + 4] = address(_4289)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_4289), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6889 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 416] = 1 == mem[_6889]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6921 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 352] = mem[_6921]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6953 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6953] == mem[_6953 + 12 len 20]
                        mem[_4331 + 64] = mem[_6953 + 12 len 20]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6985 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 544] = mem[_6985]
                        if 1 == mem[_4331 + 352]:
                            mem[mem[64] + 4] = address(_4289)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_4289)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7033 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _7041 = mem[_7033]
                            mem[_4331 + 576] = mem[_7033]
                            mem[mem[64] + 4] = _7041
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _7041
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7065 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_4331 + 608] = mem[_7065]
                    else:
                        mem[_4331 + 224] = 0
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6546 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6546] == bool(mem[_6546])
                        mem[_4331 + 512] = bool(mem[_6546])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6578 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 256] = mem[_6578]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6610 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 288] = mem[_6610]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6642 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 320] = mem[_6642]
                        mem[_4331 + 32] = address(_4289)
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6674 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6682 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6682] = mem[_6674]
                        require mem[_6674 + 32] == bool(mem[_6674 + 32])
                        mem[_6682 + 32] = mem[_6674 + 32]
                        require mem[_6674 + 64] == mem[_6674 + 76 len 20]
                        mem[_6682 + 64] = mem[_6674 + 64]
                        mem[_6682 + 96] = mem[_6674 + 96]
                        mem[_4331 + 448] = bool(mem[_6682 + 32])
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6746 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6754 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6754] = mem[_6746]
                        require mem[_6746 + 32] == bool(mem[_6746 + 32])
                        mem[_6754 + 32] = mem[_6746 + 32]
                        require mem[_6746 + 64] == mem[_6746 + 76 len 20]
                        mem[_6754 + 64] = mem[_6746 + 64]
                        mem[_6754 + 96] = mem[_6746 + 96]
                        mem[_4331 + 480] = mem[_6754 + 96]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6818 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6826 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6826] = mem[_6818]
                        require mem[_6818 + 32] == bool(mem[_6818 + 32])
                        mem[_6826 + 32] = mem[_6818 + 32]
                        require mem[_6818 + 64] == mem[_6818 + 76 len 20]
                        mem[_6826 + 64] = mem[_6818 + 64]
                        mem[_6826 + 96] = mem[_6818 + 96]
                        mem[_4331 + 384] = mem[_6826]
                        mem[mem[64] + 4] = address(_4289)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_4289), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6890 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 416] = 1 == mem[_6890]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6922 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 352] = mem[_6922]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6954 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6954] == mem[_6954 + 12 len 20]
                        mem[_4331 + 64] = mem[_6954 + 12 len 20]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6986 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 544] = mem[_6986]
                        if 1 == mem[_4331 + 352]:
                            mem[mem[64] + 4] = address(_4289)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_4289)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7034 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _7042 = mem[_7034]
                            mem[_4331 + 576] = mem[_7034]
                            mem[mem[64] + 4] = _7042
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _7042
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7066 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_4331 + 608] = mem[_7066]
                else:
                    mem[_5689 + ceil32(return_data.size) + _5715 + 32] = 0
                    mem[_4331 + 128] = _5689 + ceil32(return_data.size)
                    require ext_code.size(address(_4289))
                    staticcall address(_4289).createTime() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6429 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_4331 + 160] = mem[_6429]
                    require ext_code.size(address(_4289))
                    staticcall address(_4289).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6456 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_4331 + 192] = mem[_6456]
                    require ext_code.size(address(_4289))
                    staticcall address(_4289).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6505 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if block.number > mem[_6505]:
                        mem[_4331 + 224] = 1
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6549 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6549] == bool(mem[_6549])
                        mem[_4331 + 512] = bool(mem[_6549])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6581 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 256] = mem[_6581]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6613 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 288] = mem[_6613]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6645 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 320] = mem[_6645]
                        mem[_4331 + 32] = address(_4289)
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6677 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6685 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6685] = mem[_6677]
                        require mem[_6677 + 32] == bool(mem[_6677 + 32])
                        mem[_6685 + 32] = mem[_6677 + 32]
                        require mem[_6677 + 64] == mem[_6677 + 76 len 20]
                        mem[_6685 + 64] = mem[_6677 + 64]
                        mem[_6685 + 96] = mem[_6677 + 96]
                        mem[_4331 + 448] = bool(mem[_6685 + 32])
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6749 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6757 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6757] = mem[_6749]
                        require mem[_6749 + 32] == bool(mem[_6749 + 32])
                        mem[_6757 + 32] = mem[_6749 + 32]
                        require mem[_6749 + 64] == mem[_6749 + 76 len 20]
                        mem[_6757 + 64] = mem[_6749 + 64]
                        mem[_6757 + 96] = mem[_6749 + 96]
                        mem[_4331 + 480] = mem[_6757 + 96]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6821 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6829 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6829] = mem[_6821]
                        require mem[_6821 + 32] == bool(mem[_6821 + 32])
                        mem[_6829 + 32] = mem[_6821 + 32]
                        require mem[_6821 + 64] == mem[_6821 + 76 len 20]
                        mem[_6829 + 64] = mem[_6821 + 64]
                        mem[_6829 + 96] = mem[_6821 + 96]
                        mem[_4331 + 384] = mem[_6829]
                        mem[mem[64] + 4] = address(_4289)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_4289), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6893 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 416] = 1 == mem[_6893]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6925 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 352] = mem[_6925]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6957 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6957] == mem[_6957 + 12 len 20]
                        mem[_4331 + 64] = mem[_6957 + 12 len 20]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6989 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 544] = mem[_6989]
                        if 1 == mem[_4331 + 352]:
                            mem[mem[64] + 4] = address(_4289)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_4289)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7037 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _7047 = mem[_7037]
                            mem[_4331 + 576] = mem[_7037]
                            mem[mem[64] + 4] = _7047
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _7047
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7069 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_4331 + 608] = mem[_7069]
                    else:
                        mem[_4331 + 224] = 0
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6550 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6550] == bool(mem[_6550])
                        mem[_4331 + 512] = bool(mem[_6550])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6582 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 256] = mem[_6582]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6614 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 288] = mem[_6614]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6646 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 320] = mem[_6646]
                        mem[_4331 + 32] = address(_4289)
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6678 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6686 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6686] = mem[_6678]
                        require mem[_6678 + 32] == bool(mem[_6678 + 32])
                        mem[_6686 + 32] = mem[_6678 + 32]
                        require mem[_6678 + 64] == mem[_6678 + 76 len 20]
                        mem[_6686 + 64] = mem[_6678 + 64]
                        mem[_6686 + 96] = mem[_6678 + 96]
                        mem[_4331 + 448] = bool(mem[_6686 + 32])
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6750 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6758 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6758] = mem[_6750]
                        require mem[_6750 + 32] == bool(mem[_6750 + 32])
                        mem[_6758 + 32] = mem[_6750 + 32]
                        require mem[_6750 + 64] == mem[_6750 + 76 len 20]
                        mem[_6758 + 64] = mem[_6750 + 64]
                        mem[_6758 + 96] = mem[_6750 + 96]
                        mem[_4331 + 480] = mem[_6758 + 96]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6822 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6830 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6830] = mem[_6822]
                        require mem[_6822 + 32] == bool(mem[_6822 + 32])
                        mem[_6830 + 32] = mem[_6822 + 32]
                        require mem[_6822 + 64] == mem[_6822 + 76 len 20]
                        mem[_6830 + 64] = mem[_6822 + 64]
                        mem[_6830 + 96] = mem[_6822 + 96]
                        mem[_4331 + 384] = mem[_6830]
                        mem[mem[64] + 4] = address(_4289)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_4289), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6894 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 416] = 1 == mem[_6894]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6926 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 352] = mem[_6926]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6958 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6958] == mem[_6958 + 12 len 20]
                        mem[_4331 + 64] = mem[_6958 + 12 len 20]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6990 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 544] = mem[_6990]
                        if 1 == mem[_4331 + 352]:
                            mem[mem[64] + 4] = address(_4289)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_4289)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7038 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _7048 = mem[_7038]
                            mem[_4331 + 576] = mem[_7038]
                            mem[mem[64] + 4] = _7048
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _7048
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7070 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_4331 + 608] = mem[_7070]
            else:
                mem[_4429 + ceil32(return_data.size) + _4457 + 32] = 0
                mem[_4331 + 96] = _4429 + ceil32(return_data.size)
                mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_4289))
                staticcall address(_4289).content() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5702 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5710 = mem[_5702]
                require mem[_5702] <= test266151307()
                require _5702 + mem[_5702] + 31 < _5702 + return_data.size
                _5720 = mem[_5702 + mem[_5702]]
                require mem[_5702 + mem[_5702]] <= test266151307()
                require ceil32(mem[_5702 + mem[_5702]]) + 32 >= 0 and _5702 + ceil32(return_data.size) + ceil32(mem[_5702 + mem[_5702]]) + 32 <= test266151307()
                mem[64] = _5702 + ceil32(return_data.size) + ceil32(mem[_5702 + mem[_5702]]) + 32
                mem[_5702 + ceil32(return_data.size)] = _5720
                require _5710 + _5720 + 32 <= return_data.size
                s = 0
                while s < _5720:
                    mem[s + _5702 + ceil32(return_data.size) + 32] = mem[s + _5702 + _5710 + 32]
                    s = s + 32
                    continue 
                if ceil32(_5720) <= _5720:
                    mem[_4331 + 128] = _5702 + ceil32(return_data.size)
                    require ext_code.size(address(_4289))
                    staticcall address(_4289).createTime() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6428 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_4331 + 160] = mem[_6428]
                    require ext_code.size(address(_4289))
                    staticcall address(_4289).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6449 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_4331 + 192] = mem[_6449]
                    require ext_code.size(address(_4289))
                    staticcall address(_4289).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6501 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if block.number > mem[_6501]:
                        mem[_4331 + 224] = 1
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6547 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6547] == bool(mem[_6547])
                        mem[_4331 + 512] = bool(mem[_6547])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6579 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 256] = mem[_6579]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6611 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 288] = mem[_6611]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6643 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 320] = mem[_6643]
                        mem[_4331 + 32] = address(_4289)
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6675 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6683 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6683] = mem[_6675]
                        require mem[_6675 + 32] == bool(mem[_6675 + 32])
                        mem[_6683 + 32] = mem[_6675 + 32]
                        require mem[_6675 + 64] == mem[_6675 + 76 len 20]
                        mem[_6683 + 64] = mem[_6675 + 64]
                        mem[_6683 + 96] = mem[_6675 + 96]
                        mem[_4331 + 448] = bool(mem[_6683 + 32])
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6747 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6755 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6755] = mem[_6747]
                        require mem[_6747 + 32] == bool(mem[_6747 + 32])
                        mem[_6755 + 32] = mem[_6747 + 32]
                        require mem[_6747 + 64] == mem[_6747 + 76 len 20]
                        mem[_6755 + 64] = mem[_6747 + 64]
                        mem[_6755 + 96] = mem[_6747 + 96]
                        mem[_4331 + 480] = mem[_6755 + 96]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6819 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6827 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6827] = mem[_6819]
                        require mem[_6819 + 32] == bool(mem[_6819 + 32])
                        mem[_6827 + 32] = mem[_6819 + 32]
                        require mem[_6819 + 64] == mem[_6819 + 76 len 20]
                        mem[_6827 + 64] = mem[_6819 + 64]
                        mem[_6827 + 96] = mem[_6819 + 96]
                        mem[_4331 + 384] = mem[_6827]
                        mem[mem[64] + 4] = address(_4289)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_4289), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6891 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 416] = 1 == mem[_6891]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6923 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 352] = mem[_6923]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6955 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6955] == mem[_6955 + 12 len 20]
                        mem[_4331 + 64] = mem[_6955 + 12 len 20]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6987 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 544] = mem[_6987]
                        if 1 == mem[_4331 + 352]:
                            mem[mem[64] + 4] = address(_4289)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_4289)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7035 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _7043 = mem[_7035]
                            mem[_4331 + 576] = mem[_7035]
                            mem[mem[64] + 4] = _7043
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _7043
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7067 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_4331 + 608] = mem[_7067]
                    else:
                        mem[_4331 + 224] = 0
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6548 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6548] == bool(mem[_6548])
                        mem[_4331 + 512] = bool(mem[_6548])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6580 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 256] = mem[_6580]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6612 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 288] = mem[_6612]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6644 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 320] = mem[_6644]
                        mem[_4331 + 32] = address(_4289)
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6676 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6684 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6684] = mem[_6676]
                        require mem[_6676 + 32] == bool(mem[_6676 + 32])
                        mem[_6684 + 32] = mem[_6676 + 32]
                        require mem[_6676 + 64] == mem[_6676 + 76 len 20]
                        mem[_6684 + 64] = mem[_6676 + 64]
                        mem[_6684 + 96] = mem[_6676 + 96]
                        mem[_4331 + 448] = bool(mem[_6684 + 32])
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6748 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6756 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6756] = mem[_6748]
                        require mem[_6748 + 32] == bool(mem[_6748 + 32])
                        mem[_6756 + 32] = mem[_6748 + 32]
                        require mem[_6748 + 64] == mem[_6748 + 76 len 20]
                        mem[_6756 + 64] = mem[_6748 + 64]
                        mem[_6756 + 96] = mem[_6748 + 96]
                        mem[_4331 + 480] = mem[_6756 + 96]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6820 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6828 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6828] = mem[_6820]
                        require mem[_6820 + 32] == bool(mem[_6820 + 32])
                        mem[_6828 + 32] = mem[_6820 + 32]
                        require mem[_6820 + 64] == mem[_6820 + 76 len 20]
                        mem[_6828 + 64] = mem[_6820 + 64]
                        mem[_6828 + 96] = mem[_6820 + 96]
                        mem[_4331 + 384] = mem[_6828]
                        mem[mem[64] + 4] = address(_4289)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_4289), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6892 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 416] = 1 == mem[_6892]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6924 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 352] = mem[_6924]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6956 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6956] == mem[_6956 + 12 len 20]
                        mem[_4331 + 64] = mem[_6956 + 12 len 20]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6988 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 544] = mem[_6988]
                        if 1 == mem[_4331 + 352]:
                            mem[mem[64] + 4] = address(_4289)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_4289)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7036 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _7044 = mem[_7036]
                            mem[_4331 + 576] = mem[_7036]
                            mem[mem[64] + 4] = _7044
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _7044
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7068 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_4331 + 608] = mem[_7068]
                else:
                    mem[_5702 + ceil32(return_data.size) + _5720 + 32] = 0
                    mem[_4331 + 128] = _5702 + ceil32(return_data.size)
                    require ext_code.size(address(_4289))
                    staticcall address(_4289).createTime() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6430 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_4331 + 160] = mem[_6430]
                    require ext_code.size(address(_4289))
                    staticcall address(_4289).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6457 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_4331 + 192] = mem[_6457]
                    require ext_code.size(address(_4289))
                    staticcall address(_4289).endBlockNumber() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6506 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if block.number > mem[_6506]:
                        mem[_4331 + 224] = 1
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6551 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6551] == bool(mem[_6551])
                        mem[_4331 + 512] = bool(mem[_6551])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6583 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 256] = mem[_6583]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6615 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 288] = mem[_6615]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6647 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 320] = mem[_6647]
                        mem[_4331 + 32] = address(_4289)
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6679 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6687 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6687] = mem[_6679]
                        require mem[_6679 + 32] == bool(mem[_6679 + 32])
                        mem[_6687 + 32] = mem[_6679 + 32]
                        require mem[_6679 + 64] == mem[_6679 + 76 len 20]
                        mem[_6687 + 64] = mem[_6679 + 64]
                        mem[_6687 + 96] = mem[_6679 + 96]
                        mem[_4331 + 448] = bool(mem[_6687 + 32])
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6751 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6759 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6759] = mem[_6751]
                        require mem[_6751 + 32] == bool(mem[_6751 + 32])
                        mem[_6759 + 32] = mem[_6751 + 32]
                        require mem[_6751 + 64] == mem[_6751 + 76 len 20]
                        mem[_6759 + 64] = mem[_6751 + 64]
                        mem[_6759 + 96] = mem[_6751 + 96]
                        mem[_4331 + 480] = mem[_6759 + 96]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6823 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6831 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6831] = mem[_6823]
                        require mem[_6823 + 32] == bool(mem[_6823 + 32])
                        mem[_6831 + 32] = mem[_6823 + 32]
                        require mem[_6823 + 64] == mem[_6823 + 76 len 20]
                        mem[_6831 + 64] = mem[_6823 + 64]
                        mem[_6831 + 96] = mem[_6823 + 96]
                        mem[_4331 + 384] = mem[_6831]
                        mem[mem[64] + 4] = address(_4289)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_4289), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6895 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 416] = 1 == mem[_6895]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6927 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 352] = mem[_6927]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6959 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6959] == mem[_6959 + 12 len 20]
                        mem[_4331 + 64] = mem[_6959 + 12 len 20]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6991 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 544] = mem[_6991]
                        if 1 == mem[_4331 + 352]:
                            mem[mem[64] + 4] = address(_4289)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_4289)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7039 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _7051 = mem[_7039]
                            mem[_4331 + 576] = mem[_7039]
                            mem[mem[64] + 4] = _7051
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _7051
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7071 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_4331 + 608] = mem[_7071]
                    else:
                        mem[_4331 + 224] = 0
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).ended() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6552 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6552] == bool(mem[_6552])
                        mem[_4331 + 512] = bool(mem[_6552])
                        mem[mem[64] + 4] = 1
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6584 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 256] = mem[_6584]
                        mem[mem[64] + 4] = 2
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).proposals(uint256 rg1) with:
                                gas gas_remaining wei
                               args 2
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6616 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 288] = mem[_6616]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotOf(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6648 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 320] = mem[_6648]
                        mem[_4331 + 32] = address(_4289)
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6680 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6688 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6688] = mem[_6680]
                        require mem[_6680 + 32] == bool(mem[_6680 + 32])
                        mem[_6688 + 32] = mem[_6680 + 32]
                        require mem[_6680 + 64] == mem[_6680 + 76 len 20]
                        mem[_6688 + 64] = mem[_6680 + 64]
                        mem[_6688 + 96] = mem[_6680 + 96]
                        mem[_4331 + 448] = bool(mem[_6688 + 32])
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6752 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6760 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6760] = mem[_6752]
                        require mem[_6752 + 32] == bool(mem[_6752 + 32])
                        mem[_6760 + 32] = mem[_6752 + 32]
                        require mem[_6752 + 64] == mem[_6752 + 76 len 20]
                        mem[_6760 + 64] = mem[_6752 + 64]
                        mem[_6760 + 96] = mem[_6752 + 96]
                        mem[_4331 + 480] = mem[_6760 + 96]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).voters(address rg1) with:
                                gas gas_remaining wei
                               args msg.sender
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6824 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6832 = mem[64]
                        require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                        mem[64] = mem[64] + 128
                        mem[_6832] = mem[_6824]
                        require mem[_6824 + 32] == bool(mem[_6824 + 32])
                        mem[_6832 + 32] = mem[_6824 + 32]
                        require mem[_6824 + 64] == mem[_6824 + 76 len 20]
                        mem[_6832 + 64] = mem[_6824 + 64]
                        mem[_6832 + 96] = mem[_6824 + 96]
                        mem[_4331 + 384] = mem[_6832]
                        mem[mem[64] + 4] = address(_4289)
                        mem[mem[64] + 36] = msg.sender
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(_4289), msg.sender
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6896 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 416] = 1 == mem[_6896]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.ballotTypes(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6928 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 352] = mem[_6928]
                        mem[mem[64] + 4] = address(_4289)
                        require ext_code.size(governanceAddress)
                        staticcall governanceAddress.tokenBallots(address rg1) with:
                                gas gas_remaining wei
                               args address(_4289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6960 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6960] == mem[_6960 + 12 len 20]
                        mem[_4331 + 64] = mem[_6960 + 12 len 20]
                        require ext_code.size(address(_4289))
                        staticcall address(_4289).value() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6992 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_4331 + 544] = mem[_6992]
                        if 1 == mem[_4331 + 352]:
                            mem[mem[64] + 4] = address(_4289)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.configBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_4289)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7040 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _7052 = mem[_7040]
                            mem[_4331 + 576] = mem[_7040]
                            mem[mem[64] + 4] = _7052
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                    gas gas_remaining wei
                                   args _7052
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7072 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_4331 + 608] = mem[_7072]
            require ext_call.return_data[0] + -idx - 1 < mem[ceil32(return_data.size) + 96]
            mem[(32 * ext_call.return_data[0] + -idx - 1) + ceil32(return_data.size) + 128] = _4331
            idx = idx + 1
            continue 
        _4266 = mem[64]
        mem[mem[64]] = 32
        _4273 = mem[ceil32(return_data.size) + 96]
        mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
        idx = 0
        s = ceil32(return_data.size) + 128
        t = mem[64] + 64
        u = mem[64] + (32 * _4273) + 64
        while idx < _4273:
            mem[t] = u + -_4266 - 64
            _5655 = mem[s]
            mem[u] = mem[mem[s] + 12 len 20]
            mem[u + 32] = mem[_5655 + 44 len 20]
            mem[u + 64] = mem[_5655 + 76 len 20]
            _5705 = mem[_5655 + 96]
            mem[u + 96] = 640
            _5709 = mem[_5705]
            mem[u + 640] = mem[_5705]
            v = 0
            while v < _5709:
                mem[v + u + 672] = mem[v + _5705 + 32]
                v = v + 32
                continue 
            if ceil32(_5709) <= _5709:
                _6415 = mem[_5655 + 128]
                mem[u + 128] = ceil32(_5709) + 672
                _6420 = mem[_6415]
                mem[ceil32(_5709) + u + 672] = mem[_6415]
                v = 0
                while v < _6420:
                    mem[v + ceil32(_5709) + u + 704] = mem[v + _6415 + 32]
                    v = v + 32
                    continue 
                if ceil32(_6420) > _6420:
                    mem[ceil32(_5709) + u + _6420 + 704] = 0
                mem[u + 160] = mem[_5655 + 160]
                mem[u + 192] = mem[_5655 + 192]
                mem[u + 224] = bool(mem[_5655 + 224])
                mem[u + 256] = mem[_5655 + 256]
                mem[u + 288] = mem[_5655 + 288]
                mem[u + 320] = mem[_5655 + 320]
                mem[u + 352] = mem[_5655 + 352]
                mem[u + 384] = mem[_5655 + 384]
                mem[u + 416] = bool(mem[_5655 + 416])
                mem[u + 448] = bool(mem[_5655 + 448])
                mem[u + 480] = mem[_5655 + 480]
                mem[u + 512] = bool(mem[_5655 + 512])
                mem[u + 544] = mem[_5655 + 544]
                mem[u + 576] = mem[_5655 + 576]
                mem[u + 608] = mem[_5655 + 608]
                idx = idx + 1
                s = s + 32
                t = t + 32
                u = ceil32(_6420) + ceil32(_5709) + u + 704
                continue 
            mem[u + _5709 + 672] = 0
            _6421 = mem[_5655 + 128]
            mem[u + 128] = ceil32(_5709) + 672
            _6426 = mem[_6421]
            mem[ceil32(_5709) + u + 672] = mem[_6421]
            v = 0
            while v < _6426:
                mem[v + ceil32(_5709) + u + 704] = mem[v + _6421 + 32]
                v = v + 32
                continue 
            if ceil32(_6426) > _6426:
                mem[ceil32(_5709) + u + _6426 + 704] = 0
            mem[u + 160] = mem[_5655 + 160]
            mem[u + 192] = mem[_5655 + 192]
            mem[u + 224] = bool(mem[_5655 + 224])
            mem[u + 256] = mem[_5655 + 256]
            mem[u + 288] = mem[_5655 + 288]
            mem[u + 320] = mem[_5655 + 320]
            mem[u + 352] = mem[_5655 + 352]
            mem[u + 384] = mem[_5655 + 384]
            mem[u + 416] = bool(mem[_5655 + 416])
            mem[u + 448] = bool(mem[_5655 + 448])
            mem[u + 480] = mem[_5655 + 480]
            mem[u + 512] = bool(mem[_5655 + 512])
            mem[u + 544] = mem[_5655 + 544]
            mem[u + 576] = mem[_5655 + 576]
            mem[u + 608] = mem[_5655 + 608]
            idx = idx + 1
            s = s + 32
            t = t + 32
            u = ceil32(_6426) + ceil32(_5709) + u + 704
            continue 
    return memory
      from mem[64]
       len u - mem[64]
}

function iterateProposalList(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg1 > arg2:
        revert with 0, 'INVAID_PARAMTERS'
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.ballotCount() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if arg2 <= ext_call.return_data[0]:
        require arg2 - arg1 <= test266151307()
        mem[ceil32(return_data.size) + 96] = arg2 - arg1
        mem[64] = ceil32(return_data.size) + (32 * arg2 - arg1) + 128
        if not arg2 - arg1:
            idx = 0
            s = 0
            while idx < arg2 - arg1:
                mem[mem[64] + 4] = idx
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.ballots(uint256 rg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2701 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2709 = mem[_2701]
                require mem[_2701] == mem[_2701 + 12 len 20]
                _2734 = mem[64]
                mem[64] = mem[64] + 640
                mem[_2734] = 0
                mem[_2734 + 32] = 0
                mem[_2734 + 64] = 0
                mem[_2734 + 96] = 96
                mem[_2734 + 128] = 96
                mem[_2734 + 160] = 0
                mem[_2734 + 192] = 0
                mem[_2734 + 224] = 0
                mem[_2734 + 256] = 0
                mem[_2734 + 288] = 0
                mem[_2734 + 320] = 0
                mem[_2734 + 352] = 0
                mem[_2734 + 384] = 0
                mem[_2734 + 416] = 0
                mem[_2734 + 448] = 0
                mem[_2734 + 480] = 0
                mem[_2734 + 512] = 0
                mem[_2734 + 544] = 0
                mem[_2734 + 576] = 0
                mem[_2734 + 608] = 0
                require ext_code.size(address(_2709))
                staticcall address(_2709).proposer() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2745 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2745] == mem[_2745 + 12 len 20]
                mem[_2734] = mem[_2745 + 12 len 20]
                mem[mem[64]] = 0xa59a98c00000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_2709))
                staticcall address(_2709).subject() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2782 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2789 = mem[_2782]
                require mem[_2782] <= test266151307()
                require _2782 + mem[_2782] + 31 < _2782 + return_data.size
                _2813 = mem[_2782 + mem[_2782]]
                require mem[_2782 + mem[_2782]] <= test266151307()
                require ceil32(mem[_2782 + mem[_2782]]) + 32 >= 0 and _2782 + ceil32(return_data.size) + ceil32(mem[_2782 + mem[_2782]]) + 32 <= test266151307()
                mem[64] = _2782 + ceil32(return_data.size) + ceil32(mem[_2782 + mem[_2782]]) + 32
                mem[_2782 + ceil32(return_data.size)] = _2813
                require _2789 + _2813 + 32 <= return_data.size
                t = 0
                while t < _2813:
                    mem[t + _2782 + ceil32(return_data.size) + 32] = mem[t + _2782 + _2789 + 32]
                    t = t + 32
                    continue 
                if ceil32(_2813) <= _2813:
                    mem[_2734 + 96] = _2782 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_2709))
                    staticcall address(_2709).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5572 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5582 = mem[_5572]
                    require mem[_5572] <= test266151307()
                    require _5572 + mem[_5572] + 31 < _5572 + return_data.size
                    _5593 = mem[_5572 + mem[_5572]]
                    require mem[_5572 + mem[_5572]] <= test266151307()
                    require ceil32(mem[_5572 + mem[_5572]]) + 32 >= 0 and _5572 + ceil32(return_data.size) + ceil32(mem[_5572 + mem[_5572]]) + 32 <= test266151307()
                    mem[64] = _5572 + ceil32(return_data.size) + ceil32(mem[_5572 + mem[_5572]]) + 32
                    mem[_5572 + ceil32(return_data.size)] = _5593
                    require _5582 + _5593 + 32 <= return_data.size
                    t = 0
                    while t < _5593:
                        mem[t + _5572 + ceil32(return_data.size) + 32] = mem[t + _5572 + _5582 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_5593) <= _5593:
                        mem[_2734 + 128] = _5572 + ceil32(return_data.size)
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8412 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 160] = mem[_8412]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8462 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 192] = mem[_8462]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8579 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8579]:
                            mem[_2734 + 224] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8689 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8689] == bool(mem[_8689])
                            mem[_2734 + 512] = bool(mem[_8689])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8825 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8825]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8951 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8951]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9031 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9031]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9103 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9123 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9123] = mem[_9103]
                            require mem[_9103 + 32] == bool(mem[_9103 + 32])
                            mem[_9123 + 32] = mem[_9103 + 32]
                            require mem[_9103 + 64] == mem[_9103 + 76 len 20]
                            mem[_9123 + 64] = mem[_9103 + 64]
                            mem[_9123 + 96] = mem[_9103 + 96]
                            mem[_2734 + 448] = bool(mem[_9123 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9309 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9349 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9349] = mem[_9309]
                            require mem[_9309 + 32] == bool(mem[_9309 + 32])
                            mem[_9349 + 32] = mem[_9309 + 32]
                            require mem[_9309 + 64] == mem[_9309 + 76 len 20]
                            mem[_9349 + 64] = mem[_9309 + 64]
                            mem[_9349 + 96] = mem[_9309 + 96]
                            mem[_2734 + 480] = mem[_9349 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9559 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9599 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9599] = mem[_9559]
                            require mem[_9559 + 32] == bool(mem[_9559 + 32])
                            mem[_9599 + 32] = mem[_9559 + 32]
                            require mem[_9559 + 64] == mem[_9559 + 76 len 20]
                            mem[_9599 + 64] = mem[_9559 + 64]
                            mem[_9599 + 96] = mem[_9559 + 96]
                            mem[_2734 + 384] = mem[_9599]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9827 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9827]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9955 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9955]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10071 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10071] == mem[_10071 + 12 len 20]
                            mem[_2734 + 64] = mem[_10071 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10235 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10235]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10395 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10447 = mem[_10395]
                                mem[_2734 + 576] = mem[_10395]
                                mem[mem[64] + 4] = _10447
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10447
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10551 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10551]
                        else:
                            mem[_2734 + 224] = 0
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8690 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8690] == bool(mem[_8690])
                            mem[_2734 + 512] = bool(mem[_8690])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8826 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8826]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8952 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8952]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9032 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9032]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9104 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9124 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9124] = mem[_9104]
                            require mem[_9104 + 32] == bool(mem[_9104 + 32])
                            mem[_9124 + 32] = mem[_9104 + 32]
                            require mem[_9104 + 64] == mem[_9104 + 76 len 20]
                            mem[_9124 + 64] = mem[_9104 + 64]
                            mem[_9124 + 96] = mem[_9104 + 96]
                            mem[_2734 + 448] = bool(mem[_9124 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9310 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9350 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9350] = mem[_9310]
                            require mem[_9310 + 32] == bool(mem[_9310 + 32])
                            mem[_9350 + 32] = mem[_9310 + 32]
                            require mem[_9310 + 64] == mem[_9310 + 76 len 20]
                            mem[_9350 + 64] = mem[_9310 + 64]
                            mem[_9350 + 96] = mem[_9310 + 96]
                            mem[_2734 + 480] = mem[_9350 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9560 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9600 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9600] = mem[_9560]
                            require mem[_9560 + 32] == bool(mem[_9560 + 32])
                            mem[_9600 + 32] = mem[_9560 + 32]
                            require mem[_9560 + 64] == mem[_9560 + 76 len 20]
                            mem[_9600 + 64] = mem[_9560 + 64]
                            mem[_9600 + 96] = mem[_9560 + 96]
                            mem[_2734 + 384] = mem[_9600]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9828 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9828]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9956 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9956]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10072 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10072] == mem[_10072 + 12 len 20]
                            mem[_2734 + 64] = mem[_10072 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10236 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10236]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10396 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10448 = mem[_10396]
                                mem[_2734 + 576] = mem[_10396]
                                mem[mem[64] + 4] = _10448
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10448
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10552 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10552]
                    else:
                        mem[_5572 + ceil32(return_data.size) + _5593 + 32] = 0
                        mem[_2734 + 128] = _5572 + ceil32(return_data.size)
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8419 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 160] = mem[_8419]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8477 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 192] = mem[_8477]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8590 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8590]:
                            mem[_2734 + 224] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8697 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8697] == bool(mem[_8697])
                            mem[_2734 + 512] = bool(mem[_8697])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8847 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8847]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8959 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8959]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9041 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9041]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9111 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9131 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9131] = mem[_9111]
                            require mem[_9111 + 32] == bool(mem[_9111 + 32])
                            mem[_9131 + 32] = mem[_9111 + 32]
                            require mem[_9111 + 64] == mem[_9111 + 76 len 20]
                            mem[_9131 + 64] = mem[_9111 + 64]
                            mem[_9131 + 96] = mem[_9111 + 96]
                            mem[_2734 + 448] = bool(mem[_9131 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9325 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9361 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9361] = mem[_9325]
                            require mem[_9325 + 32] == bool(mem[_9325 + 32])
                            mem[_9361 + 32] = mem[_9325 + 32]
                            require mem[_9325 + 64] == mem[_9325 + 76 len 20]
                            mem[_9361 + 64] = mem[_9325 + 64]
                            mem[_9361 + 96] = mem[_9325 + 96]
                            mem[_2734 + 480] = mem[_9361 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9575 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9615 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9615] = mem[_9575]
                            require mem[_9575 + 32] == bool(mem[_9575 + 32])
                            mem[_9615 + 32] = mem[_9575 + 32]
                            require mem[_9575 + 64] == mem[_9575 + 76 len 20]
                            mem[_9615 + 64] = mem[_9575 + 64]
                            mem[_9615 + 96] = mem[_9575 + 96]
                            mem[_2734 + 384] = mem[_9615]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9847 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9847]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9975 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9975]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10087 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10087] == mem[_10087 + 12 len 20]
                            mem[_2734 + 64] = mem[_10087 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10255 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10255]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10423 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10461 = mem[_10423]
                                mem[_2734 + 576] = mem[_10423]
                                mem[mem[64] + 4] = _10461
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10461
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10567 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10567]
                        else:
                            mem[_2734 + 224] = 0
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8698 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8698] == bool(mem[_8698])
                            mem[_2734 + 512] = bool(mem[_8698])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8848 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8848]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8960 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8960]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9042 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9042]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9112 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9132 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9132] = mem[_9112]
                            require mem[_9112 + 32] == bool(mem[_9112 + 32])
                            mem[_9132 + 32] = mem[_9112 + 32]
                            require mem[_9112 + 64] == mem[_9112 + 76 len 20]
                            mem[_9132 + 64] = mem[_9112 + 64]
                            mem[_9132 + 96] = mem[_9112 + 96]
                            mem[_2734 + 448] = bool(mem[_9132 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9326 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9362 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9362] = mem[_9326]
                            require mem[_9326 + 32] == bool(mem[_9326 + 32])
                            mem[_9362 + 32] = mem[_9326 + 32]
                            require mem[_9326 + 64] == mem[_9326 + 76 len 20]
                            mem[_9362 + 64] = mem[_9326 + 64]
                            mem[_9362 + 96] = mem[_9326 + 96]
                            mem[_2734 + 480] = mem[_9362 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9576 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9616 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9616] = mem[_9576]
                            require mem[_9576 + 32] == bool(mem[_9576 + 32])
                            mem[_9616 + 32] = mem[_9576 + 32]
                            require mem[_9576 + 64] == mem[_9576 + 76 len 20]
                            mem[_9616 + 64] = mem[_9576 + 64]
                            mem[_9616 + 96] = mem[_9576 + 96]
                            mem[_2734 + 384] = mem[_9616]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9848 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9848]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9976 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9976]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10088 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10088] == mem[_10088 + 12 len 20]
                            mem[_2734 + 64] = mem[_10088 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10256 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10256]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10424 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10462 = mem[_10424]
                                mem[_2734 + 576] = mem[_10424]
                                mem[mem[64] + 4] = _10462
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10462
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10568 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10568]
                else:
                    mem[_2782 + ceil32(return_data.size) + _2813 + 32] = 0
                    mem[_2734 + 96] = _2782 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_2709))
                    staticcall address(_2709).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5575 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5588 = mem[_5575]
                    require mem[_5575] <= test266151307()
                    require _5575 + mem[_5575] + 31 < _5575 + return_data.size
                    _5597 = mem[_5575 + mem[_5575]]
                    require mem[_5575 + mem[_5575]] <= test266151307()
                    require ceil32(mem[_5575 + mem[_5575]]) + 32 >= 0 and _5575 + ceil32(return_data.size) + ceil32(mem[_5575 + mem[_5575]]) + 32 <= test266151307()
                    mem[64] = _5575 + ceil32(return_data.size) + ceil32(mem[_5575 + mem[_5575]]) + 32
                    mem[_5575 + ceil32(return_data.size)] = _5597
                    require _5588 + _5597 + 32 <= return_data.size
                    t = 0
                    while t < _5597:
                        mem[t + _5575 + ceil32(return_data.size) + 32] = mem[t + _5575 + _5588 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_5597) <= _5597:
                        mem[_2734 + 128] = _5575 + ceil32(return_data.size)
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8413 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 160] = mem[_8413]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8463 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 192] = mem[_8463]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8580 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8580]:
                            mem[_2734 + 224] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8691 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8691] == bool(mem[_8691])
                            mem[_2734 + 512] = bool(mem[_8691])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8827 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8827]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8953 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8953]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9033 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9033]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9105 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9125 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9125] = mem[_9105]
                            require mem[_9105 + 32] == bool(mem[_9105 + 32])
                            mem[_9125 + 32] = mem[_9105 + 32]
                            require mem[_9105 + 64] == mem[_9105 + 76 len 20]
                            mem[_9125 + 64] = mem[_9105 + 64]
                            mem[_9125 + 96] = mem[_9105 + 96]
                            mem[_2734 + 448] = bool(mem[_9125 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9311 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9351 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9351] = mem[_9311]
                            require mem[_9311 + 32] == bool(mem[_9311 + 32])
                            mem[_9351 + 32] = mem[_9311 + 32]
                            require mem[_9311 + 64] == mem[_9311 + 76 len 20]
                            mem[_9351 + 64] = mem[_9311 + 64]
                            mem[_9351 + 96] = mem[_9311 + 96]
                            mem[_2734 + 480] = mem[_9351 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9561 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9601 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9601] = mem[_9561]
                            require mem[_9561 + 32] == bool(mem[_9561 + 32])
                            mem[_9601 + 32] = mem[_9561 + 32]
                            require mem[_9561 + 64] == mem[_9561 + 76 len 20]
                            mem[_9601 + 64] = mem[_9561 + 64]
                            mem[_9601 + 96] = mem[_9561 + 96]
                            mem[_2734 + 384] = mem[_9601]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9829 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9829]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9957 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9957]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10073 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10073] == mem[_10073 + 12 len 20]
                            mem[_2734 + 64] = mem[_10073 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10237 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10237]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10397 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10449 = mem[_10397]
                                mem[_2734 + 576] = mem[_10397]
                                mem[mem[64] + 4] = _10449
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10449
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10553 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10553]
                        else:
                            mem[_2734 + 224] = 0
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8692 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8692] == bool(mem[_8692])
                            mem[_2734 + 512] = bool(mem[_8692])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8828 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8828]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8954 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8954]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9034 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9034]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9106 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9126 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9126] = mem[_9106]
                            require mem[_9106 + 32] == bool(mem[_9106 + 32])
                            mem[_9126 + 32] = mem[_9106 + 32]
                            require mem[_9106 + 64] == mem[_9106 + 76 len 20]
                            mem[_9126 + 64] = mem[_9106 + 64]
                            mem[_9126 + 96] = mem[_9106 + 96]
                            mem[_2734 + 448] = bool(mem[_9126 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9312 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9352 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9352] = mem[_9312]
                            require mem[_9312 + 32] == bool(mem[_9312 + 32])
                            mem[_9352 + 32] = mem[_9312 + 32]
                            require mem[_9312 + 64] == mem[_9312 + 76 len 20]
                            mem[_9352 + 64] = mem[_9312 + 64]
                            mem[_9352 + 96] = mem[_9312 + 96]
                            mem[_2734 + 480] = mem[_9352 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9562 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9602 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9602] = mem[_9562]
                            require mem[_9562 + 32] == bool(mem[_9562 + 32])
                            mem[_9602 + 32] = mem[_9562 + 32]
                            require mem[_9562 + 64] == mem[_9562 + 76 len 20]
                            mem[_9602 + 64] = mem[_9562 + 64]
                            mem[_9602 + 96] = mem[_9562 + 96]
                            mem[_2734 + 384] = mem[_9602]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9830 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9830]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9958 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9958]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10074 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10074] == mem[_10074 + 12 len 20]
                            mem[_2734 + 64] = mem[_10074 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10238 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10238]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10398 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10450 = mem[_10398]
                                mem[_2734 + 576] = mem[_10398]
                                mem[mem[64] + 4] = _10450
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10450
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10554 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10554]
                    else:
                        mem[_5575 + ceil32(return_data.size) + _5597 + 32] = 0
                        mem[_2734 + 128] = _5575 + ceil32(return_data.size)
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8420 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 160] = mem[_8420]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8478 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 192] = mem[_8478]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8591 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8591]:
                            mem[_2734 + 224] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8699 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8699] == bool(mem[_8699])
                            mem[_2734 + 512] = bool(mem[_8699])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8849 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8849]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8961 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8961]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9043 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9043]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9113 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9133 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9133] = mem[_9113]
                            require mem[_9113 + 32] == bool(mem[_9113 + 32])
                            mem[_9133 + 32] = mem[_9113 + 32]
                            require mem[_9113 + 64] == mem[_9113 + 76 len 20]
                            mem[_9133 + 64] = mem[_9113 + 64]
                            mem[_9133 + 96] = mem[_9113 + 96]
                            mem[_2734 + 448] = bool(mem[_9133 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9327 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9363 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9363] = mem[_9327]
                            require mem[_9327 + 32] == bool(mem[_9327 + 32])
                            mem[_9363 + 32] = mem[_9327 + 32]
                            require mem[_9327 + 64] == mem[_9327 + 76 len 20]
                            mem[_9363 + 64] = mem[_9327 + 64]
                            mem[_9363 + 96] = mem[_9327 + 96]
                            mem[_2734 + 480] = mem[_9363 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9577 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9617 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9617] = mem[_9577]
                            require mem[_9577 + 32] == bool(mem[_9577 + 32])
                            mem[_9617 + 32] = mem[_9577 + 32]
                            require mem[_9577 + 64] == mem[_9577 + 76 len 20]
                            mem[_9617 + 64] = mem[_9577 + 64]
                            mem[_9617 + 96] = mem[_9577 + 96]
                            mem[_2734 + 384] = mem[_9617]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9849 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9849]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9977 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9977]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10089 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10089] == mem[_10089 + 12 len 20]
                            mem[_2734 + 64] = mem[_10089 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10257 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10257]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10425 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10465 = mem[_10425]
                                mem[_2734 + 576] = mem[_10425]
                                mem[mem[64] + 4] = _10465
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10465
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10569 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10569]
                        else:
                            mem[_2734 + 224] = 0
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8700 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8700] == bool(mem[_8700])
                            mem[_2734 + 512] = bool(mem[_8700])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8850 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8850]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8962 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8962]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9044 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9044]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9114 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9134 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9134] = mem[_9114]
                            require mem[_9114 + 32] == bool(mem[_9114 + 32])
                            mem[_9134 + 32] = mem[_9114 + 32]
                            require mem[_9114 + 64] == mem[_9114 + 76 len 20]
                            mem[_9134 + 64] = mem[_9114 + 64]
                            mem[_9134 + 96] = mem[_9114 + 96]
                            mem[_2734 + 448] = bool(mem[_9134 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9328 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9364 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9364] = mem[_9328]
                            require mem[_9328 + 32] == bool(mem[_9328 + 32])
                            mem[_9364 + 32] = mem[_9328 + 32]
                            require mem[_9328 + 64] == mem[_9328 + 76 len 20]
                            mem[_9364 + 64] = mem[_9328 + 64]
                            mem[_9364 + 96] = mem[_9328 + 96]
                            mem[_2734 + 480] = mem[_9364 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9578 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9618 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9618] = mem[_9578]
                            require mem[_9578 + 32] == bool(mem[_9578 + 32])
                            mem[_9618 + 32] = mem[_9578 + 32]
                            require mem[_9578 + 64] == mem[_9578 + 76 len 20]
                            mem[_9618 + 64] = mem[_9578 + 64]
                            mem[_9618 + 96] = mem[_9578 + 96]
                            mem[_2734 + 384] = mem[_9618]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9850 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9850]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9978 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9978]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10090 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10090] == mem[_10090 + 12 len 20]
                            mem[_2734 + 64] = mem[_10090 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10258 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10258]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10426 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10466 = mem[_10426]
                                mem[_2734 + 576] = mem[_10426]
                                mem[mem[64] + 4] = _10466
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10466
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10570 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10570]
                require s < mem[ceil32(return_data.size) + 96]
                mem[(32 * s) + ceil32(return_data.size) + 128] = _2734
                idx = idx + 1
                s = s + 1
                continue 
            _2695 = mem[64]
            mem[mem[64]] = 32
            _2699 = mem[ceil32(return_data.size) + 96]
            mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
            idx = 0
            s = ceil32(return_data.size) + 128
            t = mem[64] + 64
            u = mem[64] + (32 * _2699) + 64
            while idx < _2699:
                mem[t] = u + -_2695 - 64
                _5551 = mem[s]
                mem[u] = mem[mem[s] + 12 len 20]
                mem[u + 32] = mem[_5551 + 44 len 20]
                mem[u + 64] = mem[_5551 + 76 len 20]
                _5581 = mem[_5551 + 96]
                mem[u + 96] = 640
                _5587 = mem[_5581]
                mem[u + 640] = mem[_5581]
                v = 0
                while v < _5587:
                    mem[v + u + 672] = mem[v + _5581 + 32]
                    v = v + 32
                    continue 
                if ceil32(_5587) <= _5587:
                    _8385 = mem[_5551 + 128]
                    mem[u + 128] = ceil32(_5587) + 672
                    _8397 = mem[_8385]
                    mem[ceil32(_5587) + u + 672] = mem[_8385]
                    v = 0
                    while v < _8397:
                        mem[v + ceil32(_5587) + u + 704] = mem[v + _8385 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_8397) > _8397:
                        mem[ceil32(_5587) + u + _8397 + 704] = 0
                    mem[u + 160] = mem[_5551 + 160]
                    mem[u + 192] = mem[_5551 + 192]
                    mem[u + 224] = bool(mem[_5551 + 224])
                    mem[u + 256] = mem[_5551 + 256]
                    mem[u + 288] = mem[_5551 + 288]
                    mem[u + 320] = mem[_5551 + 320]
                    mem[u + 352] = mem[_5551 + 352]
                    mem[u + 384] = mem[_5551 + 384]
                    mem[u + 416] = bool(mem[_5551 + 416])
                    mem[u + 448] = bool(mem[_5551 + 448])
                    mem[u + 480] = mem[_5551 + 480]
                    mem[u + 512] = bool(mem[_5551 + 512])
                    mem[u + 544] = mem[_5551 + 544]
                    mem[u + 576] = mem[_5551 + 576]
                    mem[u + 608] = mem[_5551 + 608]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    u = ceil32(_8397) + ceil32(_5587) + u + 704
                    continue 
                mem[u + _5587 + 672] = 0
                _8398 = mem[_5551 + 128]
                mem[u + 128] = ceil32(_5587) + 672
                _8411 = mem[_8398]
                mem[ceil32(_5587) + u + 672] = mem[_8398]
                v = 0
                while v < _8411:
                    mem[v + ceil32(_5587) + u + 704] = mem[v + _8398 + 32]
                    v = v + 32
                    continue 
                if ceil32(_8411) > _8411:
                    mem[ceil32(_5587) + u + _8411 + 704] = 0
                mem[u + 160] = mem[_5551 + 160]
                mem[u + 192] = mem[_5551 + 192]
                mem[u + 224] = bool(mem[_5551 + 224])
                mem[u + 256] = mem[_5551 + 256]
                mem[u + 288] = mem[_5551 + 288]
                mem[u + 320] = mem[_5551 + 320]
                mem[u + 352] = mem[_5551 + 352]
                mem[u + 384] = mem[_5551 + 384]
                mem[u + 416] = bool(mem[_5551 + 416])
                mem[u + 448] = bool(mem[_5551 + 448])
                mem[u + 480] = mem[_5551 + 480]
                mem[u + 512] = bool(mem[_5551 + 512])
                mem[u + 544] = mem[_5551 + 544]
                mem[u + 576] = mem[_5551 + 576]
                mem[u + 608] = mem[_5551 + 608]
                idx = idx + 1
                s = s + 32
                t = t + 32
                u = ceil32(_8411) + ceil32(_5587) + u + 704
                continue 
        else:
            mem[64] = ceil32(return_data.size) + (32 * arg2 - arg1) + 768
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 128] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 160] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 192] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 224] = 96
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 256] = 96
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 288] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 320] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 352] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 384] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 416] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 448] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 480] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 512] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 544] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 576] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 608] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 640] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 672] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 704] = 0
            mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 736] = 0
            mem[var22001] = ceil32(return_data.size) + (32 * arg2 - arg1) + 128
            s = var22001
            idx = var22002
            while idx - 1:
                mem[64] = mem[64] + 640
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 128] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 160] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 192] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 224] = 96
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 256] = 96
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 288] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 320] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 352] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 384] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 416] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 448] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 480] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 512] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 544] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 576] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 608] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 640] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 672] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 704] = 0
                mem[ceil32(return_data.size) + (32 * arg2 - arg1) + 736] = 0
                mem[s + 32] = ceil32(return_data.size) + (32 * arg2 - arg1) + 128
                s = s + 32
                idx = idx - 1
                continue 
            idx = 0
            s = 0
            while idx < arg2 - arg1:
                mem[mem[64] + 4] = idx
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.ballots(uint256 rg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8403 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8423 = mem[_8403]
                require mem[_8403] == mem[_8403 + 12 len 20]
                _8499 = mem[64]
                mem[64] = mem[64] + 640
                mem[_8499] = 0
                mem[_8499 + 32] = 0
                mem[_8499 + 64] = 0
                mem[_8499 + 96] = 96
                mem[_8499 + 128] = 96
                mem[_8499 + 160] = 0
                mem[_8499 + 192] = 0
                mem[_8499 + 224] = 0
                mem[_8499 + 256] = 0
                mem[_8499 + 288] = 0
                mem[_8499 + 320] = 0
                mem[_8499 + 352] = 0
                mem[_8499 + 384] = 0
                mem[_8499 + 416] = 0
                mem[_8499 + 448] = 0
                mem[_8499 + 480] = 0
                mem[_8499 + 512] = 0
                mem[_8499 + 544] = 0
                mem[_8499 + 576] = 0
                mem[_8499 + 608] = 0
                require ext_code.size(address(_8423))
                staticcall address(_8423).proposer() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8581 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_8581] == mem[_8581 + 12 len 20]
                mem[_8499] = mem[_8581 + 12 len 20]
                mem[mem[64]] = 0xa59a98c00000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_8423))
                staticcall address(_8423).subject() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8702 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8723 = mem[_8702]
                require mem[_8702] <= test266151307()
                require _8702 + mem[_8702] + 31 < _8702 + return_data.size
                _8753 = mem[_8702 + mem[_8702]]
                require mem[_8702 + mem[_8702]] <= test266151307()
                require ceil32(mem[_8702 + mem[_8702]]) + 32 >= 0 and _8702 + ceil32(return_data.size) + ceil32(mem[_8702 + mem[_8702]]) + 32 <= test266151307()
                mem[64] = _8702 + ceil32(return_data.size) + ceil32(mem[_8702 + mem[_8702]]) + 32
                mem[_8702 + ceil32(return_data.size)] = _8753
                require _8723 + _8753 + 32 <= return_data.size
                t = 0
                while t < _8753:
                    mem[t + _8702 + ceil32(return_data.size) + 32] = mem[t + _8702 + _8723 + 32]
                    t = t + 32
                    continue 
                if ceil32(_8753) <= _8753:
                    mem[_8499 + 96] = _8702 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_8423))
                    staticcall address(_8423).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11214 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11258 = mem[_11214]
                    require mem[_11214] <= test266151307()
                    require _11214 + mem[_11214] + 31 < _11214 + return_data.size
                    _11275 = mem[_11214 + mem[_11214]]
                    require mem[_11214 + mem[_11214]] <= test266151307()
                    require ceil32(mem[_11214 + mem[_11214]]) + 32 >= 0 and _11214 + ceil32(return_data.size) + ceil32(mem[_11214 + mem[_11214]]) + 32 <= test266151307()
                    mem[64] = _11214 + ceil32(return_data.size) + ceil32(mem[_11214 + mem[_11214]]) + 32
                    mem[_11214 + ceil32(return_data.size)] = _11275
                    require _11258 + _11275 + 32 <= return_data.size
                    t = 0
                    while t < _11275:
                        mem[t + _11214 + ceil32(return_data.size) + 32] = mem[t + _11214 + _11258 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_11275) <= _11275:
                        mem[_8499 + 128] = _11214 + ceil32(return_data.size)
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12702 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 160] = mem[_12702]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12742 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 192] = mem[_12742]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12847 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12847]:
                            mem[_8499 + 224] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12939 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12939] == bool(mem[_12939])
                            mem[_8499 + 512] = bool(mem[_12939])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13003 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13003]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13067 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13067]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13131 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13131]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13195 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13211 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13211] = mem[_13195]
                            require mem[_13195 + 32] == bool(mem[_13195 + 32])
                            mem[_13211 + 32] = mem[_13195 + 32]
                            require mem[_13195 + 64] == mem[_13195 + 76 len 20]
                            mem[_13211 + 64] = mem[_13195 + 64]
                            mem[_13211 + 96] = mem[_13195 + 96]
                            mem[_8499 + 448] = bool(mem[_13211 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13339 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13355 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13355] = mem[_13339]
                            require mem[_13339 + 32] == bool(mem[_13339 + 32])
                            mem[_13355 + 32] = mem[_13339 + 32]
                            require mem[_13339 + 64] == mem[_13339 + 76 len 20]
                            mem[_13355 + 64] = mem[_13339 + 64]
                            mem[_13355 + 96] = mem[_13339 + 96]
                            mem[_8499 + 480] = mem[_13355 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13483 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13499 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13499] = mem[_13483]
                            require mem[_13483 + 32] == bool(mem[_13483 + 32])
                            mem[_13499 + 32] = mem[_13483 + 32]
                            require mem[_13483 + 64] == mem[_13483 + 76 len 20]
                            mem[_13499 + 64] = mem[_13483 + 64]
                            mem[_13499 + 96] = mem[_13483 + 96]
                            mem[_8499 + 384] = mem[_13499]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13627 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13627]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13691 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13691]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13755 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13755] == mem[_13755 + 12 len 20]
                            mem[_8499 + 64] = mem[_13755 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13819 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13819]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13915 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13931 = mem[_13915]
                                mem[_8499 + 576] = mem[_13915]
                                mem[mem[64] + 4] = _13931
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13931
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13979 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13979]
                        else:
                            mem[_8499 + 224] = 0
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12940 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12940] == bool(mem[_12940])
                            mem[_8499 + 512] = bool(mem[_12940])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13004 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13004]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13068 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13068]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13132 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13132]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13196 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13212 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13212] = mem[_13196]
                            require mem[_13196 + 32] == bool(mem[_13196 + 32])
                            mem[_13212 + 32] = mem[_13196 + 32]
                            require mem[_13196 + 64] == mem[_13196 + 76 len 20]
                            mem[_13212 + 64] = mem[_13196 + 64]
                            mem[_13212 + 96] = mem[_13196 + 96]
                            mem[_8499 + 448] = bool(mem[_13212 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13340 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13356 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13356] = mem[_13340]
                            require mem[_13340 + 32] == bool(mem[_13340 + 32])
                            mem[_13356 + 32] = mem[_13340 + 32]
                            require mem[_13340 + 64] == mem[_13340 + 76 len 20]
                            mem[_13356 + 64] = mem[_13340 + 64]
                            mem[_13356 + 96] = mem[_13340 + 96]
                            mem[_8499 + 480] = mem[_13356 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13484 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13500 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13500] = mem[_13484]
                            require mem[_13484 + 32] == bool(mem[_13484 + 32])
                            mem[_13500 + 32] = mem[_13484 + 32]
                            require mem[_13484 + 64] == mem[_13484 + 76 len 20]
                            mem[_13500 + 64] = mem[_13484 + 64]
                            mem[_13500 + 96] = mem[_13484 + 96]
                            mem[_8499 + 384] = mem[_13500]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13628 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13628]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13692 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13692]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13756 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13756] == mem[_13756 + 12 len 20]
                            mem[_8499 + 64] = mem[_13756 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13820 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13820]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13916 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13932 = mem[_13916]
                                mem[_8499 + 576] = mem[_13916]
                                mem[mem[64] + 4] = _13932
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13932
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13980 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13980]
                    else:
                        mem[_11214 + ceil32(return_data.size) + _11275 + 32] = 0
                        mem[_8499 + 128] = _11214 + ceil32(return_data.size)
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12707 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 160] = mem[_12707]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12755 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 192] = mem[_12755]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12856 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12856]:
                            mem[_8499 + 224] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12947 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12947] == bool(mem[_12947])
                            mem[_8499 + 512] = bool(mem[_12947])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13011 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13011]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13075 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13075]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13139 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13139]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13203 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13219 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13219] = mem[_13203]
                            require mem[_13203 + 32] == bool(mem[_13203 + 32])
                            mem[_13219 + 32] = mem[_13203 + 32]
                            require mem[_13203 + 64] == mem[_13203 + 76 len 20]
                            mem[_13219 + 64] = mem[_13203 + 64]
                            mem[_13219 + 96] = mem[_13203 + 96]
                            mem[_8499 + 448] = bool(mem[_13219 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13347 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13363 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13363] = mem[_13347]
                            require mem[_13347 + 32] == bool(mem[_13347 + 32])
                            mem[_13363 + 32] = mem[_13347 + 32]
                            require mem[_13347 + 64] == mem[_13347 + 76 len 20]
                            mem[_13363 + 64] = mem[_13347 + 64]
                            mem[_13363 + 96] = mem[_13347 + 96]
                            mem[_8499 + 480] = mem[_13363 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13491 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13507 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13507] = mem[_13491]
                            require mem[_13491 + 32] == bool(mem[_13491 + 32])
                            mem[_13507 + 32] = mem[_13491 + 32]
                            require mem[_13491 + 64] == mem[_13491 + 76 len 20]
                            mem[_13507 + 64] = mem[_13491 + 64]
                            mem[_13507 + 96] = mem[_13491 + 96]
                            mem[_8499 + 384] = mem[_13507]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13635 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13635]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13699 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13699]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13763 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13763] == mem[_13763 + 12 len 20]
                            mem[_8499 + 64] = mem[_13763 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13827 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13827]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13923 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13941 = mem[_13923]
                                mem[_8499 + 576] = mem[_13923]
                                mem[mem[64] + 4] = _13941
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13941
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13987 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13987]
                        else:
                            mem[_8499 + 224] = 0
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12948 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12948] == bool(mem[_12948])
                            mem[_8499 + 512] = bool(mem[_12948])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13012 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13012]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13076 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13076]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13140 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13140]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13204 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13220 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13220] = mem[_13204]
                            require mem[_13204 + 32] == bool(mem[_13204 + 32])
                            mem[_13220 + 32] = mem[_13204 + 32]
                            require mem[_13204 + 64] == mem[_13204 + 76 len 20]
                            mem[_13220 + 64] = mem[_13204 + 64]
                            mem[_13220 + 96] = mem[_13204 + 96]
                            mem[_8499 + 448] = bool(mem[_13220 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13348 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13364 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13364] = mem[_13348]
                            require mem[_13348 + 32] == bool(mem[_13348 + 32])
                            mem[_13364 + 32] = mem[_13348 + 32]
                            require mem[_13348 + 64] == mem[_13348 + 76 len 20]
                            mem[_13364 + 64] = mem[_13348 + 64]
                            mem[_13364 + 96] = mem[_13348 + 96]
                            mem[_8499 + 480] = mem[_13364 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13492 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13508 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13508] = mem[_13492]
                            require mem[_13492 + 32] == bool(mem[_13492 + 32])
                            mem[_13508 + 32] = mem[_13492 + 32]
                            require mem[_13492 + 64] == mem[_13492 + 76 len 20]
                            mem[_13508 + 64] = mem[_13492 + 64]
                            mem[_13508 + 96] = mem[_13492 + 96]
                            mem[_8499 + 384] = mem[_13508]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13636 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13636]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13700 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13700]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13764 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13764] == mem[_13764 + 12 len 20]
                            mem[_8499 + 64] = mem[_13764 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13828 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13828]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13924 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13942 = mem[_13924]
                                mem[_8499 + 576] = mem[_13924]
                                mem[mem[64] + 4] = _13942
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13942
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13988 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13988]
                else:
                    mem[_8702 + ceil32(return_data.size) + _8753 + 32] = 0
                    mem[_8499 + 96] = _8702 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_8423))
                    staticcall address(_8423).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11241 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11266 = mem[_11241]
                    require mem[_11241] <= test266151307()
                    require _11241 + mem[_11241] + 31 < _11241 + return_data.size
                    _11285 = mem[_11241 + mem[_11241]]
                    require mem[_11241 + mem[_11241]] <= test266151307()
                    require ceil32(mem[_11241 + mem[_11241]]) + 32 >= 0 and _11241 + ceil32(return_data.size) + ceil32(mem[_11241 + mem[_11241]]) + 32 <= test266151307()
                    mem[64] = _11241 + ceil32(return_data.size) + ceil32(mem[_11241 + mem[_11241]]) + 32
                    mem[_11241 + ceil32(return_data.size)] = _11285
                    require _11266 + _11285 + 32 <= return_data.size
                    t = 0
                    while t < _11285:
                        mem[t + _11241 + ceil32(return_data.size) + 32] = mem[t + _11241 + _11266 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_11285) <= _11285:
                        mem[_8499 + 128] = _11241 + ceil32(return_data.size)
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12703 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 160] = mem[_12703]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12743 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 192] = mem[_12743]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12848 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12848]:
                            mem[_8499 + 224] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12941 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12941] == bool(mem[_12941])
                            mem[_8499 + 512] = bool(mem[_12941])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13005 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13005]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13069 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13069]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13133 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13133]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13197 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13213 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13213] = mem[_13197]
                            require mem[_13197 + 32] == bool(mem[_13197 + 32])
                            mem[_13213 + 32] = mem[_13197 + 32]
                            require mem[_13197 + 64] == mem[_13197 + 76 len 20]
                            mem[_13213 + 64] = mem[_13197 + 64]
                            mem[_13213 + 96] = mem[_13197 + 96]
                            mem[_8499 + 448] = bool(mem[_13213 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13341 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13357 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13357] = mem[_13341]
                            require mem[_13341 + 32] == bool(mem[_13341 + 32])
                            mem[_13357 + 32] = mem[_13341 + 32]
                            require mem[_13341 + 64] == mem[_13341 + 76 len 20]
                            mem[_13357 + 64] = mem[_13341 + 64]
                            mem[_13357 + 96] = mem[_13341 + 96]
                            mem[_8499 + 480] = mem[_13357 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13485 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13501 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13501] = mem[_13485]
                            require mem[_13485 + 32] == bool(mem[_13485 + 32])
                            mem[_13501 + 32] = mem[_13485 + 32]
                            require mem[_13485 + 64] == mem[_13485 + 76 len 20]
                            mem[_13501 + 64] = mem[_13485 + 64]
                            mem[_13501 + 96] = mem[_13485 + 96]
                            mem[_8499 + 384] = mem[_13501]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13629 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13629]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13693 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13693]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13757 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13757] == mem[_13757 + 12 len 20]
                            mem[_8499 + 64] = mem[_13757 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13821 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13821]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13917 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13933 = mem[_13917]
                                mem[_8499 + 576] = mem[_13917]
                                mem[mem[64] + 4] = _13933
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13933
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13981 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13981]
                        else:
                            mem[_8499 + 224] = 0
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12942 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12942] == bool(mem[_12942])
                            mem[_8499 + 512] = bool(mem[_12942])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13006 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13006]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13070 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13070]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13134 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13134]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13198 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13214 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13214] = mem[_13198]
                            require mem[_13198 + 32] == bool(mem[_13198 + 32])
                            mem[_13214 + 32] = mem[_13198 + 32]
                            require mem[_13198 + 64] == mem[_13198 + 76 len 20]
                            mem[_13214 + 64] = mem[_13198 + 64]
                            mem[_13214 + 96] = mem[_13198 + 96]
                            mem[_8499 + 448] = bool(mem[_13214 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13342 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13358 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13358] = mem[_13342]
                            require mem[_13342 + 32] == bool(mem[_13342 + 32])
                            mem[_13358 + 32] = mem[_13342 + 32]
                            require mem[_13342 + 64] == mem[_13342 + 76 len 20]
                            mem[_13358 + 64] = mem[_13342 + 64]
                            mem[_13358 + 96] = mem[_13342 + 96]
                            mem[_8499 + 480] = mem[_13358 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13486 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13502 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13502] = mem[_13486]
                            require mem[_13486 + 32] == bool(mem[_13486 + 32])
                            mem[_13502 + 32] = mem[_13486 + 32]
                            require mem[_13486 + 64] == mem[_13486 + 76 len 20]
                            mem[_13502 + 64] = mem[_13486 + 64]
                            mem[_13502 + 96] = mem[_13486 + 96]
                            mem[_8499 + 384] = mem[_13502]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13630 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13630]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13694 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13694]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13758 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13758] == mem[_13758 + 12 len 20]
                            mem[_8499 + 64] = mem[_13758 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13822 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13822]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13918 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13934 = mem[_13918]
                                mem[_8499 + 576] = mem[_13918]
                                mem[mem[64] + 4] = _13934
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13934
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13982 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13982]
                    else:
                        mem[_11241 + ceil32(return_data.size) + _11285 + 32] = 0
                        mem[_8499 + 128] = _11241 + ceil32(return_data.size)
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12708 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 160] = mem[_12708]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12756 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 192] = mem[_12756]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12857 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12857]:
                            mem[_8499 + 224] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12949 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12949] == bool(mem[_12949])
                            mem[_8499 + 512] = bool(mem[_12949])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13013 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13013]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13077 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13077]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13141 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13141]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13205 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13221 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13221] = mem[_13205]
                            require mem[_13205 + 32] == bool(mem[_13205 + 32])
                            mem[_13221 + 32] = mem[_13205 + 32]
                            require mem[_13205 + 64] == mem[_13205 + 76 len 20]
                            mem[_13221 + 64] = mem[_13205 + 64]
                            mem[_13221 + 96] = mem[_13205 + 96]
                            mem[_8499 + 448] = bool(mem[_13221 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13349 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13365 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13365] = mem[_13349]
                            require mem[_13349 + 32] == bool(mem[_13349 + 32])
                            mem[_13365 + 32] = mem[_13349 + 32]
                            require mem[_13349 + 64] == mem[_13349 + 76 len 20]
                            mem[_13365 + 64] = mem[_13349 + 64]
                            mem[_13365 + 96] = mem[_13349 + 96]
                            mem[_8499 + 480] = mem[_13365 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13493 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13509 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13509] = mem[_13493]
                            require mem[_13493 + 32] == bool(mem[_13493 + 32])
                            mem[_13509 + 32] = mem[_13493 + 32]
                            require mem[_13493 + 64] == mem[_13493 + 76 len 20]
                            mem[_13509 + 64] = mem[_13493 + 64]
                            mem[_13509 + 96] = mem[_13493 + 96]
                            mem[_8499 + 384] = mem[_13509]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13637 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13637]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13701 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13701]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13765 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13765] == mem[_13765 + 12 len 20]
                            mem[_8499 + 64] = mem[_13765 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13829 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13829]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13925 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13945 = mem[_13925]
                                mem[_8499 + 576] = mem[_13925]
                                mem[mem[64] + 4] = _13945
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13945
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13989 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13989]
                        else:
                            mem[_8499 + 224] = 0
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12950 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12950] == bool(mem[_12950])
                            mem[_8499 + 512] = bool(mem[_12950])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13014 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13014]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13078 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13078]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13142 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13142]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13206 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13222 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13222] = mem[_13206]
                            require mem[_13206 + 32] == bool(mem[_13206 + 32])
                            mem[_13222 + 32] = mem[_13206 + 32]
                            require mem[_13206 + 64] == mem[_13206 + 76 len 20]
                            mem[_13222 + 64] = mem[_13206 + 64]
                            mem[_13222 + 96] = mem[_13206 + 96]
                            mem[_8499 + 448] = bool(mem[_13222 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13350 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13366 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13366] = mem[_13350]
                            require mem[_13350 + 32] == bool(mem[_13350 + 32])
                            mem[_13366 + 32] = mem[_13350 + 32]
                            require mem[_13350 + 64] == mem[_13350 + 76 len 20]
                            mem[_13366 + 64] = mem[_13350 + 64]
                            mem[_13366 + 96] = mem[_13350 + 96]
                            mem[_8499 + 480] = mem[_13366 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13494 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13510 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13510] = mem[_13494]
                            require mem[_13494 + 32] == bool(mem[_13494 + 32])
                            mem[_13510 + 32] = mem[_13494 + 32]
                            require mem[_13494 + 64] == mem[_13494 + 76 len 20]
                            mem[_13510 + 64] = mem[_13494 + 64]
                            mem[_13510 + 96] = mem[_13494 + 96]
                            mem[_8499 + 384] = mem[_13510]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13638 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13638]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13702 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13702]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13766 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13766] == mem[_13766 + 12 len 20]
                            mem[_8499 + 64] = mem[_13766 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13830 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13830]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13926 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13946 = mem[_13926]
                                mem[_8499 + 576] = mem[_13926]
                                mem[mem[64] + 4] = _13946
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13946
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13990 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13990]
                require s < mem[ceil32(return_data.size) + 96]
                mem[(32 * s) + ceil32(return_data.size) + 128] = _8499
                idx = idx + 1
                s = s + 1
                continue 
            _8381 = mem[64]
            mem[mem[64]] = 32
            _8390 = mem[ceil32(return_data.size) + 96]
            mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
            idx = 0
            s = ceil32(return_data.size) + 128
            t = mem[64] + 64
            u = mem[64] + (32 * _8390) + 64
            while idx < _8390:
                mem[t] = u + -_8381 - 64
                _11157 = mem[s]
                mem[u] = mem[mem[s] + 12 len 20]
                mem[u + 32] = mem[_11157 + 44 len 20]
                mem[u + 64] = mem[_11157 + 76 len 20]
                _11257 = mem[_11157 + 96]
                mem[u + 96] = 640
                _11265 = mem[_11257]
                mem[u + 640] = mem[_11257]
                v = 0
                while v < _11265:
                    mem[v + u + 672] = mem[v + _11257 + 32]
                    v = v + 32
                    continue 
                if ceil32(_11265) <= _11265:
                    _12679 = mem[_11157 + 128]
                    mem[u + 128] = ceil32(_11265) + 672
                    _12689 = mem[_12679]
                    mem[ceil32(_11265) + u + 672] = mem[_12679]
                    v = 0
                    while v < _12689:
                        mem[v + ceil32(_11265) + u + 704] = mem[v + _12679 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_12689) > _12689:
                        mem[ceil32(_11265) + u + _12689 + 704] = 0
                    mem[u + 160] = mem[_11157 + 160]
                    mem[u + 192] = mem[_11157 + 192]
                    mem[u + 224] = bool(mem[_11157 + 224])
                    mem[u + 256] = mem[_11157 + 256]
                    mem[u + 288] = mem[_11157 + 288]
                    mem[u + 320] = mem[_11157 + 320]
                    mem[u + 352] = mem[_11157 + 352]
                    mem[u + 384] = mem[_11157 + 384]
                    mem[u + 416] = bool(mem[_11157 + 416])
                    mem[u + 448] = bool(mem[_11157 + 448])
                    mem[u + 480] = mem[_11157 + 480]
                    mem[u + 512] = bool(mem[_11157 + 512])
                    mem[u + 544] = mem[_11157 + 544]
                    mem[u + 576] = mem[_11157 + 576]
                    mem[u + 608] = mem[_11157 + 608]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    u = ceil32(_12689) + ceil32(_11265) + u + 704
                    continue 
                mem[u + _11265 + 672] = 0
                _12690 = mem[_11157 + 128]
                mem[u + 128] = ceil32(_11265) + 672
                _12701 = mem[_12690]
                mem[ceil32(_11265) + u + 672] = mem[_12690]
                v = 0
                while v < _12701:
                    mem[v + ceil32(_11265) + u + 704] = mem[v + _12690 + 32]
                    v = v + 32
                    continue 
                if ceil32(_12701) > _12701:
                    mem[ceil32(_11265) + u + _12701 + 704] = 0
                mem[u + 160] = mem[_11157 + 160]
                mem[u + 192] = mem[_11157 + 192]
                mem[u + 224] = bool(mem[_11157 + 224])
                mem[u + 256] = mem[_11157 + 256]
                mem[u + 288] = mem[_11157 + 288]
                mem[u + 320] = mem[_11157 + 320]
                mem[u + 352] = mem[_11157 + 352]
                mem[u + 384] = mem[_11157 + 384]
                mem[u + 416] = bool(mem[_11157 + 416])
                mem[u + 448] = bool(mem[_11157 + 448])
                mem[u + 480] = mem[_11157 + 480]
                mem[u + 512] = bool(mem[_11157 + 512])
                mem[u + 544] = mem[_11157 + 544]
                mem[u + 576] = mem[_11157 + 576]
                mem[u + 608] = mem[_11157 + 608]
                idx = idx + 1
                s = s + 32
                t = t + 32
                u = ceil32(_12701) + ceil32(_11265) + u + 704
                continue 
    else:
        require ext_call.return_data[0] - arg1 <= test266151307()
        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0] - arg1
        mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128
        if not ext_call.return_data[0] - arg1:
            idx = 0
            s = 0
            while idx < ext_call.return_data[0] - arg1:
                mem[mem[64] + 4] = idx
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.ballots(uint256 rg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2702 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2712 = mem[_2702]
                require mem[_2702] == mem[_2702 + 12 len 20]
                _2736 = mem[64]
                mem[64] = mem[64] + 640
                mem[_2736] = 0
                mem[_2736 + 32] = 0
                mem[_2736 + 64] = 0
                mem[_2736 + 96] = 96
                mem[_2736 + 128] = 96
                mem[_2736 + 160] = 0
                mem[_2736 + 192] = 0
                mem[_2736 + 224] = 0
                mem[_2736 + 256] = 0
                mem[_2736 + 288] = 0
                mem[_2736 + 320] = 0
                mem[_2736 + 352] = 0
                mem[_2736 + 384] = 0
                mem[_2736 + 416] = 0
                mem[_2736 + 448] = 0
                mem[_2736 + 480] = 0
                mem[_2736 + 512] = 0
                mem[_2736 + 544] = 0
                mem[_2736 + 576] = 0
                mem[_2736 + 608] = 0
                require ext_code.size(address(_2712))
                staticcall address(_2712).proposer() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2747 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2747] == mem[_2747 + 12 len 20]
                mem[_2736] = mem[_2747 + 12 len 20]
                mem[mem[64]] = 0xa59a98c00000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_2712))
                staticcall address(_2712).subject() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2784 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2792 = mem[_2784]
                require mem[_2784] <= test266151307()
                require _2784 + mem[_2784] + 31 < _2784 + return_data.size
                _2820 = mem[_2784 + mem[_2784]]
                require mem[_2784 + mem[_2784]] <= test266151307()
                require ceil32(mem[_2784 + mem[_2784]]) + 32 >= 0 and _2784 + ceil32(return_data.size) + ceil32(mem[_2784 + mem[_2784]]) + 32 <= test266151307()
                mem[64] = _2784 + ceil32(return_data.size) + ceil32(mem[_2784 + mem[_2784]]) + 32
                mem[_2784 + ceil32(return_data.size)] = _2820
                require _2792 + _2820 + 32 <= return_data.size
                t = 0
                while t < _2820:
                    mem[t + _2784 + ceil32(return_data.size) + 32] = mem[t + _2784 + _2792 + 32]
                    t = t + 32
                    continue 
                if ceil32(_2820) <= _2820:
                    mem[_2736 + 96] = _2784 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_2712))
                    staticcall address(_2712).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5574 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5585 = mem[_5574]
                    require mem[_5574] <= test266151307()
                    require _5574 + mem[_5574] + 31 < _5574 + return_data.size
                    _5595 = mem[_5574 + mem[_5574]]
                    require mem[_5574 + mem[_5574]] <= test266151307()
                    require ceil32(mem[_5574 + mem[_5574]]) + 32 >= 0 and _5574 + ceil32(return_data.size) + ceil32(mem[_5574 + mem[_5574]]) + 32 <= test266151307()
                    mem[64] = _5574 + ceil32(return_data.size) + ceil32(mem[_5574 + mem[_5574]]) + 32
                    mem[_5574 + ceil32(return_data.size)] = _5595
                    require _5585 + _5595 + 32 <= return_data.size
                    t = 0
                    while t < _5595:
                        mem[t + _5574 + ceil32(return_data.size) + 32] = mem[t + _5574 + _5585 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_5595) <= _5595:
                        mem[_2736 + 128] = _5574 + ceil32(return_data.size)
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8416 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 160] = mem[_8416]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8468 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 192] = mem[_8468]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8584 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8584]:
                            mem[_2736 + 224] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8693 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8693] == bool(mem[_8693])
                            mem[_2736 + 512] = bool(mem[_8693])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8836 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8836]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8955 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8955]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9036 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9036]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9107 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9127 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9127] = mem[_9107]
                            require mem[_9107 + 32] == bool(mem[_9107 + 32])
                            mem[_9127 + 32] = mem[_9107 + 32]
                            require mem[_9107 + 64] == mem[_9107 + 76 len 20]
                            mem[_9127 + 64] = mem[_9107 + 64]
                            mem[_9127 + 96] = mem[_9107 + 96]
                            mem[_2736 + 448] = bool(mem[_9127 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9317 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9355 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9355] = mem[_9317]
                            require mem[_9317 + 32] == bool(mem[_9317 + 32])
                            mem[_9355 + 32] = mem[_9317 + 32]
                            require mem[_9317 + 64] == mem[_9317 + 76 len 20]
                            mem[_9355 + 64] = mem[_9317 + 64]
                            mem[_9355 + 96] = mem[_9317 + 96]
                            mem[_2736 + 480] = mem[_9355 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9567 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9607 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9607] = mem[_9567]
                            require mem[_9567 + 32] == bool(mem[_9567 + 32])
                            mem[_9607 + 32] = mem[_9567 + 32]
                            require mem[_9567 + 64] == mem[_9567 + 76 len 20]
                            mem[_9607 + 64] = mem[_9567 + 64]
                            mem[_9607 + 96] = mem[_9567 + 96]
                            mem[_2736 + 384] = mem[_9607]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9837 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9837]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9965 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9965]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10079 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10079] == mem[_10079 + 12 len 20]
                            mem[_2736 + 64] = mem[_10079 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10245 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10245]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10409 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10453 = mem[_10409]
                                mem[_2736 + 576] = mem[_10409]
                                mem[mem[64] + 4] = _10453
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10453
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10559 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10559]
                        else:
                            mem[_2736 + 224] = 0
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8694 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8694] == bool(mem[_8694])
                            mem[_2736 + 512] = bool(mem[_8694])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8837 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8837]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8956 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8956]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9037 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9037]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9108 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9128 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9128] = mem[_9108]
                            require mem[_9108 + 32] == bool(mem[_9108 + 32])
                            mem[_9128 + 32] = mem[_9108 + 32]
                            require mem[_9108 + 64] == mem[_9108 + 76 len 20]
                            mem[_9128 + 64] = mem[_9108 + 64]
                            mem[_9128 + 96] = mem[_9108 + 96]
                            mem[_2736 + 448] = bool(mem[_9128 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9318 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9356 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9356] = mem[_9318]
                            require mem[_9318 + 32] == bool(mem[_9318 + 32])
                            mem[_9356 + 32] = mem[_9318 + 32]
                            require mem[_9318 + 64] == mem[_9318 + 76 len 20]
                            mem[_9356 + 64] = mem[_9318 + 64]
                            mem[_9356 + 96] = mem[_9318 + 96]
                            mem[_2736 + 480] = mem[_9356 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9568 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9608 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9608] = mem[_9568]
                            require mem[_9568 + 32] == bool(mem[_9568 + 32])
                            mem[_9608 + 32] = mem[_9568 + 32]
                            require mem[_9568 + 64] == mem[_9568 + 76 len 20]
                            mem[_9608 + 64] = mem[_9568 + 64]
                            mem[_9608 + 96] = mem[_9568 + 96]
                            mem[_2736 + 384] = mem[_9608]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9838 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9838]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9966 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9966]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10080 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10080] == mem[_10080 + 12 len 20]
                            mem[_2736 + 64] = mem[_10080 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10246 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10246]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10410 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10454 = mem[_10410]
                                mem[_2736 + 576] = mem[_10410]
                                mem[mem[64] + 4] = _10454
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10454
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10560 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10560]
                    else:
                        mem[_5574 + ceil32(return_data.size) + _5595 + 32] = 0
                        mem[_2736 + 128] = _5574 + ceil32(return_data.size)
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8424 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 160] = mem[_8424]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8485 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 192] = mem[_8485]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8596 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8596]:
                            mem[_2736 + 224] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8703 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8703] == bool(mem[_8703])
                            mem[_2736 + 512] = bool(mem[_8703])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8853 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8853]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8965 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8965]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9046 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9046]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9116 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9137 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9137] = mem[_9116]
                            require mem[_9116 + 32] == bool(mem[_9116 + 32])
                            mem[_9137 + 32] = mem[_9116 + 32]
                            require mem[_9116 + 64] == mem[_9116 + 76 len 20]
                            mem[_9137 + 64] = mem[_9116 + 64]
                            mem[_9137 + 96] = mem[_9116 + 96]
                            mem[_2736 + 448] = bool(mem[_9137 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9334 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9367 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9367] = mem[_9334]
                            require mem[_9334 + 32] == bool(mem[_9334 + 32])
                            mem[_9367 + 32] = mem[_9334 + 32]
                            require mem[_9334 + 64] == mem[_9334 + 76 len 20]
                            mem[_9367 + 64] = mem[_9334 + 64]
                            mem[_9367 + 96] = mem[_9334 + 96]
                            mem[_2736 + 480] = mem[_9367 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9583 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9623 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9623] = mem[_9583]
                            require mem[_9583 + 32] == bool(mem[_9583 + 32])
                            mem[_9623 + 32] = mem[_9583 + 32]
                            require mem[_9583 + 64] == mem[_9583 + 76 len 20]
                            mem[_9623 + 64] = mem[_9583 + 64]
                            mem[_9623 + 96] = mem[_9583 + 96]
                            mem[_2736 + 384] = mem[_9623]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9855 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9855]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9983 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9983]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10097 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10097] == mem[_10097 + 12 len 20]
                            mem[_2736 + 64] = mem[_10097 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10263 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10263]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10435 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10471 = mem[_10435]
                                mem[_2736 + 576] = mem[_10435]
                                mem[mem[64] + 4] = _10471
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10471
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10575 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10575]
                        else:
                            mem[_2736 + 224] = 0
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8704 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8704] == bool(mem[_8704])
                            mem[_2736 + 512] = bool(mem[_8704])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8854 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8854]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8966 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8966]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9047 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9047]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9117 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9138 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9138] = mem[_9117]
                            require mem[_9117 + 32] == bool(mem[_9117 + 32])
                            mem[_9138 + 32] = mem[_9117 + 32]
                            require mem[_9117 + 64] == mem[_9117 + 76 len 20]
                            mem[_9138 + 64] = mem[_9117 + 64]
                            mem[_9138 + 96] = mem[_9117 + 96]
                            mem[_2736 + 448] = bool(mem[_9138 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9335 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9368 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9368] = mem[_9335]
                            require mem[_9335 + 32] == bool(mem[_9335 + 32])
                            mem[_9368 + 32] = mem[_9335 + 32]
                            require mem[_9335 + 64] == mem[_9335 + 76 len 20]
                            mem[_9368 + 64] = mem[_9335 + 64]
                            mem[_9368 + 96] = mem[_9335 + 96]
                            mem[_2736 + 480] = mem[_9368 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9584 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9624 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9624] = mem[_9584]
                            require mem[_9584 + 32] == bool(mem[_9584 + 32])
                            mem[_9624 + 32] = mem[_9584 + 32]
                            require mem[_9584 + 64] == mem[_9584 + 76 len 20]
                            mem[_9624 + 64] = mem[_9584 + 64]
                            mem[_9624 + 96] = mem[_9584 + 96]
                            mem[_2736 + 384] = mem[_9624]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9856 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9856]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9984 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9984]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10098 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10098] == mem[_10098 + 12 len 20]
                            mem[_2736 + 64] = mem[_10098 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10264 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10264]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10436 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10472 = mem[_10436]
                                mem[_2736 + 576] = mem[_10436]
                                mem[mem[64] + 4] = _10472
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10472
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10576 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10576]
                else:
                    mem[_2784 + ceil32(return_data.size) + _2820 + 32] = 0
                    mem[_2736 + 96] = _2784 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_2712))
                    staticcall address(_2712).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5578 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5591 = mem[_5578]
                    require mem[_5578] <= test266151307()
                    require _5578 + mem[_5578] + 31 < _5578 + return_data.size
                    _5601 = mem[_5578 + mem[_5578]]
                    require mem[_5578 + mem[_5578]] <= test266151307()
                    require ceil32(mem[_5578 + mem[_5578]]) + 32 >= 0 and _5578 + ceil32(return_data.size) + ceil32(mem[_5578 + mem[_5578]]) + 32 <= test266151307()
                    mem[64] = _5578 + ceil32(return_data.size) + ceil32(mem[_5578 + mem[_5578]]) + 32
                    mem[_5578 + ceil32(return_data.size)] = _5601
                    require _5591 + _5601 + 32 <= return_data.size
                    t = 0
                    while t < _5601:
                        mem[t + _5578 + ceil32(return_data.size) + 32] = mem[t + _5578 + _5591 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_5601) <= _5601:
                        mem[_2736 + 128] = _5578 + ceil32(return_data.size)
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8417 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 160] = mem[_8417]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8469 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 192] = mem[_8469]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8585 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8585]:
                            mem[_2736 + 224] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8695 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8695] == bool(mem[_8695])
                            mem[_2736 + 512] = bool(mem[_8695])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8838 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8838]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8957 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8957]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9038 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9038]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9109 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9129 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9129] = mem[_9109]
                            require mem[_9109 + 32] == bool(mem[_9109 + 32])
                            mem[_9129 + 32] = mem[_9109 + 32]
                            require mem[_9109 + 64] == mem[_9109 + 76 len 20]
                            mem[_9129 + 64] = mem[_9109 + 64]
                            mem[_9129 + 96] = mem[_9109 + 96]
                            mem[_2736 + 448] = bool(mem[_9129 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9319 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9357 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9357] = mem[_9319]
                            require mem[_9319 + 32] == bool(mem[_9319 + 32])
                            mem[_9357 + 32] = mem[_9319 + 32]
                            require mem[_9319 + 64] == mem[_9319 + 76 len 20]
                            mem[_9357 + 64] = mem[_9319 + 64]
                            mem[_9357 + 96] = mem[_9319 + 96]
                            mem[_2736 + 480] = mem[_9357 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9569 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9609 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9609] = mem[_9569]
                            require mem[_9569 + 32] == bool(mem[_9569 + 32])
                            mem[_9609 + 32] = mem[_9569 + 32]
                            require mem[_9569 + 64] == mem[_9569 + 76 len 20]
                            mem[_9609 + 64] = mem[_9569 + 64]
                            mem[_9609 + 96] = mem[_9569 + 96]
                            mem[_2736 + 384] = mem[_9609]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9839 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9839]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9967 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9967]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10081 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10081] == mem[_10081 + 12 len 20]
                            mem[_2736 + 64] = mem[_10081 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10247 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10247]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10411 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10455 = mem[_10411]
                                mem[_2736 + 576] = mem[_10411]
                                mem[mem[64] + 4] = _10455
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10455
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10561 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10561]
                        else:
                            mem[_2736 + 224] = 0
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8696 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8696] == bool(mem[_8696])
                            mem[_2736 + 512] = bool(mem[_8696])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8839 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8839]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8958 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8958]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9039 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9039]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9110 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9130 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9130] = mem[_9110]
                            require mem[_9110 + 32] == bool(mem[_9110 + 32])
                            mem[_9130 + 32] = mem[_9110 + 32]
                            require mem[_9110 + 64] == mem[_9110 + 76 len 20]
                            mem[_9130 + 64] = mem[_9110 + 64]
                            mem[_9130 + 96] = mem[_9110 + 96]
                            mem[_2736 + 448] = bool(mem[_9130 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9320 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9358 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9358] = mem[_9320]
                            require mem[_9320 + 32] == bool(mem[_9320 + 32])
                            mem[_9358 + 32] = mem[_9320 + 32]
                            require mem[_9320 + 64] == mem[_9320 + 76 len 20]
                            mem[_9358 + 64] = mem[_9320 + 64]
                            mem[_9358 + 96] = mem[_9320 + 96]
                            mem[_2736 + 480] = mem[_9358 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9570 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9610 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9610] = mem[_9570]
                            require mem[_9570 + 32] == bool(mem[_9570 + 32])
                            mem[_9610 + 32] = mem[_9570 + 32]
                            require mem[_9570 + 64] == mem[_9570 + 76 len 20]
                            mem[_9610 + 64] = mem[_9570 + 64]
                            mem[_9610 + 96] = mem[_9570 + 96]
                            mem[_2736 + 384] = mem[_9610]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9840 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9840]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9968 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9968]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10082 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10082] == mem[_10082 + 12 len 20]
                            mem[_2736 + 64] = mem[_10082 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10248 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10248]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10412 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10456 = mem[_10412]
                                mem[_2736 + 576] = mem[_10412]
                                mem[mem[64] + 4] = _10456
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10456
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10562 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10562]
                    else:
                        mem[_5578 + ceil32(return_data.size) + _5601 + 32] = 0
                        mem[_2736 + 128] = _5578 + ceil32(return_data.size)
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8425 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 160] = mem[_8425]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8486 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 192] = mem[_8486]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8597 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8597]:
                            mem[_2736 + 224] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8705 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8705] == bool(mem[_8705])
                            mem[_2736 + 512] = bool(mem[_8705])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8855 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8855]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8967 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8967]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9048 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9048]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9118 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9139 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9139] = mem[_9118]
                            require mem[_9118 + 32] == bool(mem[_9118 + 32])
                            mem[_9139 + 32] = mem[_9118 + 32]
                            require mem[_9118 + 64] == mem[_9118 + 76 len 20]
                            mem[_9139 + 64] = mem[_9118 + 64]
                            mem[_9139 + 96] = mem[_9118 + 96]
                            mem[_2736 + 448] = bool(mem[_9139 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9336 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9369 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9369] = mem[_9336]
                            require mem[_9336 + 32] == bool(mem[_9336 + 32])
                            mem[_9369 + 32] = mem[_9336 + 32]
                            require mem[_9336 + 64] == mem[_9336 + 76 len 20]
                            mem[_9369 + 64] = mem[_9336 + 64]
                            mem[_9369 + 96] = mem[_9336 + 96]
                            mem[_2736 + 480] = mem[_9369 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9585 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9625 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9625] = mem[_9585]
                            require mem[_9585 + 32] == bool(mem[_9585 + 32])
                            mem[_9625 + 32] = mem[_9585 + 32]
                            require mem[_9585 + 64] == mem[_9585 + 76 len 20]
                            mem[_9625 + 64] = mem[_9585 + 64]
                            mem[_9625 + 96] = mem[_9585 + 96]
                            mem[_2736 + 384] = mem[_9625]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9857 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9857]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9985 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9985]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10099 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10099] == mem[_10099 + 12 len 20]
                            mem[_2736 + 64] = mem[_10099 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10265 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10265]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10437 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10475 = mem[_10437]
                                mem[_2736 + 576] = mem[_10437]
                                mem[mem[64] + 4] = _10475
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10475
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10577 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10577]
                        else:
                            mem[_2736 + 224] = 0
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8706 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8706] == bool(mem[_8706])
                            mem[_2736 + 512] = bool(mem[_8706])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8856 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8856]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8968 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8968]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9049 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9049]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9119 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9140 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9140] = mem[_9119]
                            require mem[_9119 + 32] == bool(mem[_9119 + 32])
                            mem[_9140 + 32] = mem[_9119 + 32]
                            require mem[_9119 + 64] == mem[_9119 + 76 len 20]
                            mem[_9140 + 64] = mem[_9119 + 64]
                            mem[_9140 + 96] = mem[_9119 + 96]
                            mem[_2736 + 448] = bool(mem[_9140 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9337 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9370 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9370] = mem[_9337]
                            require mem[_9337 + 32] == bool(mem[_9337 + 32])
                            mem[_9370 + 32] = mem[_9337 + 32]
                            require mem[_9337 + 64] == mem[_9337 + 76 len 20]
                            mem[_9370 + 64] = mem[_9337 + 64]
                            mem[_9370 + 96] = mem[_9337 + 96]
                            mem[_2736 + 480] = mem[_9370 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9586 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9626 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9626] = mem[_9586]
                            require mem[_9586 + 32] == bool(mem[_9586 + 32])
                            mem[_9626 + 32] = mem[_9586 + 32]
                            require mem[_9586 + 64] == mem[_9586 + 76 len 20]
                            mem[_9626 + 64] = mem[_9586 + 64]
                            mem[_9626 + 96] = mem[_9586 + 96]
                            mem[_2736 + 384] = mem[_9626]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9858 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9858]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9986 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9986]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10100 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10100] == mem[_10100 + 12 len 20]
                            mem[_2736 + 64] = mem[_10100 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10266 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10266]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10438 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10476 = mem[_10438]
                                mem[_2736 + 576] = mem[_10438]
                                mem[mem[64] + 4] = _10476
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10476
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10578 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10578]
                require s < mem[ceil32(return_data.size) + 96]
                mem[(32 * s) + ceil32(return_data.size) + 128] = _2736
                idx = idx + 1
                s = s + 1
                continue 
            _2697 = mem[64]
            mem[mem[64]] = 32
            _2700 = mem[ceil32(return_data.size) + 96]
            mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
            idx = 0
            s = ceil32(return_data.size) + 128
            t = mem[64] + 64
            u = mem[64] + (32 * _2700) + 64
            while idx < _2700:
                mem[t] = u + -_2697 - 64
                _5553 = mem[s]
                mem[u] = mem[mem[s] + 12 len 20]
                mem[u + 32] = mem[_5553 + 44 len 20]
                mem[u + 64] = mem[_5553 + 76 len 20]
                _5584 = mem[_5553 + 96]
                mem[u + 96] = 640
                _5590 = mem[_5584]
                mem[u + 640] = mem[_5584]
                v = 0
                while v < _5590:
                    mem[v + u + 672] = mem[v + _5584 + 32]
                    v = v + 32
                    continue 
                if ceil32(_5590) <= _5590:
                    _8391 = mem[_5553 + 128]
                    mem[u + 128] = ceil32(_5590) + 672
                    _8404 = mem[_8391]
                    mem[ceil32(_5590) + u + 672] = mem[_8391]
                    v = 0
                    while v < _8404:
                        mem[v + ceil32(_5590) + u + 704] = mem[v + _8391 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_8404) > _8404:
                        mem[ceil32(_5590) + u + _8404 + 704] = 0
                    mem[u + 160] = mem[_5553 + 160]
                    mem[u + 192] = mem[_5553 + 192]
                    mem[u + 224] = bool(mem[_5553 + 224])
                    mem[u + 256] = mem[_5553 + 256]
                    mem[u + 288] = mem[_5553 + 288]
                    mem[u + 320] = mem[_5553 + 320]
                    mem[u + 352] = mem[_5553 + 352]
                    mem[u + 384] = mem[_5553 + 384]
                    mem[u + 416] = bool(mem[_5553 + 416])
                    mem[u + 448] = bool(mem[_5553 + 448])
                    mem[u + 480] = mem[_5553 + 480]
                    mem[u + 512] = bool(mem[_5553 + 512])
                    mem[u + 544] = mem[_5553 + 544]
                    mem[u + 576] = mem[_5553 + 576]
                    mem[u + 608] = mem[_5553 + 608]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    u = ceil32(_8404) + ceil32(_5590) + u + 704
                    continue 
                mem[u + _5590 + 672] = 0
                _8405 = mem[_5553 + 128]
                mem[u + 128] = ceil32(_5590) + 672
                _8415 = mem[_8405]
                mem[ceil32(_5590) + u + 672] = mem[_8405]
                v = 0
                while v < _8415:
                    mem[v + ceil32(_5590) + u + 704] = mem[v + _8405 + 32]
                    v = v + 32
                    continue 
                if ceil32(_8415) > _8415:
                    mem[ceil32(_5590) + u + _8415 + 704] = 0
                mem[u + 160] = mem[_5553 + 160]
                mem[u + 192] = mem[_5553 + 192]
                mem[u + 224] = bool(mem[_5553 + 224])
                mem[u + 256] = mem[_5553 + 256]
                mem[u + 288] = mem[_5553 + 288]
                mem[u + 320] = mem[_5553 + 320]
                mem[u + 352] = mem[_5553 + 352]
                mem[u + 384] = mem[_5553 + 384]
                mem[u + 416] = bool(mem[_5553 + 416])
                mem[u + 448] = bool(mem[_5553 + 448])
                mem[u + 480] = mem[_5553 + 480]
                mem[u + 512] = bool(mem[_5553 + 512])
                mem[u + 544] = mem[_5553 + 544]
                mem[u + 576] = mem[_5553 + 576]
                mem[u + 608] = mem[_5553 + 608]
                idx = idx + 1
                s = s + 32
                t = t + 32
                u = ceil32(_8415) + ceil32(_5590) + u + 704
                continue 
        else:
            mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 768
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 160] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 192] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 224] = 96
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 256] = 96
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 288] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 320] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 352] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 384] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 416] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 448] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 480] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 512] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 544] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 576] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 608] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 640] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 672] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 704] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 736] = 0
            mem[var23001] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128
            s = var23001
            idx = var23002
            while idx - 1:
                mem[64] = mem[64] + 640
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 160] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 192] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 224] = 96
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 256] = 96
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 288] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 320] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 352] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 384] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 416] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 448] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 480] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 512] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 544] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 576] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 608] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 640] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 672] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 704] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 736] = 0
                mem[s + 32] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg1) + 128
                s = s + 32
                idx = idx - 1
                continue 
            idx = 0
            s = 0
            while idx < ext_call.return_data[0] - arg1:
                mem[mem[64] + 4] = idx
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.ballots(uint256 rg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8410 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8428 = mem[_8410]
                require mem[_8410] == mem[_8410 + 12 len 20]
                _8512 = mem[64]
                mem[64] = mem[64] + 640
                mem[_8512] = 0
                mem[_8512 + 32] = 0
                mem[_8512 + 64] = 0
                mem[_8512 + 96] = 96
                mem[_8512 + 128] = 96
                mem[_8512 + 160] = 0
                mem[_8512 + 192] = 0
                mem[_8512 + 224] = 0
                mem[_8512 + 256] = 0
                mem[_8512 + 288] = 0
                mem[_8512 + 320] = 0
                mem[_8512 + 352] = 0
                mem[_8512 + 384] = 0
                mem[_8512 + 416] = 0
                mem[_8512 + 448] = 0
                mem[_8512 + 480] = 0
                mem[_8512 + 512] = 0
                mem[_8512 + 544] = 0
                mem[_8512 + 576] = 0
                mem[_8512 + 608] = 0
                require ext_code.size(address(_8428))
                staticcall address(_8428).proposer() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8586 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_8586] == mem[_8586 + 12 len 20]
                mem[_8512] = mem[_8586 + 12 len 20]
                mem[mem[64]] = 0xa59a98c00000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_8428))
                staticcall address(_8428).subject() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8708 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8728 = mem[_8708]
                require mem[_8708] <= test266151307()
                require _8708 + mem[_8708] + 31 < _8708 + return_data.size
                _8764 = mem[_8708 + mem[_8708]]
                require mem[_8708 + mem[_8708]] <= test266151307()
                require ceil32(mem[_8708 + mem[_8708]]) + 32 >= 0 and _8708 + ceil32(return_data.size) + ceil32(mem[_8708 + mem[_8708]]) + 32 <= test266151307()
                mem[64] = _8708 + ceil32(return_data.size) + ceil32(mem[_8708 + mem[_8708]]) + 32
                mem[_8708 + ceil32(return_data.size)] = _8764
                require _8728 + _8764 + 32 <= return_data.size
                t = 0
                while t < _8764:
                    mem[t + _8708 + ceil32(return_data.size) + 32] = mem[t + _8708 + _8728 + 32]
                    t = t + 32
                    continue 
                if ceil32(_8764) <= _8764:
                    mem[_8512 + 96] = _8708 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_8428))
                    staticcall address(_8428).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11228 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11262 = mem[_11228]
                    require mem[_11228] <= test266151307()
                    require _11228 + mem[_11228] + 31 < _11228 + return_data.size
                    _11280 = mem[_11228 + mem[_11228]]
                    require mem[_11228 + mem[_11228]] <= test266151307()
                    require ceil32(mem[_11228 + mem[_11228]]) + 32 >= 0 and _11228 + ceil32(return_data.size) + ceil32(mem[_11228 + mem[_11228]]) + 32 <= test266151307()
                    mem[64] = _11228 + ceil32(return_data.size) + ceil32(mem[_11228 + mem[_11228]]) + 32
                    mem[_11228 + ceil32(return_data.size)] = _11280
                    require _11262 + _11280 + 32 <= return_data.size
                    t = 0
                    while t < _11280:
                        mem[t + _11228 + ceil32(return_data.size) + 32] = mem[t + _11228 + _11262 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_11280) <= _11280:
                        mem[_8512 + 128] = _11228 + ceil32(return_data.size)
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12705 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 160] = mem[_12705]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12747 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 192] = mem[_12747]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12851 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12851]:
                            mem[_8512 + 224] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12943 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12943] == bool(mem[_12943])
                            mem[_8512 + 512] = bool(mem[_12943])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13007 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13007]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13071 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13071]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13135 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13135]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13199 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13215 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13215] = mem[_13199]
                            require mem[_13199 + 32] == bool(mem[_13199 + 32])
                            mem[_13215 + 32] = mem[_13199 + 32]
                            require mem[_13199 + 64] == mem[_13199 + 76 len 20]
                            mem[_13215 + 64] = mem[_13199 + 64]
                            mem[_13215 + 96] = mem[_13199 + 96]
                            mem[_8512 + 448] = bool(mem[_13215 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13343 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13359 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13359] = mem[_13343]
                            require mem[_13343 + 32] == bool(mem[_13343 + 32])
                            mem[_13359 + 32] = mem[_13343 + 32]
                            require mem[_13343 + 64] == mem[_13343 + 76 len 20]
                            mem[_13359 + 64] = mem[_13343 + 64]
                            mem[_13359 + 96] = mem[_13343 + 96]
                            mem[_8512 + 480] = mem[_13359 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13487 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13503 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13503] = mem[_13487]
                            require mem[_13487 + 32] == bool(mem[_13487 + 32])
                            mem[_13503 + 32] = mem[_13487 + 32]
                            require mem[_13487 + 64] == mem[_13487 + 76 len 20]
                            mem[_13503 + 64] = mem[_13487 + 64]
                            mem[_13503 + 96] = mem[_13487 + 96]
                            mem[_8512 + 384] = mem[_13503]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13631 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13631]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13695 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13695]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13759 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13759] == mem[_13759 + 12 len 20]
                            mem[_8512 + 64] = mem[_13759 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13823 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13823]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13919 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13935 = mem[_13919]
                                mem[_8512 + 576] = mem[_13919]
                                mem[mem[64] + 4] = _13935
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13935
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13983 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13983]
                        else:
                            mem[_8512 + 224] = 0
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12944 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12944] == bool(mem[_12944])
                            mem[_8512 + 512] = bool(mem[_12944])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13008 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13008]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13072 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13072]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13136 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13136]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13200 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13216 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13216] = mem[_13200]
                            require mem[_13200 + 32] == bool(mem[_13200 + 32])
                            mem[_13216 + 32] = mem[_13200 + 32]
                            require mem[_13200 + 64] == mem[_13200 + 76 len 20]
                            mem[_13216 + 64] = mem[_13200 + 64]
                            mem[_13216 + 96] = mem[_13200 + 96]
                            mem[_8512 + 448] = bool(mem[_13216 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13344 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13360 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13360] = mem[_13344]
                            require mem[_13344 + 32] == bool(mem[_13344 + 32])
                            mem[_13360 + 32] = mem[_13344 + 32]
                            require mem[_13344 + 64] == mem[_13344 + 76 len 20]
                            mem[_13360 + 64] = mem[_13344 + 64]
                            mem[_13360 + 96] = mem[_13344 + 96]
                            mem[_8512 + 480] = mem[_13360 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13488 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13504 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13504] = mem[_13488]
                            require mem[_13488 + 32] == bool(mem[_13488 + 32])
                            mem[_13504 + 32] = mem[_13488 + 32]
                            require mem[_13488 + 64] == mem[_13488 + 76 len 20]
                            mem[_13504 + 64] = mem[_13488 + 64]
                            mem[_13504 + 96] = mem[_13488 + 96]
                            mem[_8512 + 384] = mem[_13504]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13632 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13632]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13696 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13696]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13760 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13760] == mem[_13760 + 12 len 20]
                            mem[_8512 + 64] = mem[_13760 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13824 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13824]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13920 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13936 = mem[_13920]
                                mem[_8512 + 576] = mem[_13920]
                                mem[mem[64] + 4] = _13936
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13936
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13984 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13984]
                    else:
                        mem[_11228 + ceil32(return_data.size) + _11280 + 32] = 0
                        mem[_8512 + 128] = _11228 + ceil32(return_data.size)
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12709 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 160] = mem[_12709]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12763 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 192] = mem[_12763]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12861 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12861]:
                            mem[_8512 + 224] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12951 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12951] == bool(mem[_12951])
                            mem[_8512 + 512] = bool(mem[_12951])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13015 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13015]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13079 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13079]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13143 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13143]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13207 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13223 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13223] = mem[_13207]
                            require mem[_13207 + 32] == bool(mem[_13207 + 32])
                            mem[_13223 + 32] = mem[_13207 + 32]
                            require mem[_13207 + 64] == mem[_13207 + 76 len 20]
                            mem[_13223 + 64] = mem[_13207 + 64]
                            mem[_13223 + 96] = mem[_13207 + 96]
                            mem[_8512 + 448] = bool(mem[_13223 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13351 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13367 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13367] = mem[_13351]
                            require mem[_13351 + 32] == bool(mem[_13351 + 32])
                            mem[_13367 + 32] = mem[_13351 + 32]
                            require mem[_13351 + 64] == mem[_13351 + 76 len 20]
                            mem[_13367 + 64] = mem[_13351 + 64]
                            mem[_13367 + 96] = mem[_13351 + 96]
                            mem[_8512 + 480] = mem[_13367 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13495 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13511 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13511] = mem[_13495]
                            require mem[_13495 + 32] == bool(mem[_13495 + 32])
                            mem[_13511 + 32] = mem[_13495 + 32]
                            require mem[_13495 + 64] == mem[_13495 + 76 len 20]
                            mem[_13511 + 64] = mem[_13495 + 64]
                            mem[_13511 + 96] = mem[_13495 + 96]
                            mem[_8512 + 384] = mem[_13511]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13639 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13639]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13703 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13703]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13767 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13767] == mem[_13767 + 12 len 20]
                            mem[_8512 + 64] = mem[_13767 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13831 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13831]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13927 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13949 = mem[_13927]
                                mem[_8512 + 576] = mem[_13927]
                                mem[mem[64] + 4] = _13949
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13949
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13991 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13991]
                        else:
                            mem[_8512 + 224] = 0
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12952 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12952] == bool(mem[_12952])
                            mem[_8512 + 512] = bool(mem[_12952])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13016 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13016]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13080 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13080]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13144 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13144]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13208 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13224 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13224] = mem[_13208]
                            require mem[_13208 + 32] == bool(mem[_13208 + 32])
                            mem[_13224 + 32] = mem[_13208 + 32]
                            require mem[_13208 + 64] == mem[_13208 + 76 len 20]
                            mem[_13224 + 64] = mem[_13208 + 64]
                            mem[_13224 + 96] = mem[_13208 + 96]
                            mem[_8512 + 448] = bool(mem[_13224 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13352 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13368 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13368] = mem[_13352]
                            require mem[_13352 + 32] == bool(mem[_13352 + 32])
                            mem[_13368 + 32] = mem[_13352 + 32]
                            require mem[_13352 + 64] == mem[_13352 + 76 len 20]
                            mem[_13368 + 64] = mem[_13352 + 64]
                            mem[_13368 + 96] = mem[_13352 + 96]
                            mem[_8512 + 480] = mem[_13368 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13496 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13512 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13512] = mem[_13496]
                            require mem[_13496 + 32] == bool(mem[_13496 + 32])
                            mem[_13512 + 32] = mem[_13496 + 32]
                            require mem[_13496 + 64] == mem[_13496 + 76 len 20]
                            mem[_13512 + 64] = mem[_13496 + 64]
                            mem[_13512 + 96] = mem[_13496 + 96]
                            mem[_8512 + 384] = mem[_13512]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13640 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13640]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13704 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13704]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13768 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13768] == mem[_13768 + 12 len 20]
                            mem[_8512 + 64] = mem[_13768 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13832 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13832]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13928 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13950 = mem[_13928]
                                mem[_8512 + 576] = mem[_13928]
                                mem[mem[64] + 4] = _13950
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13950
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13992 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13992]
                else:
                    mem[_8708 + ceil32(return_data.size) + _8764 + 32] = 0
                    mem[_8512 + 96] = _8708 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_8428))
                    staticcall address(_8428).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11254 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11270 = mem[_11254]
                    require mem[_11254] <= test266151307()
                    require _11254 + mem[_11254] + 31 < _11254 + return_data.size
                    _11290 = mem[_11254 + mem[_11254]]
                    require mem[_11254 + mem[_11254]] <= test266151307()
                    require ceil32(mem[_11254 + mem[_11254]]) + 32 >= 0 and _11254 + ceil32(return_data.size) + ceil32(mem[_11254 + mem[_11254]]) + 32 <= test266151307()
                    mem[64] = _11254 + ceil32(return_data.size) + ceil32(mem[_11254 + mem[_11254]]) + 32
                    mem[_11254 + ceil32(return_data.size)] = _11290
                    require _11270 + _11290 + 32 <= return_data.size
                    t = 0
                    while t < _11290:
                        mem[t + _11254 + ceil32(return_data.size) + 32] = mem[t + _11254 + _11270 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_11290) <= _11290:
                        mem[_8512 + 128] = _11254 + ceil32(return_data.size)
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12706 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 160] = mem[_12706]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12748 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 192] = mem[_12748]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12852 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12852]:
                            mem[_8512 + 224] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12945 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12945] == bool(mem[_12945])
                            mem[_8512 + 512] = bool(mem[_12945])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13009 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13009]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13073 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13073]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13137 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13137]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13201 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13217 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13217] = mem[_13201]
                            require mem[_13201 + 32] == bool(mem[_13201 + 32])
                            mem[_13217 + 32] = mem[_13201 + 32]
                            require mem[_13201 + 64] == mem[_13201 + 76 len 20]
                            mem[_13217 + 64] = mem[_13201 + 64]
                            mem[_13217 + 96] = mem[_13201 + 96]
                            mem[_8512 + 448] = bool(mem[_13217 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13345 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13361 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13361] = mem[_13345]
                            require mem[_13345 + 32] == bool(mem[_13345 + 32])
                            mem[_13361 + 32] = mem[_13345 + 32]
                            require mem[_13345 + 64] == mem[_13345 + 76 len 20]
                            mem[_13361 + 64] = mem[_13345 + 64]
                            mem[_13361 + 96] = mem[_13345 + 96]
                            mem[_8512 + 480] = mem[_13361 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13489 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13505 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13505] = mem[_13489]
                            require mem[_13489 + 32] == bool(mem[_13489 + 32])
                            mem[_13505 + 32] = mem[_13489 + 32]
                            require mem[_13489 + 64] == mem[_13489 + 76 len 20]
                            mem[_13505 + 64] = mem[_13489 + 64]
                            mem[_13505 + 96] = mem[_13489 + 96]
                            mem[_8512 + 384] = mem[_13505]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13633 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13633]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13697 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13697]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13761 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13761] == mem[_13761 + 12 len 20]
                            mem[_8512 + 64] = mem[_13761 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13825 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13825]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13921 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13937 = mem[_13921]
                                mem[_8512 + 576] = mem[_13921]
                                mem[mem[64] + 4] = _13937
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13937
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13985 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13985]
                        else:
                            mem[_8512 + 224] = 0
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12946 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12946] == bool(mem[_12946])
                            mem[_8512 + 512] = bool(mem[_12946])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13010 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13010]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13074 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13074]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13138 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13138]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13202 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13218 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13218] = mem[_13202]
                            require mem[_13202 + 32] == bool(mem[_13202 + 32])
                            mem[_13218 + 32] = mem[_13202 + 32]
                            require mem[_13202 + 64] == mem[_13202 + 76 len 20]
                            mem[_13218 + 64] = mem[_13202 + 64]
                            mem[_13218 + 96] = mem[_13202 + 96]
                            mem[_8512 + 448] = bool(mem[_13218 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13346 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13362 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13362] = mem[_13346]
                            require mem[_13346 + 32] == bool(mem[_13346 + 32])
                            mem[_13362 + 32] = mem[_13346 + 32]
                            require mem[_13346 + 64] == mem[_13346 + 76 len 20]
                            mem[_13362 + 64] = mem[_13346 + 64]
                            mem[_13362 + 96] = mem[_13346 + 96]
                            mem[_8512 + 480] = mem[_13362 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13490 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13506 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13506] = mem[_13490]
                            require mem[_13490 + 32] == bool(mem[_13490 + 32])
                            mem[_13506 + 32] = mem[_13490 + 32]
                            require mem[_13490 + 64] == mem[_13490 + 76 len 20]
                            mem[_13506 + 64] = mem[_13490 + 64]
                            mem[_13506 + 96] = mem[_13490 + 96]
                            mem[_8512 + 384] = mem[_13506]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13634 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13634]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13698 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13698]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13762 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13762] == mem[_13762 + 12 len 20]
                            mem[_8512 + 64] = mem[_13762 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13826 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13826]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13922 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13938 = mem[_13922]
                                mem[_8512 + 576] = mem[_13922]
                                mem[mem[64] + 4] = _13938
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13938
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13986 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13986]
                    else:
                        mem[_11254 + ceil32(return_data.size) + _11290 + 32] = 0
                        mem[_8512 + 128] = _11254 + ceil32(return_data.size)
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12710 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 160] = mem[_12710]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12764 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 192] = mem[_12764]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12862 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12862]:
                            mem[_8512 + 224] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12953 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12953] == bool(mem[_12953])
                            mem[_8512 + 512] = bool(mem[_12953])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13017 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13017]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13081 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13081]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13145 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13145]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13209 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13225 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13225] = mem[_13209]
                            require mem[_13209 + 32] == bool(mem[_13209 + 32])
                            mem[_13225 + 32] = mem[_13209 + 32]
                            require mem[_13209 + 64] == mem[_13209 + 76 len 20]
                            mem[_13225 + 64] = mem[_13209 + 64]
                            mem[_13225 + 96] = mem[_13209 + 96]
                            mem[_8512 + 448] = bool(mem[_13225 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13353 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13369 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13369] = mem[_13353]
                            require mem[_13353 + 32] == bool(mem[_13353 + 32])
                            mem[_13369 + 32] = mem[_13353 + 32]
                            require mem[_13353 + 64] == mem[_13353 + 76 len 20]
                            mem[_13369 + 64] = mem[_13353 + 64]
                            mem[_13369 + 96] = mem[_13353 + 96]
                            mem[_8512 + 480] = mem[_13369 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13497 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13513 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13513] = mem[_13497]
                            require mem[_13497 + 32] == bool(mem[_13497 + 32])
                            mem[_13513 + 32] = mem[_13497 + 32]
                            require mem[_13497 + 64] == mem[_13497 + 76 len 20]
                            mem[_13513 + 64] = mem[_13497 + 64]
                            mem[_13513 + 96] = mem[_13497 + 96]
                            mem[_8512 + 384] = mem[_13513]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13641 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13641]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13705 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13705]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13769 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13769] == mem[_13769 + 12 len 20]
                            mem[_8512 + 64] = mem[_13769 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13833 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13833]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13929 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13953 = mem[_13929]
                                mem[_8512 + 576] = mem[_13929]
                                mem[mem[64] + 4] = _13953
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13953
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13993 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13993]
                        else:
                            mem[_8512 + 224] = 0
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12954 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12954] == bool(mem[_12954])
                            mem[_8512 + 512] = bool(mem[_12954])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13018 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13018]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13082 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13082]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13146 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13146]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13210 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13226 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13226] = mem[_13210]
                            require mem[_13210 + 32] == bool(mem[_13210 + 32])
                            mem[_13226 + 32] = mem[_13210 + 32]
                            require mem[_13210 + 64] == mem[_13210 + 76 len 20]
                            mem[_13226 + 64] = mem[_13210 + 64]
                            mem[_13226 + 96] = mem[_13210 + 96]
                            mem[_8512 + 448] = bool(mem[_13226 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13354 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13370 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13370] = mem[_13354]
                            require mem[_13354 + 32] == bool(mem[_13354 + 32])
                            mem[_13370 + 32] = mem[_13354 + 32]
                            require mem[_13354 + 64] == mem[_13354 + 76 len 20]
                            mem[_13370 + 64] = mem[_13354 + 64]
                            mem[_13370 + 96] = mem[_13354 + 96]
                            mem[_8512 + 480] = mem[_13370 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13498 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13514 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13514] = mem[_13498]
                            require mem[_13498 + 32] == bool(mem[_13498 + 32])
                            mem[_13514 + 32] = mem[_13498 + 32]
                            require mem[_13498 + 64] == mem[_13498 + 76 len 20]
                            mem[_13514 + 64] = mem[_13498 + 64]
                            mem[_13514 + 96] = mem[_13498 + 96]
                            mem[_8512 + 384] = mem[_13514]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13642 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13642]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13706 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13706]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13770 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13770] == mem[_13770 + 12 len 20]
                            mem[_8512 + 64] = mem[_13770 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13834 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13834]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13930 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13954 = mem[_13930]
                                mem[_8512 + 576] = mem[_13930]
                                mem[mem[64] + 4] = _13954
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13954
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13994 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13994]
                require s < mem[ceil32(return_data.size) + 96]
                mem[(32 * s) + ceil32(return_data.size) + 128] = _8512
                idx = idx + 1
                s = s + 1
                continue 
            _8383 = mem[64]
            mem[mem[64]] = 32
            _8396 = mem[ceil32(return_data.size) + 96]
            mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
            idx = 0
            s = ceil32(return_data.size) + 128
            t = mem[64] + 64
            u = mem[64] + (32 * _8396) + 64
            while idx < _8396:
                mem[t] = u + -_8383 - 64
                _11161 = mem[s]
                mem[u] = mem[mem[s] + 12 len 20]
                mem[u + 32] = mem[_11161 + 44 len 20]
                mem[u + 64] = mem[_11161 + 76 len 20]
                _11261 = mem[_11161 + 96]
                mem[u + 96] = 640
                _11269 = mem[_11261]
                mem[u + 640] = mem[_11261]
                v = 0
                while v < _11269:
                    mem[v + u + 672] = mem[v + _11261 + 32]
                    v = v + 32
                    continue 
                if ceil32(_11269) <= _11269:
                    _12684 = mem[_11161 + 128]
                    mem[u + 128] = ceil32(_11269) + 672
                    _12695 = mem[_12684]
                    mem[ceil32(_11269) + u + 672] = mem[_12684]
                    v = 0
                    while v < _12695:
                        mem[v + ceil32(_11269) + u + 704] = mem[v + _12684 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_12695) > _12695:
                        mem[ceil32(_11269) + u + _12695 + 704] = 0
                    mem[u + 160] = mem[_11161 + 160]
                    mem[u + 192] = mem[_11161 + 192]
                    mem[u + 224] = bool(mem[_11161 + 224])
                    mem[u + 256] = mem[_11161 + 256]
                    mem[u + 288] = mem[_11161 + 288]
                    mem[u + 320] = mem[_11161 + 320]
                    mem[u + 352] = mem[_11161 + 352]
                    mem[u + 384] = mem[_11161 + 384]
                    mem[u + 416] = bool(mem[_11161 + 416])
                    mem[u + 448] = bool(mem[_11161 + 448])
                    mem[u + 480] = mem[_11161 + 480]
                    mem[u + 512] = bool(mem[_11161 + 512])
                    mem[u + 544] = mem[_11161 + 544]
                    mem[u + 576] = mem[_11161 + 576]
                    mem[u + 608] = mem[_11161 + 608]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    u = ceil32(_12695) + ceil32(_11269) + u + 704
                    continue 
                mem[u + _11269 + 672] = 0
                _12696 = mem[_11161 + 128]
                mem[u + 128] = ceil32(_11269) + 672
                _12704 = mem[_12696]
                mem[ceil32(_11269) + u + 672] = mem[_12696]
                v = 0
                while v < _12704:
                    mem[v + ceil32(_11269) + u + 704] = mem[v + _12696 + 32]
                    v = v + 32
                    continue 
                if ceil32(_12704) > _12704:
                    mem[ceil32(_11269) + u + _12704 + 704] = 0
                mem[u + 160] = mem[_11161 + 160]
                mem[u + 192] = mem[_11161 + 192]
                mem[u + 224] = bool(mem[_11161 + 224])
                mem[u + 256] = mem[_11161 + 256]
                mem[u + 288] = mem[_11161 + 288]
                mem[u + 320] = mem[_11161 + 320]
                mem[u + 352] = mem[_11161 + 352]
                mem[u + 384] = mem[_11161 + 384]
                mem[u + 416] = bool(mem[_11161 + 416])
                mem[u + 448] = bool(mem[_11161 + 448])
                mem[u + 480] = mem[_11161 + 480]
                mem[u + 512] = bool(mem[_11161 + 512])
                mem[u + 544] = mem[_11161 + 544]
                mem[u + 576] = mem[_11161 + 576]
                mem[u + 608] = mem[_11161 + 608]
                idx = idx + 1
                s = s + 32
                t = t + 32
                u = ceil32(_12704) + ceil32(_11269) + u + 704
                continue 
    return memory
      from mem[64]
       len u - mem[64]
}

function iterateReverseProposalList(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg2 > arg1:
        revert with 0, 'INVAID_PARAMTERS'
    require ext_code.size(governanceAddress)
    staticcall governanceAddress.ballotCount() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if arg1 <= ext_call.return_data[0]:
        require arg1 - arg2 <= test266151307()
        mem[ceil32(return_data.size) + 96] = arg1 - arg2
        mem[64] = ceil32(return_data.size) + (32 * arg1 - arg2) + 128
        if not arg1 - arg2:
            idx = 0
            s = 0
            while idx < arg1 - arg2:
                mem[mem[64] + 4] = idx
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.ballots(uint256 rg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2701 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2709 = mem[_2701]
                require mem[_2701] == mem[_2701 + 12 len 20]
                _2734 = mem[64]
                mem[64] = mem[64] + 640
                mem[_2734] = 0
                mem[_2734 + 32] = 0
                mem[_2734 + 64] = 0
                mem[_2734 + 96] = 96
                mem[_2734 + 128] = 96
                mem[_2734 + 160] = 0
                mem[_2734 + 192] = 0
                mem[_2734 + 224] = 0
                mem[_2734 + 256] = 0
                mem[_2734 + 288] = 0
                mem[_2734 + 320] = 0
                mem[_2734 + 352] = 0
                mem[_2734 + 384] = 0
                mem[_2734 + 416] = 0
                mem[_2734 + 448] = 0
                mem[_2734 + 480] = 0
                mem[_2734 + 512] = 0
                mem[_2734 + 544] = 0
                mem[_2734 + 576] = 0
                mem[_2734 + 608] = 0
                require ext_code.size(address(_2709))
                staticcall address(_2709).proposer() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2745 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2745] == mem[_2745 + 12 len 20]
                mem[_2734] = mem[_2745 + 12 len 20]
                mem[mem[64]] = 0xa59a98c00000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_2709))
                staticcall address(_2709).subject() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2782 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2789 = mem[_2782]
                require mem[_2782] <= test266151307()
                require _2782 + mem[_2782] + 31 < _2782 + return_data.size
                _2813 = mem[_2782 + mem[_2782]]
                require mem[_2782 + mem[_2782]] <= test266151307()
                require ceil32(mem[_2782 + mem[_2782]]) + 32 >= 0 and _2782 + ceil32(return_data.size) + ceil32(mem[_2782 + mem[_2782]]) + 32 <= test266151307()
                mem[64] = _2782 + ceil32(return_data.size) + ceil32(mem[_2782 + mem[_2782]]) + 32
                mem[_2782 + ceil32(return_data.size)] = _2813
                require _2789 + _2813 + 32 <= return_data.size
                t = 0
                while t < _2813:
                    mem[t + _2782 + ceil32(return_data.size) + 32] = mem[t + _2782 + _2789 + 32]
                    t = t + 32
                    continue 
                if ceil32(_2813) <= _2813:
                    mem[_2734 + 96] = _2782 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_2709))
                    staticcall address(_2709).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5572 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5582 = mem[_5572]
                    require mem[_5572] <= test266151307()
                    require _5572 + mem[_5572] + 31 < _5572 + return_data.size
                    _5593 = mem[_5572 + mem[_5572]]
                    require mem[_5572 + mem[_5572]] <= test266151307()
                    require ceil32(mem[_5572 + mem[_5572]]) + 32 >= 0 and _5572 + ceil32(return_data.size) + ceil32(mem[_5572 + mem[_5572]]) + 32 <= test266151307()
                    mem[64] = _5572 + ceil32(return_data.size) + ceil32(mem[_5572 + mem[_5572]]) + 32
                    mem[_5572 + ceil32(return_data.size)] = _5593
                    require _5582 + _5593 + 32 <= return_data.size
                    t = 0
                    while t < _5593:
                        mem[t + _5572 + ceil32(return_data.size) + 32] = mem[t + _5572 + _5582 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_5593) <= _5593:
                        mem[_2734 + 128] = _5572 + ceil32(return_data.size)
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8412 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 160] = mem[_8412]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8462 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 192] = mem[_8462]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8579 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8579]:
                            mem[_2734 + 224] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8689 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8689] == bool(mem[_8689])
                            mem[_2734 + 512] = bool(mem[_8689])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8825 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8825]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8951 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8951]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9031 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9031]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9103 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9123 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9123] = mem[_9103]
                            require mem[_9103 + 32] == bool(mem[_9103 + 32])
                            mem[_9123 + 32] = mem[_9103 + 32]
                            require mem[_9103 + 64] == mem[_9103 + 76 len 20]
                            mem[_9123 + 64] = mem[_9103 + 64]
                            mem[_9123 + 96] = mem[_9103 + 96]
                            mem[_2734 + 448] = bool(mem[_9123 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9309 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9349 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9349] = mem[_9309]
                            require mem[_9309 + 32] == bool(mem[_9309 + 32])
                            mem[_9349 + 32] = mem[_9309 + 32]
                            require mem[_9309 + 64] == mem[_9309 + 76 len 20]
                            mem[_9349 + 64] = mem[_9309 + 64]
                            mem[_9349 + 96] = mem[_9309 + 96]
                            mem[_2734 + 480] = mem[_9349 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9559 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9599 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9599] = mem[_9559]
                            require mem[_9559 + 32] == bool(mem[_9559 + 32])
                            mem[_9599 + 32] = mem[_9559 + 32]
                            require mem[_9559 + 64] == mem[_9559 + 76 len 20]
                            mem[_9599 + 64] = mem[_9559 + 64]
                            mem[_9599 + 96] = mem[_9559 + 96]
                            mem[_2734 + 384] = mem[_9599]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9827 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9827]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9955 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9955]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10071 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10071] == mem[_10071 + 12 len 20]
                            mem[_2734 + 64] = mem[_10071 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10235 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10235]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10395 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10447 = mem[_10395]
                                mem[_2734 + 576] = mem[_10395]
                                mem[mem[64] + 4] = _10447
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10447
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10551 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10551]
                        else:
                            mem[_2734 + 224] = 0
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8690 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8690] == bool(mem[_8690])
                            mem[_2734 + 512] = bool(mem[_8690])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8826 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8826]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8952 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8952]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9032 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9032]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9104 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9124 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9124] = mem[_9104]
                            require mem[_9104 + 32] == bool(mem[_9104 + 32])
                            mem[_9124 + 32] = mem[_9104 + 32]
                            require mem[_9104 + 64] == mem[_9104 + 76 len 20]
                            mem[_9124 + 64] = mem[_9104 + 64]
                            mem[_9124 + 96] = mem[_9104 + 96]
                            mem[_2734 + 448] = bool(mem[_9124 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9310 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9350 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9350] = mem[_9310]
                            require mem[_9310 + 32] == bool(mem[_9310 + 32])
                            mem[_9350 + 32] = mem[_9310 + 32]
                            require mem[_9310 + 64] == mem[_9310 + 76 len 20]
                            mem[_9350 + 64] = mem[_9310 + 64]
                            mem[_9350 + 96] = mem[_9310 + 96]
                            mem[_2734 + 480] = mem[_9350 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9560 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9600 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9600] = mem[_9560]
                            require mem[_9560 + 32] == bool(mem[_9560 + 32])
                            mem[_9600 + 32] = mem[_9560 + 32]
                            require mem[_9560 + 64] == mem[_9560 + 76 len 20]
                            mem[_9600 + 64] = mem[_9560 + 64]
                            mem[_9600 + 96] = mem[_9560 + 96]
                            mem[_2734 + 384] = mem[_9600]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9828 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9828]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9956 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9956]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10072 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10072] == mem[_10072 + 12 len 20]
                            mem[_2734 + 64] = mem[_10072 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10236 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10236]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10396 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10448 = mem[_10396]
                                mem[_2734 + 576] = mem[_10396]
                                mem[mem[64] + 4] = _10448
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10448
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10552 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10552]
                    else:
                        mem[_5572 + ceil32(return_data.size) + _5593 + 32] = 0
                        mem[_2734 + 128] = _5572 + ceil32(return_data.size)
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8419 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 160] = mem[_8419]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8477 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 192] = mem[_8477]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8590 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8590]:
                            mem[_2734 + 224] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8697 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8697] == bool(mem[_8697])
                            mem[_2734 + 512] = bool(mem[_8697])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8847 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8847]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8959 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8959]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9041 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9041]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9111 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9131 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9131] = mem[_9111]
                            require mem[_9111 + 32] == bool(mem[_9111 + 32])
                            mem[_9131 + 32] = mem[_9111 + 32]
                            require mem[_9111 + 64] == mem[_9111 + 76 len 20]
                            mem[_9131 + 64] = mem[_9111 + 64]
                            mem[_9131 + 96] = mem[_9111 + 96]
                            mem[_2734 + 448] = bool(mem[_9131 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9325 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9361 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9361] = mem[_9325]
                            require mem[_9325 + 32] == bool(mem[_9325 + 32])
                            mem[_9361 + 32] = mem[_9325 + 32]
                            require mem[_9325 + 64] == mem[_9325 + 76 len 20]
                            mem[_9361 + 64] = mem[_9325 + 64]
                            mem[_9361 + 96] = mem[_9325 + 96]
                            mem[_2734 + 480] = mem[_9361 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9575 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9615 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9615] = mem[_9575]
                            require mem[_9575 + 32] == bool(mem[_9575 + 32])
                            mem[_9615 + 32] = mem[_9575 + 32]
                            require mem[_9575 + 64] == mem[_9575 + 76 len 20]
                            mem[_9615 + 64] = mem[_9575 + 64]
                            mem[_9615 + 96] = mem[_9575 + 96]
                            mem[_2734 + 384] = mem[_9615]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9847 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9847]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9975 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9975]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10087 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10087] == mem[_10087 + 12 len 20]
                            mem[_2734 + 64] = mem[_10087 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10255 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10255]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10423 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10461 = mem[_10423]
                                mem[_2734 + 576] = mem[_10423]
                                mem[mem[64] + 4] = _10461
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10461
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10567 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10567]
                        else:
                            mem[_2734 + 224] = 0
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8698 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8698] == bool(mem[_8698])
                            mem[_2734 + 512] = bool(mem[_8698])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8848 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8848]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8960 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8960]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9042 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9042]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9112 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9132 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9132] = mem[_9112]
                            require mem[_9112 + 32] == bool(mem[_9112 + 32])
                            mem[_9132 + 32] = mem[_9112 + 32]
                            require mem[_9112 + 64] == mem[_9112 + 76 len 20]
                            mem[_9132 + 64] = mem[_9112 + 64]
                            mem[_9132 + 96] = mem[_9112 + 96]
                            mem[_2734 + 448] = bool(mem[_9132 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9326 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9362 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9362] = mem[_9326]
                            require mem[_9326 + 32] == bool(mem[_9326 + 32])
                            mem[_9362 + 32] = mem[_9326 + 32]
                            require mem[_9326 + 64] == mem[_9326 + 76 len 20]
                            mem[_9362 + 64] = mem[_9326 + 64]
                            mem[_9362 + 96] = mem[_9326 + 96]
                            mem[_2734 + 480] = mem[_9362 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9576 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9616 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9616] = mem[_9576]
                            require mem[_9576 + 32] == bool(mem[_9576 + 32])
                            mem[_9616 + 32] = mem[_9576 + 32]
                            require mem[_9576 + 64] == mem[_9576 + 76 len 20]
                            mem[_9616 + 64] = mem[_9576 + 64]
                            mem[_9616 + 96] = mem[_9576 + 96]
                            mem[_2734 + 384] = mem[_9616]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9848 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9848]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9976 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9976]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10088 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10088] == mem[_10088 + 12 len 20]
                            mem[_2734 + 64] = mem[_10088 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10256 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10256]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10424 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10462 = mem[_10424]
                                mem[_2734 + 576] = mem[_10424]
                                mem[mem[64] + 4] = _10462
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10462
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10568 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10568]
                else:
                    mem[_2782 + ceil32(return_data.size) + _2813 + 32] = 0
                    mem[_2734 + 96] = _2782 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_2709))
                    staticcall address(_2709).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5575 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5588 = mem[_5575]
                    require mem[_5575] <= test266151307()
                    require _5575 + mem[_5575] + 31 < _5575 + return_data.size
                    _5597 = mem[_5575 + mem[_5575]]
                    require mem[_5575 + mem[_5575]] <= test266151307()
                    require ceil32(mem[_5575 + mem[_5575]]) + 32 >= 0 and _5575 + ceil32(return_data.size) + ceil32(mem[_5575 + mem[_5575]]) + 32 <= test266151307()
                    mem[64] = _5575 + ceil32(return_data.size) + ceil32(mem[_5575 + mem[_5575]]) + 32
                    mem[_5575 + ceil32(return_data.size)] = _5597
                    require _5588 + _5597 + 32 <= return_data.size
                    t = 0
                    while t < _5597:
                        mem[t + _5575 + ceil32(return_data.size) + 32] = mem[t + _5575 + _5588 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_5597) <= _5597:
                        mem[_2734 + 128] = _5575 + ceil32(return_data.size)
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8413 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 160] = mem[_8413]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8463 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 192] = mem[_8463]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8580 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8580]:
                            mem[_2734 + 224] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8691 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8691] == bool(mem[_8691])
                            mem[_2734 + 512] = bool(mem[_8691])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8827 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8827]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8953 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8953]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9033 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9033]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9105 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9125 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9125] = mem[_9105]
                            require mem[_9105 + 32] == bool(mem[_9105 + 32])
                            mem[_9125 + 32] = mem[_9105 + 32]
                            require mem[_9105 + 64] == mem[_9105 + 76 len 20]
                            mem[_9125 + 64] = mem[_9105 + 64]
                            mem[_9125 + 96] = mem[_9105 + 96]
                            mem[_2734 + 448] = bool(mem[_9125 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9311 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9351 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9351] = mem[_9311]
                            require mem[_9311 + 32] == bool(mem[_9311 + 32])
                            mem[_9351 + 32] = mem[_9311 + 32]
                            require mem[_9311 + 64] == mem[_9311 + 76 len 20]
                            mem[_9351 + 64] = mem[_9311 + 64]
                            mem[_9351 + 96] = mem[_9311 + 96]
                            mem[_2734 + 480] = mem[_9351 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9561 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9601 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9601] = mem[_9561]
                            require mem[_9561 + 32] == bool(mem[_9561 + 32])
                            mem[_9601 + 32] = mem[_9561 + 32]
                            require mem[_9561 + 64] == mem[_9561 + 76 len 20]
                            mem[_9601 + 64] = mem[_9561 + 64]
                            mem[_9601 + 96] = mem[_9561 + 96]
                            mem[_2734 + 384] = mem[_9601]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9829 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9829]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9957 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9957]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10073 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10073] == mem[_10073 + 12 len 20]
                            mem[_2734 + 64] = mem[_10073 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10237 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10237]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10397 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10449 = mem[_10397]
                                mem[_2734 + 576] = mem[_10397]
                                mem[mem[64] + 4] = _10449
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10449
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10553 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10553]
                        else:
                            mem[_2734 + 224] = 0
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8692 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8692] == bool(mem[_8692])
                            mem[_2734 + 512] = bool(mem[_8692])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8828 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8828]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8954 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8954]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9034 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9034]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9106 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9126 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9126] = mem[_9106]
                            require mem[_9106 + 32] == bool(mem[_9106 + 32])
                            mem[_9126 + 32] = mem[_9106 + 32]
                            require mem[_9106 + 64] == mem[_9106 + 76 len 20]
                            mem[_9126 + 64] = mem[_9106 + 64]
                            mem[_9126 + 96] = mem[_9106 + 96]
                            mem[_2734 + 448] = bool(mem[_9126 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9312 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9352 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9352] = mem[_9312]
                            require mem[_9312 + 32] == bool(mem[_9312 + 32])
                            mem[_9352 + 32] = mem[_9312 + 32]
                            require mem[_9312 + 64] == mem[_9312 + 76 len 20]
                            mem[_9352 + 64] = mem[_9312 + 64]
                            mem[_9352 + 96] = mem[_9312 + 96]
                            mem[_2734 + 480] = mem[_9352 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9562 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9602 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9602] = mem[_9562]
                            require mem[_9562 + 32] == bool(mem[_9562 + 32])
                            mem[_9602 + 32] = mem[_9562 + 32]
                            require mem[_9562 + 64] == mem[_9562 + 76 len 20]
                            mem[_9602 + 64] = mem[_9562 + 64]
                            mem[_9602 + 96] = mem[_9562 + 96]
                            mem[_2734 + 384] = mem[_9602]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9830 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9830]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9958 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9958]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10074 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10074] == mem[_10074 + 12 len 20]
                            mem[_2734 + 64] = mem[_10074 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10238 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10238]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10398 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10450 = mem[_10398]
                                mem[_2734 + 576] = mem[_10398]
                                mem[mem[64] + 4] = _10450
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10450
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10554 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10554]
                    else:
                        mem[_5575 + ceil32(return_data.size) + _5597 + 32] = 0
                        mem[_2734 + 128] = _5575 + ceil32(return_data.size)
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8420 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 160] = mem[_8420]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8478 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2734 + 192] = mem[_8478]
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8591 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8591]:
                            mem[_2734 + 224] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8699 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8699] == bool(mem[_8699])
                            mem[_2734 + 512] = bool(mem[_8699])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8849 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8849]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8961 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8961]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9043 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9043]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9113 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9133 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9133] = mem[_9113]
                            require mem[_9113 + 32] == bool(mem[_9113 + 32])
                            mem[_9133 + 32] = mem[_9113 + 32]
                            require mem[_9113 + 64] == mem[_9113 + 76 len 20]
                            mem[_9133 + 64] = mem[_9113 + 64]
                            mem[_9133 + 96] = mem[_9113 + 96]
                            mem[_2734 + 448] = bool(mem[_9133 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9327 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9363 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9363] = mem[_9327]
                            require mem[_9327 + 32] == bool(mem[_9327 + 32])
                            mem[_9363 + 32] = mem[_9327 + 32]
                            require mem[_9327 + 64] == mem[_9327 + 76 len 20]
                            mem[_9363 + 64] = mem[_9327 + 64]
                            mem[_9363 + 96] = mem[_9327 + 96]
                            mem[_2734 + 480] = mem[_9363 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9577 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9617 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9617] = mem[_9577]
                            require mem[_9577 + 32] == bool(mem[_9577 + 32])
                            mem[_9617 + 32] = mem[_9577 + 32]
                            require mem[_9577 + 64] == mem[_9577 + 76 len 20]
                            mem[_9617 + 64] = mem[_9577 + 64]
                            mem[_9617 + 96] = mem[_9577 + 96]
                            mem[_2734 + 384] = mem[_9617]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9849 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9849]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9977 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9977]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10089 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10089] == mem[_10089 + 12 len 20]
                            mem[_2734 + 64] = mem[_10089 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10257 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10257]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10425 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10465 = mem[_10425]
                                mem[_2734 + 576] = mem[_10425]
                                mem[mem[64] + 4] = _10465
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10465
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10569 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10569]
                        else:
                            mem[_2734 + 224] = 0
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8700 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8700] == bool(mem[_8700])
                            mem[_2734 + 512] = bool(mem[_8700])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8850 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 256] = mem[_8850]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8962 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 288] = mem[_8962]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9044 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 320] = mem[_9044]
                            mem[_2734 + 32] = address(_2709)
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9114 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9134 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9134] = mem[_9114]
                            require mem[_9114 + 32] == bool(mem[_9114 + 32])
                            mem[_9134 + 32] = mem[_9114 + 32]
                            require mem[_9114 + 64] == mem[_9114 + 76 len 20]
                            mem[_9134 + 64] = mem[_9114 + 64]
                            mem[_9134 + 96] = mem[_9114 + 96]
                            mem[_2734 + 448] = bool(mem[_9134 + 32])
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9328 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9364 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9364] = mem[_9328]
                            require mem[_9328 + 32] == bool(mem[_9328 + 32])
                            mem[_9364 + 32] = mem[_9328 + 32]
                            require mem[_9328 + 64] == mem[_9328 + 76 len 20]
                            mem[_9364 + 64] = mem[_9328 + 64]
                            mem[_9364 + 96] = mem[_9328 + 96]
                            mem[_2734 + 480] = mem[_9364 + 96]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9578 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9618 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9618] = mem[_9578]
                            require mem[_9578 + 32] == bool(mem[_9578 + 32])
                            mem[_9618 + 32] = mem[_9578 + 32]
                            require mem[_9578 + 64] == mem[_9578 + 76 len 20]
                            mem[_9618 + 64] = mem[_9578 + 64]
                            mem[_9618 + 96] = mem[_9578 + 96]
                            mem[_2734 + 384] = mem[_9618]
                            mem[mem[64] + 4] = address(_2709)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2709), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9850 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 416] = 1 == mem[_9850]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9978 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 352] = mem[_9978]
                            mem[mem[64] + 4] = address(_2709)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2709)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10090 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10090] == mem[_10090 + 12 len 20]
                            mem[_2734 + 64] = mem[_10090 + 12 len 20]
                            require ext_code.size(address(_2709))
                            staticcall address(_2709).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10258 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2734 + 544] = mem[_10258]
                            if 1 == mem[_2734 + 352]:
                                mem[mem[64] + 4] = address(_2709)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2709)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10426 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10466 = mem[_10426]
                                mem[_2734 + 576] = mem[_10426]
                                mem[mem[64] + 4] = _10466
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10466
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10570 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2734 + 608] = mem[_10570]
                require s < mem[ceil32(return_data.size) + 96]
                mem[(32 * s) + ceil32(return_data.size) + 128] = _2734
                idx = idx + 1
                s = s + 1
                continue 
            _2695 = mem[64]
            mem[mem[64]] = 32
            _2699 = mem[ceil32(return_data.size) + 96]
            mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
            idx = 0
            s = ceil32(return_data.size) + 128
            t = mem[64] + 64
            u = mem[64] + (32 * _2699) + 64
            while idx < _2699:
                mem[t] = u + -_2695 - 64
                _5551 = mem[s]
                mem[u] = mem[mem[s] + 12 len 20]
                mem[u + 32] = mem[_5551 + 44 len 20]
                mem[u + 64] = mem[_5551 + 76 len 20]
                _5581 = mem[_5551 + 96]
                mem[u + 96] = 640
                _5587 = mem[_5581]
                mem[u + 640] = mem[_5581]
                v = 0
                while v < _5587:
                    mem[v + u + 672] = mem[v + _5581 + 32]
                    v = v + 32
                    continue 
                if ceil32(_5587) <= _5587:
                    _8385 = mem[_5551 + 128]
                    mem[u + 128] = ceil32(_5587) + 672
                    _8397 = mem[_8385]
                    mem[ceil32(_5587) + u + 672] = mem[_8385]
                    v = 0
                    while v < _8397:
                        mem[v + ceil32(_5587) + u + 704] = mem[v + _8385 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_8397) > _8397:
                        mem[ceil32(_5587) + u + _8397 + 704] = 0
                    mem[u + 160] = mem[_5551 + 160]
                    mem[u + 192] = mem[_5551 + 192]
                    mem[u + 224] = bool(mem[_5551 + 224])
                    mem[u + 256] = mem[_5551 + 256]
                    mem[u + 288] = mem[_5551 + 288]
                    mem[u + 320] = mem[_5551 + 320]
                    mem[u + 352] = mem[_5551 + 352]
                    mem[u + 384] = mem[_5551 + 384]
                    mem[u + 416] = bool(mem[_5551 + 416])
                    mem[u + 448] = bool(mem[_5551 + 448])
                    mem[u + 480] = mem[_5551 + 480]
                    mem[u + 512] = bool(mem[_5551 + 512])
                    mem[u + 544] = mem[_5551 + 544]
                    mem[u + 576] = mem[_5551 + 576]
                    mem[u + 608] = mem[_5551 + 608]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    u = ceil32(_8397) + ceil32(_5587) + u + 704
                    continue 
                mem[u + _5587 + 672] = 0
                _8398 = mem[_5551 + 128]
                mem[u + 128] = ceil32(_5587) + 672
                _8411 = mem[_8398]
                mem[ceil32(_5587) + u + 672] = mem[_8398]
                v = 0
                while v < _8411:
                    mem[v + ceil32(_5587) + u + 704] = mem[v + _8398 + 32]
                    v = v + 32
                    continue 
                if ceil32(_8411) > _8411:
                    mem[ceil32(_5587) + u + _8411 + 704] = 0
                mem[u + 160] = mem[_5551 + 160]
                mem[u + 192] = mem[_5551 + 192]
                mem[u + 224] = bool(mem[_5551 + 224])
                mem[u + 256] = mem[_5551 + 256]
                mem[u + 288] = mem[_5551 + 288]
                mem[u + 320] = mem[_5551 + 320]
                mem[u + 352] = mem[_5551 + 352]
                mem[u + 384] = mem[_5551 + 384]
                mem[u + 416] = bool(mem[_5551 + 416])
                mem[u + 448] = bool(mem[_5551 + 448])
                mem[u + 480] = mem[_5551 + 480]
                mem[u + 512] = bool(mem[_5551 + 512])
                mem[u + 544] = mem[_5551 + 544]
                mem[u + 576] = mem[_5551 + 576]
                mem[u + 608] = mem[_5551 + 608]
                idx = idx + 1
                s = s + 32
                t = t + 32
                u = ceil32(_8411) + ceil32(_5587) + u + 704
                continue 
        else:
            mem[64] = ceil32(return_data.size) + (32 * arg1 - arg2) + 768
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 128] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 160] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 192] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 224] = 96
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 256] = 96
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 288] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 320] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 352] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 384] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 416] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 448] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 480] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 512] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 544] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 576] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 608] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 640] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 672] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 704] = 0
            mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 736] = 0
            mem[var22001] = ceil32(return_data.size) + (32 * arg1 - arg2) + 128
            s = var22001
            idx = var22002
            while idx - 1:
                mem[64] = mem[64] + 640
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 128] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 160] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 192] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 224] = 96
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 256] = 96
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 288] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 320] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 352] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 384] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 416] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 448] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 480] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 512] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 544] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 576] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 608] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 640] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 672] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 704] = 0
                mem[ceil32(return_data.size) + (32 * arg1 - arg2) + 736] = 0
                mem[s + 32] = ceil32(return_data.size) + (32 * arg1 - arg2) + 128
                s = s + 32
                idx = idx - 1
                continue 
            idx = 0
            s = 0
            while idx < arg1 - arg2:
                mem[mem[64] + 4] = idx
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.ballots(uint256 rg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8403 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8423 = mem[_8403]
                require mem[_8403] == mem[_8403 + 12 len 20]
                _8499 = mem[64]
                mem[64] = mem[64] + 640
                mem[_8499] = 0
                mem[_8499 + 32] = 0
                mem[_8499 + 64] = 0
                mem[_8499 + 96] = 96
                mem[_8499 + 128] = 96
                mem[_8499 + 160] = 0
                mem[_8499 + 192] = 0
                mem[_8499 + 224] = 0
                mem[_8499 + 256] = 0
                mem[_8499 + 288] = 0
                mem[_8499 + 320] = 0
                mem[_8499 + 352] = 0
                mem[_8499 + 384] = 0
                mem[_8499 + 416] = 0
                mem[_8499 + 448] = 0
                mem[_8499 + 480] = 0
                mem[_8499 + 512] = 0
                mem[_8499 + 544] = 0
                mem[_8499 + 576] = 0
                mem[_8499 + 608] = 0
                require ext_code.size(address(_8423))
                staticcall address(_8423).proposer() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8581 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_8581] == mem[_8581 + 12 len 20]
                mem[_8499] = mem[_8581 + 12 len 20]
                mem[mem[64]] = 0xa59a98c00000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_8423))
                staticcall address(_8423).subject() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8702 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8723 = mem[_8702]
                require mem[_8702] <= test266151307()
                require _8702 + mem[_8702] + 31 < _8702 + return_data.size
                _8753 = mem[_8702 + mem[_8702]]
                require mem[_8702 + mem[_8702]] <= test266151307()
                require ceil32(mem[_8702 + mem[_8702]]) + 32 >= 0 and _8702 + ceil32(return_data.size) + ceil32(mem[_8702 + mem[_8702]]) + 32 <= test266151307()
                mem[64] = _8702 + ceil32(return_data.size) + ceil32(mem[_8702 + mem[_8702]]) + 32
                mem[_8702 + ceil32(return_data.size)] = _8753
                require _8723 + _8753 + 32 <= return_data.size
                t = 0
                while t < _8753:
                    mem[t + _8702 + ceil32(return_data.size) + 32] = mem[t + _8702 + _8723 + 32]
                    t = t + 32
                    continue 
                if ceil32(_8753) <= _8753:
                    mem[_8499 + 96] = _8702 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_8423))
                    staticcall address(_8423).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11214 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11258 = mem[_11214]
                    require mem[_11214] <= test266151307()
                    require _11214 + mem[_11214] + 31 < _11214 + return_data.size
                    _11275 = mem[_11214 + mem[_11214]]
                    require mem[_11214 + mem[_11214]] <= test266151307()
                    require ceil32(mem[_11214 + mem[_11214]]) + 32 >= 0 and _11214 + ceil32(return_data.size) + ceil32(mem[_11214 + mem[_11214]]) + 32 <= test266151307()
                    mem[64] = _11214 + ceil32(return_data.size) + ceil32(mem[_11214 + mem[_11214]]) + 32
                    mem[_11214 + ceil32(return_data.size)] = _11275
                    require _11258 + _11275 + 32 <= return_data.size
                    t = 0
                    while t < _11275:
                        mem[t + _11214 + ceil32(return_data.size) + 32] = mem[t + _11214 + _11258 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_11275) <= _11275:
                        mem[_8499 + 128] = _11214 + ceil32(return_data.size)
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12702 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 160] = mem[_12702]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12742 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 192] = mem[_12742]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12847 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12847]:
                            mem[_8499 + 224] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12939 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12939] == bool(mem[_12939])
                            mem[_8499 + 512] = bool(mem[_12939])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13003 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13003]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13067 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13067]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13131 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13131]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13195 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13211 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13211] = mem[_13195]
                            require mem[_13195 + 32] == bool(mem[_13195 + 32])
                            mem[_13211 + 32] = mem[_13195 + 32]
                            require mem[_13195 + 64] == mem[_13195 + 76 len 20]
                            mem[_13211 + 64] = mem[_13195 + 64]
                            mem[_13211 + 96] = mem[_13195 + 96]
                            mem[_8499 + 448] = bool(mem[_13211 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13339 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13355 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13355] = mem[_13339]
                            require mem[_13339 + 32] == bool(mem[_13339 + 32])
                            mem[_13355 + 32] = mem[_13339 + 32]
                            require mem[_13339 + 64] == mem[_13339 + 76 len 20]
                            mem[_13355 + 64] = mem[_13339 + 64]
                            mem[_13355 + 96] = mem[_13339 + 96]
                            mem[_8499 + 480] = mem[_13355 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13483 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13499 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13499] = mem[_13483]
                            require mem[_13483 + 32] == bool(mem[_13483 + 32])
                            mem[_13499 + 32] = mem[_13483 + 32]
                            require mem[_13483 + 64] == mem[_13483 + 76 len 20]
                            mem[_13499 + 64] = mem[_13483 + 64]
                            mem[_13499 + 96] = mem[_13483 + 96]
                            mem[_8499 + 384] = mem[_13499]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13627 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13627]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13691 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13691]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13755 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13755] == mem[_13755 + 12 len 20]
                            mem[_8499 + 64] = mem[_13755 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13819 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13819]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13915 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13931 = mem[_13915]
                                mem[_8499 + 576] = mem[_13915]
                                mem[mem[64] + 4] = _13931
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13931
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13979 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13979]
                        else:
                            mem[_8499 + 224] = 0
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12940 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12940] == bool(mem[_12940])
                            mem[_8499 + 512] = bool(mem[_12940])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13004 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13004]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13068 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13068]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13132 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13132]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13196 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13212 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13212] = mem[_13196]
                            require mem[_13196 + 32] == bool(mem[_13196 + 32])
                            mem[_13212 + 32] = mem[_13196 + 32]
                            require mem[_13196 + 64] == mem[_13196 + 76 len 20]
                            mem[_13212 + 64] = mem[_13196 + 64]
                            mem[_13212 + 96] = mem[_13196 + 96]
                            mem[_8499 + 448] = bool(mem[_13212 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13340 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13356 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13356] = mem[_13340]
                            require mem[_13340 + 32] == bool(mem[_13340 + 32])
                            mem[_13356 + 32] = mem[_13340 + 32]
                            require mem[_13340 + 64] == mem[_13340 + 76 len 20]
                            mem[_13356 + 64] = mem[_13340 + 64]
                            mem[_13356 + 96] = mem[_13340 + 96]
                            mem[_8499 + 480] = mem[_13356 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13484 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13500 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13500] = mem[_13484]
                            require mem[_13484 + 32] == bool(mem[_13484 + 32])
                            mem[_13500 + 32] = mem[_13484 + 32]
                            require mem[_13484 + 64] == mem[_13484 + 76 len 20]
                            mem[_13500 + 64] = mem[_13484 + 64]
                            mem[_13500 + 96] = mem[_13484 + 96]
                            mem[_8499 + 384] = mem[_13500]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13628 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13628]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13692 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13692]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13756 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13756] == mem[_13756 + 12 len 20]
                            mem[_8499 + 64] = mem[_13756 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13820 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13820]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13916 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13932 = mem[_13916]
                                mem[_8499 + 576] = mem[_13916]
                                mem[mem[64] + 4] = _13932
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13932
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13980 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13980]
                    else:
                        mem[_11214 + ceil32(return_data.size) + _11275 + 32] = 0
                        mem[_8499 + 128] = _11214 + ceil32(return_data.size)
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12707 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 160] = mem[_12707]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12755 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 192] = mem[_12755]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12856 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12856]:
                            mem[_8499 + 224] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12947 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12947] == bool(mem[_12947])
                            mem[_8499 + 512] = bool(mem[_12947])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13011 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13011]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13075 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13075]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13139 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13139]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13203 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13219 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13219] = mem[_13203]
                            require mem[_13203 + 32] == bool(mem[_13203 + 32])
                            mem[_13219 + 32] = mem[_13203 + 32]
                            require mem[_13203 + 64] == mem[_13203 + 76 len 20]
                            mem[_13219 + 64] = mem[_13203 + 64]
                            mem[_13219 + 96] = mem[_13203 + 96]
                            mem[_8499 + 448] = bool(mem[_13219 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13347 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13363 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13363] = mem[_13347]
                            require mem[_13347 + 32] == bool(mem[_13347 + 32])
                            mem[_13363 + 32] = mem[_13347 + 32]
                            require mem[_13347 + 64] == mem[_13347 + 76 len 20]
                            mem[_13363 + 64] = mem[_13347 + 64]
                            mem[_13363 + 96] = mem[_13347 + 96]
                            mem[_8499 + 480] = mem[_13363 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13491 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13507 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13507] = mem[_13491]
                            require mem[_13491 + 32] == bool(mem[_13491 + 32])
                            mem[_13507 + 32] = mem[_13491 + 32]
                            require mem[_13491 + 64] == mem[_13491 + 76 len 20]
                            mem[_13507 + 64] = mem[_13491 + 64]
                            mem[_13507 + 96] = mem[_13491 + 96]
                            mem[_8499 + 384] = mem[_13507]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13635 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13635]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13699 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13699]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13763 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13763] == mem[_13763 + 12 len 20]
                            mem[_8499 + 64] = mem[_13763 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13827 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13827]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13923 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13941 = mem[_13923]
                                mem[_8499 + 576] = mem[_13923]
                                mem[mem[64] + 4] = _13941
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13941
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13987 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13987]
                        else:
                            mem[_8499 + 224] = 0
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12948 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12948] == bool(mem[_12948])
                            mem[_8499 + 512] = bool(mem[_12948])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13012 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13012]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13076 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13076]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13140 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13140]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13204 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13220 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13220] = mem[_13204]
                            require mem[_13204 + 32] == bool(mem[_13204 + 32])
                            mem[_13220 + 32] = mem[_13204 + 32]
                            require mem[_13204 + 64] == mem[_13204 + 76 len 20]
                            mem[_13220 + 64] = mem[_13204 + 64]
                            mem[_13220 + 96] = mem[_13204 + 96]
                            mem[_8499 + 448] = bool(mem[_13220 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13348 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13364 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13364] = mem[_13348]
                            require mem[_13348 + 32] == bool(mem[_13348 + 32])
                            mem[_13364 + 32] = mem[_13348 + 32]
                            require mem[_13348 + 64] == mem[_13348 + 76 len 20]
                            mem[_13364 + 64] = mem[_13348 + 64]
                            mem[_13364 + 96] = mem[_13348 + 96]
                            mem[_8499 + 480] = mem[_13364 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13492 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13508 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13508] = mem[_13492]
                            require mem[_13492 + 32] == bool(mem[_13492 + 32])
                            mem[_13508 + 32] = mem[_13492 + 32]
                            require mem[_13492 + 64] == mem[_13492 + 76 len 20]
                            mem[_13508 + 64] = mem[_13492 + 64]
                            mem[_13508 + 96] = mem[_13492 + 96]
                            mem[_8499 + 384] = mem[_13508]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13636 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13636]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13700 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13700]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13764 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13764] == mem[_13764 + 12 len 20]
                            mem[_8499 + 64] = mem[_13764 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13828 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13828]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13924 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13942 = mem[_13924]
                                mem[_8499 + 576] = mem[_13924]
                                mem[mem[64] + 4] = _13942
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13942
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13988 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13988]
                else:
                    mem[_8702 + ceil32(return_data.size) + _8753 + 32] = 0
                    mem[_8499 + 96] = _8702 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_8423))
                    staticcall address(_8423).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11241 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11266 = mem[_11241]
                    require mem[_11241] <= test266151307()
                    require _11241 + mem[_11241] + 31 < _11241 + return_data.size
                    _11285 = mem[_11241 + mem[_11241]]
                    require mem[_11241 + mem[_11241]] <= test266151307()
                    require ceil32(mem[_11241 + mem[_11241]]) + 32 >= 0 and _11241 + ceil32(return_data.size) + ceil32(mem[_11241 + mem[_11241]]) + 32 <= test266151307()
                    mem[64] = _11241 + ceil32(return_data.size) + ceil32(mem[_11241 + mem[_11241]]) + 32
                    mem[_11241 + ceil32(return_data.size)] = _11285
                    require _11266 + _11285 + 32 <= return_data.size
                    t = 0
                    while t < _11285:
                        mem[t + _11241 + ceil32(return_data.size) + 32] = mem[t + _11241 + _11266 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_11285) <= _11285:
                        mem[_8499 + 128] = _11241 + ceil32(return_data.size)
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12703 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 160] = mem[_12703]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12743 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 192] = mem[_12743]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12848 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12848]:
                            mem[_8499 + 224] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12941 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12941] == bool(mem[_12941])
                            mem[_8499 + 512] = bool(mem[_12941])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13005 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13005]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13069 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13069]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13133 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13133]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13197 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13213 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13213] = mem[_13197]
                            require mem[_13197 + 32] == bool(mem[_13197 + 32])
                            mem[_13213 + 32] = mem[_13197 + 32]
                            require mem[_13197 + 64] == mem[_13197 + 76 len 20]
                            mem[_13213 + 64] = mem[_13197 + 64]
                            mem[_13213 + 96] = mem[_13197 + 96]
                            mem[_8499 + 448] = bool(mem[_13213 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13341 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13357 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13357] = mem[_13341]
                            require mem[_13341 + 32] == bool(mem[_13341 + 32])
                            mem[_13357 + 32] = mem[_13341 + 32]
                            require mem[_13341 + 64] == mem[_13341 + 76 len 20]
                            mem[_13357 + 64] = mem[_13341 + 64]
                            mem[_13357 + 96] = mem[_13341 + 96]
                            mem[_8499 + 480] = mem[_13357 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13485 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13501 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13501] = mem[_13485]
                            require mem[_13485 + 32] == bool(mem[_13485 + 32])
                            mem[_13501 + 32] = mem[_13485 + 32]
                            require mem[_13485 + 64] == mem[_13485 + 76 len 20]
                            mem[_13501 + 64] = mem[_13485 + 64]
                            mem[_13501 + 96] = mem[_13485 + 96]
                            mem[_8499 + 384] = mem[_13501]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13629 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13629]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13693 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13693]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13757 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13757] == mem[_13757 + 12 len 20]
                            mem[_8499 + 64] = mem[_13757 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13821 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13821]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13917 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13933 = mem[_13917]
                                mem[_8499 + 576] = mem[_13917]
                                mem[mem[64] + 4] = _13933
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13933
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13981 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13981]
                        else:
                            mem[_8499 + 224] = 0
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12942 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12942] == bool(mem[_12942])
                            mem[_8499 + 512] = bool(mem[_12942])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13006 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13006]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13070 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13070]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13134 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13134]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13198 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13214 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13214] = mem[_13198]
                            require mem[_13198 + 32] == bool(mem[_13198 + 32])
                            mem[_13214 + 32] = mem[_13198 + 32]
                            require mem[_13198 + 64] == mem[_13198 + 76 len 20]
                            mem[_13214 + 64] = mem[_13198 + 64]
                            mem[_13214 + 96] = mem[_13198 + 96]
                            mem[_8499 + 448] = bool(mem[_13214 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13342 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13358 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13358] = mem[_13342]
                            require mem[_13342 + 32] == bool(mem[_13342 + 32])
                            mem[_13358 + 32] = mem[_13342 + 32]
                            require mem[_13342 + 64] == mem[_13342 + 76 len 20]
                            mem[_13358 + 64] = mem[_13342 + 64]
                            mem[_13358 + 96] = mem[_13342 + 96]
                            mem[_8499 + 480] = mem[_13358 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13486 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13502 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13502] = mem[_13486]
                            require mem[_13486 + 32] == bool(mem[_13486 + 32])
                            mem[_13502 + 32] = mem[_13486 + 32]
                            require mem[_13486 + 64] == mem[_13486 + 76 len 20]
                            mem[_13502 + 64] = mem[_13486 + 64]
                            mem[_13502 + 96] = mem[_13486 + 96]
                            mem[_8499 + 384] = mem[_13502]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13630 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13630]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13694 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13694]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13758 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13758] == mem[_13758 + 12 len 20]
                            mem[_8499 + 64] = mem[_13758 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13822 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13822]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13918 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13934 = mem[_13918]
                                mem[_8499 + 576] = mem[_13918]
                                mem[mem[64] + 4] = _13934
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13934
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13982 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13982]
                    else:
                        mem[_11241 + ceil32(return_data.size) + _11285 + 32] = 0
                        mem[_8499 + 128] = _11241 + ceil32(return_data.size)
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12708 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 160] = mem[_12708]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12756 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8499 + 192] = mem[_12756]
                        require ext_code.size(address(_8423))
                        staticcall address(_8423).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12857 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12857]:
                            mem[_8499 + 224] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12949 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12949] == bool(mem[_12949])
                            mem[_8499 + 512] = bool(mem[_12949])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13013 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13013]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13077 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13077]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13141 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13141]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13205 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13221 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13221] = mem[_13205]
                            require mem[_13205 + 32] == bool(mem[_13205 + 32])
                            mem[_13221 + 32] = mem[_13205 + 32]
                            require mem[_13205 + 64] == mem[_13205 + 76 len 20]
                            mem[_13221 + 64] = mem[_13205 + 64]
                            mem[_13221 + 96] = mem[_13205 + 96]
                            mem[_8499 + 448] = bool(mem[_13221 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13349 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13365 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13365] = mem[_13349]
                            require mem[_13349 + 32] == bool(mem[_13349 + 32])
                            mem[_13365 + 32] = mem[_13349 + 32]
                            require mem[_13349 + 64] == mem[_13349 + 76 len 20]
                            mem[_13365 + 64] = mem[_13349 + 64]
                            mem[_13365 + 96] = mem[_13349 + 96]
                            mem[_8499 + 480] = mem[_13365 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13493 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13509 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13509] = mem[_13493]
                            require mem[_13493 + 32] == bool(mem[_13493 + 32])
                            mem[_13509 + 32] = mem[_13493 + 32]
                            require mem[_13493 + 64] == mem[_13493 + 76 len 20]
                            mem[_13509 + 64] = mem[_13493 + 64]
                            mem[_13509 + 96] = mem[_13493 + 96]
                            mem[_8499 + 384] = mem[_13509]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13637 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13637]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13701 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13701]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13765 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13765] == mem[_13765 + 12 len 20]
                            mem[_8499 + 64] = mem[_13765 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13829 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13829]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13925 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13945 = mem[_13925]
                                mem[_8499 + 576] = mem[_13925]
                                mem[mem[64] + 4] = _13945
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13945
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13989 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13989]
                        else:
                            mem[_8499 + 224] = 0
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12950 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12950] == bool(mem[_12950])
                            mem[_8499 + 512] = bool(mem[_12950])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13014 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 256] = mem[_13014]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13078 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 288] = mem[_13078]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13142 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 320] = mem[_13142]
                            mem[_8499 + 32] = address(_8423)
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13206 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13222 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13222] = mem[_13206]
                            require mem[_13206 + 32] == bool(mem[_13206 + 32])
                            mem[_13222 + 32] = mem[_13206 + 32]
                            require mem[_13206 + 64] == mem[_13206 + 76 len 20]
                            mem[_13222 + 64] = mem[_13206 + 64]
                            mem[_13222 + 96] = mem[_13206 + 96]
                            mem[_8499 + 448] = bool(mem[_13222 + 32])
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13350 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13366 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13366] = mem[_13350]
                            require mem[_13350 + 32] == bool(mem[_13350 + 32])
                            mem[_13366 + 32] = mem[_13350 + 32]
                            require mem[_13350 + 64] == mem[_13350 + 76 len 20]
                            mem[_13366 + 64] = mem[_13350 + 64]
                            mem[_13366 + 96] = mem[_13350 + 96]
                            mem[_8499 + 480] = mem[_13366 + 96]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13494 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13510 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13510] = mem[_13494]
                            require mem[_13494 + 32] == bool(mem[_13494 + 32])
                            mem[_13510 + 32] = mem[_13494 + 32]
                            require mem[_13494 + 64] == mem[_13494 + 76 len 20]
                            mem[_13510 + 64] = mem[_13494 + 64]
                            mem[_13510 + 96] = mem[_13494 + 96]
                            mem[_8499 + 384] = mem[_13510]
                            mem[mem[64] + 4] = address(_8423)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8423), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13638 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 416] = 1 == mem[_13638]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13702 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 352] = mem[_13702]
                            mem[mem[64] + 4] = address(_8423)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13766 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13766] == mem[_13766 + 12 len 20]
                            mem[_8499 + 64] = mem[_13766 + 12 len 20]
                            require ext_code.size(address(_8423))
                            staticcall address(_8423).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13830 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8499 + 544] = mem[_13830]
                            if 1 == mem[_8499 + 352]:
                                mem[mem[64] + 4] = address(_8423)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8423)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13926 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13946 = mem[_13926]
                                mem[_8499 + 576] = mem[_13926]
                                mem[mem[64] + 4] = _13946
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13946
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13990 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8499 + 608] = mem[_13990]
                require s < mem[ceil32(return_data.size) + 96]
                mem[(32 * s) + ceil32(return_data.size) + 128] = _8499
                idx = idx + 1
                s = s + 1
                continue 
            _8381 = mem[64]
            mem[mem[64]] = 32
            _8390 = mem[ceil32(return_data.size) + 96]
            mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
            idx = 0
            s = ceil32(return_data.size) + 128
            t = mem[64] + 64
            u = mem[64] + (32 * _8390) + 64
            while idx < _8390:
                mem[t] = u + -_8381 - 64
                _11157 = mem[s]
                mem[u] = mem[mem[s] + 12 len 20]
                mem[u + 32] = mem[_11157 + 44 len 20]
                mem[u + 64] = mem[_11157 + 76 len 20]
                _11257 = mem[_11157 + 96]
                mem[u + 96] = 640
                _11265 = mem[_11257]
                mem[u + 640] = mem[_11257]
                v = 0
                while v < _11265:
                    mem[v + u + 672] = mem[v + _11257 + 32]
                    v = v + 32
                    continue 
                if ceil32(_11265) <= _11265:
                    _12679 = mem[_11157 + 128]
                    mem[u + 128] = ceil32(_11265) + 672
                    _12689 = mem[_12679]
                    mem[ceil32(_11265) + u + 672] = mem[_12679]
                    v = 0
                    while v < _12689:
                        mem[v + ceil32(_11265) + u + 704] = mem[v + _12679 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_12689) > _12689:
                        mem[ceil32(_11265) + u + _12689 + 704] = 0
                    mem[u + 160] = mem[_11157 + 160]
                    mem[u + 192] = mem[_11157 + 192]
                    mem[u + 224] = bool(mem[_11157 + 224])
                    mem[u + 256] = mem[_11157 + 256]
                    mem[u + 288] = mem[_11157 + 288]
                    mem[u + 320] = mem[_11157 + 320]
                    mem[u + 352] = mem[_11157 + 352]
                    mem[u + 384] = mem[_11157 + 384]
                    mem[u + 416] = bool(mem[_11157 + 416])
                    mem[u + 448] = bool(mem[_11157 + 448])
                    mem[u + 480] = mem[_11157 + 480]
                    mem[u + 512] = bool(mem[_11157 + 512])
                    mem[u + 544] = mem[_11157 + 544]
                    mem[u + 576] = mem[_11157 + 576]
                    mem[u + 608] = mem[_11157 + 608]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    u = ceil32(_12689) + ceil32(_11265) + u + 704
                    continue 
                mem[u + _11265 + 672] = 0
                _12690 = mem[_11157 + 128]
                mem[u + 128] = ceil32(_11265) + 672
                _12701 = mem[_12690]
                mem[ceil32(_11265) + u + 672] = mem[_12690]
                v = 0
                while v < _12701:
                    mem[v + ceil32(_11265) + u + 704] = mem[v + _12690 + 32]
                    v = v + 32
                    continue 
                if ceil32(_12701) > _12701:
                    mem[ceil32(_11265) + u + _12701 + 704] = 0
                mem[u + 160] = mem[_11157 + 160]
                mem[u + 192] = mem[_11157 + 192]
                mem[u + 224] = bool(mem[_11157 + 224])
                mem[u + 256] = mem[_11157 + 256]
                mem[u + 288] = mem[_11157 + 288]
                mem[u + 320] = mem[_11157 + 320]
                mem[u + 352] = mem[_11157 + 352]
                mem[u + 384] = mem[_11157 + 384]
                mem[u + 416] = bool(mem[_11157 + 416])
                mem[u + 448] = bool(mem[_11157 + 448])
                mem[u + 480] = mem[_11157 + 480]
                mem[u + 512] = bool(mem[_11157 + 512])
                mem[u + 544] = mem[_11157 + 544]
                mem[u + 576] = mem[_11157 + 576]
                mem[u + 608] = mem[_11157 + 608]
                idx = idx + 1
                s = s + 32
                t = t + 32
                u = ceil32(_12701) + ceil32(_11265) + u + 704
                continue 
    else:
        require ext_call.return_data[0] - arg2 <= test266151307()
        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0] - arg2
        mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 128
        if not ext_call.return_data[0] - arg2:
            idx = 0
            s = 0
            while idx < ext_call.return_data[0] - arg2:
                mem[mem[64] + 4] = idx
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.ballots(uint256 rg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2702 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2712 = mem[_2702]
                require mem[_2702] == mem[_2702 + 12 len 20]
                _2736 = mem[64]
                mem[64] = mem[64] + 640
                mem[_2736] = 0
                mem[_2736 + 32] = 0
                mem[_2736 + 64] = 0
                mem[_2736 + 96] = 96
                mem[_2736 + 128] = 96
                mem[_2736 + 160] = 0
                mem[_2736 + 192] = 0
                mem[_2736 + 224] = 0
                mem[_2736 + 256] = 0
                mem[_2736 + 288] = 0
                mem[_2736 + 320] = 0
                mem[_2736 + 352] = 0
                mem[_2736 + 384] = 0
                mem[_2736 + 416] = 0
                mem[_2736 + 448] = 0
                mem[_2736 + 480] = 0
                mem[_2736 + 512] = 0
                mem[_2736 + 544] = 0
                mem[_2736 + 576] = 0
                mem[_2736 + 608] = 0
                require ext_code.size(address(_2712))
                staticcall address(_2712).proposer() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2747 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2747] == mem[_2747 + 12 len 20]
                mem[_2736] = mem[_2747 + 12 len 20]
                mem[mem[64]] = 0xa59a98c00000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_2712))
                staticcall address(_2712).subject() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2784 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2792 = mem[_2784]
                require mem[_2784] <= test266151307()
                require _2784 + mem[_2784] + 31 < _2784 + return_data.size
                _2820 = mem[_2784 + mem[_2784]]
                require mem[_2784 + mem[_2784]] <= test266151307()
                require ceil32(mem[_2784 + mem[_2784]]) + 32 >= 0 and _2784 + ceil32(return_data.size) + ceil32(mem[_2784 + mem[_2784]]) + 32 <= test266151307()
                mem[64] = _2784 + ceil32(return_data.size) + ceil32(mem[_2784 + mem[_2784]]) + 32
                mem[_2784 + ceil32(return_data.size)] = _2820
                require _2792 + _2820 + 32 <= return_data.size
                t = 0
                while t < _2820:
                    mem[t + _2784 + ceil32(return_data.size) + 32] = mem[t + _2784 + _2792 + 32]
                    t = t + 32
                    continue 
                if ceil32(_2820) <= _2820:
                    mem[_2736 + 96] = _2784 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_2712))
                    staticcall address(_2712).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5574 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5585 = mem[_5574]
                    require mem[_5574] <= test266151307()
                    require _5574 + mem[_5574] + 31 < _5574 + return_data.size
                    _5595 = mem[_5574 + mem[_5574]]
                    require mem[_5574 + mem[_5574]] <= test266151307()
                    require ceil32(mem[_5574 + mem[_5574]]) + 32 >= 0 and _5574 + ceil32(return_data.size) + ceil32(mem[_5574 + mem[_5574]]) + 32 <= test266151307()
                    mem[64] = _5574 + ceil32(return_data.size) + ceil32(mem[_5574 + mem[_5574]]) + 32
                    mem[_5574 + ceil32(return_data.size)] = _5595
                    require _5585 + _5595 + 32 <= return_data.size
                    t = 0
                    while t < _5595:
                        mem[t + _5574 + ceil32(return_data.size) + 32] = mem[t + _5574 + _5585 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_5595) <= _5595:
                        mem[_2736 + 128] = _5574 + ceil32(return_data.size)
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8416 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 160] = mem[_8416]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8468 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 192] = mem[_8468]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8584 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8584]:
                            mem[_2736 + 224] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8693 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8693] == bool(mem[_8693])
                            mem[_2736 + 512] = bool(mem[_8693])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8836 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8836]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8955 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8955]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9036 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9036]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9107 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9127 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9127] = mem[_9107]
                            require mem[_9107 + 32] == bool(mem[_9107 + 32])
                            mem[_9127 + 32] = mem[_9107 + 32]
                            require mem[_9107 + 64] == mem[_9107 + 76 len 20]
                            mem[_9127 + 64] = mem[_9107 + 64]
                            mem[_9127 + 96] = mem[_9107 + 96]
                            mem[_2736 + 448] = bool(mem[_9127 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9317 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9355 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9355] = mem[_9317]
                            require mem[_9317 + 32] == bool(mem[_9317 + 32])
                            mem[_9355 + 32] = mem[_9317 + 32]
                            require mem[_9317 + 64] == mem[_9317 + 76 len 20]
                            mem[_9355 + 64] = mem[_9317 + 64]
                            mem[_9355 + 96] = mem[_9317 + 96]
                            mem[_2736 + 480] = mem[_9355 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9567 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9607 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9607] = mem[_9567]
                            require mem[_9567 + 32] == bool(mem[_9567 + 32])
                            mem[_9607 + 32] = mem[_9567 + 32]
                            require mem[_9567 + 64] == mem[_9567 + 76 len 20]
                            mem[_9607 + 64] = mem[_9567 + 64]
                            mem[_9607 + 96] = mem[_9567 + 96]
                            mem[_2736 + 384] = mem[_9607]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9837 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9837]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9965 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9965]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10079 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10079] == mem[_10079 + 12 len 20]
                            mem[_2736 + 64] = mem[_10079 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10245 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10245]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10409 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10453 = mem[_10409]
                                mem[_2736 + 576] = mem[_10409]
                                mem[mem[64] + 4] = _10453
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10453
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10559 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10559]
                        else:
                            mem[_2736 + 224] = 0
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8694 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8694] == bool(mem[_8694])
                            mem[_2736 + 512] = bool(mem[_8694])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8837 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8837]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8956 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8956]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9037 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9037]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9108 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9128 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9128] = mem[_9108]
                            require mem[_9108 + 32] == bool(mem[_9108 + 32])
                            mem[_9128 + 32] = mem[_9108 + 32]
                            require mem[_9108 + 64] == mem[_9108 + 76 len 20]
                            mem[_9128 + 64] = mem[_9108 + 64]
                            mem[_9128 + 96] = mem[_9108 + 96]
                            mem[_2736 + 448] = bool(mem[_9128 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9318 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9356 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9356] = mem[_9318]
                            require mem[_9318 + 32] == bool(mem[_9318 + 32])
                            mem[_9356 + 32] = mem[_9318 + 32]
                            require mem[_9318 + 64] == mem[_9318 + 76 len 20]
                            mem[_9356 + 64] = mem[_9318 + 64]
                            mem[_9356 + 96] = mem[_9318 + 96]
                            mem[_2736 + 480] = mem[_9356 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9568 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9608 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9608] = mem[_9568]
                            require mem[_9568 + 32] == bool(mem[_9568 + 32])
                            mem[_9608 + 32] = mem[_9568 + 32]
                            require mem[_9568 + 64] == mem[_9568 + 76 len 20]
                            mem[_9608 + 64] = mem[_9568 + 64]
                            mem[_9608 + 96] = mem[_9568 + 96]
                            mem[_2736 + 384] = mem[_9608]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9838 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9838]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9966 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9966]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10080 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10080] == mem[_10080 + 12 len 20]
                            mem[_2736 + 64] = mem[_10080 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10246 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10246]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10410 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10454 = mem[_10410]
                                mem[_2736 + 576] = mem[_10410]
                                mem[mem[64] + 4] = _10454
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10454
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10560 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10560]
                    else:
                        mem[_5574 + ceil32(return_data.size) + _5595 + 32] = 0
                        mem[_2736 + 128] = _5574 + ceil32(return_data.size)
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8424 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 160] = mem[_8424]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8485 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 192] = mem[_8485]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8596 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8596]:
                            mem[_2736 + 224] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8703 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8703] == bool(mem[_8703])
                            mem[_2736 + 512] = bool(mem[_8703])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8853 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8853]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8965 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8965]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9046 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9046]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9116 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9137 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9137] = mem[_9116]
                            require mem[_9116 + 32] == bool(mem[_9116 + 32])
                            mem[_9137 + 32] = mem[_9116 + 32]
                            require mem[_9116 + 64] == mem[_9116 + 76 len 20]
                            mem[_9137 + 64] = mem[_9116 + 64]
                            mem[_9137 + 96] = mem[_9116 + 96]
                            mem[_2736 + 448] = bool(mem[_9137 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9334 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9367 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9367] = mem[_9334]
                            require mem[_9334 + 32] == bool(mem[_9334 + 32])
                            mem[_9367 + 32] = mem[_9334 + 32]
                            require mem[_9334 + 64] == mem[_9334 + 76 len 20]
                            mem[_9367 + 64] = mem[_9334 + 64]
                            mem[_9367 + 96] = mem[_9334 + 96]
                            mem[_2736 + 480] = mem[_9367 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9583 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9623 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9623] = mem[_9583]
                            require mem[_9583 + 32] == bool(mem[_9583 + 32])
                            mem[_9623 + 32] = mem[_9583 + 32]
                            require mem[_9583 + 64] == mem[_9583 + 76 len 20]
                            mem[_9623 + 64] = mem[_9583 + 64]
                            mem[_9623 + 96] = mem[_9583 + 96]
                            mem[_2736 + 384] = mem[_9623]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9855 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9855]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9983 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9983]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10097 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10097] == mem[_10097 + 12 len 20]
                            mem[_2736 + 64] = mem[_10097 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10263 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10263]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10435 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10471 = mem[_10435]
                                mem[_2736 + 576] = mem[_10435]
                                mem[mem[64] + 4] = _10471
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10471
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10575 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10575]
                        else:
                            mem[_2736 + 224] = 0
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8704 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8704] == bool(mem[_8704])
                            mem[_2736 + 512] = bool(mem[_8704])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8854 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8854]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8966 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8966]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9047 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9047]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9117 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9138 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9138] = mem[_9117]
                            require mem[_9117 + 32] == bool(mem[_9117 + 32])
                            mem[_9138 + 32] = mem[_9117 + 32]
                            require mem[_9117 + 64] == mem[_9117 + 76 len 20]
                            mem[_9138 + 64] = mem[_9117 + 64]
                            mem[_9138 + 96] = mem[_9117 + 96]
                            mem[_2736 + 448] = bool(mem[_9138 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9335 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9368 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9368] = mem[_9335]
                            require mem[_9335 + 32] == bool(mem[_9335 + 32])
                            mem[_9368 + 32] = mem[_9335 + 32]
                            require mem[_9335 + 64] == mem[_9335 + 76 len 20]
                            mem[_9368 + 64] = mem[_9335 + 64]
                            mem[_9368 + 96] = mem[_9335 + 96]
                            mem[_2736 + 480] = mem[_9368 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9584 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9624 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9624] = mem[_9584]
                            require mem[_9584 + 32] == bool(mem[_9584 + 32])
                            mem[_9624 + 32] = mem[_9584 + 32]
                            require mem[_9584 + 64] == mem[_9584 + 76 len 20]
                            mem[_9624 + 64] = mem[_9584 + 64]
                            mem[_9624 + 96] = mem[_9584 + 96]
                            mem[_2736 + 384] = mem[_9624]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9856 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9856]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9984 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9984]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10098 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10098] == mem[_10098 + 12 len 20]
                            mem[_2736 + 64] = mem[_10098 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10264 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10264]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10436 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10472 = mem[_10436]
                                mem[_2736 + 576] = mem[_10436]
                                mem[mem[64] + 4] = _10472
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10472
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10576 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10576]
                else:
                    mem[_2784 + ceil32(return_data.size) + _2820 + 32] = 0
                    mem[_2736 + 96] = _2784 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_2712))
                    staticcall address(_2712).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5578 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5591 = mem[_5578]
                    require mem[_5578] <= test266151307()
                    require _5578 + mem[_5578] + 31 < _5578 + return_data.size
                    _5601 = mem[_5578 + mem[_5578]]
                    require mem[_5578 + mem[_5578]] <= test266151307()
                    require ceil32(mem[_5578 + mem[_5578]]) + 32 >= 0 and _5578 + ceil32(return_data.size) + ceil32(mem[_5578 + mem[_5578]]) + 32 <= test266151307()
                    mem[64] = _5578 + ceil32(return_data.size) + ceil32(mem[_5578 + mem[_5578]]) + 32
                    mem[_5578 + ceil32(return_data.size)] = _5601
                    require _5591 + _5601 + 32 <= return_data.size
                    t = 0
                    while t < _5601:
                        mem[t + _5578 + ceil32(return_data.size) + 32] = mem[t + _5578 + _5591 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_5601) <= _5601:
                        mem[_2736 + 128] = _5578 + ceil32(return_data.size)
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8417 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 160] = mem[_8417]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8469 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 192] = mem[_8469]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8585 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8585]:
                            mem[_2736 + 224] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8695 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8695] == bool(mem[_8695])
                            mem[_2736 + 512] = bool(mem[_8695])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8838 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8838]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8957 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8957]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9038 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9038]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9109 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9129 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9129] = mem[_9109]
                            require mem[_9109 + 32] == bool(mem[_9109 + 32])
                            mem[_9129 + 32] = mem[_9109 + 32]
                            require mem[_9109 + 64] == mem[_9109 + 76 len 20]
                            mem[_9129 + 64] = mem[_9109 + 64]
                            mem[_9129 + 96] = mem[_9109 + 96]
                            mem[_2736 + 448] = bool(mem[_9129 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9319 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9357 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9357] = mem[_9319]
                            require mem[_9319 + 32] == bool(mem[_9319 + 32])
                            mem[_9357 + 32] = mem[_9319 + 32]
                            require mem[_9319 + 64] == mem[_9319 + 76 len 20]
                            mem[_9357 + 64] = mem[_9319 + 64]
                            mem[_9357 + 96] = mem[_9319 + 96]
                            mem[_2736 + 480] = mem[_9357 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9569 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9609 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9609] = mem[_9569]
                            require mem[_9569 + 32] == bool(mem[_9569 + 32])
                            mem[_9609 + 32] = mem[_9569 + 32]
                            require mem[_9569 + 64] == mem[_9569 + 76 len 20]
                            mem[_9609 + 64] = mem[_9569 + 64]
                            mem[_9609 + 96] = mem[_9569 + 96]
                            mem[_2736 + 384] = mem[_9609]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9839 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9839]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9967 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9967]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10081 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10081] == mem[_10081 + 12 len 20]
                            mem[_2736 + 64] = mem[_10081 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10247 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10247]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10411 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10455 = mem[_10411]
                                mem[_2736 + 576] = mem[_10411]
                                mem[mem[64] + 4] = _10455
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10455
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10561 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10561]
                        else:
                            mem[_2736 + 224] = 0
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8696 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8696] == bool(mem[_8696])
                            mem[_2736 + 512] = bool(mem[_8696])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8839 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8839]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8958 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8958]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9039 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9039]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9110 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9130 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9130] = mem[_9110]
                            require mem[_9110 + 32] == bool(mem[_9110 + 32])
                            mem[_9130 + 32] = mem[_9110 + 32]
                            require mem[_9110 + 64] == mem[_9110 + 76 len 20]
                            mem[_9130 + 64] = mem[_9110 + 64]
                            mem[_9130 + 96] = mem[_9110 + 96]
                            mem[_2736 + 448] = bool(mem[_9130 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9320 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9358 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9358] = mem[_9320]
                            require mem[_9320 + 32] == bool(mem[_9320 + 32])
                            mem[_9358 + 32] = mem[_9320 + 32]
                            require mem[_9320 + 64] == mem[_9320 + 76 len 20]
                            mem[_9358 + 64] = mem[_9320 + 64]
                            mem[_9358 + 96] = mem[_9320 + 96]
                            mem[_2736 + 480] = mem[_9358 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9570 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9610 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9610] = mem[_9570]
                            require mem[_9570 + 32] == bool(mem[_9570 + 32])
                            mem[_9610 + 32] = mem[_9570 + 32]
                            require mem[_9570 + 64] == mem[_9570 + 76 len 20]
                            mem[_9610 + 64] = mem[_9570 + 64]
                            mem[_9610 + 96] = mem[_9570 + 96]
                            mem[_2736 + 384] = mem[_9610]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9840 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9840]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9968 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9968]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10082 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10082] == mem[_10082 + 12 len 20]
                            mem[_2736 + 64] = mem[_10082 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10248 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10248]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10412 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10456 = mem[_10412]
                                mem[_2736 + 576] = mem[_10412]
                                mem[mem[64] + 4] = _10456
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10456
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10562 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10562]
                    else:
                        mem[_5578 + ceil32(return_data.size) + _5601 + 32] = 0
                        mem[_2736 + 128] = _5578 + ceil32(return_data.size)
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8425 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 160] = mem[_8425]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8486 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_2736 + 192] = mem[_8486]
                        require ext_code.size(address(_2712))
                        staticcall address(_2712).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8597 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_8597]:
                            mem[_2736 + 224] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8705 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8705] == bool(mem[_8705])
                            mem[_2736 + 512] = bool(mem[_8705])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8855 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8855]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8967 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8967]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9048 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9048]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9118 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9139 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9139] = mem[_9118]
                            require mem[_9118 + 32] == bool(mem[_9118 + 32])
                            mem[_9139 + 32] = mem[_9118 + 32]
                            require mem[_9118 + 64] == mem[_9118 + 76 len 20]
                            mem[_9139 + 64] = mem[_9118 + 64]
                            mem[_9139 + 96] = mem[_9118 + 96]
                            mem[_2736 + 448] = bool(mem[_9139 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9336 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9369 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9369] = mem[_9336]
                            require mem[_9336 + 32] == bool(mem[_9336 + 32])
                            mem[_9369 + 32] = mem[_9336 + 32]
                            require mem[_9336 + 64] == mem[_9336 + 76 len 20]
                            mem[_9369 + 64] = mem[_9336 + 64]
                            mem[_9369 + 96] = mem[_9336 + 96]
                            mem[_2736 + 480] = mem[_9369 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9585 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9625 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9625] = mem[_9585]
                            require mem[_9585 + 32] == bool(mem[_9585 + 32])
                            mem[_9625 + 32] = mem[_9585 + 32]
                            require mem[_9585 + 64] == mem[_9585 + 76 len 20]
                            mem[_9625 + 64] = mem[_9585 + 64]
                            mem[_9625 + 96] = mem[_9585 + 96]
                            mem[_2736 + 384] = mem[_9625]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9857 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9857]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9985 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9985]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10099 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10099] == mem[_10099 + 12 len 20]
                            mem[_2736 + 64] = mem[_10099 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10265 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10265]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10437 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10475 = mem[_10437]
                                mem[_2736 + 576] = mem[_10437]
                                mem[mem[64] + 4] = _10475
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10475
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10577 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10577]
                        else:
                            mem[_2736 + 224] = 0
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8706 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8706] == bool(mem[_8706])
                            mem[_2736 + 512] = bool(mem[_8706])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8856 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 256] = mem[_8856]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8968 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 288] = mem[_8968]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9049 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 320] = mem[_9049]
                            mem[_2736 + 32] = address(_2712)
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9119 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9140 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9140] = mem[_9119]
                            require mem[_9119 + 32] == bool(mem[_9119 + 32])
                            mem[_9140 + 32] = mem[_9119 + 32]
                            require mem[_9119 + 64] == mem[_9119 + 76 len 20]
                            mem[_9140 + 64] = mem[_9119 + 64]
                            mem[_9140 + 96] = mem[_9119 + 96]
                            mem[_2736 + 448] = bool(mem[_9140 + 32])
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9337 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9370 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9370] = mem[_9337]
                            require mem[_9337 + 32] == bool(mem[_9337 + 32])
                            mem[_9370 + 32] = mem[_9337 + 32]
                            require mem[_9337 + 64] == mem[_9337 + 76 len 20]
                            mem[_9370 + 64] = mem[_9337 + 64]
                            mem[_9370 + 96] = mem[_9337 + 96]
                            mem[_2736 + 480] = mem[_9370 + 96]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9586 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _9626 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_9626] = mem[_9586]
                            require mem[_9586 + 32] == bool(mem[_9586 + 32])
                            mem[_9626 + 32] = mem[_9586 + 32]
                            require mem[_9586 + 64] == mem[_9586 + 76 len 20]
                            mem[_9626 + 64] = mem[_9586 + 64]
                            mem[_9626 + 96] = mem[_9586 + 96]
                            mem[_2736 + 384] = mem[_9626]
                            mem[mem[64] + 4] = address(_2712)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_2712), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9858 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 416] = 1 == mem[_9858]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9986 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 352] = mem[_9986]
                            mem[mem[64] + 4] = address(_2712)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_2712)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10100 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10100] == mem[_10100 + 12 len 20]
                            mem[_2736 + 64] = mem[_10100 + 12 len 20]
                            require ext_code.size(address(_2712))
                            staticcall address(_2712).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10266 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_2736 + 544] = mem[_10266]
                            if 1 == mem[_2736 + 352]:
                                mem[mem[64] + 4] = address(_2712)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_2712)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10438 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10476 = mem[_10438]
                                mem[_2736 + 576] = mem[_10438]
                                mem[mem[64] + 4] = _10476
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _10476
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10578 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_2736 + 608] = mem[_10578]
                require s < mem[ceil32(return_data.size) + 96]
                mem[(32 * s) + ceil32(return_data.size) + 128] = _2736
                idx = idx + 1
                s = s + 1
                continue 
            _2697 = mem[64]
            mem[mem[64]] = 32
            _2700 = mem[ceil32(return_data.size) + 96]
            mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
            idx = 0
            s = ceil32(return_data.size) + 128
            t = mem[64] + 64
            u = mem[64] + (32 * _2700) + 64
            while idx < _2700:
                mem[t] = u + -_2697 - 64
                _5553 = mem[s]
                mem[u] = mem[mem[s] + 12 len 20]
                mem[u + 32] = mem[_5553 + 44 len 20]
                mem[u + 64] = mem[_5553 + 76 len 20]
                _5584 = mem[_5553 + 96]
                mem[u + 96] = 640
                _5590 = mem[_5584]
                mem[u + 640] = mem[_5584]
                v = 0
                while v < _5590:
                    mem[v + u + 672] = mem[v + _5584 + 32]
                    v = v + 32
                    continue 
                if ceil32(_5590) <= _5590:
                    _8391 = mem[_5553 + 128]
                    mem[u + 128] = ceil32(_5590) + 672
                    _8404 = mem[_8391]
                    mem[ceil32(_5590) + u + 672] = mem[_8391]
                    v = 0
                    while v < _8404:
                        mem[v + ceil32(_5590) + u + 704] = mem[v + _8391 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_8404) > _8404:
                        mem[ceil32(_5590) + u + _8404 + 704] = 0
                    mem[u + 160] = mem[_5553 + 160]
                    mem[u + 192] = mem[_5553 + 192]
                    mem[u + 224] = bool(mem[_5553 + 224])
                    mem[u + 256] = mem[_5553 + 256]
                    mem[u + 288] = mem[_5553 + 288]
                    mem[u + 320] = mem[_5553 + 320]
                    mem[u + 352] = mem[_5553 + 352]
                    mem[u + 384] = mem[_5553 + 384]
                    mem[u + 416] = bool(mem[_5553 + 416])
                    mem[u + 448] = bool(mem[_5553 + 448])
                    mem[u + 480] = mem[_5553 + 480]
                    mem[u + 512] = bool(mem[_5553 + 512])
                    mem[u + 544] = mem[_5553 + 544]
                    mem[u + 576] = mem[_5553 + 576]
                    mem[u + 608] = mem[_5553 + 608]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    u = ceil32(_8404) + ceil32(_5590) + u + 704
                    continue 
                mem[u + _5590 + 672] = 0
                _8405 = mem[_5553 + 128]
                mem[u + 128] = ceil32(_5590) + 672
                _8415 = mem[_8405]
                mem[ceil32(_5590) + u + 672] = mem[_8405]
                v = 0
                while v < _8415:
                    mem[v + ceil32(_5590) + u + 704] = mem[v + _8405 + 32]
                    v = v + 32
                    continue 
                if ceil32(_8415) > _8415:
                    mem[ceil32(_5590) + u + _8415 + 704] = 0
                mem[u + 160] = mem[_5553 + 160]
                mem[u + 192] = mem[_5553 + 192]
                mem[u + 224] = bool(mem[_5553 + 224])
                mem[u + 256] = mem[_5553 + 256]
                mem[u + 288] = mem[_5553 + 288]
                mem[u + 320] = mem[_5553 + 320]
                mem[u + 352] = mem[_5553 + 352]
                mem[u + 384] = mem[_5553 + 384]
                mem[u + 416] = bool(mem[_5553 + 416])
                mem[u + 448] = bool(mem[_5553 + 448])
                mem[u + 480] = mem[_5553 + 480]
                mem[u + 512] = bool(mem[_5553 + 512])
                mem[u + 544] = mem[_5553 + 544]
                mem[u + 576] = mem[_5553 + 576]
                mem[u + 608] = mem[_5553 + 608]
                idx = idx + 1
                s = s + 32
                t = t + 32
                u = ceil32(_8415) + ceil32(_5590) + u + 704
                continue 
        else:
            mem[64] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 768
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 128] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 160] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 192] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 224] = 96
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 256] = 96
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 288] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 320] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 352] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 384] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 416] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 448] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 480] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 512] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 544] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 576] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 608] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 640] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 672] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 704] = 0
            mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 736] = 0
            mem[var23001] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 128
            s = var23001
            idx = var23002
            while idx - 1:
                mem[64] = mem[64] + 640
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 128] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 160] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 192] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 224] = 96
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 256] = 96
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 288] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 320] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 352] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 384] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 416] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 448] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 480] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 512] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 544] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 576] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 608] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 640] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 672] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 704] = 0
                mem[ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 736] = 0
                mem[s + 32] = ceil32(return_data.size) + (32 * ext_call.return_data[0] - arg2) + 128
                s = s + 32
                idx = idx - 1
                continue 
            idx = 0
            s = 0
            while idx < ext_call.return_data[0] - arg2:
                mem[mem[64] + 4] = idx
                require ext_code.size(governanceAddress)
                staticcall governanceAddress.ballots(uint256 rg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8410 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8428 = mem[_8410]
                require mem[_8410] == mem[_8410 + 12 len 20]
                _8512 = mem[64]
                mem[64] = mem[64] + 640
                mem[_8512] = 0
                mem[_8512 + 32] = 0
                mem[_8512 + 64] = 0
                mem[_8512 + 96] = 96
                mem[_8512 + 128] = 96
                mem[_8512 + 160] = 0
                mem[_8512 + 192] = 0
                mem[_8512 + 224] = 0
                mem[_8512 + 256] = 0
                mem[_8512 + 288] = 0
                mem[_8512 + 320] = 0
                mem[_8512 + 352] = 0
                mem[_8512 + 384] = 0
                mem[_8512 + 416] = 0
                mem[_8512 + 448] = 0
                mem[_8512 + 480] = 0
                mem[_8512 + 512] = 0
                mem[_8512 + 544] = 0
                mem[_8512 + 576] = 0
                mem[_8512 + 608] = 0
                require ext_code.size(address(_8428))
                staticcall address(_8428).proposer() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8586 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_8586] == mem[_8586 + 12 len 20]
                mem[_8512] = mem[_8586 + 12 len 20]
                mem[mem[64]] = 0xa59a98c00000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_8428))
                staticcall address(_8428).subject() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8708 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8728 = mem[_8708]
                require mem[_8708] <= test266151307()
                require _8708 + mem[_8708] + 31 < _8708 + return_data.size
                _8764 = mem[_8708 + mem[_8708]]
                require mem[_8708 + mem[_8708]] <= test266151307()
                require ceil32(mem[_8708 + mem[_8708]]) + 32 >= 0 and _8708 + ceil32(return_data.size) + ceil32(mem[_8708 + mem[_8708]]) + 32 <= test266151307()
                mem[64] = _8708 + ceil32(return_data.size) + ceil32(mem[_8708 + mem[_8708]]) + 32
                mem[_8708 + ceil32(return_data.size)] = _8764
                require _8728 + _8764 + 32 <= return_data.size
                t = 0
                while t < _8764:
                    mem[t + _8708 + ceil32(return_data.size) + 32] = mem[t + _8708 + _8728 + 32]
                    t = t + 32
                    continue 
                if ceil32(_8764) <= _8764:
                    mem[_8512 + 96] = _8708 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_8428))
                    staticcall address(_8428).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11228 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11262 = mem[_11228]
                    require mem[_11228] <= test266151307()
                    require _11228 + mem[_11228] + 31 < _11228 + return_data.size
                    _11280 = mem[_11228 + mem[_11228]]
                    require mem[_11228 + mem[_11228]] <= test266151307()
                    require ceil32(mem[_11228 + mem[_11228]]) + 32 >= 0 and _11228 + ceil32(return_data.size) + ceil32(mem[_11228 + mem[_11228]]) + 32 <= test266151307()
                    mem[64] = _11228 + ceil32(return_data.size) + ceil32(mem[_11228 + mem[_11228]]) + 32
                    mem[_11228 + ceil32(return_data.size)] = _11280
                    require _11262 + _11280 + 32 <= return_data.size
                    t = 0
                    while t < _11280:
                        mem[t + _11228 + ceil32(return_data.size) + 32] = mem[t + _11228 + _11262 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_11280) <= _11280:
                        mem[_8512 + 128] = _11228 + ceil32(return_data.size)
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12705 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 160] = mem[_12705]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12747 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 192] = mem[_12747]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12851 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12851]:
                            mem[_8512 + 224] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12943 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12943] == bool(mem[_12943])
                            mem[_8512 + 512] = bool(mem[_12943])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13007 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13007]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13071 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13071]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13135 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13135]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13199 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13215 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13215] = mem[_13199]
                            require mem[_13199 + 32] == bool(mem[_13199 + 32])
                            mem[_13215 + 32] = mem[_13199 + 32]
                            require mem[_13199 + 64] == mem[_13199 + 76 len 20]
                            mem[_13215 + 64] = mem[_13199 + 64]
                            mem[_13215 + 96] = mem[_13199 + 96]
                            mem[_8512 + 448] = bool(mem[_13215 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13343 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13359 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13359] = mem[_13343]
                            require mem[_13343 + 32] == bool(mem[_13343 + 32])
                            mem[_13359 + 32] = mem[_13343 + 32]
                            require mem[_13343 + 64] == mem[_13343 + 76 len 20]
                            mem[_13359 + 64] = mem[_13343 + 64]
                            mem[_13359 + 96] = mem[_13343 + 96]
                            mem[_8512 + 480] = mem[_13359 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13487 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13503 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13503] = mem[_13487]
                            require mem[_13487 + 32] == bool(mem[_13487 + 32])
                            mem[_13503 + 32] = mem[_13487 + 32]
                            require mem[_13487 + 64] == mem[_13487 + 76 len 20]
                            mem[_13503 + 64] = mem[_13487 + 64]
                            mem[_13503 + 96] = mem[_13487 + 96]
                            mem[_8512 + 384] = mem[_13503]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13631 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13631]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13695 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13695]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13759 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13759] == mem[_13759 + 12 len 20]
                            mem[_8512 + 64] = mem[_13759 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13823 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13823]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13919 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13935 = mem[_13919]
                                mem[_8512 + 576] = mem[_13919]
                                mem[mem[64] + 4] = _13935
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13935
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13983 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13983]
                        else:
                            mem[_8512 + 224] = 0
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12944 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12944] == bool(mem[_12944])
                            mem[_8512 + 512] = bool(mem[_12944])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13008 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13008]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13072 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13072]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13136 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13136]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13200 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13216 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13216] = mem[_13200]
                            require mem[_13200 + 32] == bool(mem[_13200 + 32])
                            mem[_13216 + 32] = mem[_13200 + 32]
                            require mem[_13200 + 64] == mem[_13200 + 76 len 20]
                            mem[_13216 + 64] = mem[_13200 + 64]
                            mem[_13216 + 96] = mem[_13200 + 96]
                            mem[_8512 + 448] = bool(mem[_13216 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13344 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13360 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13360] = mem[_13344]
                            require mem[_13344 + 32] == bool(mem[_13344 + 32])
                            mem[_13360 + 32] = mem[_13344 + 32]
                            require mem[_13344 + 64] == mem[_13344 + 76 len 20]
                            mem[_13360 + 64] = mem[_13344 + 64]
                            mem[_13360 + 96] = mem[_13344 + 96]
                            mem[_8512 + 480] = mem[_13360 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13488 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13504 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13504] = mem[_13488]
                            require mem[_13488 + 32] == bool(mem[_13488 + 32])
                            mem[_13504 + 32] = mem[_13488 + 32]
                            require mem[_13488 + 64] == mem[_13488 + 76 len 20]
                            mem[_13504 + 64] = mem[_13488 + 64]
                            mem[_13504 + 96] = mem[_13488 + 96]
                            mem[_8512 + 384] = mem[_13504]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13632 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13632]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13696 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13696]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13760 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13760] == mem[_13760 + 12 len 20]
                            mem[_8512 + 64] = mem[_13760 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13824 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13824]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13920 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13936 = mem[_13920]
                                mem[_8512 + 576] = mem[_13920]
                                mem[mem[64] + 4] = _13936
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13936
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13984 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13984]
                    else:
                        mem[_11228 + ceil32(return_data.size) + _11280 + 32] = 0
                        mem[_8512 + 128] = _11228 + ceil32(return_data.size)
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12709 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 160] = mem[_12709]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12763 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 192] = mem[_12763]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12861 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12861]:
                            mem[_8512 + 224] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12951 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12951] == bool(mem[_12951])
                            mem[_8512 + 512] = bool(mem[_12951])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13015 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13015]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13079 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13079]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13143 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13143]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13207 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13223 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13223] = mem[_13207]
                            require mem[_13207 + 32] == bool(mem[_13207 + 32])
                            mem[_13223 + 32] = mem[_13207 + 32]
                            require mem[_13207 + 64] == mem[_13207 + 76 len 20]
                            mem[_13223 + 64] = mem[_13207 + 64]
                            mem[_13223 + 96] = mem[_13207 + 96]
                            mem[_8512 + 448] = bool(mem[_13223 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13351 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13367 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13367] = mem[_13351]
                            require mem[_13351 + 32] == bool(mem[_13351 + 32])
                            mem[_13367 + 32] = mem[_13351 + 32]
                            require mem[_13351 + 64] == mem[_13351 + 76 len 20]
                            mem[_13367 + 64] = mem[_13351 + 64]
                            mem[_13367 + 96] = mem[_13351 + 96]
                            mem[_8512 + 480] = mem[_13367 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13495 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13511 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13511] = mem[_13495]
                            require mem[_13495 + 32] == bool(mem[_13495 + 32])
                            mem[_13511 + 32] = mem[_13495 + 32]
                            require mem[_13495 + 64] == mem[_13495 + 76 len 20]
                            mem[_13511 + 64] = mem[_13495 + 64]
                            mem[_13511 + 96] = mem[_13495 + 96]
                            mem[_8512 + 384] = mem[_13511]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13639 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13639]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13703 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13703]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13767 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13767] == mem[_13767 + 12 len 20]
                            mem[_8512 + 64] = mem[_13767 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13831 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13831]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13927 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13949 = mem[_13927]
                                mem[_8512 + 576] = mem[_13927]
                                mem[mem[64] + 4] = _13949
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13949
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13991 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13991]
                        else:
                            mem[_8512 + 224] = 0
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12952 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12952] == bool(mem[_12952])
                            mem[_8512 + 512] = bool(mem[_12952])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13016 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13016]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13080 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13080]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13144 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13144]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13208 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13224 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13224] = mem[_13208]
                            require mem[_13208 + 32] == bool(mem[_13208 + 32])
                            mem[_13224 + 32] = mem[_13208 + 32]
                            require mem[_13208 + 64] == mem[_13208 + 76 len 20]
                            mem[_13224 + 64] = mem[_13208 + 64]
                            mem[_13224 + 96] = mem[_13208 + 96]
                            mem[_8512 + 448] = bool(mem[_13224 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13352 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13368 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13368] = mem[_13352]
                            require mem[_13352 + 32] == bool(mem[_13352 + 32])
                            mem[_13368 + 32] = mem[_13352 + 32]
                            require mem[_13352 + 64] == mem[_13352 + 76 len 20]
                            mem[_13368 + 64] = mem[_13352 + 64]
                            mem[_13368 + 96] = mem[_13352 + 96]
                            mem[_8512 + 480] = mem[_13368 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13496 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13512 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13512] = mem[_13496]
                            require mem[_13496 + 32] == bool(mem[_13496 + 32])
                            mem[_13512 + 32] = mem[_13496 + 32]
                            require mem[_13496 + 64] == mem[_13496 + 76 len 20]
                            mem[_13512 + 64] = mem[_13496 + 64]
                            mem[_13512 + 96] = mem[_13496 + 96]
                            mem[_8512 + 384] = mem[_13512]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13640 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13640]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13704 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13704]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13768 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13768] == mem[_13768 + 12 len 20]
                            mem[_8512 + 64] = mem[_13768 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13832 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13832]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13928 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13950 = mem[_13928]
                                mem[_8512 + 576] = mem[_13928]
                                mem[mem[64] + 4] = _13950
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13950
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13992 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13992]
                else:
                    mem[_8708 + ceil32(return_data.size) + _8764 + 32] = 0
                    mem[_8512 + 96] = _8708 + ceil32(return_data.size)
                    mem[mem[64]] = 0x8a4d5a6700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_8428))
                    staticcall address(_8428).content() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11254 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11270 = mem[_11254]
                    require mem[_11254] <= test266151307()
                    require _11254 + mem[_11254] + 31 < _11254 + return_data.size
                    _11290 = mem[_11254 + mem[_11254]]
                    require mem[_11254 + mem[_11254]] <= test266151307()
                    require ceil32(mem[_11254 + mem[_11254]]) + 32 >= 0 and _11254 + ceil32(return_data.size) + ceil32(mem[_11254 + mem[_11254]]) + 32 <= test266151307()
                    mem[64] = _11254 + ceil32(return_data.size) + ceil32(mem[_11254 + mem[_11254]]) + 32
                    mem[_11254 + ceil32(return_data.size)] = _11290
                    require _11270 + _11290 + 32 <= return_data.size
                    t = 0
                    while t < _11290:
                        mem[t + _11254 + ceil32(return_data.size) + 32] = mem[t + _11254 + _11270 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_11290) <= _11290:
                        mem[_8512 + 128] = _11254 + ceil32(return_data.size)
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12706 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 160] = mem[_12706]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12748 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 192] = mem[_12748]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12852 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12852]:
                            mem[_8512 + 224] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12945 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12945] == bool(mem[_12945])
                            mem[_8512 + 512] = bool(mem[_12945])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13009 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13009]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13073 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13073]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13137 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13137]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13201 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13217 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13217] = mem[_13201]
                            require mem[_13201 + 32] == bool(mem[_13201 + 32])
                            mem[_13217 + 32] = mem[_13201 + 32]
                            require mem[_13201 + 64] == mem[_13201 + 76 len 20]
                            mem[_13217 + 64] = mem[_13201 + 64]
                            mem[_13217 + 96] = mem[_13201 + 96]
                            mem[_8512 + 448] = bool(mem[_13217 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13345 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13361 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13361] = mem[_13345]
                            require mem[_13345 + 32] == bool(mem[_13345 + 32])
                            mem[_13361 + 32] = mem[_13345 + 32]
                            require mem[_13345 + 64] == mem[_13345 + 76 len 20]
                            mem[_13361 + 64] = mem[_13345 + 64]
                            mem[_13361 + 96] = mem[_13345 + 96]
                            mem[_8512 + 480] = mem[_13361 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13489 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13505 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13505] = mem[_13489]
                            require mem[_13489 + 32] == bool(mem[_13489 + 32])
                            mem[_13505 + 32] = mem[_13489 + 32]
                            require mem[_13489 + 64] == mem[_13489 + 76 len 20]
                            mem[_13505 + 64] = mem[_13489 + 64]
                            mem[_13505 + 96] = mem[_13489 + 96]
                            mem[_8512 + 384] = mem[_13505]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13633 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13633]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13697 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13697]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13761 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13761] == mem[_13761 + 12 len 20]
                            mem[_8512 + 64] = mem[_13761 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13825 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13825]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13921 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13937 = mem[_13921]
                                mem[_8512 + 576] = mem[_13921]
                                mem[mem[64] + 4] = _13937
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13937
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13985 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13985]
                        else:
                            mem[_8512 + 224] = 0
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12946 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12946] == bool(mem[_12946])
                            mem[_8512 + 512] = bool(mem[_12946])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13010 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13010]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13074 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13074]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13138 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13138]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13202 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13218 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13218] = mem[_13202]
                            require mem[_13202 + 32] == bool(mem[_13202 + 32])
                            mem[_13218 + 32] = mem[_13202 + 32]
                            require mem[_13202 + 64] == mem[_13202 + 76 len 20]
                            mem[_13218 + 64] = mem[_13202 + 64]
                            mem[_13218 + 96] = mem[_13202 + 96]
                            mem[_8512 + 448] = bool(mem[_13218 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13346 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13362 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13362] = mem[_13346]
                            require mem[_13346 + 32] == bool(mem[_13346 + 32])
                            mem[_13362 + 32] = mem[_13346 + 32]
                            require mem[_13346 + 64] == mem[_13346 + 76 len 20]
                            mem[_13362 + 64] = mem[_13346 + 64]
                            mem[_13362 + 96] = mem[_13346 + 96]
                            mem[_8512 + 480] = mem[_13362 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13490 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13506 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13506] = mem[_13490]
                            require mem[_13490 + 32] == bool(mem[_13490 + 32])
                            mem[_13506 + 32] = mem[_13490 + 32]
                            require mem[_13490 + 64] == mem[_13490 + 76 len 20]
                            mem[_13506 + 64] = mem[_13490 + 64]
                            mem[_13506 + 96] = mem[_13490 + 96]
                            mem[_8512 + 384] = mem[_13506]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13634 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13634]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13698 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13698]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13762 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13762] == mem[_13762 + 12 len 20]
                            mem[_8512 + 64] = mem[_13762 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13826 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13826]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13922 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13938 = mem[_13922]
                                mem[_8512 + 576] = mem[_13922]
                                mem[mem[64] + 4] = _13938
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13938
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13986 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13986]
                    else:
                        mem[_11254 + ceil32(return_data.size) + _11290 + 32] = 0
                        mem[_8512 + 128] = _11254 + ceil32(return_data.size)
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).createTime() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12710 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 160] = mem[_12710]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12764 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_8512 + 192] = mem[_12764]
                        require ext_code.size(address(_8428))
                        staticcall address(_8428).endBlockNumber() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12862 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if block.number > mem[_12862]:
                            mem[_8512 + 224] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12953 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12953] == bool(mem[_12953])
                            mem[_8512 + 512] = bool(mem[_12953])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13017 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13017]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13081 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13081]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13145 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13145]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13209 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13225 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13225] = mem[_13209]
                            require mem[_13209 + 32] == bool(mem[_13209 + 32])
                            mem[_13225 + 32] = mem[_13209 + 32]
                            require mem[_13209 + 64] == mem[_13209 + 76 len 20]
                            mem[_13225 + 64] = mem[_13209 + 64]
                            mem[_13225 + 96] = mem[_13209 + 96]
                            mem[_8512 + 448] = bool(mem[_13225 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13353 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13369 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13369] = mem[_13353]
                            require mem[_13353 + 32] == bool(mem[_13353 + 32])
                            mem[_13369 + 32] = mem[_13353 + 32]
                            require mem[_13353 + 64] == mem[_13353 + 76 len 20]
                            mem[_13369 + 64] = mem[_13353 + 64]
                            mem[_13369 + 96] = mem[_13353 + 96]
                            mem[_8512 + 480] = mem[_13369 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13497 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13513 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13513] = mem[_13497]
                            require mem[_13497 + 32] == bool(mem[_13497 + 32])
                            mem[_13513 + 32] = mem[_13497 + 32]
                            require mem[_13497 + 64] == mem[_13497 + 76 len 20]
                            mem[_13513 + 64] = mem[_13497 + 64]
                            mem[_13513 + 96] = mem[_13497 + 96]
                            mem[_8512 + 384] = mem[_13513]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13641 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13641]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13705 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13705]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13769 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13769] == mem[_13769 + 12 len 20]
                            mem[_8512 + 64] = mem[_13769 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13833 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13833]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13929 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13953 = mem[_13929]
                                mem[_8512 + 576] = mem[_13929]
                                mem[mem[64] + 4] = _13953
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13953
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13993 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13993]
                        else:
                            mem[_8512 + 224] = 0
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).ended() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12954 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12954] == bool(mem[_12954])
                            mem[_8512 + 512] = bool(mem[_12954])
                            mem[mem[64] + 4] = 1
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13018 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 256] = mem[_13018]
                            mem[mem[64] + 4] = 2
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).proposals(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args 2
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13082 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 288] = mem[_13082]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13146 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 320] = mem[_13146]
                            mem[_8512 + 32] = address(_8428)
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13210 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13226 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13226] = mem[_13210]
                            require mem[_13210 + 32] == bool(mem[_13210 + 32])
                            mem[_13226 + 32] = mem[_13210 + 32]
                            require mem[_13210 + 64] == mem[_13210 + 76 len 20]
                            mem[_13226 + 64] = mem[_13210 + 64]
                            mem[_13226 + 96] = mem[_13210 + 96]
                            mem[_8512 + 448] = bool(mem[_13226 + 32])
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13354 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13370 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13370] = mem[_13354]
                            require mem[_13354 + 32] == bool(mem[_13354 + 32])
                            mem[_13370 + 32] = mem[_13354 + 32]
                            require mem[_13354 + 64] == mem[_13354 + 76 len 20]
                            mem[_13370 + 64] = mem[_13354 + 64]
                            mem[_13370 + 96] = mem[_13354 + 96]
                            mem[_8512 + 480] = mem[_13370 + 96]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).voters(address rg1) with:
                                    gas gas_remaining wei
                                   args msg.sender
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13498 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _13514 = mem[64]
                            require mem[64] + 128 >= mem[64] and mem[64] + 128 <= test266151307()
                            mem[64] = mem[64] + 128
                            mem[_13514] = mem[_13498]
                            require mem[_13498 + 32] == bool(mem[_13498 + 32])
                            mem[_13514 + 32] = mem[_13498 + 32]
                            require mem[_13498 + 64] == mem[_13498 + 76 len 20]
                            mem[_13514 + 64] = mem[_13498 + 64]
                            mem[_13514 + 96] = mem[_13498 + 96]
                            mem[_8512 + 384] = mem[_13514]
                            mem[mem[64] + 4] = address(_8428)
                            mem[mem[64] + 36] = msg.sender
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.collectUsers(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(_8428), msg.sender
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13642 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 416] = 1 == mem[_13642]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.ballotTypes(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13706 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 352] = mem[_13706]
                            mem[mem[64] + 4] = address(_8428)
                            require ext_code.size(governanceAddress)
                            staticcall governanceAddress.tokenBallots(address rg1) with:
                                    gas gas_remaining wei
                                   args address(_8428)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13770 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13770] == mem[_13770 + 12 len 20]
                            mem[_8512 + 64] = mem[_13770 + 12 len 20]
                            require ext_code.size(address(_8428))
                            staticcall address(_8428).value() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13834 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_8512 + 544] = mem[_13834]
                            if 1 == mem[_8512 + 352]:
                                mem[mem[64] + 4] = address(_8428)
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.configBallots(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8428)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13930 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _13954 = mem[_13930]
                                mem[_8512 + 576] = mem[_13930]
                                mem[mem[64] + 4] = _13954
                                require ext_code.size(governanceAddress)
                                staticcall governanceAddress.getConfigValue(bytes32 rg1) with:
                                        gas gas_remaining wei
                                       args _13954
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13994 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_8512 + 608] = mem[_13994]
                require s < mem[ceil32(return_data.size) + 96]
                mem[(32 * s) + ceil32(return_data.size) + 128] = _8512
                idx = idx + 1
                s = s + 1
                continue 
            _8383 = mem[64]
            mem[mem[64]] = 32
            _8396 = mem[ceil32(return_data.size) + 96]
            mem[mem[64] + 32] = mem[ceil32(return_data.size) + 96]
            idx = 0
            s = ceil32(return_data.size) + 128
            t = mem[64] + 64
            u = mem[64] + (32 * _8396) + 64
            while idx < _8396:
                mem[t] = u + -_8383 - 64
                _11161 = mem[s]
                mem[u] = mem[mem[s] + 12 len 20]
                mem[u + 32] = mem[_11161 + 44 len 20]
                mem[u + 64] = mem[_11161 + 76 len 20]
                _11261 = mem[_11161 + 96]
                mem[u + 96] = 640
                _11269 = mem[_11261]
                mem[u + 640] = mem[_11261]
                v = 0
                while v < _11269:
                    mem[v + u + 672] = mem[v + _11261 + 32]
                    v = v + 32
                    continue 
                if ceil32(_11269) <= _11269:
                    _12684 = mem[_11161 + 128]
                    mem[u + 128] = ceil32(_11269) + 672
                    _12695 = mem[_12684]
                    mem[ceil32(_11269) + u + 672] = mem[_12684]
                    v = 0
                    while v < _12695:
                        mem[v + ceil32(_11269) + u + 704] = mem[v + _12684 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_12695) > _12695:
                        mem[ceil32(_11269) + u + _12695 + 704] = 0
                    mem[u + 160] = mem[_11161 + 160]
                    mem[u + 192] = mem[_11161 + 192]
                    mem[u + 224] = bool(mem[_11161 + 224])
                    mem[u + 256] = mem[_11161 + 256]
                    mem[u + 288] = mem[_11161 + 288]
                    mem[u + 320] = mem[_11161 + 320]
                    mem[u + 352] = mem[_11161 + 352]
                    mem[u + 384] = mem[_11161 + 384]
                    mem[u + 416] = bool(mem[_11161 + 416])
                    mem[u + 448] = bool(mem[_11161 + 448])
                    mem[u + 480] = mem[_11161 + 480]
                    mem[u + 512] = bool(mem[_11161 + 512])
                    mem[u + 544] = mem[_11161 + 544]
                    mem[u + 576] = mem[_11161 + 576]
                    mem[u + 608] = mem[_11161 + 608]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    u = ceil32(_12695) + ceil32(_11269) + u + 704
                    continue 
                mem[u + _11269 + 672] = 0
                _12696 = mem[_11161 + 128]
                mem[u + 128] = ceil32(_11269) + 672
                _12704 = mem[_12696]
                mem[ceil32(_11269) + u + 672] = mem[_12696]
                v = 0
                while v < _12704:
                    mem[v + ceil32(_11269) + u + 704] = mem[v + _12696 + 32]
                    v = v + 32
                    continue 
                if ceil32(_12704) > _12704:
                    mem[ceil32(_11269) + u + _12704 + 704] = 0
                mem[u + 160] = mem[_11161 + 160]
                mem[u + 192] = mem[_11161 + 192]
                mem[u + 224] = bool(mem[_11161 + 224])
                mem[u + 256] = mem[_11161 + 256]
                mem[u + 288] = mem[_11161 + 288]
                mem[u + 320] = mem[_11161 + 320]
                mem[u + 352] = mem[_11161 + 352]
                mem[u + 384] = mem[_11161 + 384]
                mem[u + 416] = bool(mem[_11161 + 416])
                mem[u + 448] = bool(mem[_11161 + 448])
                mem[u + 480] = mem[_11161 + 480]
                mem[u + 512] = bool(mem[_11161 + 512])
                mem[u + 544] = mem[_11161 + 544]
                mem[u + 576] = mem[_11161 + 576]
                mem[u + 608] = mem[_11161 + 608]
                idx = idx + 1
                s = s + 32
                t = t + 32
                u = ceil32(_12704) + ceil32(_11269) + u + 704
                continue 
    return memory
      from mem[64]
       len u - mem[64]
}



}
