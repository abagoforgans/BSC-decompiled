contract main {




// =====================  Runtime code  =====================


#
#  - sub_186c8af1(?)
#
array of address stor0;

function _fallback() payable {
  stop
}

function addOwner(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    idx = 0
    while idx < stor0.length:
        mem[0] = 0
        if stor0[idx] != msg.sender:
            idx = idx + 1
            continue 
        stor0.length++
        stor0[stor0.length] = arg1
    revert with 0, 'Ownable: caller is not the owner'
}

function withdrawBnb(uint256 arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    idx = 0
    while idx < stor0.length:
        mem[0] = 0
        if stor0[idx] != msg.sender:
            idx = idx + 1
            continue 
        call msg.sender with:
           value arg1 wei
             gas 2300 * is_zero(value) wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
    revert with 0, 'Ownable: caller is not the owner'
}

function sub_93c4f98f(?) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    idx = 0
    while idx < stor0.length:
        mem[0] = 0
        if stor0[idx] != msg.sender:
            idx = idx + 1
            continue 
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        call 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.withdraw(uint256 rg1) with:
             gas gas_remaining wei
            args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        call msg.sender with:
           value arg1 wei
             gas 2300 * is_zero(value) wei
    revert with 0, 'Ownable: caller is not the owner'
}

function sub_e2da3653(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == arg2
    idx = 0
    while idx < stor0.length:
        mem[0] = 0
        if stor0[idx] != msg.sender:
            idx = idx + 1
            continue 
        require ext_code.size(address(arg1))
        call address(arg1).transfer(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args msg.sender, arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
    revert with 0, 'Ownable: caller is not the owner'
}

function approveToken(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    idx = 0
    while idx < stor0.length:
        mem[0] = 0
        if stor0[idx] != msg.sender:
            idx = idx + 1
            continue 
        require ext_code.size(arg1)
        call arg1.approve(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args address(arg2), arg3
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
    revert with 0, 'Ownable: caller is not the owner'
}

function sub_82cb68c3(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 160
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    require arg4 == arg4
    require arg5 == bool(arg5)
    idx = 0
    while idx < stor0.length:
        mem[0] = 0
        if stor0[idx] != msg.sender:
            idx = idx + 1
            continue 
        mem[100] = this.address
        require ext_code.size(address(arg1))
        staticcall address(arg1).balanceOf(address rg1) with:
                gas gas_remaining wei
               args this.address
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        if ext_call.return_data[0] <= 0:
            revert with 0, 'No'
        mem[ceil32(return_data.size) + 96] = 2
        mem[ceil32(return_data.size) + 128] = address(arg1)
        mem[ceil32(return_data.size) + 160] = address(arg2)
        mem[ceil32(return_data.size) + 192] = 1
        mem[ceil32(return_data.size) + 224] = arg4
        mem[ceil32(return_data.size) + 256] = 1
        mem[ceil32(return_data.size) + 288] = bool(arg5)
        mem[ceil32(return_data.size) + 320] = 1
        mem[64] = ceil32(return_data.size) + 384
        mem[ceil32(return_data.size) + 352] = code.data[10348 len 32]
        idx = 0
        while idx < 1:
            require idx < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            _10309 = mem[(32 * idx + 1) + ceil32(return_data.size) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
            mem[mem[64] + 36] = address(_10309)
            require ext_code.size(address(arg3))
            staticcall address(arg3).getPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_10309)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10400 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_10400] == mem[_10400 + 12 len 20]
            require idx < mem[ceil32(return_data.size) + 320]
            mem[(32 * idx) + ceil32(return_data.size) + 352] = mem[_10400 + 12 len 20]
            idx = idx + 1
            continue 
        _10301 = mem[ceil32(return_data.size) + 96]
        _10302 = mem[64]
        mem[mem[64]] = mem[ceil32(return_data.size) + 96]
        mem[64] = mem[64] + (32 * _10301) + 32
        if not _10301:
            require 0 < mem[_10302]
            mem[_10302 + 32] = ext_call.return_data[0]
            _15423 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _15423 - 1:
                require idx < mem[ceil32(return_data.size) + 320]
                require idx < mem[ceil32(return_data.size) + 96]
                _15451 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                _15465 = mem[(32 * idx + 1) + ceil32(return_data.size) + 128]
                require ext_code.size(mem[(32 * idx) + ceil32(return_data.size) + 364 len 20])
                staticcall mem[(32 * idx) + ceil32(return_data.size) + 364 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _15497 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_15497] == mem[_15497 + 18 len 14]
                    require mem[_15497 + 32] == mem[_15497 + 50 len 14]
                    require mem[_15497 + 64] == mem[_15497 + 92 len 4]
                    require idx < mem[_10302]
                    require idx < mem[ceil32(return_data.size) + 192]
                    if address(_15451) == address(_15451):
                        if not mem[(32 * idx) + _10302 + 32]:
                            require mem[_15497 + 18 len 14]
                            if 1000 * mem[_15497 + 18 len 14] / mem[_15497 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if 1000 * mem[_15497 + 18 len 14] < 1000 * mem[_15497 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require 1000 * mem[_15497 + 18 len 14]
                            require idx + 1 < mem[_10302]
                            mem[(32 * idx + 1) + _10302 + 32] = 0 / 1000 * mem[_15497 + 18 len 14]
                        else:
                            if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) / mem[(32 * idx) + _10302 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]):
                                if not mem[_15497 + 18 len 14]:
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                else:
                                    if 1000 * mem[_15497 + 18 len 14] / mem[_15497 + 18 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15497 + 18 len 14]) < 1000 * mem[_15497 + 18 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15497 + 18 len 14])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15497 + 18 len 14])
                            else:
                                if (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15497 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15497 + 50 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) != mem[_15497 + 50 len 14]:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if not mem[_15497 + 18 len 14]:
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15497 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15497 + 50 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                else:
                                    if 1000 * mem[_15497 + 18 len 14] / mem[_15497 + 18 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15497 + 18 len 14]) < 1000 * mem[_15497 + 18 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15497 + 18 len 14])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15497 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15497 + 50 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15497 + 18 len 14])
                    else:
                        if not mem[(32 * idx) + _10302 + 32]:
                            require mem[_15497 + 50 len 14]
                            if 1000 * mem[_15497 + 50 len 14] / mem[_15497 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if 1000 * mem[_15497 + 50 len 14] < 1000 * mem[_15497 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require 1000 * mem[_15497 + 50 len 14]
                            require idx + 1 < mem[_10302]
                            mem[(32 * idx + 1) + _10302 + 32] = 0 / 1000 * mem[_15497 + 50 len 14]
                        else:
                            if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) / mem[(32 * idx) + _10302 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]):
                                if not mem[_15497 + 50 len 14]:
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                else:
                                    if 1000 * mem[_15497 + 50 len 14] / mem[_15497 + 50 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15497 + 50 len 14]) < 1000 * mem[_15497 + 50 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15497 + 50 len 14])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15497 + 50 len 14])
                            else:
                                if (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15497 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15497 + 18 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) != mem[_15497 + 18 len 14]:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if not mem[_15497 + 50 len 14]:
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15497 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15497 + 18 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                else:
                                    if 1000 * mem[_15497 + 50 len 14] / mem[_15497 + 50 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15497 + 50 len 14]) < 1000 * mem[_15497 + 50 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15497 + 50 len 14])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15497 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15497 + 18 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15497 + 50 len 14])
                else:
                    _15498 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_15498] == mem[_15498 + 18 len 14]
                    require mem[_15498 + 32] == mem[_15498 + 50 len 14]
                    require mem[_15498 + 64] == mem[_15498 + 92 len 4]
                    require idx < mem[_10302]
                    require idx < mem[ceil32(return_data.size) + 192]
                    if address(_15451) == address(_15465):
                        if not mem[(32 * idx) + _10302 + 32]:
                            require mem[_15498 + 18 len 14]
                            if 1000 * mem[_15498 + 18 len 14] / mem[_15498 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if 1000 * mem[_15498 + 18 len 14] < 1000 * mem[_15498 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require 1000 * mem[_15498 + 18 len 14]
                            require idx + 1 < mem[_10302]
                            mem[(32 * idx + 1) + _10302 + 32] = 0 / 1000 * mem[_15498 + 18 len 14]
                        else:
                            if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) / mem[(32 * idx) + _10302 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]):
                                if not mem[_15498 + 18 len 14]:
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                else:
                                    if 1000 * mem[_15498 + 18 len 14] / mem[_15498 + 18 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15498 + 18 len 14]) < 1000 * mem[_15498 + 18 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15498 + 18 len 14])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15498 + 18 len 14])
                            else:
                                if (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15498 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15498 + 50 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) != mem[_15498 + 50 len 14]:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if not mem[_15498 + 18 len 14]:
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15498 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15498 + 50 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                else:
                                    if 1000 * mem[_15498 + 18 len 14] / mem[_15498 + 18 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15498 + 18 len 14]) < 1000 * mem[_15498 + 18 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15498 + 18 len 14])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15498 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15498 + 50 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15498 + 18 len 14])
                    else:
                        if not mem[(32 * idx) + _10302 + 32]:
                            require mem[_15498 + 50 len 14]
                            if 1000 * mem[_15498 + 50 len 14] / mem[_15498 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if 1000 * mem[_15498 + 50 len 14] < 1000 * mem[_15498 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require 1000 * mem[_15498 + 50 len 14]
                            require idx + 1 < mem[_10302]
                            mem[(32 * idx + 1) + _10302 + 32] = 0 / 1000 * mem[_15498 + 50 len 14]
                        else:
                            if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) / mem[(32 * idx) + _10302 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]):
                                if not mem[_15498 + 50 len 14]:
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                else:
                                    if 1000 * mem[_15498 + 50 len 14] / mem[_15498 + 50 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15498 + 50 len 14]) < 1000 * mem[_15498 + 50 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15498 + 50 len 14])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15498 + 50 len 14])
                            else:
                                if (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15498 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15498 + 18 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) != mem[_15498 + 18 len 14]:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if not mem[_15498 + 50 len 14]:
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15498 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15498 + 18 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                else:
                                    if 1000 * mem[_15498 + 50 len 14] / mem[_15498 + 50 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15498 + 50 len 14]) < 1000 * mem[_15498 + 50 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15498 + 50 len 14])
                                    require idx + 1 < mem[_10302]
                                    mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15498 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15498 + 18 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15498 + 50 len 14])
                _15423 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            require 0 < mem[ceil32(return_data.size) + 96]
            _15449 = mem[ceil32(return_data.size) + 128]
            require 0 < mem[ceil32(return_data.size) + 320]
            require 0 < mem[_10302]
            _15471 = mem[_10302 + 32]
            _15475 = mem[64]
            mem[mem[64] + 36] = mem[ceil32(return_data.size) + 364 len 20]
            mem[mem[64] + 68] = _15471
            _15515 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_15515 + 32] = mem[_15515 + 36 len 28] or 0xa9059cbb00000000000000000000000000000000000000000000000000000000
            _15527 = mem[_15515]
            idx = 0
            while idx < _15527:
                mem[idx + _15475 + 100] = mem[idx + _15515 + 32]
                idx = idx + 32
                continue 
            if ceil32(_15527) <= _15527:
                call address(_15449).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _15527 + _15475 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                    if not mem[96]:
                        _25053 = mem[ceil32(return_data.size) + 96]
                        idx = 0
                        while idx < _25053 - 1:
                            require idx < mem[ceil32(return_data.size) + 96]
                            require idx + 1 < mem[ceil32(return_data.size) + 96]
                            require idx + 1 < mem[_10302]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                _25357 = mem[(32 * idx + 1) + _10302 + 32]
                                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _26976 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 0
                                            mem[mem[64] + 36] = _25357
                                            mem[mem[64] + 68] = this.address
                                            require ext_code.size(address(_26976))
                                            call address(_26976).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args 0, _25357, this.address
                                        else:
                                            _26978 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _26979 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_26979 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_26979 + 36] = 0
                                            mem[_26979 + 68] = _25357
                                            mem[_26979 + 100] = this.address
                                            mem[_26979 + 132] = 128
                                            mem[_26979 + 164] = mem[_26979]
                                            s = 0
                                            while s < mem[_26979]:
                                                mem[s + _26979 + 196] = mem[s + _26979 + 32]
                                                _25053 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_26979]) > mem[_26979]:
                                                mem[mem[_26979] + _26979 + 196] = 0
                                            require ext_code.size(address(_26978))
                                            call address(_26978).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, _25357, address(this.address), 128, mem[_26979], mem[_26979 + 196 len ceil32(mem[_26979])]
                                    else:
                                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                                        _25773 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _27693 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 0
                                            mem[mem[64] + 36] = _25357
                                            mem[mem[64] + 68] = address(_25773)
                                            require ext_code.size(address(_27693))
                                            call address(_27693).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args 0, _25357, address(_25773)
                                        else:
                                            _27695 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _27696 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_27696 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_27696 + 36] = 0
                                            mem[_27696 + 68] = _25357
                                            mem[_27696 + 100] = address(_25773)
                                            mem[_27696 + 132] = 128
                                            mem[_27696 + 164] = mem[_27696]
                                            s = 0
                                            while s < mem[_27696]:
                                                mem[s + _27696 + 196] = mem[s + _27696 + 32]
                                                _25053 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_27696]) > mem[_27696]:
                                                mem[mem[_27696] + _27696 + 196] = 0
                                            require ext_code.size(address(_27695))
                                            call address(_27695).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, _25357, address(_25773), 128, mem[_27696], mem[_27696 + 196 len ceil32(mem[_27696])]
                                else:
                                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _26982 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _25357
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = this.address
                                            require ext_code.size(address(_26982))
                                            call address(_26982).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args _25357, 0, this.address
                                        else:
                                            _26984 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _26985 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_26985 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_26985 + 36] = _25357
                                            mem[_26985 + 68] = 0
                                            mem[_26985 + 100] = this.address
                                            mem[_26985 + 132] = 128
                                            mem[_26985 + 164] = mem[_26985]
                                            s = 0
                                            while s < mem[_26985]:
                                                mem[s + _26985 + 196] = mem[s + _26985 + 32]
                                                _25053 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_26985]) > mem[_26985]:
                                                mem[mem[_26985] + _26985 + 196] = 0
                                            require ext_code.size(address(_26984))
                                            call address(_26984).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args _25357, 0, address(this.address), 128, mem[_26985], mem[_26985 + 196 len ceil32(mem[_26985])]
                                    else:
                                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                                        _25775 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _27698 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _25357
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = address(_25775)
                                            require ext_code.size(address(_27698))
                                            call address(_27698).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args _25357, 0, address(_25775)
                                        else:
                                            _27700 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _27701 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_27701 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_27701 + 36] = _25357
                                            mem[_27701 + 68] = 0
                                            mem[_27701 + 100] = address(_25775)
                                            mem[_27701 + 132] = 128
                                            mem[_27701 + 164] = mem[_27701]
                                            s = 0
                                            while s < mem[_27701]:
                                                mem[s + _27701 + 196] = mem[s + _27701 + 32]
                                                _25053 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_27701]) > mem[_27701]:
                                                mem[mem[_27701] + _27701 + 196] = 0
                                            require ext_code.size(address(_27700))
                                            call address(_27700).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args _25357, 0, address(_25775), 128, mem[_27701], mem[_27701 + 196 len ceil32(mem[_27701])]
                            else:
                                _25358 = mem[(32 * idx + 1) + _10302 + 32]
                                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _26988 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 0
                                            mem[mem[64] + 36] = _25358
                                            mem[mem[64] + 68] = this.address
                                            require ext_code.size(address(_26988))
                                            call address(_26988).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args 0, _25358, this.address
                                        else:
                                            _26990 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _26991 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_26991 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_26991 + 36] = 0
                                            mem[_26991 + 68] = _25358
                                            mem[_26991 + 100] = this.address
                                            mem[_26991 + 132] = 128
                                            mem[_26991 + 164] = mem[_26991]
                                            s = 0
                                            while s < mem[_26991]:
                                                mem[s + _26991 + 196] = mem[s + _26991 + 32]
                                                _25053 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_26991]) > mem[_26991]:
                                                mem[mem[_26991] + _26991 + 196] = 0
                                            require ext_code.size(address(_26990))
                                            call address(_26990).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, _25358, address(this.address), 128, mem[_26991], mem[_26991 + 196 len ceil32(mem[_26991])]
                                    else:
                                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                                        _25777 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _27703 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 0
                                            mem[mem[64] + 36] = _25358
                                            mem[mem[64] + 68] = address(_25777)
                                            require ext_code.size(address(_27703))
                                            call address(_27703).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args 0, _25358, address(_25777)
                                        else:
                                            _27705 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _27706 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_27706 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_27706 + 36] = 0
                                            mem[_27706 + 68] = _25358
                                            mem[_27706 + 100] = address(_25777)
                                            mem[_27706 + 132] = 128
                                            mem[_27706 + 164] = mem[_27706]
                                            s = 0
                                            while s < mem[_27706]:
                                                mem[s + _27706 + 196] = mem[s + _27706 + 32]
                                                _25053 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_27706]) > mem[_27706]:
                                                mem[mem[_27706] + _27706 + 196] = 0
                                            require ext_code.size(address(_27705))
                                            call address(_27705).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, _25358, address(_25777), 128, mem[_27706], mem[_27706 + 196 len ceil32(mem[_27706])]
                                else:
                                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _26994 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _25358
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = this.address
                                            require ext_code.size(address(_26994))
                                            call address(_26994).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args _25358, 0, this.address
                                        else:
                                            _26996 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _26997 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_26997 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_26997 + 36] = _25358
                                            mem[_26997 + 68] = 0
                                            mem[_26997 + 100] = this.address
                                            mem[_26997 + 132] = 128
                                            mem[_26997 + 164] = mem[_26997]
                                            s = 0
                                            while s < mem[_26997]:
                                                mem[s + _26997 + 196] = mem[s + _26997 + 32]
                                                _25053 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_26997]) > mem[_26997]:
                                                mem[mem[_26997] + _26997 + 196] = 0
                                            require ext_code.size(address(_26996))
                                            call address(_26996).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args _25358, 0, address(this.address), 128, mem[_26997], mem[_26997 + 196 len ceil32(mem[_26997])]
                                    else:
                                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                                        _25779 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _27708 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _25358
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = address(_25779)
                                            require ext_code.size(address(_27708))
                                            call address(_27708).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args _25358, 0, address(_25779)
                                        else:
                                            _27710 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _27711 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_27711 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_27711 + 36] = _25358
                                            mem[_27711 + 68] = 0
                                            mem[_27711 + 100] = address(_25779)
                                            mem[_27711 + 132] = 128
                                            mem[_27711 + 164] = mem[_27711]
                                            s = 0
                                            while s < mem[_27711]:
                                                mem[s + _27711 + 196] = mem[s + _27711 + 32]
                                                _25053 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_27711]) > mem[_27711]:
                                                mem[mem[_27711] + _27711 + 196] = 0
                                            require ext_code.size(address(_27710))
                                            call address(_27710).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args _25358, 0, address(_25779), 128, mem[_27711], mem[_27711 + 196 len ceil32(mem[_27711])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25053 = mem[ceil32(return_data.size) + 96]
                            idx = idx + 1
                            continue 
                        _25197 = mem[64]
                        mem[mem[64]] = 32
                        _25245 = mem[_10302]
                        mem[mem[64] + 32] = mem[_10302]
                        idx = 0
                        s = _10302 + 32
                        t = mem[64] + 64
                        while idx < _25245:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _25197 + (32 * _25245) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                    _25054 = mem[ceil32(return_data.size) + 96]
                    idx = 0
                    while idx < _25054 - 1:
                        require idx < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[_10302]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            _25359 = mem[(32 * idx + 1) + _10302 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27001 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25359
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27001))
                                        call address(_27001).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25359, this.address
                                    else:
                                        _27003 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27004 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27004 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27004 + 36] = 0
                                        mem[_27004 + 68] = _25359
                                        mem[_27004 + 100] = this.address
                                        mem[_27004 + 132] = 128
                                        mem[_27004 + 164] = mem[_27004]
                                        s = 0
                                        while s < mem[_27004]:
                                            mem[s + _27004 + 196] = mem[s + _27004 + 32]
                                            _25054 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27004]) > mem[_27004]:
                                            mem[mem[_27004] + _27004 + 196] = 0
                                        require ext_code.size(address(_27003))
                                        call address(_27003).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25359, address(this.address), 128, mem[_27004], mem[_27004 + 196 len ceil32(mem[_27004])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25781 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27713 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25359
                                        mem[mem[64] + 68] = address(_25781)
                                        require ext_code.size(address(_27713))
                                        call address(_27713).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25359, address(_25781)
                                    else:
                                        _27715 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27716 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27716 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27716 + 36] = 0
                                        mem[_27716 + 68] = _25359
                                        mem[_27716 + 100] = address(_25781)
                                        mem[_27716 + 132] = 128
                                        mem[_27716 + 164] = mem[_27716]
                                        s = 0
                                        while s < mem[_27716]:
                                            mem[s + _27716 + 196] = mem[s + _27716 + 32]
                                            _25054 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27716]) > mem[_27716]:
                                            mem[mem[_27716] + _27716 + 196] = 0
                                        require ext_code.size(address(_27715))
                                        call address(_27715).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25359, address(_25781), 128, mem[_27716], mem[_27716 + 196 len ceil32(mem[_27716])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27007 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25359
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27007))
                                        call address(_27007).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25359, 0, this.address
                                    else:
                                        _27009 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27010 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27010 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27010 + 36] = _25359
                                        mem[_27010 + 68] = 0
                                        mem[_27010 + 100] = this.address
                                        mem[_27010 + 132] = 128
                                        mem[_27010 + 164] = mem[_27010]
                                        s = 0
                                        while s < mem[_27010]:
                                            mem[s + _27010 + 196] = mem[s + _27010 + 32]
                                            _25054 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27010]) > mem[_27010]:
                                            mem[mem[_27010] + _27010 + 196] = 0
                                        require ext_code.size(address(_27009))
                                        call address(_27009).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25359, 0, address(this.address), 128, mem[_27010], mem[_27010 + 196 len ceil32(mem[_27010])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25783 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27718 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25359
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25783)
                                        require ext_code.size(address(_27718))
                                        call address(_27718).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25359, 0, address(_25783)
                                    else:
                                        _27720 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27721 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27721 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27721 + 36] = _25359
                                        mem[_27721 + 68] = 0
                                        mem[_27721 + 100] = address(_25783)
                                        mem[_27721 + 132] = 128
                                        mem[_27721 + 164] = mem[_27721]
                                        s = 0
                                        while s < mem[_27721]:
                                            mem[s + _27721 + 196] = mem[s + _27721 + 32]
                                            _25054 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27721]) > mem[_27721]:
                                            mem[mem[_27721] + _27721 + 196] = 0
                                        require ext_code.size(address(_27720))
                                        call address(_27720).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25359, 0, address(_25783), 128, mem[_27721], mem[_27721 + 196 len ceil32(mem[_27721])]
                        else:
                            _25360 = mem[(32 * idx + 1) + _10302 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27013 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25360
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27013))
                                        call address(_27013).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25360, this.address
                                    else:
                                        _27015 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27016 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27016 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27016 + 36] = 0
                                        mem[_27016 + 68] = _25360
                                        mem[_27016 + 100] = this.address
                                        mem[_27016 + 132] = 128
                                        mem[_27016 + 164] = mem[_27016]
                                        s = 0
                                        while s < mem[_27016]:
                                            mem[s + _27016 + 196] = mem[s + _27016 + 32]
                                            _25054 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27016]) > mem[_27016]:
                                            mem[mem[_27016] + _27016 + 196] = 0
                                        require ext_code.size(address(_27015))
                                        call address(_27015).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25360, address(this.address), 128, mem[_27016], mem[_27016 + 196 len ceil32(mem[_27016])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25785 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27723 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25360
                                        mem[mem[64] + 68] = address(_25785)
                                        require ext_code.size(address(_27723))
                                        call address(_27723).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25360, address(_25785)
                                    else:
                                        _27725 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27726 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27726 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27726 + 36] = 0
                                        mem[_27726 + 68] = _25360
                                        mem[_27726 + 100] = address(_25785)
                                        mem[_27726 + 132] = 128
                                        mem[_27726 + 164] = mem[_27726]
                                        s = 0
                                        while s < mem[_27726]:
                                            mem[s + _27726 + 196] = mem[s + _27726 + 32]
                                            _25054 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27726]) > mem[_27726]:
                                            mem[mem[_27726] + _27726 + 196] = 0
                                        require ext_code.size(address(_27725))
                                        call address(_27725).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25360, address(_25785), 128, mem[_27726], mem[_27726 + 196 len ceil32(mem[_27726])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27019 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25360
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27019))
                                        call address(_27019).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25360, 0, this.address
                                    else:
                                        _27021 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27022 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27022 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27022 + 36] = _25360
                                        mem[_27022 + 68] = 0
                                        mem[_27022 + 100] = this.address
                                        mem[_27022 + 132] = 128
                                        mem[_27022 + 164] = mem[_27022]
                                        s = 0
                                        while s < mem[_27022]:
                                            mem[s + _27022 + 196] = mem[s + _27022 + 32]
                                            _25054 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27022]) > mem[_27022]:
                                            mem[mem[_27022] + _27022 + 196] = 0
                                        require ext_code.size(address(_27021))
                                        call address(_27021).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25360, 0, address(this.address), 128, mem[_27022], mem[_27022 + 196 len ceil32(mem[_27022])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25787 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27728 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25360
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25787)
                                        require ext_code.size(address(_27728))
                                        call address(_27728).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25360, 0, address(_25787)
                                    else:
                                        _27730 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27731 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27731 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27731 + 36] = _25360
                                        mem[_27731 + 68] = 0
                                        mem[_27731 + 100] = address(_25787)
                                        mem[_27731 + 132] = 128
                                        mem[_27731 + 164] = mem[_27731]
                                        s = 0
                                        while s < mem[_27731]:
                                            mem[s + _27731 + 196] = mem[s + _27731 + 32]
                                            _25054 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27731]) > mem[_27731]:
                                            mem[mem[_27731] + _27731 + 196] = 0
                                        require ext_code.size(address(_27730))
                                        call address(_27730).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25360, 0, address(_25787), 128, mem[_27731], mem[_27731 + 196 len ceil32(mem[_27731])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25054 = mem[ceil32(return_data.size) + 96]
                        idx = idx + 1
                        continue 
                    _25199 = mem[64]
                    mem[mem[64]] = 32
                    _25246 = mem[_10302]
                    mem[mem[64] + 32] = mem[_10302]
                    idx = 0
                    s = _10302 + 32
                    t = mem[64] + 64
                    while idx < _25246:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _25199 + (32 * _25246) + -mem[64] + 64
                _20537 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_20537] = return_data.size
                mem[_20537 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                if not return_data.size:
                    _25055 = mem[ceil32(return_data.size) + 96]
                    idx = 0
                    while idx < _25055 - 1:
                        require idx < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[_10302]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            _25361 = mem[(32 * idx + 1) + _10302 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27026 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25361
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27026))
                                        call address(_27026).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25361, this.address
                                    else:
                                        _27028 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27029 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27029 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27029 + 36] = 0
                                        mem[_27029 + 68] = _25361
                                        mem[_27029 + 100] = this.address
                                        mem[_27029 + 132] = 128
                                        mem[_27029 + 164] = mem[_27029]
                                        s = 0
                                        while s < mem[_27029]:
                                            mem[s + _27029 + 196] = mem[s + _27029 + 32]
                                            _25055 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27029]) > mem[_27029]:
                                            mem[mem[_27029] + _27029 + 196] = 0
                                        require ext_code.size(address(_27028))
                                        call address(_27028).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25361, address(this.address), 128, mem[_27029], mem[_27029 + 196 len ceil32(mem[_27029])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25789 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27733 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25361
                                        mem[mem[64] + 68] = address(_25789)
                                        require ext_code.size(address(_27733))
                                        call address(_27733).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25361, address(_25789)
                                    else:
                                        _27735 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27736 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27736 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27736 + 36] = 0
                                        mem[_27736 + 68] = _25361
                                        mem[_27736 + 100] = address(_25789)
                                        mem[_27736 + 132] = 128
                                        mem[_27736 + 164] = mem[_27736]
                                        s = 0
                                        while s < mem[_27736]:
                                            mem[s + _27736 + 196] = mem[s + _27736 + 32]
                                            _25055 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27736]) > mem[_27736]:
                                            mem[mem[_27736] + _27736 + 196] = 0
                                        require ext_code.size(address(_27735))
                                        call address(_27735).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25361, address(_25789), 128, mem[_27736], mem[_27736 + 196 len ceil32(mem[_27736])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27032 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25361
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27032))
                                        call address(_27032).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25361, 0, this.address
                                    else:
                                        _27034 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27035 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27035 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27035 + 36] = _25361
                                        mem[_27035 + 68] = 0
                                        mem[_27035 + 100] = this.address
                                        mem[_27035 + 132] = 128
                                        mem[_27035 + 164] = mem[_27035]
                                        s = 0
                                        while s < mem[_27035]:
                                            mem[s + _27035 + 196] = mem[s + _27035 + 32]
                                            _25055 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27035]) > mem[_27035]:
                                            mem[mem[_27035] + _27035 + 196] = 0
                                        require ext_code.size(address(_27034))
                                        call address(_27034).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25361, 0, address(this.address), 128, mem[_27035], mem[_27035 + 196 len ceil32(mem[_27035])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25791 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27738 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25361
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25791)
                                        require ext_code.size(address(_27738))
                                        call address(_27738).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25361, 0, address(_25791)
                                    else:
                                        _27740 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27741 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27741 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27741 + 36] = _25361
                                        mem[_27741 + 68] = 0
                                        mem[_27741 + 100] = address(_25791)
                                        mem[_27741 + 132] = 128
                                        mem[_27741 + 164] = mem[_27741]
                                        s = 0
                                        while s < mem[_27741]:
                                            mem[s + _27741 + 196] = mem[s + _27741 + 32]
                                            _25055 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27741]) > mem[_27741]:
                                            mem[mem[_27741] + _27741 + 196] = 0
                                        require ext_code.size(address(_27740))
                                        call address(_27740).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25361, 0, address(_25791), 128, mem[_27741], mem[_27741 + 196 len ceil32(mem[_27741])]
                        else:
                            _25362 = mem[(32 * idx + 1) + _10302 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27038 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25362
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27038))
                                        call address(_27038).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25362, this.address
                                    else:
                                        _27040 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27041 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27041 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27041 + 36] = 0
                                        mem[_27041 + 68] = _25362
                                        mem[_27041 + 100] = this.address
                                        mem[_27041 + 132] = 128
                                        mem[_27041 + 164] = mem[_27041]
                                        s = 0
                                        while s < mem[_27041]:
                                            mem[s + _27041 + 196] = mem[s + _27041 + 32]
                                            _25055 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27041]) > mem[_27041]:
                                            mem[mem[_27041] + _27041 + 196] = 0
                                        require ext_code.size(address(_27040))
                                        call address(_27040).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25362, address(this.address), 128, mem[_27041], mem[_27041 + 196 len ceil32(mem[_27041])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25793 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27743 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25362
                                        mem[mem[64] + 68] = address(_25793)
                                        require ext_code.size(address(_27743))
                                        call address(_27743).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25362, address(_25793)
                                    else:
                                        _27745 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27746 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27746 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27746 + 36] = 0
                                        mem[_27746 + 68] = _25362
                                        mem[_27746 + 100] = address(_25793)
                                        mem[_27746 + 132] = 128
                                        mem[_27746 + 164] = mem[_27746]
                                        s = 0
                                        while s < mem[_27746]:
                                            mem[s + _27746 + 196] = mem[s + _27746 + 32]
                                            _25055 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27746]) > mem[_27746]:
                                            mem[mem[_27746] + _27746 + 196] = 0
                                        require ext_code.size(address(_27745))
                                        call address(_27745).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25362, address(_25793), 128, mem[_27746], mem[_27746 + 196 len ceil32(mem[_27746])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27044 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25362
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27044))
                                        call address(_27044).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25362, 0, this.address
                                    else:
                                        _27046 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27047 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27047 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27047 + 36] = _25362
                                        mem[_27047 + 68] = 0
                                        mem[_27047 + 100] = this.address
                                        mem[_27047 + 132] = 128
                                        mem[_27047 + 164] = mem[_27047]
                                        s = 0
                                        while s < mem[_27047]:
                                            mem[s + _27047 + 196] = mem[s + _27047 + 32]
                                            _25055 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27047]) > mem[_27047]:
                                            mem[mem[_27047] + _27047 + 196] = 0
                                        require ext_code.size(address(_27046))
                                        call address(_27046).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25362, 0, address(this.address), 128, mem[_27047], mem[_27047 + 196 len ceil32(mem[_27047])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25795 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27748 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25362
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25795)
                                        require ext_code.size(address(_27748))
                                        call address(_27748).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25362, 0, address(_25795)
                                    else:
                                        _27750 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27751 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27751 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27751 + 36] = _25362
                                        mem[_27751 + 68] = 0
                                        mem[_27751 + 100] = address(_25795)
                                        mem[_27751 + 132] = 128
                                        mem[_27751 + 164] = mem[_27751]
                                        s = 0
                                        while s < mem[_27751]:
                                            mem[s + _27751 + 196] = mem[s + _27751 + 32]
                                            _25055 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27751]) > mem[_27751]:
                                            mem[mem[_27751] + _27751 + 196] = 0
                                        require ext_code.size(address(_27750))
                                        call address(_27750).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25362, 0, address(_25795), 128, mem[_27751], mem[_27751 + 196 len ceil32(mem[_27751])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25055 = mem[ceil32(return_data.size) + 96]
                        idx = idx + 1
                        continue 
                    _25201 = mem[64]
                    mem[mem[64]] = 32
                    _25247 = mem[_10302]
                    mem[mem[64] + 32] = mem[_10302]
                    idx = 0
                    s = _10302 + 32
                    t = mem[64] + 64
                    while idx < _25247:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _25201 + (32 * _25247) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_20537 + 32] == bool(mem[_20537 + 32])
                if not mem[_20537 + 32]:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                _25056 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _25056 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_10302]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _25363 = mem[(32 * idx + 1) + _10302 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27051 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25363
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27051))
                                    call address(_27051).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25363, this.address
                                else:
                                    _27053 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27054 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27054 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27054 + 36] = 0
                                    mem[_27054 + 68] = _25363
                                    mem[_27054 + 100] = this.address
                                    mem[_27054 + 132] = 128
                                    mem[_27054 + 164] = mem[_27054]
                                    s = 0
                                    while s < mem[_27054]:
                                        mem[s + _27054 + 196] = mem[s + _27054 + 32]
                                        _25056 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27054]) > mem[_27054]:
                                        mem[mem[_27054] + _27054 + 196] = 0
                                    require ext_code.size(address(_27053))
                                    call address(_27053).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25363, address(this.address), 128, mem[_27054], mem[_27054 + 196 len ceil32(mem[_27054])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25797 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27753 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25363
                                    mem[mem[64] + 68] = address(_25797)
                                    require ext_code.size(address(_27753))
                                    call address(_27753).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25363, address(_25797)
                                else:
                                    _27755 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27756 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27756 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27756 + 36] = 0
                                    mem[_27756 + 68] = _25363
                                    mem[_27756 + 100] = address(_25797)
                                    mem[_27756 + 132] = 128
                                    mem[_27756 + 164] = mem[_27756]
                                    s = 0
                                    while s < mem[_27756]:
                                        mem[s + _27756 + 196] = mem[s + _27756 + 32]
                                        _25056 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27756]) > mem[_27756]:
                                        mem[mem[_27756] + _27756 + 196] = 0
                                    require ext_code.size(address(_27755))
                                    call address(_27755).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25363, address(_25797), 128, mem[_27756], mem[_27756 + 196 len ceil32(mem[_27756])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27057 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25363
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27057))
                                    call address(_27057).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25363, 0, this.address
                                else:
                                    _27059 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27060 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27060 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27060 + 36] = _25363
                                    mem[_27060 + 68] = 0
                                    mem[_27060 + 100] = this.address
                                    mem[_27060 + 132] = 128
                                    mem[_27060 + 164] = mem[_27060]
                                    s = 0
                                    while s < mem[_27060]:
                                        mem[s + _27060 + 196] = mem[s + _27060 + 32]
                                        _25056 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27060]) > mem[_27060]:
                                        mem[mem[_27060] + _27060 + 196] = 0
                                    require ext_code.size(address(_27059))
                                    call address(_27059).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25363, 0, address(this.address), 128, mem[_27060], mem[_27060 + 196 len ceil32(mem[_27060])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25799 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27758 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25363
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25799)
                                    require ext_code.size(address(_27758))
                                    call address(_27758).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25363, 0, address(_25799)
                                else:
                                    _27760 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27761 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27761 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27761 + 36] = _25363
                                    mem[_27761 + 68] = 0
                                    mem[_27761 + 100] = address(_25799)
                                    mem[_27761 + 132] = 128
                                    mem[_27761 + 164] = mem[_27761]
                                    s = 0
                                    while s < mem[_27761]:
                                        mem[s + _27761 + 196] = mem[s + _27761 + 32]
                                        _25056 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27761]) > mem[_27761]:
                                        mem[mem[_27761] + _27761 + 196] = 0
                                    require ext_code.size(address(_27760))
                                    call address(_27760).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25363, 0, address(_25799), 128, mem[_27761], mem[_27761 + 196 len ceil32(mem[_27761])]
                    else:
                        _25364 = mem[(32 * idx + 1) + _10302 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27063 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25364
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27063))
                                    call address(_27063).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25364, this.address
                                else:
                                    _27065 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27066 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27066 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27066 + 36] = 0
                                    mem[_27066 + 68] = _25364
                                    mem[_27066 + 100] = this.address
                                    mem[_27066 + 132] = 128
                                    mem[_27066 + 164] = mem[_27066]
                                    s = 0
                                    while s < mem[_27066]:
                                        mem[s + _27066 + 196] = mem[s + _27066 + 32]
                                        _25056 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27066]) > mem[_27066]:
                                        mem[mem[_27066] + _27066 + 196] = 0
                                    require ext_code.size(address(_27065))
                                    call address(_27065).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25364, address(this.address), 128, mem[_27066], mem[_27066 + 196 len ceil32(mem[_27066])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25801 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27763 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25364
                                    mem[mem[64] + 68] = address(_25801)
                                    require ext_code.size(address(_27763))
                                    call address(_27763).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25364, address(_25801)
                                else:
                                    _27765 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27766 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27766 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27766 + 36] = 0
                                    mem[_27766 + 68] = _25364
                                    mem[_27766 + 100] = address(_25801)
                                    mem[_27766 + 132] = 128
                                    mem[_27766 + 164] = mem[_27766]
                                    s = 0
                                    while s < mem[_27766]:
                                        mem[s + _27766 + 196] = mem[s + _27766 + 32]
                                        _25056 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27766]) > mem[_27766]:
                                        mem[mem[_27766] + _27766 + 196] = 0
                                    require ext_code.size(address(_27765))
                                    call address(_27765).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25364, address(_25801), 128, mem[_27766], mem[_27766 + 196 len ceil32(mem[_27766])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27069 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25364
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27069))
                                    call address(_27069).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25364, 0, this.address
                                else:
                                    _27071 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27072 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27072 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27072 + 36] = _25364
                                    mem[_27072 + 68] = 0
                                    mem[_27072 + 100] = this.address
                                    mem[_27072 + 132] = 128
                                    mem[_27072 + 164] = mem[_27072]
                                    s = 0
                                    while s < mem[_27072]:
                                        mem[s + _27072 + 196] = mem[s + _27072 + 32]
                                        _25056 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27072]) > mem[_27072]:
                                        mem[mem[_27072] + _27072 + 196] = 0
                                    require ext_code.size(address(_27071))
                                    call address(_27071).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25364, 0, address(this.address), 128, mem[_27072], mem[_27072 + 196 len ceil32(mem[_27072])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25803 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27768 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25364
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25803)
                                    require ext_code.size(address(_27768))
                                    call address(_27768).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25364, 0, address(_25803)
                                else:
                                    _27770 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27771 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27771 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27771 + 36] = _25364
                                    mem[_27771 + 68] = 0
                                    mem[_27771 + 100] = address(_25803)
                                    mem[_27771 + 132] = 128
                                    mem[_27771 + 164] = mem[_27771]
                                    s = 0
                                    while s < mem[_27771]:
                                        mem[s + _27771 + 196] = mem[s + _27771 + 32]
                                        _25056 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27771]) > mem[_27771]:
                                        mem[mem[_27771] + _27771 + 196] = 0
                                    require ext_code.size(address(_27770))
                                    call address(_27770).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25364, 0, address(_25803), 128, mem[_27771], mem[_27771 + 196 len ceil32(mem[_27771])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25056 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                _25203 = mem[64]
                mem[mem[64]] = 32
                _25248 = mem[_10302]
                mem[mem[64] + 32] = mem[_10302]
                idx = 0
                s = _10302 + 32
                t = mem[64] + 64
                while idx < _25248:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _25203 + (32 * _25248) + -mem[64] + 64
            mem[_15527 + _15475 + 100] = 0
            call address(_15449).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _15527 + _15475 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                if not mem[96]:
                    _25057 = mem[ceil32(return_data.size) + 96]
                    idx = 0
                    while idx < _25057 - 1:
                        require idx < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[_10302]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            _25365 = mem[(32 * idx + 1) + _10302 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27076 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25365
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27076))
                                        call address(_27076).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25365, this.address
                                    else:
                                        _27078 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27079 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27079 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27079 + 36] = 0
                                        mem[_27079 + 68] = _25365
                                        mem[_27079 + 100] = this.address
                                        mem[_27079 + 132] = 128
                                        mem[_27079 + 164] = mem[_27079]
                                        s = 0
                                        while s < mem[_27079]:
                                            mem[s + _27079 + 196] = mem[s + _27079 + 32]
                                            _25057 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27079]) > mem[_27079]:
                                            mem[mem[_27079] + _27079 + 196] = 0
                                        require ext_code.size(address(_27078))
                                        call address(_27078).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25365, address(this.address), 128, mem[_27079], mem[_27079 + 196 len ceil32(mem[_27079])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25805 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27773 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25365
                                        mem[mem[64] + 68] = address(_25805)
                                        require ext_code.size(address(_27773))
                                        call address(_27773).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25365, address(_25805)
                                    else:
                                        _27775 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27776 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27776 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27776 + 36] = 0
                                        mem[_27776 + 68] = _25365
                                        mem[_27776 + 100] = address(_25805)
                                        mem[_27776 + 132] = 128
                                        mem[_27776 + 164] = mem[_27776]
                                        s = 0
                                        while s < mem[_27776]:
                                            mem[s + _27776 + 196] = mem[s + _27776 + 32]
                                            _25057 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27776]) > mem[_27776]:
                                            mem[mem[_27776] + _27776 + 196] = 0
                                        require ext_code.size(address(_27775))
                                        call address(_27775).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25365, address(_25805), 128, mem[_27776], mem[_27776 + 196 len ceil32(mem[_27776])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27082 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25365
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27082))
                                        call address(_27082).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25365, 0, this.address
                                    else:
                                        _27084 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27085 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27085 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27085 + 36] = _25365
                                        mem[_27085 + 68] = 0
                                        mem[_27085 + 100] = this.address
                                        mem[_27085 + 132] = 128
                                        mem[_27085 + 164] = mem[_27085]
                                        s = 0
                                        while s < mem[_27085]:
                                            mem[s + _27085 + 196] = mem[s + _27085 + 32]
                                            _25057 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27085]) > mem[_27085]:
                                            mem[mem[_27085] + _27085 + 196] = 0
                                        require ext_code.size(address(_27084))
                                        call address(_27084).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25365, 0, address(this.address), 128, mem[_27085], mem[_27085 + 196 len ceil32(mem[_27085])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25807 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27778 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25365
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25807)
                                        require ext_code.size(address(_27778))
                                        call address(_27778).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25365, 0, address(_25807)
                                    else:
                                        _27780 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27781 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27781 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27781 + 36] = _25365
                                        mem[_27781 + 68] = 0
                                        mem[_27781 + 100] = address(_25807)
                                        mem[_27781 + 132] = 128
                                        mem[_27781 + 164] = mem[_27781]
                                        s = 0
                                        while s < mem[_27781]:
                                            mem[s + _27781 + 196] = mem[s + _27781 + 32]
                                            _25057 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27781]) > mem[_27781]:
                                            mem[mem[_27781] + _27781 + 196] = 0
                                        require ext_code.size(address(_27780))
                                        call address(_27780).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25365, 0, address(_25807), 128, mem[_27781], mem[_27781 + 196 len ceil32(mem[_27781])]
                        else:
                            _25366 = mem[(32 * idx + 1) + _10302 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27088 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25366
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27088))
                                        call address(_27088).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25366, this.address
                                    else:
                                        _27090 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27091 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27091 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27091 + 36] = 0
                                        mem[_27091 + 68] = _25366
                                        mem[_27091 + 100] = this.address
                                        mem[_27091 + 132] = 128
                                        mem[_27091 + 164] = mem[_27091]
                                        s = 0
                                        while s < mem[_27091]:
                                            mem[s + _27091 + 196] = mem[s + _27091 + 32]
                                            _25057 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27091]) > mem[_27091]:
                                            mem[mem[_27091] + _27091 + 196] = 0
                                        require ext_code.size(address(_27090))
                                        call address(_27090).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25366, address(this.address), 128, mem[_27091], mem[_27091 + 196 len ceil32(mem[_27091])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25809 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27783 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25366
                                        mem[mem[64] + 68] = address(_25809)
                                        require ext_code.size(address(_27783))
                                        call address(_27783).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25366, address(_25809)
                                    else:
                                        _27785 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27786 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27786 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27786 + 36] = 0
                                        mem[_27786 + 68] = _25366
                                        mem[_27786 + 100] = address(_25809)
                                        mem[_27786 + 132] = 128
                                        mem[_27786 + 164] = mem[_27786]
                                        s = 0
                                        while s < mem[_27786]:
                                            mem[s + _27786 + 196] = mem[s + _27786 + 32]
                                            _25057 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27786]) > mem[_27786]:
                                            mem[mem[_27786] + _27786 + 196] = 0
                                        require ext_code.size(address(_27785))
                                        call address(_27785).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25366, address(_25809), 128, mem[_27786], mem[_27786 + 196 len ceil32(mem[_27786])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27094 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25366
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27094))
                                        call address(_27094).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25366, 0, this.address
                                    else:
                                        _27096 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27097 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27097 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27097 + 36] = _25366
                                        mem[_27097 + 68] = 0
                                        mem[_27097 + 100] = this.address
                                        mem[_27097 + 132] = 128
                                        mem[_27097 + 164] = mem[_27097]
                                        s = 0
                                        while s < mem[_27097]:
                                            mem[s + _27097 + 196] = mem[s + _27097 + 32]
                                            _25057 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27097]) > mem[_27097]:
                                            mem[mem[_27097] + _27097 + 196] = 0
                                        require ext_code.size(address(_27096))
                                        call address(_27096).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25366, 0, address(this.address), 128, mem[_27097], mem[_27097 + 196 len ceil32(mem[_27097])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25811 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27788 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25366
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25811)
                                        require ext_code.size(address(_27788))
                                        call address(_27788).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25366, 0, address(_25811)
                                    else:
                                        _27790 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27791 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27791 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27791 + 36] = _25366
                                        mem[_27791 + 68] = 0
                                        mem[_27791 + 100] = address(_25811)
                                        mem[_27791 + 132] = 128
                                        mem[_27791 + 164] = mem[_27791]
                                        s = 0
                                        while s < mem[_27791]:
                                            mem[s + _27791 + 196] = mem[s + _27791 + 32]
                                            _25057 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27791]) > mem[_27791]:
                                            mem[mem[_27791] + _27791 + 196] = 0
                                        require ext_code.size(address(_27790))
                                        call address(_27790).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25366, 0, address(_25811), 128, mem[_27791], mem[_27791 + 196 len ceil32(mem[_27791])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25057 = mem[ceil32(return_data.size) + 96]
                        idx = idx + 1
                        continue 
                    _25205 = mem[64]
                    mem[mem[64]] = 32
                    _25249 = mem[_10302]
                    mem[mem[64] + 32] = mem[_10302]
                    idx = 0
                    s = _10302 + 32
                    t = mem[64] + 64
                    while idx < _25249:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _25205 + (32 * _25249) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                _25058 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _25058 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_10302]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _25367 = mem[(32 * idx + 1) + _10302 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27101 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25367
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27101))
                                    call address(_27101).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25367, this.address
                                else:
                                    _27103 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27104 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27104 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27104 + 36] = 0
                                    mem[_27104 + 68] = _25367
                                    mem[_27104 + 100] = this.address
                                    mem[_27104 + 132] = 128
                                    mem[_27104 + 164] = mem[_27104]
                                    s = 0
                                    while s < mem[_27104]:
                                        mem[s + _27104 + 196] = mem[s + _27104 + 32]
                                        _25058 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27104]) > mem[_27104]:
                                        mem[mem[_27104] + _27104 + 196] = 0
                                    require ext_code.size(address(_27103))
                                    call address(_27103).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25367, address(this.address), 128, mem[_27104], mem[_27104 + 196 len ceil32(mem[_27104])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25813 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27793 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25367
                                    mem[mem[64] + 68] = address(_25813)
                                    require ext_code.size(address(_27793))
                                    call address(_27793).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25367, address(_25813)
                                else:
                                    _27795 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27796 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27796 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27796 + 36] = 0
                                    mem[_27796 + 68] = _25367
                                    mem[_27796 + 100] = address(_25813)
                                    mem[_27796 + 132] = 128
                                    mem[_27796 + 164] = mem[_27796]
                                    s = 0
                                    while s < mem[_27796]:
                                        mem[s + _27796 + 196] = mem[s + _27796 + 32]
                                        _25058 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27796]) > mem[_27796]:
                                        mem[mem[_27796] + _27796 + 196] = 0
                                    require ext_code.size(address(_27795))
                                    call address(_27795).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25367, address(_25813), 128, mem[_27796], mem[_27796 + 196 len ceil32(mem[_27796])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27107 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25367
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27107))
                                    call address(_27107).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25367, 0, this.address
                                else:
                                    _27109 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27110 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27110 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27110 + 36] = _25367
                                    mem[_27110 + 68] = 0
                                    mem[_27110 + 100] = this.address
                                    mem[_27110 + 132] = 128
                                    mem[_27110 + 164] = mem[_27110]
                                    s = 0
                                    while s < mem[_27110]:
                                        mem[s + _27110 + 196] = mem[s + _27110 + 32]
                                        _25058 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27110]) > mem[_27110]:
                                        mem[mem[_27110] + _27110 + 196] = 0
                                    require ext_code.size(address(_27109))
                                    call address(_27109).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25367, 0, address(this.address), 128, mem[_27110], mem[_27110 + 196 len ceil32(mem[_27110])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25815 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27798 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25367
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25815)
                                    require ext_code.size(address(_27798))
                                    call address(_27798).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25367, 0, address(_25815)
                                else:
                                    _27800 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27801 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27801 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27801 + 36] = _25367
                                    mem[_27801 + 68] = 0
                                    mem[_27801 + 100] = address(_25815)
                                    mem[_27801 + 132] = 128
                                    mem[_27801 + 164] = mem[_27801]
                                    s = 0
                                    while s < mem[_27801]:
                                        mem[s + _27801 + 196] = mem[s + _27801 + 32]
                                        _25058 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27801]) > mem[_27801]:
                                        mem[mem[_27801] + _27801 + 196] = 0
                                    require ext_code.size(address(_27800))
                                    call address(_27800).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25367, 0, address(_25815), 128, mem[_27801], mem[_27801 + 196 len ceil32(mem[_27801])]
                    else:
                        _25368 = mem[(32 * idx + 1) + _10302 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27113 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25368
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27113))
                                    call address(_27113).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25368, this.address
                                else:
                                    _27115 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27116 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27116 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27116 + 36] = 0
                                    mem[_27116 + 68] = _25368
                                    mem[_27116 + 100] = this.address
                                    mem[_27116 + 132] = 128
                                    mem[_27116 + 164] = mem[_27116]
                                    s = 0
                                    while s < mem[_27116]:
                                        mem[s + _27116 + 196] = mem[s + _27116 + 32]
                                        _25058 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27116]) > mem[_27116]:
                                        mem[mem[_27116] + _27116 + 196] = 0
                                    require ext_code.size(address(_27115))
                                    call address(_27115).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25368, address(this.address), 128, mem[_27116], mem[_27116 + 196 len ceil32(mem[_27116])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25817 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27803 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25368
                                    mem[mem[64] + 68] = address(_25817)
                                    require ext_code.size(address(_27803))
                                    call address(_27803).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25368, address(_25817)
                                else:
                                    _27805 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27806 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27806 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27806 + 36] = 0
                                    mem[_27806 + 68] = _25368
                                    mem[_27806 + 100] = address(_25817)
                                    mem[_27806 + 132] = 128
                                    mem[_27806 + 164] = mem[_27806]
                                    s = 0
                                    while s < mem[_27806]:
                                        mem[s + _27806 + 196] = mem[s + _27806 + 32]
                                        _25058 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27806]) > mem[_27806]:
                                        mem[mem[_27806] + _27806 + 196] = 0
                                    require ext_code.size(address(_27805))
                                    call address(_27805).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25368, address(_25817), 128, mem[_27806], mem[_27806 + 196 len ceil32(mem[_27806])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27119 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25368
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27119))
                                    call address(_27119).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25368, 0, this.address
                                else:
                                    _27121 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27122 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27122 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27122 + 36] = _25368
                                    mem[_27122 + 68] = 0
                                    mem[_27122 + 100] = this.address
                                    mem[_27122 + 132] = 128
                                    mem[_27122 + 164] = mem[_27122]
                                    s = 0
                                    while s < mem[_27122]:
                                        mem[s + _27122 + 196] = mem[s + _27122 + 32]
                                        _25058 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27122]) > mem[_27122]:
                                        mem[mem[_27122] + _27122 + 196] = 0
                                    require ext_code.size(address(_27121))
                                    call address(_27121).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25368, 0, address(this.address), 128, mem[_27122], mem[_27122 + 196 len ceil32(mem[_27122])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25819 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27808 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25368
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25819)
                                    require ext_code.size(address(_27808))
                                    call address(_27808).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25368, 0, address(_25819)
                                else:
                                    _27810 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27811 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27811 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27811 + 36] = _25368
                                    mem[_27811 + 68] = 0
                                    mem[_27811 + 100] = address(_25819)
                                    mem[_27811 + 132] = 128
                                    mem[_27811 + 164] = mem[_27811]
                                    s = 0
                                    while s < mem[_27811]:
                                        mem[s + _27811 + 196] = mem[s + _27811 + 32]
                                        _25058 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27811]) > mem[_27811]:
                                        mem[mem[_27811] + _27811 + 196] = 0
                                    require ext_code.size(address(_27810))
                                    call address(_27810).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25368, 0, address(_25819), 128, mem[_27811], mem[_27811 + 196 len ceil32(mem[_27811])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25058 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                _25207 = mem[64]
                mem[mem[64]] = 32
                _25250 = mem[_10302]
                mem[mem[64] + 32] = mem[_10302]
                idx = 0
                s = _10302 + 32
                t = mem[64] + 64
                while idx < _25250:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _25207 + (32 * _25250) + -mem[64] + 64
            _20538 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_20538] = return_data.size
            mem[_20538 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not return_data.size:
                _25059 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _25059 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_10302]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _25369 = mem[(32 * idx + 1) + _10302 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27126 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25369
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27126))
                                    call address(_27126).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25369, this.address
                                else:
                                    _27128 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27129 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27129 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27129 + 36] = 0
                                    mem[_27129 + 68] = _25369
                                    mem[_27129 + 100] = this.address
                                    mem[_27129 + 132] = 128
                                    mem[_27129 + 164] = mem[_27129]
                                    s = 0
                                    while s < mem[_27129]:
                                        mem[s + _27129 + 196] = mem[s + _27129 + 32]
                                        _25059 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27129]) > mem[_27129]:
                                        mem[mem[_27129] + _27129 + 196] = 0
                                    require ext_code.size(address(_27128))
                                    call address(_27128).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25369, address(this.address), 128, mem[_27129], mem[_27129 + 196 len ceil32(mem[_27129])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25821 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27813 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25369
                                    mem[mem[64] + 68] = address(_25821)
                                    require ext_code.size(address(_27813))
                                    call address(_27813).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25369, address(_25821)
                                else:
                                    _27815 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27816 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27816 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27816 + 36] = 0
                                    mem[_27816 + 68] = _25369
                                    mem[_27816 + 100] = address(_25821)
                                    mem[_27816 + 132] = 128
                                    mem[_27816 + 164] = mem[_27816]
                                    s = 0
                                    while s < mem[_27816]:
                                        mem[s + _27816 + 196] = mem[s + _27816 + 32]
                                        _25059 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27816]) > mem[_27816]:
                                        mem[mem[_27816] + _27816 + 196] = 0
                                    require ext_code.size(address(_27815))
                                    call address(_27815).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25369, address(_25821), 128, mem[_27816], mem[_27816 + 196 len ceil32(mem[_27816])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27132 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25369
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27132))
                                    call address(_27132).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25369, 0, this.address
                                else:
                                    _27134 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27135 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27135 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27135 + 36] = _25369
                                    mem[_27135 + 68] = 0
                                    mem[_27135 + 100] = this.address
                                    mem[_27135 + 132] = 128
                                    mem[_27135 + 164] = mem[_27135]
                                    s = 0
                                    while s < mem[_27135]:
                                        mem[s + _27135 + 196] = mem[s + _27135 + 32]
                                        _25059 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27135]) > mem[_27135]:
                                        mem[mem[_27135] + _27135 + 196] = 0
                                    require ext_code.size(address(_27134))
                                    call address(_27134).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25369, 0, address(this.address), 128, mem[_27135], mem[_27135 + 196 len ceil32(mem[_27135])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25823 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27818 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25369
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25823)
                                    require ext_code.size(address(_27818))
                                    call address(_27818).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25369, 0, address(_25823)
                                else:
                                    _27820 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27821 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27821 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27821 + 36] = _25369
                                    mem[_27821 + 68] = 0
                                    mem[_27821 + 100] = address(_25823)
                                    mem[_27821 + 132] = 128
                                    mem[_27821 + 164] = mem[_27821]
                                    s = 0
                                    while s < mem[_27821]:
                                        mem[s + _27821 + 196] = mem[s + _27821 + 32]
                                        _25059 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27821]) > mem[_27821]:
                                        mem[mem[_27821] + _27821 + 196] = 0
                                    require ext_code.size(address(_27820))
                                    call address(_27820).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25369, 0, address(_25823), 128, mem[_27821], mem[_27821 + 196 len ceil32(mem[_27821])]
                    else:
                        _25370 = mem[(32 * idx + 1) + _10302 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27138 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25370
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27138))
                                    call address(_27138).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25370, this.address
                                else:
                                    _27140 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27141 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27141 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27141 + 36] = 0
                                    mem[_27141 + 68] = _25370
                                    mem[_27141 + 100] = this.address
                                    mem[_27141 + 132] = 128
                                    mem[_27141 + 164] = mem[_27141]
                                    s = 0
                                    while s < mem[_27141]:
                                        mem[s + _27141 + 196] = mem[s + _27141 + 32]
                                        _25059 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27141]) > mem[_27141]:
                                        mem[mem[_27141] + _27141 + 196] = 0
                                    require ext_code.size(address(_27140))
                                    call address(_27140).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25370, address(this.address), 128, mem[_27141], mem[_27141 + 196 len ceil32(mem[_27141])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25825 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27823 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25370
                                    mem[mem[64] + 68] = address(_25825)
                                    require ext_code.size(address(_27823))
                                    call address(_27823).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25370, address(_25825)
                                else:
                                    _27825 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27826 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27826 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27826 + 36] = 0
                                    mem[_27826 + 68] = _25370
                                    mem[_27826 + 100] = address(_25825)
                                    mem[_27826 + 132] = 128
                                    mem[_27826 + 164] = mem[_27826]
                                    s = 0
                                    while s < mem[_27826]:
                                        mem[s + _27826 + 196] = mem[s + _27826 + 32]
                                        _25059 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27826]) > mem[_27826]:
                                        mem[mem[_27826] + _27826 + 196] = 0
                                    require ext_code.size(address(_27825))
                                    call address(_27825).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25370, address(_25825), 128, mem[_27826], mem[_27826 + 196 len ceil32(mem[_27826])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27144 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25370
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27144))
                                    call address(_27144).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25370, 0, this.address
                                else:
                                    _27146 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27147 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27147 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27147 + 36] = _25370
                                    mem[_27147 + 68] = 0
                                    mem[_27147 + 100] = this.address
                                    mem[_27147 + 132] = 128
                                    mem[_27147 + 164] = mem[_27147]
                                    s = 0
                                    while s < mem[_27147]:
                                        mem[s + _27147 + 196] = mem[s + _27147 + 32]
                                        _25059 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27147]) > mem[_27147]:
                                        mem[mem[_27147] + _27147 + 196] = 0
                                    require ext_code.size(address(_27146))
                                    call address(_27146).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25370, 0, address(this.address), 128, mem[_27147], mem[_27147 + 196 len ceil32(mem[_27147])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25827 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27828 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25370
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25827)
                                    require ext_code.size(address(_27828))
                                    call address(_27828).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25370, 0, address(_25827)
                                else:
                                    _27830 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27831 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27831 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27831 + 36] = _25370
                                    mem[_27831 + 68] = 0
                                    mem[_27831 + 100] = address(_25827)
                                    mem[_27831 + 132] = 128
                                    mem[_27831 + 164] = mem[_27831]
                                    s = 0
                                    while s < mem[_27831]:
                                        mem[s + _27831 + 196] = mem[s + _27831 + 32]
                                        _25059 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27831]) > mem[_27831]:
                                        mem[mem[_27831] + _27831 + 196] = 0
                                    require ext_code.size(address(_27830))
                                    call address(_27830).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25370, 0, address(_25827), 128, mem[_27831], mem[_27831 + 196 len ceil32(mem[_27831])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25059 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                _25209 = mem[64]
                mem[mem[64]] = 32
                _25251 = mem[_10302]
                mem[mem[64] + 32] = mem[_10302]
                idx = 0
                s = _10302 + 32
                t = mem[64] + 64
                while idx < _25251:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _25209 + (32 * _25251) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_20538 + 32] == bool(mem[_20538 + 32])
            if not mem[_20538 + 32]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _25060 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _25060 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_10302]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _25371 = mem[(32 * idx + 1) + _10302 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27151 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25371
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27151))
                                call address(_27151).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25371, this.address
                            else:
                                _27153 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27154 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27154 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27154 + 36] = 0
                                mem[_27154 + 68] = _25371
                                mem[_27154 + 100] = this.address
                                mem[_27154 + 132] = 128
                                mem[_27154 + 164] = mem[_27154]
                                s = 0
                                while s < mem[_27154]:
                                    mem[s + _27154 + 196] = mem[s + _27154 + 32]
                                    _25060 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27154]) > mem[_27154]:
                                    mem[mem[_27154] + _27154 + 196] = 0
                                require ext_code.size(address(_27153))
                                call address(_27153).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25371, address(this.address), 128, mem[_27154], mem[_27154 + 196 len ceil32(mem[_27154])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25829 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27833 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25371
                                mem[mem[64] + 68] = address(_25829)
                                require ext_code.size(address(_27833))
                                call address(_27833).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25371, address(_25829)
                            else:
                                _27835 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27836 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27836 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27836 + 36] = 0
                                mem[_27836 + 68] = _25371
                                mem[_27836 + 100] = address(_25829)
                                mem[_27836 + 132] = 128
                                mem[_27836 + 164] = mem[_27836]
                                s = 0
                                while s < mem[_27836]:
                                    mem[s + _27836 + 196] = mem[s + _27836 + 32]
                                    _25060 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27836]) > mem[_27836]:
                                    mem[mem[_27836] + _27836 + 196] = 0
                                require ext_code.size(address(_27835))
                                call address(_27835).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25371, address(_25829), 128, mem[_27836], mem[_27836 + 196 len ceil32(mem[_27836])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27157 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25371
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27157))
                                call address(_27157).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25371, 0, this.address
                            else:
                                _27159 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27160 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27160 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27160 + 36] = _25371
                                mem[_27160 + 68] = 0
                                mem[_27160 + 100] = this.address
                                mem[_27160 + 132] = 128
                                mem[_27160 + 164] = mem[_27160]
                                s = 0
                                while s < mem[_27160]:
                                    mem[s + _27160 + 196] = mem[s + _27160 + 32]
                                    _25060 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27160]) > mem[_27160]:
                                    mem[mem[_27160] + _27160 + 196] = 0
                                require ext_code.size(address(_27159))
                                call address(_27159).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25371, 0, address(this.address), 128, mem[_27160], mem[_27160 + 196 len ceil32(mem[_27160])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25831 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27838 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25371
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25831)
                                require ext_code.size(address(_27838))
                                call address(_27838).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25371, 0, address(_25831)
                            else:
                                _27840 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27841 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27841 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27841 + 36] = _25371
                                mem[_27841 + 68] = 0
                                mem[_27841 + 100] = address(_25831)
                                mem[_27841 + 132] = 128
                                mem[_27841 + 164] = mem[_27841]
                                s = 0
                                while s < mem[_27841]:
                                    mem[s + _27841 + 196] = mem[s + _27841 + 32]
                                    _25060 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27841]) > mem[_27841]:
                                    mem[mem[_27841] + _27841 + 196] = 0
                                require ext_code.size(address(_27840))
                                call address(_27840).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25371, 0, address(_25831), 128, mem[_27841], mem[_27841 + 196 len ceil32(mem[_27841])]
                else:
                    _25372 = mem[(32 * idx + 1) + _10302 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27163 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25372
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27163))
                                call address(_27163).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25372, this.address
                            else:
                                _27165 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27166 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27166 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27166 + 36] = 0
                                mem[_27166 + 68] = _25372
                                mem[_27166 + 100] = this.address
                                mem[_27166 + 132] = 128
                                mem[_27166 + 164] = mem[_27166]
                                s = 0
                                while s < mem[_27166]:
                                    mem[s + _27166 + 196] = mem[s + _27166 + 32]
                                    _25060 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27166]) > mem[_27166]:
                                    mem[mem[_27166] + _27166 + 196] = 0
                                require ext_code.size(address(_27165))
                                call address(_27165).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25372, address(this.address), 128, mem[_27166], mem[_27166 + 196 len ceil32(mem[_27166])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25833 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27843 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25372
                                mem[mem[64] + 68] = address(_25833)
                                require ext_code.size(address(_27843))
                                call address(_27843).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25372, address(_25833)
                            else:
                                _27845 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27846 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27846 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27846 + 36] = 0
                                mem[_27846 + 68] = _25372
                                mem[_27846 + 100] = address(_25833)
                                mem[_27846 + 132] = 128
                                mem[_27846 + 164] = mem[_27846]
                                s = 0
                                while s < mem[_27846]:
                                    mem[s + _27846 + 196] = mem[s + _27846 + 32]
                                    _25060 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27846]) > mem[_27846]:
                                    mem[mem[_27846] + _27846 + 196] = 0
                                require ext_code.size(address(_27845))
                                call address(_27845).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25372, address(_25833), 128, mem[_27846], mem[_27846 + 196 len ceil32(mem[_27846])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27169 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25372
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27169))
                                call address(_27169).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25372, 0, this.address
                            else:
                                _27171 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27172 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27172 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27172 + 36] = _25372
                                mem[_27172 + 68] = 0
                                mem[_27172 + 100] = this.address
                                mem[_27172 + 132] = 128
                                mem[_27172 + 164] = mem[_27172]
                                s = 0
                                while s < mem[_27172]:
                                    mem[s + _27172 + 196] = mem[s + _27172 + 32]
                                    _25060 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27172]) > mem[_27172]:
                                    mem[mem[_27172] + _27172 + 196] = 0
                                require ext_code.size(address(_27171))
                                call address(_27171).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25372, 0, address(this.address), 128, mem[_27172], mem[_27172 + 196 len ceil32(mem[_27172])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25835 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27848 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25372
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25835)
                                require ext_code.size(address(_27848))
                                call address(_27848).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25372, 0, address(_25835)
                            else:
                                _27850 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27851 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27851 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27851 + 36] = _25372
                                mem[_27851 + 68] = 0
                                mem[_27851 + 100] = address(_25835)
                                mem[_27851 + 132] = 128
                                mem[_27851 + 164] = mem[_27851]
                                s = 0
                                while s < mem[_27851]:
                                    mem[s + _27851 + 196] = mem[s + _27851 + 32]
                                    _25060 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27851]) > mem[_27851]:
                                    mem[mem[_27851] + _27851 + 196] = 0
                                require ext_code.size(address(_27850))
                                call address(_27850).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25372, 0, address(_25835), 128, mem[_27851], mem[_27851 + 196 len ceil32(mem[_27851])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25060 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            _25211 = mem[64]
            mem[mem[64]] = 32
            _25252 = mem[_10302]
            mem[mem[64] + 32] = mem[_10302]
            idx = 0
            s = _10302 + 32
            t = mem[64] + 64
            while idx < _25252:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _25211 + (32 * _25252) + -mem[64] + 64
        mem[_10302 + 32 len 32 * _10301] = code.data[10348 len 32 * _10301]
        require 0 < mem[_10302]
        mem[_10302 + 32] = ext_call.return_data[0]
        _15424 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _15424 - 1:
            require idx < mem[ceil32(return_data.size) + 320]
            require idx < mem[ceil32(return_data.size) + 96]
            _15455 = mem[(32 * idx) + ceil32(return_data.size) + 128]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            _15468 = mem[(32 * idx + 1) + ceil32(return_data.size) + 128]
            require ext_code.size(mem[(32 * idx) + ceil32(return_data.size) + 364 len 20])
            staticcall mem[(32 * idx) + ceil32(return_data.size) + 364 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _15499 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_15499] == mem[_15499 + 18 len 14]
                require mem[_15499 + 32] == mem[_15499 + 50 len 14]
                require mem[_15499 + 64] == mem[_15499 + 92 len 4]
                require idx < mem[_10302]
                require idx < mem[ceil32(return_data.size) + 192]
                if address(_15455) == address(_15455):
                    if not mem[(32 * idx) + _10302 + 32]:
                        require mem[_15499 + 18 len 14]
                        if 1000 * mem[_15499 + 18 len 14] / mem[_15499 + 18 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_15499 + 18 len 14] < 1000 * mem[_15499 + 18 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_15499 + 18 len 14]
                        require idx + 1 < mem[_10302]
                        mem[(32 * idx + 1) + _10302 + 32] = 0 / 1000 * mem[_15499 + 18 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) / mem[(32 * idx) + _10302 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]):
                            if not mem[_15499 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                            else:
                                if 1000 * mem[_15499 + 18 len 14] / mem[_15499 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15499 + 18 len 14]) < 1000 * mem[_15499 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15499 + 18 len 14])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15499 + 18 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15499 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15499 + 50 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) != mem[_15499 + 50 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_15499 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15499 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15499 + 50 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                            else:
                                if 1000 * mem[_15499 + 18 len 14] / mem[_15499 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15499 + 18 len 14]) < 1000 * mem[_15499 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15499 + 18 len 14])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15499 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15499 + 50 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15499 + 18 len 14])
                else:
                    if not mem[(32 * idx) + _10302 + 32]:
                        require mem[_15499 + 50 len 14]
                        if 1000 * mem[_15499 + 50 len 14] / mem[_15499 + 50 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_15499 + 50 len 14] < 1000 * mem[_15499 + 50 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_15499 + 50 len 14]
                        require idx + 1 < mem[_10302]
                        mem[(32 * idx + 1) + _10302 + 32] = 0 / 1000 * mem[_15499 + 50 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) / mem[(32 * idx) + _10302 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]):
                            if not mem[_15499 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                            else:
                                if 1000 * mem[_15499 + 50 len 14] / mem[_15499 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15499 + 50 len 14]) < 1000 * mem[_15499 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15499 + 50 len 14])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15499 + 50 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15499 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15499 + 18 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) != mem[_15499 + 18 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_15499 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15499 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15499 + 18 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                            else:
                                if 1000 * mem[_15499 + 50 len 14] / mem[_15499 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15499 + 50 len 14]) < 1000 * mem[_15499 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15499 + 50 len 14])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15499 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15499 + 18 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15499 + 50 len 14])
            else:
                _15500 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_15500] == mem[_15500 + 18 len 14]
                require mem[_15500 + 32] == mem[_15500 + 50 len 14]
                require mem[_15500 + 64] == mem[_15500 + 92 len 4]
                require idx < mem[_10302]
                require idx < mem[ceil32(return_data.size) + 192]
                if address(_15455) == address(_15468):
                    if not mem[(32 * idx) + _10302 + 32]:
                        require mem[_15500 + 18 len 14]
                        if 1000 * mem[_15500 + 18 len 14] / mem[_15500 + 18 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_15500 + 18 len 14] < 1000 * mem[_15500 + 18 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_15500 + 18 len 14]
                        require idx + 1 < mem[_10302]
                        mem[(32 * idx + 1) + _10302 + 32] = 0 / 1000 * mem[_15500 + 18 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) / mem[(32 * idx) + _10302 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]):
                            if not mem[_15500 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                            else:
                                if 1000 * mem[_15500 + 18 len 14] / mem[_15500 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15500 + 18 len 14]) < 1000 * mem[_15500 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15500 + 18 len 14])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15500 + 18 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15500 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15500 + 50 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) != mem[_15500 + 50 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_15500 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15500 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15500 + 50 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                            else:
                                if 1000 * mem[_15500 + 18 len 14] / mem[_15500 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15500 + 18 len 14]) < 1000 * mem[_15500 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15500 + 18 len 14])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15500 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15500 + 50 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15500 + 18 len 14])
                else:
                    if not mem[(32 * idx) + _10302 + 32]:
                        require mem[_15500 + 50 len 14]
                        if 1000 * mem[_15500 + 50 len 14] / mem[_15500 + 50 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_15500 + 50 len 14] < 1000 * mem[_15500 + 50 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_15500 + 50 len 14]
                        require idx + 1 < mem[_10302]
                        mem[(32 * idx + 1) + _10302 + 32] = 0 / 1000 * mem[_15500 + 50 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) / mem[(32 * idx) + _10302 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]):
                            if not mem[_15500 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                            else:
                                if 1000 * mem[_15500 + 50 len 14] / mem[_15500 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15500 + 50 len 14]) < 1000 * mem[_15500 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15500 + 50 len 14])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = 0 / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15500 + 50 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15500 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15500 + 18 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) != mem[_15500 + 18 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_15500 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15500 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15500 + 18 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32])
                            else:
                                if 1000 * mem[_15500 + 50 len 14] / mem[_15500 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15500 + 50 len 14]) < 1000 * mem[_15500 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15500 + 50 len 14])
                                require idx + 1 < mem[_10302]
                                mem[(32 * idx + 1) + _10302 + 32] = (1000 * mem[(32 * idx) + _10302 + 32] * mem[_15500 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32] * mem[_15500 + 18 len 14]) / (1000 * mem[(32 * idx) + _10302 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10302 + 32]) + (1000 * mem[_15500 + 50 len 14])
            _15424 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        require 0 < mem[ceil32(return_data.size) + 96]
        _15453 = mem[ceil32(return_data.size) + 128]
        require 0 < mem[ceil32(return_data.size) + 320]
        require 0 < mem[_10302]
        _15472 = mem[_10302 + 32]
        _15476 = mem[64]
        mem[mem[64] + 36] = mem[ceil32(return_data.size) + 364 len 20]
        mem[mem[64] + 68] = _15472
        _15518 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_15518 + 32] = mem[_15518 + 36 len 28] or 0xa9059cbb00000000000000000000000000000000000000000000000000000000
        _15530 = mem[_15518]
        idx = 0
        while idx < _15530:
            mem[idx + _15476 + 100] = mem[idx + _15518 + 32]
            idx = idx + 32
            continue 
        if ceil32(_15530) <= _15530:
            call address(_15453).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _15530 + _15476 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                if not mem[96]:
                    _25061 = mem[ceil32(return_data.size) + 96]
                    idx = 0
                    while idx < _25061 - 1:
                        require idx < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[_10302]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            _25373 = mem[(32 * idx + 1) + _10302 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27176 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25373
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27176))
                                        call address(_27176).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25373, this.address
                                    else:
                                        _27178 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27179 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27179 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27179 + 36] = 0
                                        mem[_27179 + 68] = _25373
                                        mem[_27179 + 100] = this.address
                                        mem[_27179 + 132] = 128
                                        mem[_27179 + 164] = mem[_27179]
                                        s = 0
                                        while s < mem[_27179]:
                                            mem[s + _27179 + 196] = mem[s + _27179 + 32]
                                            _25061 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27179]) > mem[_27179]:
                                            mem[mem[_27179] + _27179 + 196] = 0
                                        require ext_code.size(address(_27178))
                                        call address(_27178).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25373, address(this.address), 128, mem[_27179], mem[_27179 + 196 len ceil32(mem[_27179])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25837 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27853 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25373
                                        mem[mem[64] + 68] = address(_25837)
                                        require ext_code.size(address(_27853))
                                        call address(_27853).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25373, address(_25837)
                                    else:
                                        _27855 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27856 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27856 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27856 + 36] = 0
                                        mem[_27856 + 68] = _25373
                                        mem[_27856 + 100] = address(_25837)
                                        mem[_27856 + 132] = 128
                                        mem[_27856 + 164] = mem[_27856]
                                        s = 0
                                        while s < mem[_27856]:
                                            mem[s + _27856 + 196] = mem[s + _27856 + 32]
                                            _25061 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27856]) > mem[_27856]:
                                            mem[mem[_27856] + _27856 + 196] = 0
                                        require ext_code.size(address(_27855))
                                        call address(_27855).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25373, address(_25837), 128, mem[_27856], mem[_27856 + 196 len ceil32(mem[_27856])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27182 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25373
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27182))
                                        call address(_27182).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25373, 0, this.address
                                    else:
                                        _27184 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27185 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27185 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27185 + 36] = _25373
                                        mem[_27185 + 68] = 0
                                        mem[_27185 + 100] = this.address
                                        mem[_27185 + 132] = 128
                                        mem[_27185 + 164] = mem[_27185]
                                        s = 0
                                        while s < mem[_27185]:
                                            mem[s + _27185 + 196] = mem[s + _27185 + 32]
                                            _25061 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27185]) > mem[_27185]:
                                            mem[mem[_27185] + _27185 + 196] = 0
                                        require ext_code.size(address(_27184))
                                        call address(_27184).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25373, 0, address(this.address), 128, mem[_27185], mem[_27185 + 196 len ceil32(mem[_27185])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25839 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27858 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25373
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25839)
                                        require ext_code.size(address(_27858))
                                        call address(_27858).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25373, 0, address(_25839)
                                    else:
                                        _27860 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27861 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27861 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27861 + 36] = _25373
                                        mem[_27861 + 68] = 0
                                        mem[_27861 + 100] = address(_25839)
                                        mem[_27861 + 132] = 128
                                        mem[_27861 + 164] = mem[_27861]
                                        s = 0
                                        while s < mem[_27861]:
                                            mem[s + _27861 + 196] = mem[s + _27861 + 32]
                                            _25061 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27861]) > mem[_27861]:
                                            mem[mem[_27861] + _27861 + 196] = 0
                                        require ext_code.size(address(_27860))
                                        call address(_27860).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25373, 0, address(_25839), 128, mem[_27861], mem[_27861 + 196 len ceil32(mem[_27861])]
                        else:
                            _25374 = mem[(32 * idx + 1) + _10302 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27188 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25374
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27188))
                                        call address(_27188).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25374, this.address
                                    else:
                                        _27190 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27191 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27191 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27191 + 36] = 0
                                        mem[_27191 + 68] = _25374
                                        mem[_27191 + 100] = this.address
                                        mem[_27191 + 132] = 128
                                        mem[_27191 + 164] = mem[_27191]
                                        s = 0
                                        while s < mem[_27191]:
                                            mem[s + _27191 + 196] = mem[s + _27191 + 32]
                                            _25061 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27191]) > mem[_27191]:
                                            mem[mem[_27191] + _27191 + 196] = 0
                                        require ext_code.size(address(_27190))
                                        call address(_27190).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25374, address(this.address), 128, mem[_27191], mem[_27191 + 196 len ceil32(mem[_27191])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25841 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27863 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25374
                                        mem[mem[64] + 68] = address(_25841)
                                        require ext_code.size(address(_27863))
                                        call address(_27863).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25374, address(_25841)
                                    else:
                                        _27865 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27866 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27866 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27866 + 36] = 0
                                        mem[_27866 + 68] = _25374
                                        mem[_27866 + 100] = address(_25841)
                                        mem[_27866 + 132] = 128
                                        mem[_27866 + 164] = mem[_27866]
                                        s = 0
                                        while s < mem[_27866]:
                                            mem[s + _27866 + 196] = mem[s + _27866 + 32]
                                            _25061 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27866]) > mem[_27866]:
                                            mem[mem[_27866] + _27866 + 196] = 0
                                        require ext_code.size(address(_27865))
                                        call address(_27865).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25374, address(_25841), 128, mem[_27866], mem[_27866 + 196 len ceil32(mem[_27866])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27194 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25374
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27194))
                                        call address(_27194).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25374, 0, this.address
                                    else:
                                        _27196 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27197 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27197 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27197 + 36] = _25374
                                        mem[_27197 + 68] = 0
                                        mem[_27197 + 100] = this.address
                                        mem[_27197 + 132] = 128
                                        mem[_27197 + 164] = mem[_27197]
                                        s = 0
                                        while s < mem[_27197]:
                                            mem[s + _27197 + 196] = mem[s + _27197 + 32]
                                            _25061 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27197]) > mem[_27197]:
                                            mem[mem[_27197] + _27197 + 196] = 0
                                        require ext_code.size(address(_27196))
                                        call address(_27196).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25374, 0, address(this.address), 128, mem[_27197], mem[_27197 + 196 len ceil32(mem[_27197])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25843 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27868 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25374
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25843)
                                        require ext_code.size(address(_27868))
                                        call address(_27868).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25374, 0, address(_25843)
                                    else:
                                        _27870 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27871 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27871 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27871 + 36] = _25374
                                        mem[_27871 + 68] = 0
                                        mem[_27871 + 100] = address(_25843)
                                        mem[_27871 + 132] = 128
                                        mem[_27871 + 164] = mem[_27871]
                                        s = 0
                                        while s < mem[_27871]:
                                            mem[s + _27871 + 196] = mem[s + _27871 + 32]
                                            _25061 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27871]) > mem[_27871]:
                                            mem[mem[_27871] + _27871 + 196] = 0
                                        require ext_code.size(address(_27870))
                                        call address(_27870).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25374, 0, address(_25843), 128, mem[_27871], mem[_27871 + 196 len ceil32(mem[_27871])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25061 = mem[ceil32(return_data.size) + 96]
                        idx = idx + 1
                        continue 
                    _25213 = mem[64]
                    mem[mem[64]] = 32
                    _25253 = mem[_10302]
                    mem[mem[64] + 32] = mem[_10302]
                    idx = 0
                    s = _10302 + 32
                    t = mem[64] + 64
                    while idx < _25253:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _25213 + (32 * _25253) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                _25062 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _25062 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_10302]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _25375 = mem[(32 * idx + 1) + _10302 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27201 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25375
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27201))
                                    call address(_27201).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25375, this.address
                                else:
                                    _27203 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27204 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27204 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27204 + 36] = 0
                                    mem[_27204 + 68] = _25375
                                    mem[_27204 + 100] = this.address
                                    mem[_27204 + 132] = 128
                                    mem[_27204 + 164] = mem[_27204]
                                    s = 0
                                    while s < mem[_27204]:
                                        mem[s + _27204 + 196] = mem[s + _27204 + 32]
                                        _25062 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27204]) > mem[_27204]:
                                        mem[mem[_27204] + _27204 + 196] = 0
                                    require ext_code.size(address(_27203))
                                    call address(_27203).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25375, address(this.address), 128, mem[_27204], mem[_27204 + 196 len ceil32(mem[_27204])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25845 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27873 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25375
                                    mem[mem[64] + 68] = address(_25845)
                                    require ext_code.size(address(_27873))
                                    call address(_27873).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25375, address(_25845)
                                else:
                                    _27875 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27876 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27876 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27876 + 36] = 0
                                    mem[_27876 + 68] = _25375
                                    mem[_27876 + 100] = address(_25845)
                                    mem[_27876 + 132] = 128
                                    mem[_27876 + 164] = mem[_27876]
                                    s = 0
                                    while s < mem[_27876]:
                                        mem[s + _27876 + 196] = mem[s + _27876 + 32]
                                        _25062 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27876]) > mem[_27876]:
                                        mem[mem[_27876] + _27876 + 196] = 0
                                    require ext_code.size(address(_27875))
                                    call address(_27875).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25375, address(_25845), 128, mem[_27876], mem[_27876 + 196 len ceil32(mem[_27876])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27207 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25375
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27207))
                                    call address(_27207).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25375, 0, this.address
                                else:
                                    _27209 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27210 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27210 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27210 + 36] = _25375
                                    mem[_27210 + 68] = 0
                                    mem[_27210 + 100] = this.address
                                    mem[_27210 + 132] = 128
                                    mem[_27210 + 164] = mem[_27210]
                                    s = 0
                                    while s < mem[_27210]:
                                        mem[s + _27210 + 196] = mem[s + _27210 + 32]
                                        _25062 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27210]) > mem[_27210]:
                                        mem[mem[_27210] + _27210 + 196] = 0
                                    require ext_code.size(address(_27209))
                                    call address(_27209).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25375, 0, address(this.address), 128, mem[_27210], mem[_27210 + 196 len ceil32(mem[_27210])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25847 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27878 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25375
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25847)
                                    require ext_code.size(address(_27878))
                                    call address(_27878).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25375, 0, address(_25847)
                                else:
                                    _27880 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27881 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27881 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27881 + 36] = _25375
                                    mem[_27881 + 68] = 0
                                    mem[_27881 + 100] = address(_25847)
                                    mem[_27881 + 132] = 128
                                    mem[_27881 + 164] = mem[_27881]
                                    s = 0
                                    while s < mem[_27881]:
                                        mem[s + _27881 + 196] = mem[s + _27881 + 32]
                                        _25062 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27881]) > mem[_27881]:
                                        mem[mem[_27881] + _27881 + 196] = 0
                                    require ext_code.size(address(_27880))
                                    call address(_27880).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25375, 0, address(_25847), 128, mem[_27881], mem[_27881 + 196 len ceil32(mem[_27881])]
                    else:
                        _25376 = mem[(32 * idx + 1) + _10302 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27213 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25376
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27213))
                                    call address(_27213).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25376, this.address
                                else:
                                    _27215 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27216 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27216 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27216 + 36] = 0
                                    mem[_27216 + 68] = _25376
                                    mem[_27216 + 100] = this.address
                                    mem[_27216 + 132] = 128
                                    mem[_27216 + 164] = mem[_27216]
                                    s = 0
                                    while s < mem[_27216]:
                                        mem[s + _27216 + 196] = mem[s + _27216 + 32]
                                        _25062 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27216]) > mem[_27216]:
                                        mem[mem[_27216] + _27216 + 196] = 0
                                    require ext_code.size(address(_27215))
                                    call address(_27215).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25376, address(this.address), 128, mem[_27216], mem[_27216 + 196 len ceil32(mem[_27216])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25849 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27883 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25376
                                    mem[mem[64] + 68] = address(_25849)
                                    require ext_code.size(address(_27883))
                                    call address(_27883).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25376, address(_25849)
                                else:
                                    _27885 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27886 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27886 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27886 + 36] = 0
                                    mem[_27886 + 68] = _25376
                                    mem[_27886 + 100] = address(_25849)
                                    mem[_27886 + 132] = 128
                                    mem[_27886 + 164] = mem[_27886]
                                    s = 0
                                    while s < mem[_27886]:
                                        mem[s + _27886 + 196] = mem[s + _27886 + 32]
                                        _25062 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27886]) > mem[_27886]:
                                        mem[mem[_27886] + _27886 + 196] = 0
                                    require ext_code.size(address(_27885))
                                    call address(_27885).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25376, address(_25849), 128, mem[_27886], mem[_27886 + 196 len ceil32(mem[_27886])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27219 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25376
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27219))
                                    call address(_27219).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25376, 0, this.address
                                else:
                                    _27221 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27222 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27222 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27222 + 36] = _25376
                                    mem[_27222 + 68] = 0
                                    mem[_27222 + 100] = this.address
                                    mem[_27222 + 132] = 128
                                    mem[_27222 + 164] = mem[_27222]
                                    s = 0
                                    while s < mem[_27222]:
                                        mem[s + _27222 + 196] = mem[s + _27222 + 32]
                                        _25062 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27222]) > mem[_27222]:
                                        mem[mem[_27222] + _27222 + 196] = 0
                                    require ext_code.size(address(_27221))
                                    call address(_27221).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25376, 0, address(this.address), 128, mem[_27222], mem[_27222 + 196 len ceil32(mem[_27222])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25851 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27888 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25376
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25851)
                                    require ext_code.size(address(_27888))
                                    call address(_27888).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25376, 0, address(_25851)
                                else:
                                    _27890 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27891 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27891 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27891 + 36] = _25376
                                    mem[_27891 + 68] = 0
                                    mem[_27891 + 100] = address(_25851)
                                    mem[_27891 + 132] = 128
                                    mem[_27891 + 164] = mem[_27891]
                                    s = 0
                                    while s < mem[_27891]:
                                        mem[s + _27891 + 196] = mem[s + _27891 + 32]
                                        _25062 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27891]) > mem[_27891]:
                                        mem[mem[_27891] + _27891 + 196] = 0
                                    require ext_code.size(address(_27890))
                                    call address(_27890).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25376, 0, address(_25851), 128, mem[_27891], mem[_27891 + 196 len ceil32(mem[_27891])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25062 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                _25215 = mem[64]
                mem[mem[64]] = 32
                _25254 = mem[_10302]
                mem[mem[64] + 32] = mem[_10302]
                idx = 0
                s = _10302 + 32
                t = mem[64] + 64
                while idx < _25254:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _25215 + (32 * _25254) + -mem[64] + 64
            _20539 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_20539] = return_data.size
            mem[_20539 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not return_data.size:
                _25063 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _25063 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_10302]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _25377 = mem[(32 * idx + 1) + _10302 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27226 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25377
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27226))
                                    call address(_27226).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25377, this.address
                                else:
                                    _27228 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27229 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27229 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27229 + 36] = 0
                                    mem[_27229 + 68] = _25377
                                    mem[_27229 + 100] = this.address
                                    mem[_27229 + 132] = 128
                                    mem[_27229 + 164] = mem[_27229]
                                    s = 0
                                    while s < mem[_27229]:
                                        mem[s + _27229 + 196] = mem[s + _27229 + 32]
                                        _25063 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27229]) > mem[_27229]:
                                        mem[mem[_27229] + _27229 + 196] = 0
                                    require ext_code.size(address(_27228))
                                    call address(_27228).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25377, address(this.address), 128, mem[_27229], mem[_27229 + 196 len ceil32(mem[_27229])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25853 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27893 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25377
                                    mem[mem[64] + 68] = address(_25853)
                                    require ext_code.size(address(_27893))
                                    call address(_27893).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25377, address(_25853)
                                else:
                                    _27895 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27896 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27896 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27896 + 36] = 0
                                    mem[_27896 + 68] = _25377
                                    mem[_27896 + 100] = address(_25853)
                                    mem[_27896 + 132] = 128
                                    mem[_27896 + 164] = mem[_27896]
                                    s = 0
                                    while s < mem[_27896]:
                                        mem[s + _27896 + 196] = mem[s + _27896 + 32]
                                        _25063 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27896]) > mem[_27896]:
                                        mem[mem[_27896] + _27896 + 196] = 0
                                    require ext_code.size(address(_27895))
                                    call address(_27895).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25377, address(_25853), 128, mem[_27896], mem[_27896 + 196 len ceil32(mem[_27896])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27232 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25377
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27232))
                                    call address(_27232).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25377, 0, this.address
                                else:
                                    _27234 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27235 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27235 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27235 + 36] = _25377
                                    mem[_27235 + 68] = 0
                                    mem[_27235 + 100] = this.address
                                    mem[_27235 + 132] = 128
                                    mem[_27235 + 164] = mem[_27235]
                                    s = 0
                                    while s < mem[_27235]:
                                        mem[s + _27235 + 196] = mem[s + _27235 + 32]
                                        _25063 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27235]) > mem[_27235]:
                                        mem[mem[_27235] + _27235 + 196] = 0
                                    require ext_code.size(address(_27234))
                                    call address(_27234).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25377, 0, address(this.address), 128, mem[_27235], mem[_27235 + 196 len ceil32(mem[_27235])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25855 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27898 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25377
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25855)
                                    require ext_code.size(address(_27898))
                                    call address(_27898).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25377, 0, address(_25855)
                                else:
                                    _27900 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27901 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27901 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27901 + 36] = _25377
                                    mem[_27901 + 68] = 0
                                    mem[_27901 + 100] = address(_25855)
                                    mem[_27901 + 132] = 128
                                    mem[_27901 + 164] = mem[_27901]
                                    s = 0
                                    while s < mem[_27901]:
                                        mem[s + _27901 + 196] = mem[s + _27901 + 32]
                                        _25063 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27901]) > mem[_27901]:
                                        mem[mem[_27901] + _27901 + 196] = 0
                                    require ext_code.size(address(_27900))
                                    call address(_27900).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25377, 0, address(_25855), 128, mem[_27901], mem[_27901 + 196 len ceil32(mem[_27901])]
                    else:
                        _25378 = mem[(32 * idx + 1) + _10302 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27238 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25378
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27238))
                                    call address(_27238).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25378, this.address
                                else:
                                    _27240 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27241 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27241 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27241 + 36] = 0
                                    mem[_27241 + 68] = _25378
                                    mem[_27241 + 100] = this.address
                                    mem[_27241 + 132] = 128
                                    mem[_27241 + 164] = mem[_27241]
                                    s = 0
                                    while s < mem[_27241]:
                                        mem[s + _27241 + 196] = mem[s + _27241 + 32]
                                        _25063 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27241]) > mem[_27241]:
                                        mem[mem[_27241] + _27241 + 196] = 0
                                    require ext_code.size(address(_27240))
                                    call address(_27240).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25378, address(this.address), 128, mem[_27241], mem[_27241 + 196 len ceil32(mem[_27241])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25857 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27903 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25378
                                    mem[mem[64] + 68] = address(_25857)
                                    require ext_code.size(address(_27903))
                                    call address(_27903).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25378, address(_25857)
                                else:
                                    _27905 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27906 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27906 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27906 + 36] = 0
                                    mem[_27906 + 68] = _25378
                                    mem[_27906 + 100] = address(_25857)
                                    mem[_27906 + 132] = 128
                                    mem[_27906 + 164] = mem[_27906]
                                    s = 0
                                    while s < mem[_27906]:
                                        mem[s + _27906 + 196] = mem[s + _27906 + 32]
                                        _25063 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27906]) > mem[_27906]:
                                        mem[mem[_27906] + _27906 + 196] = 0
                                    require ext_code.size(address(_27905))
                                    call address(_27905).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25378, address(_25857), 128, mem[_27906], mem[_27906 + 196 len ceil32(mem[_27906])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27244 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25378
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27244))
                                    call address(_27244).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25378, 0, this.address
                                else:
                                    _27246 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27247 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27247 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27247 + 36] = _25378
                                    mem[_27247 + 68] = 0
                                    mem[_27247 + 100] = this.address
                                    mem[_27247 + 132] = 128
                                    mem[_27247 + 164] = mem[_27247]
                                    s = 0
                                    while s < mem[_27247]:
                                        mem[s + _27247 + 196] = mem[s + _27247 + 32]
                                        _25063 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27247]) > mem[_27247]:
                                        mem[mem[_27247] + _27247 + 196] = 0
                                    require ext_code.size(address(_27246))
                                    call address(_27246).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25378, 0, address(this.address), 128, mem[_27247], mem[_27247 + 196 len ceil32(mem[_27247])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25859 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27908 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25378
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25859)
                                    require ext_code.size(address(_27908))
                                    call address(_27908).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25378, 0, address(_25859)
                                else:
                                    _27910 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27911 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27911 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27911 + 36] = _25378
                                    mem[_27911 + 68] = 0
                                    mem[_27911 + 100] = address(_25859)
                                    mem[_27911 + 132] = 128
                                    mem[_27911 + 164] = mem[_27911]
                                    s = 0
                                    while s < mem[_27911]:
                                        mem[s + _27911 + 196] = mem[s + _27911 + 32]
                                        _25063 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27911]) > mem[_27911]:
                                        mem[mem[_27911] + _27911 + 196] = 0
                                    require ext_code.size(address(_27910))
                                    call address(_27910).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25378, 0, address(_25859), 128, mem[_27911], mem[_27911 + 196 len ceil32(mem[_27911])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25063 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                _25217 = mem[64]
                mem[mem[64]] = 32
                _25255 = mem[_10302]
                mem[mem[64] + 32] = mem[_10302]
                idx = 0
                s = _10302 + 32
                t = mem[64] + 64
                while idx < _25255:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _25217 + (32 * _25255) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_20539 + 32] == bool(mem[_20539 + 32])
            if not mem[_20539 + 32]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _25064 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _25064 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_10302]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _25379 = mem[(32 * idx + 1) + _10302 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27251 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25379
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27251))
                                call address(_27251).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25379, this.address
                            else:
                                _27253 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27254 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27254 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27254 + 36] = 0
                                mem[_27254 + 68] = _25379
                                mem[_27254 + 100] = this.address
                                mem[_27254 + 132] = 128
                                mem[_27254 + 164] = mem[_27254]
                                s = 0
                                while s < mem[_27254]:
                                    mem[s + _27254 + 196] = mem[s + _27254 + 32]
                                    _25064 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27254]) > mem[_27254]:
                                    mem[mem[_27254] + _27254 + 196] = 0
                                require ext_code.size(address(_27253))
                                call address(_27253).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25379, address(this.address), 128, mem[_27254], mem[_27254 + 196 len ceil32(mem[_27254])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25861 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27913 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25379
                                mem[mem[64] + 68] = address(_25861)
                                require ext_code.size(address(_27913))
                                call address(_27913).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25379, address(_25861)
                            else:
                                _27915 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27916 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27916 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27916 + 36] = 0
                                mem[_27916 + 68] = _25379
                                mem[_27916 + 100] = address(_25861)
                                mem[_27916 + 132] = 128
                                mem[_27916 + 164] = mem[_27916]
                                s = 0
                                while s < mem[_27916]:
                                    mem[s + _27916 + 196] = mem[s + _27916 + 32]
                                    _25064 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27916]) > mem[_27916]:
                                    mem[mem[_27916] + _27916 + 196] = 0
                                require ext_code.size(address(_27915))
                                call address(_27915).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25379, address(_25861), 128, mem[_27916], mem[_27916 + 196 len ceil32(mem[_27916])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27257 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25379
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27257))
                                call address(_27257).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25379, 0, this.address
                            else:
                                _27259 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27260 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27260 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27260 + 36] = _25379
                                mem[_27260 + 68] = 0
                                mem[_27260 + 100] = this.address
                                mem[_27260 + 132] = 128
                                mem[_27260 + 164] = mem[_27260]
                                s = 0
                                while s < mem[_27260]:
                                    mem[s + _27260 + 196] = mem[s + _27260 + 32]
                                    _25064 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27260]) > mem[_27260]:
                                    mem[mem[_27260] + _27260 + 196] = 0
                                require ext_code.size(address(_27259))
                                call address(_27259).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25379, 0, address(this.address), 128, mem[_27260], mem[_27260 + 196 len ceil32(mem[_27260])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25863 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27918 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25379
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25863)
                                require ext_code.size(address(_27918))
                                call address(_27918).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25379, 0, address(_25863)
                            else:
                                _27920 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27921 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27921 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27921 + 36] = _25379
                                mem[_27921 + 68] = 0
                                mem[_27921 + 100] = address(_25863)
                                mem[_27921 + 132] = 128
                                mem[_27921 + 164] = mem[_27921]
                                s = 0
                                while s < mem[_27921]:
                                    mem[s + _27921 + 196] = mem[s + _27921 + 32]
                                    _25064 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27921]) > mem[_27921]:
                                    mem[mem[_27921] + _27921 + 196] = 0
                                require ext_code.size(address(_27920))
                                call address(_27920).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25379, 0, address(_25863), 128, mem[_27921], mem[_27921 + 196 len ceil32(mem[_27921])]
                else:
                    _25380 = mem[(32 * idx + 1) + _10302 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27263 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25380
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27263))
                                call address(_27263).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25380, this.address
                            else:
                                _27265 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27266 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27266 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27266 + 36] = 0
                                mem[_27266 + 68] = _25380
                                mem[_27266 + 100] = this.address
                                mem[_27266 + 132] = 128
                                mem[_27266 + 164] = mem[_27266]
                                s = 0
                                while s < mem[_27266]:
                                    mem[s + _27266 + 196] = mem[s + _27266 + 32]
                                    _25064 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27266]) > mem[_27266]:
                                    mem[mem[_27266] + _27266 + 196] = 0
                                require ext_code.size(address(_27265))
                                call address(_27265).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25380, address(this.address), 128, mem[_27266], mem[_27266 + 196 len ceil32(mem[_27266])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25865 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27923 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25380
                                mem[mem[64] + 68] = address(_25865)
                                require ext_code.size(address(_27923))
                                call address(_27923).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25380, address(_25865)
                            else:
                                _27925 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27926 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27926 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27926 + 36] = 0
                                mem[_27926 + 68] = _25380
                                mem[_27926 + 100] = address(_25865)
                                mem[_27926 + 132] = 128
                                mem[_27926 + 164] = mem[_27926]
                                s = 0
                                while s < mem[_27926]:
                                    mem[s + _27926 + 196] = mem[s + _27926 + 32]
                                    _25064 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27926]) > mem[_27926]:
                                    mem[mem[_27926] + _27926 + 196] = 0
                                require ext_code.size(address(_27925))
                                call address(_27925).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25380, address(_25865), 128, mem[_27926], mem[_27926 + 196 len ceil32(mem[_27926])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27269 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25380
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27269))
                                call address(_27269).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25380, 0, this.address
                            else:
                                _27271 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27272 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27272 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27272 + 36] = _25380
                                mem[_27272 + 68] = 0
                                mem[_27272 + 100] = this.address
                                mem[_27272 + 132] = 128
                                mem[_27272 + 164] = mem[_27272]
                                s = 0
                                while s < mem[_27272]:
                                    mem[s + _27272 + 196] = mem[s + _27272 + 32]
                                    _25064 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27272]) > mem[_27272]:
                                    mem[mem[_27272] + _27272 + 196] = 0
                                require ext_code.size(address(_27271))
                                call address(_27271).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25380, 0, address(this.address), 128, mem[_27272], mem[_27272 + 196 len ceil32(mem[_27272])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25867 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27928 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25380
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25867)
                                require ext_code.size(address(_27928))
                                call address(_27928).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25380, 0, address(_25867)
                            else:
                                _27930 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27931 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27931 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27931 + 36] = _25380
                                mem[_27931 + 68] = 0
                                mem[_27931 + 100] = address(_25867)
                                mem[_27931 + 132] = 128
                                mem[_27931 + 164] = mem[_27931]
                                s = 0
                                while s < mem[_27931]:
                                    mem[s + _27931 + 196] = mem[s + _27931 + 32]
                                    _25064 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27931]) > mem[_27931]:
                                    mem[mem[_27931] + _27931 + 196] = 0
                                require ext_code.size(address(_27930))
                                call address(_27930).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25380, 0, address(_25867), 128, mem[_27931], mem[_27931 + 196 len ceil32(mem[_27931])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25064 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            _25219 = mem[64]
            mem[mem[64]] = 32
            _25256 = mem[_10302]
            mem[mem[64] + 32] = mem[_10302]
            idx = 0
            s = _10302 + 32
            t = mem[64] + 64
            while idx < _25256:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _25219 + (32 * _25256) + -mem[64] + 64
        mem[_15530 + _15476 + 100] = 0
        call address(_15453).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _15530 + _15476 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not mem[96]:
                _25065 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _25065 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_10302]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _25381 = mem[(32 * idx + 1) + _10302 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27276 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25381
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27276))
                                    call address(_27276).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25381, this.address
                                else:
                                    _27278 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27279 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27279 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27279 + 36] = 0
                                    mem[_27279 + 68] = _25381
                                    mem[_27279 + 100] = this.address
                                    mem[_27279 + 132] = 128
                                    mem[_27279 + 164] = mem[_27279]
                                    s = 0
                                    while s < mem[_27279]:
                                        mem[s + _27279 + 196] = mem[s + _27279 + 32]
                                        _25065 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27279]) > mem[_27279]:
                                        mem[mem[_27279] + _27279 + 196] = 0
                                    require ext_code.size(address(_27278))
                                    call address(_27278).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25381, address(this.address), 128, mem[_27279], mem[_27279 + 196 len ceil32(mem[_27279])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25869 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27933 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25381
                                    mem[mem[64] + 68] = address(_25869)
                                    require ext_code.size(address(_27933))
                                    call address(_27933).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25381, address(_25869)
                                else:
                                    _27935 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27936 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27936 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27936 + 36] = 0
                                    mem[_27936 + 68] = _25381
                                    mem[_27936 + 100] = address(_25869)
                                    mem[_27936 + 132] = 128
                                    mem[_27936 + 164] = mem[_27936]
                                    s = 0
                                    while s < mem[_27936]:
                                        mem[s + _27936 + 196] = mem[s + _27936 + 32]
                                        _25065 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27936]) > mem[_27936]:
                                        mem[mem[_27936] + _27936 + 196] = 0
                                    require ext_code.size(address(_27935))
                                    call address(_27935).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25381, address(_25869), 128, mem[_27936], mem[_27936 + 196 len ceil32(mem[_27936])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27282 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25381
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27282))
                                    call address(_27282).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25381, 0, this.address
                                else:
                                    _27284 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27285 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27285 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27285 + 36] = _25381
                                    mem[_27285 + 68] = 0
                                    mem[_27285 + 100] = this.address
                                    mem[_27285 + 132] = 128
                                    mem[_27285 + 164] = mem[_27285]
                                    s = 0
                                    while s < mem[_27285]:
                                        mem[s + _27285 + 196] = mem[s + _27285 + 32]
                                        _25065 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27285]) > mem[_27285]:
                                        mem[mem[_27285] + _27285 + 196] = 0
                                    require ext_code.size(address(_27284))
                                    call address(_27284).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25381, 0, address(this.address), 128, mem[_27285], mem[_27285 + 196 len ceil32(mem[_27285])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25871 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27938 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25381
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25871)
                                    require ext_code.size(address(_27938))
                                    call address(_27938).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25381, 0, address(_25871)
                                else:
                                    _27940 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27941 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27941 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27941 + 36] = _25381
                                    mem[_27941 + 68] = 0
                                    mem[_27941 + 100] = address(_25871)
                                    mem[_27941 + 132] = 128
                                    mem[_27941 + 164] = mem[_27941]
                                    s = 0
                                    while s < mem[_27941]:
                                        mem[s + _27941 + 196] = mem[s + _27941 + 32]
                                        _25065 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27941]) > mem[_27941]:
                                        mem[mem[_27941] + _27941 + 196] = 0
                                    require ext_code.size(address(_27940))
                                    call address(_27940).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25381, 0, address(_25871), 128, mem[_27941], mem[_27941 + 196 len ceil32(mem[_27941])]
                    else:
                        _25382 = mem[(32 * idx + 1) + _10302 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27288 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25382
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27288))
                                    call address(_27288).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25382, this.address
                                else:
                                    _27290 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27291 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27291 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27291 + 36] = 0
                                    mem[_27291 + 68] = _25382
                                    mem[_27291 + 100] = this.address
                                    mem[_27291 + 132] = 128
                                    mem[_27291 + 164] = mem[_27291]
                                    s = 0
                                    while s < mem[_27291]:
                                        mem[s + _27291 + 196] = mem[s + _27291 + 32]
                                        _25065 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27291]) > mem[_27291]:
                                        mem[mem[_27291] + _27291 + 196] = 0
                                    require ext_code.size(address(_27290))
                                    call address(_27290).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25382, address(this.address), 128, mem[_27291], mem[_27291 + 196 len ceil32(mem[_27291])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25873 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27943 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25382
                                    mem[mem[64] + 68] = address(_25873)
                                    require ext_code.size(address(_27943))
                                    call address(_27943).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25382, address(_25873)
                                else:
                                    _27945 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27946 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27946 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27946 + 36] = 0
                                    mem[_27946 + 68] = _25382
                                    mem[_27946 + 100] = address(_25873)
                                    mem[_27946 + 132] = 128
                                    mem[_27946 + 164] = mem[_27946]
                                    s = 0
                                    while s < mem[_27946]:
                                        mem[s + _27946 + 196] = mem[s + _27946 + 32]
                                        _25065 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27946]) > mem[_27946]:
                                        mem[mem[_27946] + _27946 + 196] = 0
                                    require ext_code.size(address(_27945))
                                    call address(_27945).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25382, address(_25873), 128, mem[_27946], mem[_27946 + 196 len ceil32(mem[_27946])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27294 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25382
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27294))
                                    call address(_27294).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25382, 0, this.address
                                else:
                                    _27296 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27297 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27297 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27297 + 36] = _25382
                                    mem[_27297 + 68] = 0
                                    mem[_27297 + 100] = this.address
                                    mem[_27297 + 132] = 128
                                    mem[_27297 + 164] = mem[_27297]
                                    s = 0
                                    while s < mem[_27297]:
                                        mem[s + _27297 + 196] = mem[s + _27297 + 32]
                                        _25065 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27297]) > mem[_27297]:
                                        mem[mem[_27297] + _27297 + 196] = 0
                                    require ext_code.size(address(_27296))
                                    call address(_27296).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25382, 0, address(this.address), 128, mem[_27297], mem[_27297 + 196 len ceil32(mem[_27297])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25875 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27948 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25382
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25875)
                                    require ext_code.size(address(_27948))
                                    call address(_27948).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25382, 0, address(_25875)
                                else:
                                    _27950 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27951 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27951 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27951 + 36] = _25382
                                    mem[_27951 + 68] = 0
                                    mem[_27951 + 100] = address(_25875)
                                    mem[_27951 + 132] = 128
                                    mem[_27951 + 164] = mem[_27951]
                                    s = 0
                                    while s < mem[_27951]:
                                        mem[s + _27951 + 196] = mem[s + _27951 + 32]
                                        _25065 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27951]) > mem[_27951]:
                                        mem[mem[_27951] + _27951 + 196] = 0
                                    require ext_code.size(address(_27950))
                                    call address(_27950).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25382, 0, address(_25875), 128, mem[_27951], mem[_27951 + 196 len ceil32(mem[_27951])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25065 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                _25221 = mem[64]
                mem[mem[64]] = 32
                _25257 = mem[_10302]
                mem[mem[64] + 32] = mem[_10302]
                idx = 0
                s = _10302 + 32
                t = mem[64] + 64
                while idx < _25257:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _25221 + (32 * _25257) + -mem[64] + 64
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _25066 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _25066 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_10302]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _25383 = mem[(32 * idx + 1) + _10302 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27301 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25383
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27301))
                                call address(_27301).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25383, this.address
                            else:
                                _27303 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27304 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27304 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27304 + 36] = 0
                                mem[_27304 + 68] = _25383
                                mem[_27304 + 100] = this.address
                                mem[_27304 + 132] = 128
                                mem[_27304 + 164] = mem[_27304]
                                s = 0
                                while s < mem[_27304]:
                                    mem[s + _27304 + 196] = mem[s + _27304 + 32]
                                    _25066 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27304]) > mem[_27304]:
                                    mem[mem[_27304] + _27304 + 196] = 0
                                require ext_code.size(address(_27303))
                                call address(_27303).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25383, address(this.address), 128, mem[_27304], mem[_27304 + 196 len ceil32(mem[_27304])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25877 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27953 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25383
                                mem[mem[64] + 68] = address(_25877)
                                require ext_code.size(address(_27953))
                                call address(_27953).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25383, address(_25877)
                            else:
                                _27955 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27956 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27956 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27956 + 36] = 0
                                mem[_27956 + 68] = _25383
                                mem[_27956 + 100] = address(_25877)
                                mem[_27956 + 132] = 128
                                mem[_27956 + 164] = mem[_27956]
                                s = 0
                                while s < mem[_27956]:
                                    mem[s + _27956 + 196] = mem[s + _27956 + 32]
                                    _25066 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27956]) > mem[_27956]:
                                    mem[mem[_27956] + _27956 + 196] = 0
                                require ext_code.size(address(_27955))
                                call address(_27955).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25383, address(_25877), 128, mem[_27956], mem[_27956 + 196 len ceil32(mem[_27956])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27307 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25383
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27307))
                                call address(_27307).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25383, 0, this.address
                            else:
                                _27309 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27310 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27310 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27310 + 36] = _25383
                                mem[_27310 + 68] = 0
                                mem[_27310 + 100] = this.address
                                mem[_27310 + 132] = 128
                                mem[_27310 + 164] = mem[_27310]
                                s = 0
                                while s < mem[_27310]:
                                    mem[s + _27310 + 196] = mem[s + _27310 + 32]
                                    _25066 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27310]) > mem[_27310]:
                                    mem[mem[_27310] + _27310 + 196] = 0
                                require ext_code.size(address(_27309))
                                call address(_27309).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25383, 0, address(this.address), 128, mem[_27310], mem[_27310 + 196 len ceil32(mem[_27310])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25879 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27958 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25383
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25879)
                                require ext_code.size(address(_27958))
                                call address(_27958).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25383, 0, address(_25879)
                            else:
                                _27960 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27961 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27961 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27961 + 36] = _25383
                                mem[_27961 + 68] = 0
                                mem[_27961 + 100] = address(_25879)
                                mem[_27961 + 132] = 128
                                mem[_27961 + 164] = mem[_27961]
                                s = 0
                                while s < mem[_27961]:
                                    mem[s + _27961 + 196] = mem[s + _27961 + 32]
                                    _25066 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27961]) > mem[_27961]:
                                    mem[mem[_27961] + _27961 + 196] = 0
                                require ext_code.size(address(_27960))
                                call address(_27960).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25383, 0, address(_25879), 128, mem[_27961], mem[_27961 + 196 len ceil32(mem[_27961])]
                else:
                    _25384 = mem[(32 * idx + 1) + _10302 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27313 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25384
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27313))
                                call address(_27313).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25384, this.address
                            else:
                                _27315 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27316 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27316 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27316 + 36] = 0
                                mem[_27316 + 68] = _25384
                                mem[_27316 + 100] = this.address
                                mem[_27316 + 132] = 128
                                mem[_27316 + 164] = mem[_27316]
                                s = 0
                                while s < mem[_27316]:
                                    mem[s + _27316 + 196] = mem[s + _27316 + 32]
                                    _25066 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27316]) > mem[_27316]:
                                    mem[mem[_27316] + _27316 + 196] = 0
                                require ext_code.size(address(_27315))
                                call address(_27315).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25384, address(this.address), 128, mem[_27316], mem[_27316 + 196 len ceil32(mem[_27316])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25881 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27963 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25384
                                mem[mem[64] + 68] = address(_25881)
                                require ext_code.size(address(_27963))
                                call address(_27963).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25384, address(_25881)
                            else:
                                _27965 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27966 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27966 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27966 + 36] = 0
                                mem[_27966 + 68] = _25384
                                mem[_27966 + 100] = address(_25881)
                                mem[_27966 + 132] = 128
                                mem[_27966 + 164] = mem[_27966]
                                s = 0
                                while s < mem[_27966]:
                                    mem[s + _27966 + 196] = mem[s + _27966 + 32]
                                    _25066 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27966]) > mem[_27966]:
                                    mem[mem[_27966] + _27966 + 196] = 0
                                require ext_code.size(address(_27965))
                                call address(_27965).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25384, address(_25881), 128, mem[_27966], mem[_27966 + 196 len ceil32(mem[_27966])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27319 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25384
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27319))
                                call address(_27319).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25384, 0, this.address
                            else:
                                _27321 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27322 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27322 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27322 + 36] = _25384
                                mem[_27322 + 68] = 0
                                mem[_27322 + 100] = this.address
                                mem[_27322 + 132] = 128
                                mem[_27322 + 164] = mem[_27322]
                                s = 0
                                while s < mem[_27322]:
                                    mem[s + _27322 + 196] = mem[s + _27322 + 32]
                                    _25066 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27322]) > mem[_27322]:
                                    mem[mem[_27322] + _27322 + 196] = 0
                                require ext_code.size(address(_27321))
                                call address(_27321).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25384, 0, address(this.address), 128, mem[_27322], mem[_27322 + 196 len ceil32(mem[_27322])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25883 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27968 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25384
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25883)
                                require ext_code.size(address(_27968))
                                call address(_27968).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25384, 0, address(_25883)
                            else:
                                _27970 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27971 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27971 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27971 + 36] = _25384
                                mem[_27971 + 68] = 0
                                mem[_27971 + 100] = address(_25883)
                                mem[_27971 + 132] = 128
                                mem[_27971 + 164] = mem[_27971]
                                s = 0
                                while s < mem[_27971]:
                                    mem[s + _27971 + 196] = mem[s + _27971 + 32]
                                    _25066 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27971]) > mem[_27971]:
                                    mem[mem[_27971] + _27971 + 196] = 0
                                require ext_code.size(address(_27970))
                                call address(_27970).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25384, 0, address(_25883), 128, mem[_27971], mem[_27971 + 196 len ceil32(mem[_27971])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25066 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            _25223 = mem[64]
            mem[mem[64]] = 32
            _25258 = mem[_10302]
            mem[mem[64] + 32] = mem[_10302]
            idx = 0
            s = _10302 + 32
            t = mem[64] + 64
            while idx < _25258:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _25223 + (32 * _25258) + -mem[64] + 64
        _20540 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_20540] = return_data.size
        mem[_20540 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        if not return_data.size:
            _25067 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _25067 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_10302]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _25385 = mem[(32 * idx + 1) + _10302 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27326 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25385
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27326))
                                call address(_27326).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25385, this.address
                            else:
                                _27328 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27329 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27329 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27329 + 36] = 0
                                mem[_27329 + 68] = _25385
                                mem[_27329 + 100] = this.address
                                mem[_27329 + 132] = 128
                                mem[_27329 + 164] = mem[_27329]
                                s = 0
                                while s < mem[_27329]:
                                    mem[s + _27329 + 196] = mem[s + _27329 + 32]
                                    _25067 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27329]) > mem[_27329]:
                                    mem[mem[_27329] + _27329 + 196] = 0
                                require ext_code.size(address(_27328))
                                call address(_27328).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25385, address(this.address), 128, mem[_27329], mem[_27329 + 196 len ceil32(mem[_27329])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25885 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27973 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25385
                                mem[mem[64] + 68] = address(_25885)
                                require ext_code.size(address(_27973))
                                call address(_27973).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25385, address(_25885)
                            else:
                                _27975 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27976 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27976 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27976 + 36] = 0
                                mem[_27976 + 68] = _25385
                                mem[_27976 + 100] = address(_25885)
                                mem[_27976 + 132] = 128
                                mem[_27976 + 164] = mem[_27976]
                                s = 0
                                while s < mem[_27976]:
                                    mem[s + _27976 + 196] = mem[s + _27976 + 32]
                                    _25067 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27976]) > mem[_27976]:
                                    mem[mem[_27976] + _27976 + 196] = 0
                                require ext_code.size(address(_27975))
                                call address(_27975).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25385, address(_25885), 128, mem[_27976], mem[_27976 + 196 len ceil32(mem[_27976])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27332 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25385
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27332))
                                call address(_27332).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25385, 0, this.address
                            else:
                                _27334 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27335 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27335 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27335 + 36] = _25385
                                mem[_27335 + 68] = 0
                                mem[_27335 + 100] = this.address
                                mem[_27335 + 132] = 128
                                mem[_27335 + 164] = mem[_27335]
                                s = 0
                                while s < mem[_27335]:
                                    mem[s + _27335 + 196] = mem[s + _27335 + 32]
                                    _25067 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27335]) > mem[_27335]:
                                    mem[mem[_27335] + _27335 + 196] = 0
                                require ext_code.size(address(_27334))
                                call address(_27334).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25385, 0, address(this.address), 128, mem[_27335], mem[_27335 + 196 len ceil32(mem[_27335])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25887 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27978 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25385
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25887)
                                require ext_code.size(address(_27978))
                                call address(_27978).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25385, 0, address(_25887)
                            else:
                                _27980 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27981 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27981 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27981 + 36] = _25385
                                mem[_27981 + 68] = 0
                                mem[_27981 + 100] = address(_25887)
                                mem[_27981 + 132] = 128
                                mem[_27981 + 164] = mem[_27981]
                                s = 0
                                while s < mem[_27981]:
                                    mem[s + _27981 + 196] = mem[s + _27981 + 32]
                                    _25067 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27981]) > mem[_27981]:
                                    mem[mem[_27981] + _27981 + 196] = 0
                                require ext_code.size(address(_27980))
                                call address(_27980).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25385, 0, address(_25887), 128, mem[_27981], mem[_27981 + 196 len ceil32(mem[_27981])]
                else:
                    _25386 = mem[(32 * idx + 1) + _10302 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27338 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25386
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27338))
                                call address(_27338).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25386, this.address
                            else:
                                _27340 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27341 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27341 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27341 + 36] = 0
                                mem[_27341 + 68] = _25386
                                mem[_27341 + 100] = this.address
                                mem[_27341 + 132] = 128
                                mem[_27341 + 164] = mem[_27341]
                                s = 0
                                while s < mem[_27341]:
                                    mem[s + _27341 + 196] = mem[s + _27341 + 32]
                                    _25067 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27341]) > mem[_27341]:
                                    mem[mem[_27341] + _27341 + 196] = 0
                                require ext_code.size(address(_27340))
                                call address(_27340).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25386, address(this.address), 128, mem[_27341], mem[_27341 + 196 len ceil32(mem[_27341])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25889 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27983 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25386
                                mem[mem[64] + 68] = address(_25889)
                                require ext_code.size(address(_27983))
                                call address(_27983).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25386, address(_25889)
                            else:
                                _27985 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27986 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27986 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27986 + 36] = 0
                                mem[_27986 + 68] = _25386
                                mem[_27986 + 100] = address(_25889)
                                mem[_27986 + 132] = 128
                                mem[_27986 + 164] = mem[_27986]
                                s = 0
                                while s < mem[_27986]:
                                    mem[s + _27986 + 196] = mem[s + _27986 + 32]
                                    _25067 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27986]) > mem[_27986]:
                                    mem[mem[_27986] + _27986 + 196] = 0
                                require ext_code.size(address(_27985))
                                call address(_27985).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25386, address(_25889), 128, mem[_27986], mem[_27986 + 196 len ceil32(mem[_27986])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27344 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25386
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27344))
                                call address(_27344).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25386, 0, this.address
                            else:
                                _27346 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27347 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27347 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27347 + 36] = _25386
                                mem[_27347 + 68] = 0
                                mem[_27347 + 100] = this.address
                                mem[_27347 + 132] = 128
                                mem[_27347 + 164] = mem[_27347]
                                s = 0
                                while s < mem[_27347]:
                                    mem[s + _27347 + 196] = mem[s + _27347 + 32]
                                    _25067 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27347]) > mem[_27347]:
                                    mem[mem[_27347] + _27347 + 196] = 0
                                require ext_code.size(address(_27346))
                                call address(_27346).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25386, 0, address(this.address), 128, mem[_27347], mem[_27347 + 196 len ceil32(mem[_27347])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25891 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27988 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25386
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25891)
                                require ext_code.size(address(_27988))
                                call address(_27988).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25386, 0, address(_25891)
                            else:
                                _27990 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27991 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27991 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27991 + 36] = _25386
                                mem[_27991 + 68] = 0
                                mem[_27991 + 100] = address(_25891)
                                mem[_27991 + 132] = 128
                                mem[_27991 + 164] = mem[_27991]
                                s = 0
                                while s < mem[_27991]:
                                    mem[s + _27991 + 196] = mem[s + _27991 + 32]
                                    _25067 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27991]) > mem[_27991]:
                                    mem[mem[_27991] + _27991 + 196] = 0
                                require ext_code.size(address(_27990))
                                call address(_27990).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25386, 0, address(_25891), 128, mem[_27991], mem[_27991 + 196 len ceil32(mem[_27991])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25067 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            _25225 = mem[64]
            mem[mem[64]] = 32
            _25259 = mem[_10302]
            mem[mem[64] + 32] = mem[_10302]
            idx = 0
            s = _10302 + 32
            t = mem[64] + 64
            while idx < _25259:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _25225 + (32 * _25259) + -mem[64] + 64
        require return_data.size >= 32
        require mem[_20540 + 32] == bool(mem[_20540 + 32])
        if not mem[_20540 + 32]:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        _25068 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _25068 - 1:
            require idx < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[_10302]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _25387 = mem[(32 * idx + 1) + _10302 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _27351 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _25387
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_27351))
                            call address(_27351).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _25387, this.address
                        else:
                            _27353 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _27354 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_27354 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_27354 + 36] = 0
                            mem[_27354 + 68] = _25387
                            mem[_27354 + 100] = this.address
                            mem[_27354 + 132] = 128
                            mem[_27354 + 164] = mem[_27354]
                            s = 0
                            while s < mem[_27354]:
                                mem[s + _27354 + 196] = mem[s + _27354 + 32]
                                _25068 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_27354]) > mem[_27354]:
                                mem[mem[_27354] + _27354 + 196] = 0
                            require ext_code.size(address(_27353))
                            call address(_27353).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _25387, address(this.address), 128, mem[_27354], mem[_27354 + 196 len ceil32(mem[_27354])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _25893 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _27993 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _25387
                            mem[mem[64] + 68] = address(_25893)
                            require ext_code.size(address(_27993))
                            call address(_27993).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _25387, address(_25893)
                        else:
                            _27995 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _27996 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_27996 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_27996 + 36] = 0
                            mem[_27996 + 68] = _25387
                            mem[_27996 + 100] = address(_25893)
                            mem[_27996 + 132] = 128
                            mem[_27996 + 164] = mem[_27996]
                            s = 0
                            while s < mem[_27996]:
                                mem[s + _27996 + 196] = mem[s + _27996 + 32]
                                _25068 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_27996]) > mem[_27996]:
                                mem[mem[_27996] + _27996 + 196] = 0
                            require ext_code.size(address(_27995))
                            call address(_27995).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _25387, address(_25893), 128, mem[_27996], mem[_27996 + 196 len ceil32(mem[_27996])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _27357 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25387
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_27357))
                            call address(_27357).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _25387, 0, this.address
                        else:
                            _27359 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _27360 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_27360 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_27360 + 36] = _25387
                            mem[_27360 + 68] = 0
                            mem[_27360 + 100] = this.address
                            mem[_27360 + 132] = 128
                            mem[_27360 + 164] = mem[_27360]
                            s = 0
                            while s < mem[_27360]:
                                mem[s + _27360 + 196] = mem[s + _27360 + 32]
                                _25068 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_27360]) > mem[_27360]:
                                mem[mem[_27360] + _27360 + 196] = 0
                            require ext_code.size(address(_27359))
                            call address(_27359).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _25387, 0, address(this.address), 128, mem[_27360], mem[_27360 + 196 len ceil32(mem[_27360])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _25895 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _27998 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25387
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_25895)
                            require ext_code.size(address(_27998))
                            call address(_27998).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _25387, 0, address(_25895)
                        else:
                            _28000 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _28001 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_28001 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_28001 + 36] = _25387
                            mem[_28001 + 68] = 0
                            mem[_28001 + 100] = address(_25895)
                            mem[_28001 + 132] = 128
                            mem[_28001 + 164] = mem[_28001]
                            s = 0
                            while s < mem[_28001]:
                                mem[s + _28001 + 196] = mem[s + _28001 + 32]
                                _25068 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_28001]) > mem[_28001]:
                                mem[mem[_28001] + _28001 + 196] = 0
                            require ext_code.size(address(_28000))
                            call address(_28000).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _25387, 0, address(_25895), 128, mem[_28001], mem[_28001 + 196 len ceil32(mem[_28001])]
            else:
                _25388 = mem[(32 * idx + 1) + _10302 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _27363 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _25388
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_27363))
                            call address(_27363).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _25388, this.address
                        else:
                            _27365 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _27366 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_27366 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_27366 + 36] = 0
                            mem[_27366 + 68] = _25388
                            mem[_27366 + 100] = this.address
                            mem[_27366 + 132] = 128
                            mem[_27366 + 164] = mem[_27366]
                            s = 0
                            while s < mem[_27366]:
                                mem[s + _27366 + 196] = mem[s + _27366 + 32]
                                _25068 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_27366]) > mem[_27366]:
                                mem[mem[_27366] + _27366 + 196] = 0
                            require ext_code.size(address(_27365))
                            call address(_27365).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _25388, address(this.address), 128, mem[_27366], mem[_27366 + 196 len ceil32(mem[_27366])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _25897 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _28003 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _25388
                            mem[mem[64] + 68] = address(_25897)
                            require ext_code.size(address(_28003))
                            call address(_28003).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _25388, address(_25897)
                        else:
                            _28005 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _28006 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_28006 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_28006 + 36] = 0
                            mem[_28006 + 68] = _25388
                            mem[_28006 + 100] = address(_25897)
                            mem[_28006 + 132] = 128
                            mem[_28006 + 164] = mem[_28006]
                            s = 0
                            while s < mem[_28006]:
                                mem[s + _28006 + 196] = mem[s + _28006 + 32]
                                _25068 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_28006]) > mem[_28006]:
                                mem[mem[_28006] + _28006 + 196] = 0
                            require ext_code.size(address(_28005))
                            call address(_28005).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _25388, address(_25897), 128, mem[_28006], mem[_28006 + 196 len ceil32(mem[_28006])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _27369 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25388
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_27369))
                            call address(_27369).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _25388, 0, this.address
                        else:
                            _27371 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _27372 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_27372 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_27372 + 36] = _25388
                            mem[_27372 + 68] = 0
                            mem[_27372 + 100] = this.address
                            mem[_27372 + 132] = 128
                            mem[_27372 + 164] = mem[_27372]
                            s = 0
                            while s < mem[_27372]:
                                mem[s + _27372 + 196] = mem[s + _27372 + 32]
                                _25068 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_27372]) > mem[_27372]:
                                mem[mem[_27372] + _27372 + 196] = 0
                            require ext_code.size(address(_27371))
                            call address(_27371).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _25388, 0, address(this.address), 128, mem[_27372], mem[_27372 + 196 len ceil32(mem[_27372])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _25899 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _28008 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25388
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_25899)
                            require ext_code.size(address(_28008))
                            call address(_28008).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _25388, 0, address(_25899)
                        else:
                            _28010 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _28011 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_28011 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_28011 + 36] = _25388
                            mem[_28011 + 68] = 0
                            mem[_28011 + 100] = address(_25899)
                            mem[_28011 + 132] = 128
                            mem[_28011 + 164] = mem[_28011]
                            s = 0
                            while s < mem[_28011]:
                                mem[s + _28011 + 196] = mem[s + _28011 + 32]
                                _25068 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_28011]) > mem[_28011]:
                                mem[mem[_28011] + _28011 + 196] = 0
                            require ext_code.size(address(_28010))
                            call address(_28010).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _25388, 0, address(_25899), 128, mem[_28011], mem[_28011 + 196 len ceil32(mem[_28011])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25068 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        _25227 = mem[64]
        mem[mem[64]] = 32
        _25260 = mem[_10302]
        mem[mem[64] + 32] = mem[_10302]
        idx = 0
        s = _10302 + 32
        t = mem[64] + 64
        while idx < _25260:
            mem[t] = mem[s]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _25227 + (32 * _25260) + -mem[64] + 64
    revert with 0, 'Ownable: caller is not the owner'
}

function sub_ae44042b(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 192
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    require arg4 == arg4
    require arg5 == bool(arg5)
    require arg6 == arg6
    idx = 0
    while idx < stor0.length:
        mem[0] = 0
        if stor0[idx] != msg.sender:
            idx = idx + 1
            continue 
        mem[100] = this.address
        require ext_code.size(address(arg1))
        staticcall address(arg1).balanceOf(address rg1) with:
                gas gas_remaining wei
               args this.address
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        if ext_call.return_data[0] <= 0:
            revert with 0, 'No'
        mem[ceil32(return_data.size) + 96] = 2
        mem[ceil32(return_data.size) + 128] = address(arg1)
        mem[ceil32(return_data.size) + 160] = address(arg2)
        mem[ceil32(return_data.size) + 192] = 1
        mem[ceil32(return_data.size) + 224] = arg4
        mem[ceil32(return_data.size) + 256] = 1
        mem[ceil32(return_data.size) + 288] = bool(arg5)
        mem[ceil32(return_data.size) + 320] = 1
        mem[64] = ceil32(return_data.size) + 384
        mem[ceil32(return_data.size) + 352] = code.data[10348 len 32]
        idx = 0
        while idx < 1:
            require idx < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            _10349 = mem[(32 * idx + 1) + ceil32(return_data.size) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
            mem[mem[64] + 36] = address(_10349)
            require ext_code.size(address(arg3))
            staticcall address(arg3).getPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_10349)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10460 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_10460] == mem[_10460 + 12 len 20]
            require idx < mem[ceil32(return_data.size) + 320]
            mem[(32 * idx) + ceil32(return_data.size) + 352] = mem[_10460 + 12 len 20]
            idx = idx + 1
            continue 
        _10341 = mem[ceil32(return_data.size) + 96]
        _10342 = mem[64]
        mem[mem[64]] = mem[ceil32(return_data.size) + 96]
        mem[64] = mem[64] + (32 * _10341) + 32
        if not _10341:
            require 0 < mem[_10342]
            mem[_10342 + 32] = ext_call.return_data[0]
            _15483 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _15483 - 1:
                require idx < mem[ceil32(return_data.size) + 320]
                require idx < mem[ceil32(return_data.size) + 96]
                _15512 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                _15525 = mem[(32 * idx + 1) + ceil32(return_data.size) + 128]
                require ext_code.size(mem[(32 * idx) + ceil32(return_data.size) + 364 len 20])
                staticcall mem[(32 * idx) + ceil32(return_data.size) + 364 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _15577 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_15577] == mem[_15577 + 18 len 14]
                    require mem[_15577 + 32] == mem[_15577 + 50 len 14]
                    require mem[_15577 + 64] == mem[_15577 + 92 len 4]
                    require idx < mem[_10342]
                    require idx < mem[ceil32(return_data.size) + 192]
                    if address(_15512) == address(_15512):
                        if not mem[(32 * idx) + _10342 + 32]:
                            require mem[_15577 + 18 len 14]
                            if 1000 * mem[_15577 + 18 len 14] / mem[_15577 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if 1000 * mem[_15577 + 18 len 14] < 1000 * mem[_15577 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require 1000 * mem[_15577 + 18 len 14]
                            require idx + 1 < mem[_10342]
                            mem[(32 * idx + 1) + _10342 + 32] = 0 / 1000 * mem[_15577 + 18 len 14]
                        else:
                            if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) / mem[(32 * idx) + _10342 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]):
                                if not mem[_15577 + 18 len 14]:
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                else:
                                    if 1000 * mem[_15577 + 18 len 14] / mem[_15577 + 18 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15577 + 18 len 14]) < 1000 * mem[_15577 + 18 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15577 + 18 len 14])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15577 + 18 len 14])
                            else:
                                if (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15577 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15577 + 50 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) != mem[_15577 + 50 len 14]:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if not mem[_15577 + 18 len 14]:
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15577 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15577 + 50 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                else:
                                    if 1000 * mem[_15577 + 18 len 14] / mem[_15577 + 18 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15577 + 18 len 14]) < 1000 * mem[_15577 + 18 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15577 + 18 len 14])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15577 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15577 + 50 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15577 + 18 len 14])
                    else:
                        if not mem[(32 * idx) + _10342 + 32]:
                            require mem[_15577 + 50 len 14]
                            if 1000 * mem[_15577 + 50 len 14] / mem[_15577 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if 1000 * mem[_15577 + 50 len 14] < 1000 * mem[_15577 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require 1000 * mem[_15577 + 50 len 14]
                            require idx + 1 < mem[_10342]
                            mem[(32 * idx + 1) + _10342 + 32] = 0 / 1000 * mem[_15577 + 50 len 14]
                        else:
                            if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) / mem[(32 * idx) + _10342 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]):
                                if not mem[_15577 + 50 len 14]:
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                else:
                                    if 1000 * mem[_15577 + 50 len 14] / mem[_15577 + 50 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15577 + 50 len 14]) < 1000 * mem[_15577 + 50 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15577 + 50 len 14])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15577 + 50 len 14])
                            else:
                                if (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15577 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15577 + 18 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) != mem[_15577 + 18 len 14]:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if not mem[_15577 + 50 len 14]:
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15577 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15577 + 18 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                else:
                                    if 1000 * mem[_15577 + 50 len 14] / mem[_15577 + 50 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15577 + 50 len 14]) < 1000 * mem[_15577 + 50 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15577 + 50 len 14])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15577 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15577 + 18 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15577 + 50 len 14])
                else:
                    _15578 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_15578] == mem[_15578 + 18 len 14]
                    require mem[_15578 + 32] == mem[_15578 + 50 len 14]
                    require mem[_15578 + 64] == mem[_15578 + 92 len 4]
                    require idx < mem[_10342]
                    require idx < mem[ceil32(return_data.size) + 192]
                    if address(_15512) == address(_15525):
                        if not mem[(32 * idx) + _10342 + 32]:
                            require mem[_15578 + 18 len 14]
                            if 1000 * mem[_15578 + 18 len 14] / mem[_15578 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if 1000 * mem[_15578 + 18 len 14] < 1000 * mem[_15578 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require 1000 * mem[_15578 + 18 len 14]
                            require idx + 1 < mem[_10342]
                            mem[(32 * idx + 1) + _10342 + 32] = 0 / 1000 * mem[_15578 + 18 len 14]
                        else:
                            if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) / mem[(32 * idx) + _10342 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]):
                                if not mem[_15578 + 18 len 14]:
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                else:
                                    if 1000 * mem[_15578 + 18 len 14] / mem[_15578 + 18 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15578 + 18 len 14]) < 1000 * mem[_15578 + 18 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15578 + 18 len 14])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15578 + 18 len 14])
                            else:
                                if (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15578 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15578 + 50 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) != mem[_15578 + 50 len 14]:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if not mem[_15578 + 18 len 14]:
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15578 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15578 + 50 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                else:
                                    if 1000 * mem[_15578 + 18 len 14] / mem[_15578 + 18 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15578 + 18 len 14]) < 1000 * mem[_15578 + 18 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15578 + 18 len 14])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15578 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15578 + 50 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15578 + 18 len 14])
                    else:
                        if not mem[(32 * idx) + _10342 + 32]:
                            require mem[_15578 + 50 len 14]
                            if 1000 * mem[_15578 + 50 len 14] / mem[_15578 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if 1000 * mem[_15578 + 50 len 14] < 1000 * mem[_15578 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require 1000 * mem[_15578 + 50 len 14]
                            require idx + 1 < mem[_10342]
                            mem[(32 * idx + 1) + _10342 + 32] = 0 / 1000 * mem[_15578 + 50 len 14]
                        else:
                            if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) / mem[(32 * idx) + _10342 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]):
                                if not mem[_15578 + 50 len 14]:
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                else:
                                    if 1000 * mem[_15578 + 50 len 14] / mem[_15578 + 50 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15578 + 50 len 14]) < 1000 * mem[_15578 + 50 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15578 + 50 len 14])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15578 + 50 len 14])
                            else:
                                if (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15578 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15578 + 18 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) != mem[_15578 + 18 len 14]:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if not mem[_15578 + 50 len 14]:
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15578 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15578 + 18 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                else:
                                    if 1000 * mem[_15578 + 50 len 14] / mem[_15578 + 50 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15578 + 50 len 14]) < 1000 * mem[_15578 + 50 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15578 + 50 len 14])
                                    require idx + 1 < mem[_10342]
                                    mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15578 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15578 + 18 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15578 + 50 len 14])
                _15483 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            require mem[_10342] - 1 < mem[_10342]
            if mem[(32 * mem[_10342] - 1) + _10342 + 32] < arg6:
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT'
            require 0 < mem[ceil32(return_data.size) + 96]
            _15533 = mem[ceil32(return_data.size) + 128]
            require 0 < mem[ceil32(return_data.size) + 320]
            require 0 < mem[_10342]
            _15547 = mem[_10342 + 32]
            _15551 = mem[64]
            mem[mem[64] + 36] = mem[ceil32(return_data.size) + 364 len 20]
            mem[mem[64] + 68] = _15547
            _15595 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_15595 + 32] = mem[_15595 + 36 len 28] or 0xa9059cbb00000000000000000000000000000000000000000000000000000000
            _15611 = mem[_15595]
            idx = 0
            while idx < _15611:
                mem[idx + _15551 + 100] = mem[idx + _15595 + 32]
                idx = idx + 32
                continue 
            if ceil32(_15611) <= _15611:
                call address(_15533).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _15611 + _15551 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                    if not mem[96]:
                        _25133 = mem[ceil32(return_data.size) + 96]
                        idx = 0
                        while idx < _25133 - 1:
                            require idx < mem[ceil32(return_data.size) + 96]
                            require idx + 1 < mem[ceil32(return_data.size) + 96]
                            require idx + 1 < mem[_10342]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                _25437 = mem[(32 * idx + 1) + _10342 + 32]
                                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _27056 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 0
                                            mem[mem[64] + 36] = _25437
                                            mem[mem[64] + 68] = this.address
                                            require ext_code.size(address(_27056))
                                            call address(_27056).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args 0, _25437, this.address
                                        else:
                                            _27058 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _27059 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_27059 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_27059 + 36] = 0
                                            mem[_27059 + 68] = _25437
                                            mem[_27059 + 100] = this.address
                                            mem[_27059 + 132] = 128
                                            mem[_27059 + 164] = mem[_27059]
                                            s = 0
                                            while s < mem[_27059]:
                                                mem[s + _27059 + 196] = mem[s + _27059 + 32]
                                                _25133 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_27059]) > mem[_27059]:
                                                mem[mem[_27059] + _27059 + 196] = 0
                                            require ext_code.size(address(_27058))
                                            call address(_27058).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, _25437, address(this.address), 128, mem[_27059], mem[_27059 + 196 len ceil32(mem[_27059])]
                                    else:
                                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                                        _25853 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _27773 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 0
                                            mem[mem[64] + 36] = _25437
                                            mem[mem[64] + 68] = address(_25853)
                                            require ext_code.size(address(_27773))
                                            call address(_27773).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args 0, _25437, address(_25853)
                                        else:
                                            _27775 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _27776 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_27776 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_27776 + 36] = 0
                                            mem[_27776 + 68] = _25437
                                            mem[_27776 + 100] = address(_25853)
                                            mem[_27776 + 132] = 128
                                            mem[_27776 + 164] = mem[_27776]
                                            s = 0
                                            while s < mem[_27776]:
                                                mem[s + _27776 + 196] = mem[s + _27776 + 32]
                                                _25133 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_27776]) > mem[_27776]:
                                                mem[mem[_27776] + _27776 + 196] = 0
                                            require ext_code.size(address(_27775))
                                            call address(_27775).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, _25437, address(_25853), 128, mem[_27776], mem[_27776 + 196 len ceil32(mem[_27776])]
                                else:
                                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _27062 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _25437
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = this.address
                                            require ext_code.size(address(_27062))
                                            call address(_27062).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args _25437, 0, this.address
                                        else:
                                            _27064 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _27065 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_27065 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_27065 + 36] = _25437
                                            mem[_27065 + 68] = 0
                                            mem[_27065 + 100] = this.address
                                            mem[_27065 + 132] = 128
                                            mem[_27065 + 164] = mem[_27065]
                                            s = 0
                                            while s < mem[_27065]:
                                                mem[s + _27065 + 196] = mem[s + _27065 + 32]
                                                _25133 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_27065]) > mem[_27065]:
                                                mem[mem[_27065] + _27065 + 196] = 0
                                            require ext_code.size(address(_27064))
                                            call address(_27064).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args _25437, 0, address(this.address), 128, mem[_27065], mem[_27065 + 196 len ceil32(mem[_27065])]
                                    else:
                                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                                        _25855 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _27778 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _25437
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = address(_25855)
                                            require ext_code.size(address(_27778))
                                            call address(_27778).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args _25437, 0, address(_25855)
                                        else:
                                            _27780 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _27781 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_27781 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_27781 + 36] = _25437
                                            mem[_27781 + 68] = 0
                                            mem[_27781 + 100] = address(_25855)
                                            mem[_27781 + 132] = 128
                                            mem[_27781 + 164] = mem[_27781]
                                            s = 0
                                            while s < mem[_27781]:
                                                mem[s + _27781 + 196] = mem[s + _27781 + 32]
                                                _25133 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_27781]) > mem[_27781]:
                                                mem[mem[_27781] + _27781 + 196] = 0
                                            require ext_code.size(address(_27780))
                                            call address(_27780).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args _25437, 0, address(_25855), 128, mem[_27781], mem[_27781 + 196 len ceil32(mem[_27781])]
                            else:
                                _25438 = mem[(32 * idx + 1) + _10342 + 32]
                                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _27068 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 0
                                            mem[mem[64] + 36] = _25438
                                            mem[mem[64] + 68] = this.address
                                            require ext_code.size(address(_27068))
                                            call address(_27068).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args 0, _25438, this.address
                                        else:
                                            _27070 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _27071 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_27071 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_27071 + 36] = 0
                                            mem[_27071 + 68] = _25438
                                            mem[_27071 + 100] = this.address
                                            mem[_27071 + 132] = 128
                                            mem[_27071 + 164] = mem[_27071]
                                            s = 0
                                            while s < mem[_27071]:
                                                mem[s + _27071 + 196] = mem[s + _27071 + 32]
                                                _25133 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_27071]) > mem[_27071]:
                                                mem[mem[_27071] + _27071 + 196] = 0
                                            require ext_code.size(address(_27070))
                                            call address(_27070).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, _25438, address(this.address), 128, mem[_27071], mem[_27071 + 196 len ceil32(mem[_27071])]
                                    else:
                                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                                        _25857 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _27783 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 0
                                            mem[mem[64] + 36] = _25438
                                            mem[mem[64] + 68] = address(_25857)
                                            require ext_code.size(address(_27783))
                                            call address(_27783).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args 0, _25438, address(_25857)
                                        else:
                                            _27785 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _27786 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_27786 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_27786 + 36] = 0
                                            mem[_27786 + 68] = _25438
                                            mem[_27786 + 100] = address(_25857)
                                            mem[_27786 + 132] = 128
                                            mem[_27786 + 164] = mem[_27786]
                                            s = 0
                                            while s < mem[_27786]:
                                                mem[s + _27786 + 196] = mem[s + _27786 + 32]
                                                _25133 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_27786]) > mem[_27786]:
                                                mem[mem[_27786] + _27786 + 196] = 0
                                            require ext_code.size(address(_27785))
                                            call address(_27785).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, _25438, address(_25857), 128, mem[_27786], mem[_27786 + 196 len ceil32(mem[_27786])]
                                else:
                                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _27074 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _25438
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = this.address
                                            require ext_code.size(address(_27074))
                                            call address(_27074).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args _25438, 0, this.address
                                        else:
                                            _27076 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _27077 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_27077 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_27077 + 36] = _25438
                                            mem[_27077 + 68] = 0
                                            mem[_27077 + 100] = this.address
                                            mem[_27077 + 132] = 128
                                            mem[_27077 + 164] = mem[_27077]
                                            s = 0
                                            while s < mem[_27077]:
                                                mem[s + _27077 + 196] = mem[s + _27077 + 32]
                                                _25133 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_27077]) > mem[_27077]:
                                                mem[mem[_27077] + _27077 + 196] = 0
                                            require ext_code.size(address(_27076))
                                            call address(_27076).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args _25438, 0, address(this.address), 128, mem[_27077], mem[_27077 + 196 len ceil32(mem[_27077])]
                                    else:
                                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                                        _25859 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                        require idx < mem[ceil32(return_data.size) + 256]
                                        require idx < mem[ceil32(return_data.size) + 320]
                                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                            _27788 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _25438
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = address(_25859)
                                            require ext_code.size(address(_27788))
                                            call address(_27788).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args _25438, 0, address(_25859)
                                        else:
                                            _27790 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                            _27791 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_27791 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_27791 + 36] = _25438
                                            mem[_27791 + 68] = 0
                                            mem[_27791 + 100] = address(_25859)
                                            mem[_27791 + 132] = 128
                                            mem[_27791 + 164] = mem[_27791]
                                            s = 0
                                            while s < mem[_27791]:
                                                mem[s + _27791 + 196] = mem[s + _27791 + 32]
                                                _25133 = mem[ceil32(return_data.size) + 96]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_27791]) > mem[_27791]:
                                                mem[mem[_27791] + _27791 + 196] = 0
                                            require ext_code.size(address(_27790))
                                            call address(_27790).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args _25438, 0, address(_25859), 128, mem[_27791], mem[_27791 + 196 len ceil32(mem[_27791])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25133 = mem[ceil32(return_data.size) + 96]
                            idx = idx + 1
                            continue 
                        _25277 = mem[64]
                        mem[mem[64]] = 32
                        _25325 = mem[_10342]
                        mem[mem[64] + 32] = mem[_10342]
                        idx = 0
                        s = _10342 + 32
                        t = mem[64] + 64
                        while idx < _25325:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _25277 + (32 * _25325) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                    _25134 = mem[ceil32(return_data.size) + 96]
                    idx = 0
                    while idx < _25134 - 1:
                        require idx < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[_10342]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            _25439 = mem[(32 * idx + 1) + _10342 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27081 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25439
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27081))
                                        call address(_27081).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25439, this.address
                                    else:
                                        _27083 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27084 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27084 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27084 + 36] = 0
                                        mem[_27084 + 68] = _25439
                                        mem[_27084 + 100] = this.address
                                        mem[_27084 + 132] = 128
                                        mem[_27084 + 164] = mem[_27084]
                                        s = 0
                                        while s < mem[_27084]:
                                            mem[s + _27084 + 196] = mem[s + _27084 + 32]
                                            _25134 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27084]) > mem[_27084]:
                                            mem[mem[_27084] + _27084 + 196] = 0
                                        require ext_code.size(address(_27083))
                                        call address(_27083).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25439, address(this.address), 128, mem[_27084], mem[_27084 + 196 len ceil32(mem[_27084])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25861 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27793 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25439
                                        mem[mem[64] + 68] = address(_25861)
                                        require ext_code.size(address(_27793))
                                        call address(_27793).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25439, address(_25861)
                                    else:
                                        _27795 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27796 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27796 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27796 + 36] = 0
                                        mem[_27796 + 68] = _25439
                                        mem[_27796 + 100] = address(_25861)
                                        mem[_27796 + 132] = 128
                                        mem[_27796 + 164] = mem[_27796]
                                        s = 0
                                        while s < mem[_27796]:
                                            mem[s + _27796 + 196] = mem[s + _27796 + 32]
                                            _25134 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27796]) > mem[_27796]:
                                            mem[mem[_27796] + _27796 + 196] = 0
                                        require ext_code.size(address(_27795))
                                        call address(_27795).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25439, address(_25861), 128, mem[_27796], mem[_27796 + 196 len ceil32(mem[_27796])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27087 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25439
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27087))
                                        call address(_27087).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25439, 0, this.address
                                    else:
                                        _27089 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27090 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27090 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27090 + 36] = _25439
                                        mem[_27090 + 68] = 0
                                        mem[_27090 + 100] = this.address
                                        mem[_27090 + 132] = 128
                                        mem[_27090 + 164] = mem[_27090]
                                        s = 0
                                        while s < mem[_27090]:
                                            mem[s + _27090 + 196] = mem[s + _27090 + 32]
                                            _25134 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27090]) > mem[_27090]:
                                            mem[mem[_27090] + _27090 + 196] = 0
                                        require ext_code.size(address(_27089))
                                        call address(_27089).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25439, 0, address(this.address), 128, mem[_27090], mem[_27090 + 196 len ceil32(mem[_27090])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25863 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27798 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25439
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25863)
                                        require ext_code.size(address(_27798))
                                        call address(_27798).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25439, 0, address(_25863)
                                    else:
                                        _27800 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27801 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27801 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27801 + 36] = _25439
                                        mem[_27801 + 68] = 0
                                        mem[_27801 + 100] = address(_25863)
                                        mem[_27801 + 132] = 128
                                        mem[_27801 + 164] = mem[_27801]
                                        s = 0
                                        while s < mem[_27801]:
                                            mem[s + _27801 + 196] = mem[s + _27801 + 32]
                                            _25134 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27801]) > mem[_27801]:
                                            mem[mem[_27801] + _27801 + 196] = 0
                                        require ext_code.size(address(_27800))
                                        call address(_27800).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25439, 0, address(_25863), 128, mem[_27801], mem[_27801 + 196 len ceil32(mem[_27801])]
                        else:
                            _25440 = mem[(32 * idx + 1) + _10342 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27093 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25440
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27093))
                                        call address(_27093).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25440, this.address
                                    else:
                                        _27095 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27096 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27096 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27096 + 36] = 0
                                        mem[_27096 + 68] = _25440
                                        mem[_27096 + 100] = this.address
                                        mem[_27096 + 132] = 128
                                        mem[_27096 + 164] = mem[_27096]
                                        s = 0
                                        while s < mem[_27096]:
                                            mem[s + _27096 + 196] = mem[s + _27096 + 32]
                                            _25134 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27096]) > mem[_27096]:
                                            mem[mem[_27096] + _27096 + 196] = 0
                                        require ext_code.size(address(_27095))
                                        call address(_27095).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25440, address(this.address), 128, mem[_27096], mem[_27096 + 196 len ceil32(mem[_27096])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25865 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27803 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25440
                                        mem[mem[64] + 68] = address(_25865)
                                        require ext_code.size(address(_27803))
                                        call address(_27803).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25440, address(_25865)
                                    else:
                                        _27805 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27806 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27806 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27806 + 36] = 0
                                        mem[_27806 + 68] = _25440
                                        mem[_27806 + 100] = address(_25865)
                                        mem[_27806 + 132] = 128
                                        mem[_27806 + 164] = mem[_27806]
                                        s = 0
                                        while s < mem[_27806]:
                                            mem[s + _27806 + 196] = mem[s + _27806 + 32]
                                            _25134 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27806]) > mem[_27806]:
                                            mem[mem[_27806] + _27806 + 196] = 0
                                        require ext_code.size(address(_27805))
                                        call address(_27805).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25440, address(_25865), 128, mem[_27806], mem[_27806 + 196 len ceil32(mem[_27806])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27099 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25440
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27099))
                                        call address(_27099).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25440, 0, this.address
                                    else:
                                        _27101 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27102 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27102 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27102 + 36] = _25440
                                        mem[_27102 + 68] = 0
                                        mem[_27102 + 100] = this.address
                                        mem[_27102 + 132] = 128
                                        mem[_27102 + 164] = mem[_27102]
                                        s = 0
                                        while s < mem[_27102]:
                                            mem[s + _27102 + 196] = mem[s + _27102 + 32]
                                            _25134 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27102]) > mem[_27102]:
                                            mem[mem[_27102] + _27102 + 196] = 0
                                        require ext_code.size(address(_27101))
                                        call address(_27101).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25440, 0, address(this.address), 128, mem[_27102], mem[_27102 + 196 len ceil32(mem[_27102])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25867 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27808 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25440
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25867)
                                        require ext_code.size(address(_27808))
                                        call address(_27808).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25440, 0, address(_25867)
                                    else:
                                        _27810 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27811 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27811 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27811 + 36] = _25440
                                        mem[_27811 + 68] = 0
                                        mem[_27811 + 100] = address(_25867)
                                        mem[_27811 + 132] = 128
                                        mem[_27811 + 164] = mem[_27811]
                                        s = 0
                                        while s < mem[_27811]:
                                            mem[s + _27811 + 196] = mem[s + _27811 + 32]
                                            _25134 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27811]) > mem[_27811]:
                                            mem[mem[_27811] + _27811 + 196] = 0
                                        require ext_code.size(address(_27810))
                                        call address(_27810).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25440, 0, address(_25867), 128, mem[_27811], mem[_27811 + 196 len ceil32(mem[_27811])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25134 = mem[ceil32(return_data.size) + 96]
                        idx = idx + 1
                        continue 
                    _25279 = mem[64]
                    mem[mem[64]] = 32
                    _25326 = mem[_10342]
                    mem[mem[64] + 32] = mem[_10342]
                    idx = 0
                    s = _10342 + 32
                    t = mem[64] + 64
                    while idx < _25326:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _25279 + (32 * _25326) + -mem[64] + 64
                _20617 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_20617] = return_data.size
                mem[_20617 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                if not return_data.size:
                    _25135 = mem[ceil32(return_data.size) + 96]
                    idx = 0
                    while idx < _25135 - 1:
                        require idx < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[_10342]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            _25441 = mem[(32 * idx + 1) + _10342 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27106 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25441
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27106))
                                        call address(_27106).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25441, this.address
                                    else:
                                        _27108 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27109 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27109 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27109 + 36] = 0
                                        mem[_27109 + 68] = _25441
                                        mem[_27109 + 100] = this.address
                                        mem[_27109 + 132] = 128
                                        mem[_27109 + 164] = mem[_27109]
                                        s = 0
                                        while s < mem[_27109]:
                                            mem[s + _27109 + 196] = mem[s + _27109 + 32]
                                            _25135 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27109]) > mem[_27109]:
                                            mem[mem[_27109] + _27109 + 196] = 0
                                        require ext_code.size(address(_27108))
                                        call address(_27108).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25441, address(this.address), 128, mem[_27109], mem[_27109 + 196 len ceil32(mem[_27109])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25869 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27813 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25441
                                        mem[mem[64] + 68] = address(_25869)
                                        require ext_code.size(address(_27813))
                                        call address(_27813).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25441, address(_25869)
                                    else:
                                        _27815 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27816 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27816 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27816 + 36] = 0
                                        mem[_27816 + 68] = _25441
                                        mem[_27816 + 100] = address(_25869)
                                        mem[_27816 + 132] = 128
                                        mem[_27816 + 164] = mem[_27816]
                                        s = 0
                                        while s < mem[_27816]:
                                            mem[s + _27816 + 196] = mem[s + _27816 + 32]
                                            _25135 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27816]) > mem[_27816]:
                                            mem[mem[_27816] + _27816 + 196] = 0
                                        require ext_code.size(address(_27815))
                                        call address(_27815).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25441, address(_25869), 128, mem[_27816], mem[_27816 + 196 len ceil32(mem[_27816])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27112 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25441
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27112))
                                        call address(_27112).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25441, 0, this.address
                                    else:
                                        _27114 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27115 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27115 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27115 + 36] = _25441
                                        mem[_27115 + 68] = 0
                                        mem[_27115 + 100] = this.address
                                        mem[_27115 + 132] = 128
                                        mem[_27115 + 164] = mem[_27115]
                                        s = 0
                                        while s < mem[_27115]:
                                            mem[s + _27115 + 196] = mem[s + _27115 + 32]
                                            _25135 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27115]) > mem[_27115]:
                                            mem[mem[_27115] + _27115 + 196] = 0
                                        require ext_code.size(address(_27114))
                                        call address(_27114).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25441, 0, address(this.address), 128, mem[_27115], mem[_27115 + 196 len ceil32(mem[_27115])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25871 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27818 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25441
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25871)
                                        require ext_code.size(address(_27818))
                                        call address(_27818).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25441, 0, address(_25871)
                                    else:
                                        _27820 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27821 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27821 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27821 + 36] = _25441
                                        mem[_27821 + 68] = 0
                                        mem[_27821 + 100] = address(_25871)
                                        mem[_27821 + 132] = 128
                                        mem[_27821 + 164] = mem[_27821]
                                        s = 0
                                        while s < mem[_27821]:
                                            mem[s + _27821 + 196] = mem[s + _27821 + 32]
                                            _25135 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27821]) > mem[_27821]:
                                            mem[mem[_27821] + _27821 + 196] = 0
                                        require ext_code.size(address(_27820))
                                        call address(_27820).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25441, 0, address(_25871), 128, mem[_27821], mem[_27821 + 196 len ceil32(mem[_27821])]
                        else:
                            _25442 = mem[(32 * idx + 1) + _10342 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27118 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25442
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27118))
                                        call address(_27118).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25442, this.address
                                    else:
                                        _27120 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27121 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27121 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27121 + 36] = 0
                                        mem[_27121 + 68] = _25442
                                        mem[_27121 + 100] = this.address
                                        mem[_27121 + 132] = 128
                                        mem[_27121 + 164] = mem[_27121]
                                        s = 0
                                        while s < mem[_27121]:
                                            mem[s + _27121 + 196] = mem[s + _27121 + 32]
                                            _25135 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27121]) > mem[_27121]:
                                            mem[mem[_27121] + _27121 + 196] = 0
                                        require ext_code.size(address(_27120))
                                        call address(_27120).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25442, address(this.address), 128, mem[_27121], mem[_27121 + 196 len ceil32(mem[_27121])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25873 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27823 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25442
                                        mem[mem[64] + 68] = address(_25873)
                                        require ext_code.size(address(_27823))
                                        call address(_27823).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25442, address(_25873)
                                    else:
                                        _27825 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27826 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27826 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27826 + 36] = 0
                                        mem[_27826 + 68] = _25442
                                        mem[_27826 + 100] = address(_25873)
                                        mem[_27826 + 132] = 128
                                        mem[_27826 + 164] = mem[_27826]
                                        s = 0
                                        while s < mem[_27826]:
                                            mem[s + _27826 + 196] = mem[s + _27826 + 32]
                                            _25135 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27826]) > mem[_27826]:
                                            mem[mem[_27826] + _27826 + 196] = 0
                                        require ext_code.size(address(_27825))
                                        call address(_27825).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25442, address(_25873), 128, mem[_27826], mem[_27826 + 196 len ceil32(mem[_27826])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27124 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25442
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27124))
                                        call address(_27124).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25442, 0, this.address
                                    else:
                                        _27126 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27127 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27127 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27127 + 36] = _25442
                                        mem[_27127 + 68] = 0
                                        mem[_27127 + 100] = this.address
                                        mem[_27127 + 132] = 128
                                        mem[_27127 + 164] = mem[_27127]
                                        s = 0
                                        while s < mem[_27127]:
                                            mem[s + _27127 + 196] = mem[s + _27127 + 32]
                                            _25135 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27127]) > mem[_27127]:
                                            mem[mem[_27127] + _27127 + 196] = 0
                                        require ext_code.size(address(_27126))
                                        call address(_27126).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25442, 0, address(this.address), 128, mem[_27127], mem[_27127 + 196 len ceil32(mem[_27127])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25875 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27828 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25442
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25875)
                                        require ext_code.size(address(_27828))
                                        call address(_27828).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25442, 0, address(_25875)
                                    else:
                                        _27830 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27831 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27831 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27831 + 36] = _25442
                                        mem[_27831 + 68] = 0
                                        mem[_27831 + 100] = address(_25875)
                                        mem[_27831 + 132] = 128
                                        mem[_27831 + 164] = mem[_27831]
                                        s = 0
                                        while s < mem[_27831]:
                                            mem[s + _27831 + 196] = mem[s + _27831 + 32]
                                            _25135 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27831]) > mem[_27831]:
                                            mem[mem[_27831] + _27831 + 196] = 0
                                        require ext_code.size(address(_27830))
                                        call address(_27830).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25442, 0, address(_25875), 128, mem[_27831], mem[_27831 + 196 len ceil32(mem[_27831])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25135 = mem[ceil32(return_data.size) + 96]
                        idx = idx + 1
                        continue 
                    _25281 = mem[64]
                    mem[mem[64]] = 32
                    _25327 = mem[_10342]
                    mem[mem[64] + 32] = mem[_10342]
                    idx = 0
                    s = _10342 + 32
                    t = mem[64] + 64
                    while idx < _25327:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _25281 + (32 * _25327) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_20617 + 32] == bool(mem[_20617 + 32])
                if not mem[_20617 + 32]:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                _25136 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _25136 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_10342]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _25443 = mem[(32 * idx + 1) + _10342 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27131 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25443
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27131))
                                    call address(_27131).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25443, this.address
                                else:
                                    _27133 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27134 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27134 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27134 + 36] = 0
                                    mem[_27134 + 68] = _25443
                                    mem[_27134 + 100] = this.address
                                    mem[_27134 + 132] = 128
                                    mem[_27134 + 164] = mem[_27134]
                                    s = 0
                                    while s < mem[_27134]:
                                        mem[s + _27134 + 196] = mem[s + _27134 + 32]
                                        _25136 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27134]) > mem[_27134]:
                                        mem[mem[_27134] + _27134 + 196] = 0
                                    require ext_code.size(address(_27133))
                                    call address(_27133).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25443, address(this.address), 128, mem[_27134], mem[_27134 + 196 len ceil32(mem[_27134])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25877 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27833 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25443
                                    mem[mem[64] + 68] = address(_25877)
                                    require ext_code.size(address(_27833))
                                    call address(_27833).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25443, address(_25877)
                                else:
                                    _27835 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27836 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27836 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27836 + 36] = 0
                                    mem[_27836 + 68] = _25443
                                    mem[_27836 + 100] = address(_25877)
                                    mem[_27836 + 132] = 128
                                    mem[_27836 + 164] = mem[_27836]
                                    s = 0
                                    while s < mem[_27836]:
                                        mem[s + _27836 + 196] = mem[s + _27836 + 32]
                                        _25136 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27836]) > mem[_27836]:
                                        mem[mem[_27836] + _27836 + 196] = 0
                                    require ext_code.size(address(_27835))
                                    call address(_27835).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25443, address(_25877), 128, mem[_27836], mem[_27836 + 196 len ceil32(mem[_27836])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27137 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25443
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27137))
                                    call address(_27137).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25443, 0, this.address
                                else:
                                    _27139 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27140 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27140 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27140 + 36] = _25443
                                    mem[_27140 + 68] = 0
                                    mem[_27140 + 100] = this.address
                                    mem[_27140 + 132] = 128
                                    mem[_27140 + 164] = mem[_27140]
                                    s = 0
                                    while s < mem[_27140]:
                                        mem[s + _27140 + 196] = mem[s + _27140 + 32]
                                        _25136 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27140]) > mem[_27140]:
                                        mem[mem[_27140] + _27140 + 196] = 0
                                    require ext_code.size(address(_27139))
                                    call address(_27139).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25443, 0, address(this.address), 128, mem[_27140], mem[_27140 + 196 len ceil32(mem[_27140])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25879 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27838 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25443
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25879)
                                    require ext_code.size(address(_27838))
                                    call address(_27838).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25443, 0, address(_25879)
                                else:
                                    _27840 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27841 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27841 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27841 + 36] = _25443
                                    mem[_27841 + 68] = 0
                                    mem[_27841 + 100] = address(_25879)
                                    mem[_27841 + 132] = 128
                                    mem[_27841 + 164] = mem[_27841]
                                    s = 0
                                    while s < mem[_27841]:
                                        mem[s + _27841 + 196] = mem[s + _27841 + 32]
                                        _25136 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27841]) > mem[_27841]:
                                        mem[mem[_27841] + _27841 + 196] = 0
                                    require ext_code.size(address(_27840))
                                    call address(_27840).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25443, 0, address(_25879), 128, mem[_27841], mem[_27841 + 196 len ceil32(mem[_27841])]
                    else:
                        _25444 = mem[(32 * idx + 1) + _10342 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27143 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25444
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27143))
                                    call address(_27143).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25444, this.address
                                else:
                                    _27145 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27146 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27146 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + 36] = 0
                                    mem[_27146 + 68] = _25444
                                    mem[_27146 + 100] = this.address
                                    mem[_27146 + 132] = 128
                                    mem[_27146 + 164] = mem[_27146]
                                    s = 0
                                    while s < mem[_27146]:
                                        mem[s + _27146 + 196] = mem[s + _27146 + 32]
                                        _25136 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27146]) > mem[_27146]:
                                        mem[mem[_27146] + _27146 + 196] = 0
                                    require ext_code.size(address(_27145))
                                    call address(_27145).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25444, address(this.address), 128, mem[_27146], mem[_27146 + 196 len ceil32(mem[_27146])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25881 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27843 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25444
                                    mem[mem[64] + 68] = address(_25881)
                                    require ext_code.size(address(_27843))
                                    call address(_27843).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25444, address(_25881)
                                else:
                                    _27845 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27846 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27846 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27846 + 36] = 0
                                    mem[_27846 + 68] = _25444
                                    mem[_27846 + 100] = address(_25881)
                                    mem[_27846 + 132] = 128
                                    mem[_27846 + 164] = mem[_27846]
                                    s = 0
                                    while s < mem[_27846]:
                                        mem[s + _27846 + 196] = mem[s + _27846 + 32]
                                        _25136 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27846]) > mem[_27846]:
                                        mem[mem[_27846] + _27846 + 196] = 0
                                    require ext_code.size(address(_27845))
                                    call address(_27845).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25444, address(_25881), 128, mem[_27846], mem[_27846 + 196 len ceil32(mem[_27846])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27149 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25444
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27149))
                                    call address(_27149).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25444, 0, this.address
                                else:
                                    _27151 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27152 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27152 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27152 + 36] = _25444
                                    mem[_27152 + 68] = 0
                                    mem[_27152 + 100] = this.address
                                    mem[_27152 + 132] = 128
                                    mem[_27152 + 164] = mem[_27152]
                                    s = 0
                                    while s < mem[_27152]:
                                        mem[s + _27152 + 196] = mem[s + _27152 + 32]
                                        _25136 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27152]) > mem[_27152]:
                                        mem[mem[_27152] + _27152 + 196] = 0
                                    require ext_code.size(address(_27151))
                                    call address(_27151).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25444, 0, address(this.address), 128, mem[_27152], mem[_27152 + 196 len ceil32(mem[_27152])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25883 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27848 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25444
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25883)
                                    require ext_code.size(address(_27848))
                                    call address(_27848).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25444, 0, address(_25883)
                                else:
                                    _27850 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27851 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27851 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27851 + 36] = _25444
                                    mem[_27851 + 68] = 0
                                    mem[_27851 + 100] = address(_25883)
                                    mem[_27851 + 132] = 128
                                    mem[_27851 + 164] = mem[_27851]
                                    s = 0
                                    while s < mem[_27851]:
                                        mem[s + _27851 + 196] = mem[s + _27851 + 32]
                                        _25136 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27851]) > mem[_27851]:
                                        mem[mem[_27851] + _27851 + 196] = 0
                                    require ext_code.size(address(_27850))
                                    call address(_27850).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25444, 0, address(_25883), 128, mem[_27851], mem[_27851 + 196 len ceil32(mem[_27851])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25136 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                _25283 = mem[64]
                mem[mem[64]] = 32
                _25328 = mem[_10342]
                mem[mem[64] + 32] = mem[_10342]
                idx = 0
                s = _10342 + 32
                t = mem[64] + 64
                while idx < _25328:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _25283 + (32 * _25328) + -mem[64] + 64
            mem[_15611 + _15551 + 100] = 0
            call address(_15533).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _15611 + _15551 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                if not mem[96]:
                    _25137 = mem[ceil32(return_data.size) + 96]
                    idx = 0
                    while idx < _25137 - 1:
                        require idx < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[_10342]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            _25445 = mem[(32 * idx + 1) + _10342 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27156 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25445
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27156))
                                        call address(_27156).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25445, this.address
                                    else:
                                        _27158 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27159 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27159 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27159 + 36] = 0
                                        mem[_27159 + 68] = _25445
                                        mem[_27159 + 100] = this.address
                                        mem[_27159 + 132] = 128
                                        mem[_27159 + 164] = mem[_27159]
                                        s = 0
                                        while s < mem[_27159]:
                                            mem[s + _27159 + 196] = mem[s + _27159 + 32]
                                            _25137 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27159]) > mem[_27159]:
                                            mem[mem[_27159] + _27159 + 196] = 0
                                        require ext_code.size(address(_27158))
                                        call address(_27158).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25445, address(this.address), 128, mem[_27159], mem[_27159 + 196 len ceil32(mem[_27159])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25885 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27853 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25445
                                        mem[mem[64] + 68] = address(_25885)
                                        require ext_code.size(address(_27853))
                                        call address(_27853).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25445, address(_25885)
                                    else:
                                        _27855 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27856 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27856 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27856 + 36] = 0
                                        mem[_27856 + 68] = _25445
                                        mem[_27856 + 100] = address(_25885)
                                        mem[_27856 + 132] = 128
                                        mem[_27856 + 164] = mem[_27856]
                                        s = 0
                                        while s < mem[_27856]:
                                            mem[s + _27856 + 196] = mem[s + _27856 + 32]
                                            _25137 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27856]) > mem[_27856]:
                                            mem[mem[_27856] + _27856 + 196] = 0
                                        require ext_code.size(address(_27855))
                                        call address(_27855).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25445, address(_25885), 128, mem[_27856], mem[_27856 + 196 len ceil32(mem[_27856])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27162 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25445
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27162))
                                        call address(_27162).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25445, 0, this.address
                                    else:
                                        _27164 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27165 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27165 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27165 + 36] = _25445
                                        mem[_27165 + 68] = 0
                                        mem[_27165 + 100] = this.address
                                        mem[_27165 + 132] = 128
                                        mem[_27165 + 164] = mem[_27165]
                                        s = 0
                                        while s < mem[_27165]:
                                            mem[s + _27165 + 196] = mem[s + _27165 + 32]
                                            _25137 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27165]) > mem[_27165]:
                                            mem[mem[_27165] + _27165 + 196] = 0
                                        require ext_code.size(address(_27164))
                                        call address(_27164).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25445, 0, address(this.address), 128, mem[_27165], mem[_27165 + 196 len ceil32(mem[_27165])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25887 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27858 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25445
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25887)
                                        require ext_code.size(address(_27858))
                                        call address(_27858).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25445, 0, address(_25887)
                                    else:
                                        _27860 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27861 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27861 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27861 + 36] = _25445
                                        mem[_27861 + 68] = 0
                                        mem[_27861 + 100] = address(_25887)
                                        mem[_27861 + 132] = 128
                                        mem[_27861 + 164] = mem[_27861]
                                        s = 0
                                        while s < mem[_27861]:
                                            mem[s + _27861 + 196] = mem[s + _27861 + 32]
                                            _25137 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27861]) > mem[_27861]:
                                            mem[mem[_27861] + _27861 + 196] = 0
                                        require ext_code.size(address(_27860))
                                        call address(_27860).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25445, 0, address(_25887), 128, mem[_27861], mem[_27861 + 196 len ceil32(mem[_27861])]
                        else:
                            _25446 = mem[(32 * idx + 1) + _10342 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27168 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25446
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27168))
                                        call address(_27168).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25446, this.address
                                    else:
                                        _27170 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27171 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27171 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27171 + 36] = 0
                                        mem[_27171 + 68] = _25446
                                        mem[_27171 + 100] = this.address
                                        mem[_27171 + 132] = 128
                                        mem[_27171 + 164] = mem[_27171]
                                        s = 0
                                        while s < mem[_27171]:
                                            mem[s + _27171 + 196] = mem[s + _27171 + 32]
                                            _25137 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27171]) > mem[_27171]:
                                            mem[mem[_27171] + _27171 + 196] = 0
                                        require ext_code.size(address(_27170))
                                        call address(_27170).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25446, address(this.address), 128, mem[_27171], mem[_27171 + 196 len ceil32(mem[_27171])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25889 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27863 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25446
                                        mem[mem[64] + 68] = address(_25889)
                                        require ext_code.size(address(_27863))
                                        call address(_27863).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25446, address(_25889)
                                    else:
                                        _27865 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27866 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27866 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27866 + 36] = 0
                                        mem[_27866 + 68] = _25446
                                        mem[_27866 + 100] = address(_25889)
                                        mem[_27866 + 132] = 128
                                        mem[_27866 + 164] = mem[_27866]
                                        s = 0
                                        while s < mem[_27866]:
                                            mem[s + _27866 + 196] = mem[s + _27866 + 32]
                                            _25137 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27866]) > mem[_27866]:
                                            mem[mem[_27866] + _27866 + 196] = 0
                                        require ext_code.size(address(_27865))
                                        call address(_27865).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25446, address(_25889), 128, mem[_27866], mem[_27866 + 196 len ceil32(mem[_27866])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27174 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25446
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27174))
                                        call address(_27174).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25446, 0, this.address
                                    else:
                                        _27176 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27177 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27177 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27177 + 36] = _25446
                                        mem[_27177 + 68] = 0
                                        mem[_27177 + 100] = this.address
                                        mem[_27177 + 132] = 128
                                        mem[_27177 + 164] = mem[_27177]
                                        s = 0
                                        while s < mem[_27177]:
                                            mem[s + _27177 + 196] = mem[s + _27177 + 32]
                                            _25137 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27177]) > mem[_27177]:
                                            mem[mem[_27177] + _27177 + 196] = 0
                                        require ext_code.size(address(_27176))
                                        call address(_27176).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25446, 0, address(this.address), 128, mem[_27177], mem[_27177 + 196 len ceil32(mem[_27177])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25891 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27868 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25446
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25891)
                                        require ext_code.size(address(_27868))
                                        call address(_27868).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25446, 0, address(_25891)
                                    else:
                                        _27870 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27871 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27871 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27871 + 36] = _25446
                                        mem[_27871 + 68] = 0
                                        mem[_27871 + 100] = address(_25891)
                                        mem[_27871 + 132] = 128
                                        mem[_27871 + 164] = mem[_27871]
                                        s = 0
                                        while s < mem[_27871]:
                                            mem[s + _27871 + 196] = mem[s + _27871 + 32]
                                            _25137 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27871]) > mem[_27871]:
                                            mem[mem[_27871] + _27871 + 196] = 0
                                        require ext_code.size(address(_27870))
                                        call address(_27870).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25446, 0, address(_25891), 128, mem[_27871], mem[_27871 + 196 len ceil32(mem[_27871])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25137 = mem[ceil32(return_data.size) + 96]
                        idx = idx + 1
                        continue 
                    _25285 = mem[64]
                    mem[mem[64]] = 32
                    _25329 = mem[_10342]
                    mem[mem[64] + 32] = mem[_10342]
                    idx = 0
                    s = _10342 + 32
                    t = mem[64] + 64
                    while idx < _25329:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _25285 + (32 * _25329) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                _25138 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _25138 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_10342]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _25447 = mem[(32 * idx + 1) + _10342 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27181 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25447
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27181))
                                    call address(_27181).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25447, this.address
                                else:
                                    _27183 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27184 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27184 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27184 + 36] = 0
                                    mem[_27184 + 68] = _25447
                                    mem[_27184 + 100] = this.address
                                    mem[_27184 + 132] = 128
                                    mem[_27184 + 164] = mem[_27184]
                                    s = 0
                                    while s < mem[_27184]:
                                        mem[s + _27184 + 196] = mem[s + _27184 + 32]
                                        _25138 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27184]) > mem[_27184]:
                                        mem[mem[_27184] + _27184 + 196] = 0
                                    require ext_code.size(address(_27183))
                                    call address(_27183).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25447, address(this.address), 128, mem[_27184], mem[_27184 + 196 len ceil32(mem[_27184])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25893 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27873 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25447
                                    mem[mem[64] + 68] = address(_25893)
                                    require ext_code.size(address(_27873))
                                    call address(_27873).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25447, address(_25893)
                                else:
                                    _27875 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27876 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27876 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27876 + 36] = 0
                                    mem[_27876 + 68] = _25447
                                    mem[_27876 + 100] = address(_25893)
                                    mem[_27876 + 132] = 128
                                    mem[_27876 + 164] = mem[_27876]
                                    s = 0
                                    while s < mem[_27876]:
                                        mem[s + _27876 + 196] = mem[s + _27876 + 32]
                                        _25138 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27876]) > mem[_27876]:
                                        mem[mem[_27876] + _27876 + 196] = 0
                                    require ext_code.size(address(_27875))
                                    call address(_27875).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25447, address(_25893), 128, mem[_27876], mem[_27876 + 196 len ceil32(mem[_27876])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27187 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25447
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27187))
                                    call address(_27187).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25447, 0, this.address
                                else:
                                    _27189 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27190 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27190 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27190 + 36] = _25447
                                    mem[_27190 + 68] = 0
                                    mem[_27190 + 100] = this.address
                                    mem[_27190 + 132] = 128
                                    mem[_27190 + 164] = mem[_27190]
                                    s = 0
                                    while s < mem[_27190]:
                                        mem[s + _27190 + 196] = mem[s + _27190 + 32]
                                        _25138 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27190]) > mem[_27190]:
                                        mem[mem[_27190] + _27190 + 196] = 0
                                    require ext_code.size(address(_27189))
                                    call address(_27189).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25447, 0, address(this.address), 128, mem[_27190], mem[_27190 + 196 len ceil32(mem[_27190])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25895 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27878 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25447
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25895)
                                    require ext_code.size(address(_27878))
                                    call address(_27878).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25447, 0, address(_25895)
                                else:
                                    _27880 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27881 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27881 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27881 + 36] = _25447
                                    mem[_27881 + 68] = 0
                                    mem[_27881 + 100] = address(_25895)
                                    mem[_27881 + 132] = 128
                                    mem[_27881 + 164] = mem[_27881]
                                    s = 0
                                    while s < mem[_27881]:
                                        mem[s + _27881 + 196] = mem[s + _27881 + 32]
                                        _25138 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27881]) > mem[_27881]:
                                        mem[mem[_27881] + _27881 + 196] = 0
                                    require ext_code.size(address(_27880))
                                    call address(_27880).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25447, 0, address(_25895), 128, mem[_27881], mem[_27881 + 196 len ceil32(mem[_27881])]
                    else:
                        _25448 = mem[(32 * idx + 1) + _10342 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27193 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25448
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27193))
                                    call address(_27193).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25448, this.address
                                else:
                                    _27195 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27196 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27196 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27196 + 36] = 0
                                    mem[_27196 + 68] = _25448
                                    mem[_27196 + 100] = this.address
                                    mem[_27196 + 132] = 128
                                    mem[_27196 + 164] = mem[_27196]
                                    s = 0
                                    while s < mem[_27196]:
                                        mem[s + _27196 + 196] = mem[s + _27196 + 32]
                                        _25138 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27196]) > mem[_27196]:
                                        mem[mem[_27196] + _27196 + 196] = 0
                                    require ext_code.size(address(_27195))
                                    call address(_27195).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25448, address(this.address), 128, mem[_27196], mem[_27196 + 196 len ceil32(mem[_27196])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25897 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27883 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25448
                                    mem[mem[64] + 68] = address(_25897)
                                    require ext_code.size(address(_27883))
                                    call address(_27883).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25448, address(_25897)
                                else:
                                    _27885 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27886 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27886 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27886 + 36] = 0
                                    mem[_27886 + 68] = _25448
                                    mem[_27886 + 100] = address(_25897)
                                    mem[_27886 + 132] = 128
                                    mem[_27886 + 164] = mem[_27886]
                                    s = 0
                                    while s < mem[_27886]:
                                        mem[s + _27886 + 196] = mem[s + _27886 + 32]
                                        _25138 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27886]) > mem[_27886]:
                                        mem[mem[_27886] + _27886 + 196] = 0
                                    require ext_code.size(address(_27885))
                                    call address(_27885).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25448, address(_25897), 128, mem[_27886], mem[_27886 + 196 len ceil32(mem[_27886])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27199 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25448
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27199))
                                    call address(_27199).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25448, 0, this.address
                                else:
                                    _27201 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27202 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27202 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27202 + 36] = _25448
                                    mem[_27202 + 68] = 0
                                    mem[_27202 + 100] = this.address
                                    mem[_27202 + 132] = 128
                                    mem[_27202 + 164] = mem[_27202]
                                    s = 0
                                    while s < mem[_27202]:
                                        mem[s + _27202 + 196] = mem[s + _27202 + 32]
                                        _25138 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27202]) > mem[_27202]:
                                        mem[mem[_27202] + _27202 + 196] = 0
                                    require ext_code.size(address(_27201))
                                    call address(_27201).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25448, 0, address(this.address), 128, mem[_27202], mem[_27202 + 196 len ceil32(mem[_27202])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25899 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27888 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25448
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25899)
                                    require ext_code.size(address(_27888))
                                    call address(_27888).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25448, 0, address(_25899)
                                else:
                                    _27890 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27891 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27891 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27891 + 36] = _25448
                                    mem[_27891 + 68] = 0
                                    mem[_27891 + 100] = address(_25899)
                                    mem[_27891 + 132] = 128
                                    mem[_27891 + 164] = mem[_27891]
                                    s = 0
                                    while s < mem[_27891]:
                                        mem[s + _27891 + 196] = mem[s + _27891 + 32]
                                        _25138 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27891]) > mem[_27891]:
                                        mem[mem[_27891] + _27891 + 196] = 0
                                    require ext_code.size(address(_27890))
                                    call address(_27890).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25448, 0, address(_25899), 128, mem[_27891], mem[_27891 + 196 len ceil32(mem[_27891])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25138 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                _25287 = mem[64]
                mem[mem[64]] = 32
                _25330 = mem[_10342]
                mem[mem[64] + 32] = mem[_10342]
                idx = 0
                s = _10342 + 32
                t = mem[64] + 64
                while idx < _25330:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _25287 + (32 * _25330) + -mem[64] + 64
            _20618 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_20618] = return_data.size
            mem[_20618 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not return_data.size:
                _25139 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _25139 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_10342]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _25449 = mem[(32 * idx + 1) + _10342 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27206 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25449
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27206))
                                    call address(_27206).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25449, this.address
                                else:
                                    _27208 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27209 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27209 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27209 + 36] = 0
                                    mem[_27209 + 68] = _25449
                                    mem[_27209 + 100] = this.address
                                    mem[_27209 + 132] = 128
                                    mem[_27209 + 164] = mem[_27209]
                                    s = 0
                                    while s < mem[_27209]:
                                        mem[s + _27209 + 196] = mem[s + _27209 + 32]
                                        _25139 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27209]) > mem[_27209]:
                                        mem[mem[_27209] + _27209 + 196] = 0
                                    require ext_code.size(address(_27208))
                                    call address(_27208).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25449, address(this.address), 128, mem[_27209], mem[_27209 + 196 len ceil32(mem[_27209])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25901 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27893 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25449
                                    mem[mem[64] + 68] = address(_25901)
                                    require ext_code.size(address(_27893))
                                    call address(_27893).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25449, address(_25901)
                                else:
                                    _27895 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27896 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27896 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27896 + 36] = 0
                                    mem[_27896 + 68] = _25449
                                    mem[_27896 + 100] = address(_25901)
                                    mem[_27896 + 132] = 128
                                    mem[_27896 + 164] = mem[_27896]
                                    s = 0
                                    while s < mem[_27896]:
                                        mem[s + _27896 + 196] = mem[s + _27896 + 32]
                                        _25139 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27896]) > mem[_27896]:
                                        mem[mem[_27896] + _27896 + 196] = 0
                                    require ext_code.size(address(_27895))
                                    call address(_27895).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25449, address(_25901), 128, mem[_27896], mem[_27896 + 196 len ceil32(mem[_27896])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27212 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25449
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27212))
                                    call address(_27212).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25449, 0, this.address
                                else:
                                    _27214 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27215 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27215 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27215 + 36] = _25449
                                    mem[_27215 + 68] = 0
                                    mem[_27215 + 100] = this.address
                                    mem[_27215 + 132] = 128
                                    mem[_27215 + 164] = mem[_27215]
                                    s = 0
                                    while s < mem[_27215]:
                                        mem[s + _27215 + 196] = mem[s + _27215 + 32]
                                        _25139 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27215]) > mem[_27215]:
                                        mem[mem[_27215] + _27215 + 196] = 0
                                    require ext_code.size(address(_27214))
                                    call address(_27214).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25449, 0, address(this.address), 128, mem[_27215], mem[_27215 + 196 len ceil32(mem[_27215])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25903 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27898 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25449
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25903)
                                    require ext_code.size(address(_27898))
                                    call address(_27898).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25449, 0, address(_25903)
                                else:
                                    _27900 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27901 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27901 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27901 + 36] = _25449
                                    mem[_27901 + 68] = 0
                                    mem[_27901 + 100] = address(_25903)
                                    mem[_27901 + 132] = 128
                                    mem[_27901 + 164] = mem[_27901]
                                    s = 0
                                    while s < mem[_27901]:
                                        mem[s + _27901 + 196] = mem[s + _27901 + 32]
                                        _25139 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27901]) > mem[_27901]:
                                        mem[mem[_27901] + _27901 + 196] = 0
                                    require ext_code.size(address(_27900))
                                    call address(_27900).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25449, 0, address(_25903), 128, mem[_27901], mem[_27901 + 196 len ceil32(mem[_27901])]
                    else:
                        _25450 = mem[(32 * idx + 1) + _10342 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27218 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25450
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27218))
                                    call address(_27218).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25450, this.address
                                else:
                                    _27220 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27221 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27221 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27221 + 36] = 0
                                    mem[_27221 + 68] = _25450
                                    mem[_27221 + 100] = this.address
                                    mem[_27221 + 132] = 128
                                    mem[_27221 + 164] = mem[_27221]
                                    s = 0
                                    while s < mem[_27221]:
                                        mem[s + _27221 + 196] = mem[s + _27221 + 32]
                                        _25139 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27221]) > mem[_27221]:
                                        mem[mem[_27221] + _27221 + 196] = 0
                                    require ext_code.size(address(_27220))
                                    call address(_27220).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25450, address(this.address), 128, mem[_27221], mem[_27221 + 196 len ceil32(mem[_27221])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25905 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27903 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25450
                                    mem[mem[64] + 68] = address(_25905)
                                    require ext_code.size(address(_27903))
                                    call address(_27903).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25450, address(_25905)
                                else:
                                    _27905 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27906 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27906 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27906 + 36] = 0
                                    mem[_27906 + 68] = _25450
                                    mem[_27906 + 100] = address(_25905)
                                    mem[_27906 + 132] = 128
                                    mem[_27906 + 164] = mem[_27906]
                                    s = 0
                                    while s < mem[_27906]:
                                        mem[s + _27906 + 196] = mem[s + _27906 + 32]
                                        _25139 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27906]) > mem[_27906]:
                                        mem[mem[_27906] + _27906 + 196] = 0
                                    require ext_code.size(address(_27905))
                                    call address(_27905).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25450, address(_25905), 128, mem[_27906], mem[_27906 + 196 len ceil32(mem[_27906])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27224 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25450
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27224))
                                    call address(_27224).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25450, 0, this.address
                                else:
                                    _27226 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27227 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27227 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27227 + 36] = _25450
                                    mem[_27227 + 68] = 0
                                    mem[_27227 + 100] = this.address
                                    mem[_27227 + 132] = 128
                                    mem[_27227 + 164] = mem[_27227]
                                    s = 0
                                    while s < mem[_27227]:
                                        mem[s + _27227 + 196] = mem[s + _27227 + 32]
                                        _25139 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27227]) > mem[_27227]:
                                        mem[mem[_27227] + _27227 + 196] = 0
                                    require ext_code.size(address(_27226))
                                    call address(_27226).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25450, 0, address(this.address), 128, mem[_27227], mem[_27227 + 196 len ceil32(mem[_27227])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25907 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27908 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25450
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25907)
                                    require ext_code.size(address(_27908))
                                    call address(_27908).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25450, 0, address(_25907)
                                else:
                                    _27910 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27911 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27911 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27911 + 36] = _25450
                                    mem[_27911 + 68] = 0
                                    mem[_27911 + 100] = address(_25907)
                                    mem[_27911 + 132] = 128
                                    mem[_27911 + 164] = mem[_27911]
                                    s = 0
                                    while s < mem[_27911]:
                                        mem[s + _27911 + 196] = mem[s + _27911 + 32]
                                        _25139 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27911]) > mem[_27911]:
                                        mem[mem[_27911] + _27911 + 196] = 0
                                    require ext_code.size(address(_27910))
                                    call address(_27910).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25450, 0, address(_25907), 128, mem[_27911], mem[_27911 + 196 len ceil32(mem[_27911])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25139 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                _25289 = mem[64]
                mem[mem[64]] = 32
                _25331 = mem[_10342]
                mem[mem[64] + 32] = mem[_10342]
                idx = 0
                s = _10342 + 32
                t = mem[64] + 64
                while idx < _25331:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _25289 + (32 * _25331) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_20618 + 32] == bool(mem[_20618 + 32])
            if not mem[_20618 + 32]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _25140 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _25140 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_10342]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _25451 = mem[(32 * idx + 1) + _10342 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27231 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25451
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27231))
                                call address(_27231).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25451, this.address
                            else:
                                _27233 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27234 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27234 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27234 + 36] = 0
                                mem[_27234 + 68] = _25451
                                mem[_27234 + 100] = this.address
                                mem[_27234 + 132] = 128
                                mem[_27234 + 164] = mem[_27234]
                                s = 0
                                while s < mem[_27234]:
                                    mem[s + _27234 + 196] = mem[s + _27234 + 32]
                                    _25140 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27234]) > mem[_27234]:
                                    mem[mem[_27234] + _27234 + 196] = 0
                                require ext_code.size(address(_27233))
                                call address(_27233).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25451, address(this.address), 128, mem[_27234], mem[_27234 + 196 len ceil32(mem[_27234])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25909 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27913 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25451
                                mem[mem[64] + 68] = address(_25909)
                                require ext_code.size(address(_27913))
                                call address(_27913).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25451, address(_25909)
                            else:
                                _27915 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27916 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27916 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27916 + 36] = 0
                                mem[_27916 + 68] = _25451
                                mem[_27916 + 100] = address(_25909)
                                mem[_27916 + 132] = 128
                                mem[_27916 + 164] = mem[_27916]
                                s = 0
                                while s < mem[_27916]:
                                    mem[s + _27916 + 196] = mem[s + _27916 + 32]
                                    _25140 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27916]) > mem[_27916]:
                                    mem[mem[_27916] + _27916 + 196] = 0
                                require ext_code.size(address(_27915))
                                call address(_27915).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25451, address(_25909), 128, mem[_27916], mem[_27916 + 196 len ceil32(mem[_27916])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27237 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25451
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27237))
                                call address(_27237).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25451, 0, this.address
                            else:
                                _27239 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27240 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27240 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27240 + 36] = _25451
                                mem[_27240 + 68] = 0
                                mem[_27240 + 100] = this.address
                                mem[_27240 + 132] = 128
                                mem[_27240 + 164] = mem[_27240]
                                s = 0
                                while s < mem[_27240]:
                                    mem[s + _27240 + 196] = mem[s + _27240 + 32]
                                    _25140 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27240]) > mem[_27240]:
                                    mem[mem[_27240] + _27240 + 196] = 0
                                require ext_code.size(address(_27239))
                                call address(_27239).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25451, 0, address(this.address), 128, mem[_27240], mem[_27240 + 196 len ceil32(mem[_27240])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25911 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27918 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25451
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25911)
                                require ext_code.size(address(_27918))
                                call address(_27918).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25451, 0, address(_25911)
                            else:
                                _27920 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27921 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27921 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27921 + 36] = _25451
                                mem[_27921 + 68] = 0
                                mem[_27921 + 100] = address(_25911)
                                mem[_27921 + 132] = 128
                                mem[_27921 + 164] = mem[_27921]
                                s = 0
                                while s < mem[_27921]:
                                    mem[s + _27921 + 196] = mem[s + _27921 + 32]
                                    _25140 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27921]) > mem[_27921]:
                                    mem[mem[_27921] + _27921 + 196] = 0
                                require ext_code.size(address(_27920))
                                call address(_27920).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25451, 0, address(_25911), 128, mem[_27921], mem[_27921 + 196 len ceil32(mem[_27921])]
                else:
                    _25452 = mem[(32 * idx + 1) + _10342 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27243 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25452
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27243))
                                call address(_27243).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25452, this.address
                            else:
                                _27245 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27246 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27246 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27246 + 36] = 0
                                mem[_27246 + 68] = _25452
                                mem[_27246 + 100] = this.address
                                mem[_27246 + 132] = 128
                                mem[_27246 + 164] = mem[_27246]
                                s = 0
                                while s < mem[_27246]:
                                    mem[s + _27246 + 196] = mem[s + _27246 + 32]
                                    _25140 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27246]) > mem[_27246]:
                                    mem[mem[_27246] + _27246 + 196] = 0
                                require ext_code.size(address(_27245))
                                call address(_27245).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25452, address(this.address), 128, mem[_27246], mem[_27246 + 196 len ceil32(mem[_27246])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25913 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27923 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25452
                                mem[mem[64] + 68] = address(_25913)
                                require ext_code.size(address(_27923))
                                call address(_27923).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25452, address(_25913)
                            else:
                                _27925 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27926 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27926 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27926 + 36] = 0
                                mem[_27926 + 68] = _25452
                                mem[_27926 + 100] = address(_25913)
                                mem[_27926 + 132] = 128
                                mem[_27926 + 164] = mem[_27926]
                                s = 0
                                while s < mem[_27926]:
                                    mem[s + _27926 + 196] = mem[s + _27926 + 32]
                                    _25140 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27926]) > mem[_27926]:
                                    mem[mem[_27926] + _27926 + 196] = 0
                                require ext_code.size(address(_27925))
                                call address(_27925).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25452, address(_25913), 128, mem[_27926], mem[_27926 + 196 len ceil32(mem[_27926])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27249 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25452
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27249))
                                call address(_27249).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25452, 0, this.address
                            else:
                                _27251 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27252 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27252 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27252 + 36] = _25452
                                mem[_27252 + 68] = 0
                                mem[_27252 + 100] = this.address
                                mem[_27252 + 132] = 128
                                mem[_27252 + 164] = mem[_27252]
                                s = 0
                                while s < mem[_27252]:
                                    mem[s + _27252 + 196] = mem[s + _27252 + 32]
                                    _25140 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27252]) > mem[_27252]:
                                    mem[mem[_27252] + _27252 + 196] = 0
                                require ext_code.size(address(_27251))
                                call address(_27251).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25452, 0, address(this.address), 128, mem[_27252], mem[_27252 + 196 len ceil32(mem[_27252])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25915 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27928 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25452
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25915)
                                require ext_code.size(address(_27928))
                                call address(_27928).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25452, 0, address(_25915)
                            else:
                                _27930 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27931 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27931 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27931 + 36] = _25452
                                mem[_27931 + 68] = 0
                                mem[_27931 + 100] = address(_25915)
                                mem[_27931 + 132] = 128
                                mem[_27931 + 164] = mem[_27931]
                                s = 0
                                while s < mem[_27931]:
                                    mem[s + _27931 + 196] = mem[s + _27931 + 32]
                                    _25140 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27931]) > mem[_27931]:
                                    mem[mem[_27931] + _27931 + 196] = 0
                                require ext_code.size(address(_27930))
                                call address(_27930).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25452, 0, address(_25915), 128, mem[_27931], mem[_27931 + 196 len ceil32(mem[_27931])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25140 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            _25291 = mem[64]
            mem[mem[64]] = 32
            _25332 = mem[_10342]
            mem[mem[64] + 32] = mem[_10342]
            idx = 0
            s = _10342 + 32
            t = mem[64] + 64
            while idx < _25332:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _25291 + (32 * _25332) + -mem[64] + 64
        mem[_10342 + 32 len 32 * _10341] = code.data[10348 len 32 * _10341]
        require 0 < mem[_10342]
        mem[_10342 + 32] = ext_call.return_data[0]
        _15484 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _15484 - 1:
            require idx < mem[ceil32(return_data.size) + 320]
            require idx < mem[ceil32(return_data.size) + 96]
            _15515 = mem[(32 * idx) + ceil32(return_data.size) + 128]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            _15528 = mem[(32 * idx + 1) + ceil32(return_data.size) + 128]
            require ext_code.size(mem[(32 * idx) + ceil32(return_data.size) + 364 len 20])
            staticcall mem[(32 * idx) + ceil32(return_data.size) + 364 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _15579 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_15579] == mem[_15579 + 18 len 14]
                require mem[_15579 + 32] == mem[_15579 + 50 len 14]
                require mem[_15579 + 64] == mem[_15579 + 92 len 4]
                require idx < mem[_10342]
                require idx < mem[ceil32(return_data.size) + 192]
                if address(_15515) == address(_15515):
                    if not mem[(32 * idx) + _10342 + 32]:
                        require mem[_15579 + 18 len 14]
                        if 1000 * mem[_15579 + 18 len 14] / mem[_15579 + 18 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_15579 + 18 len 14] < 1000 * mem[_15579 + 18 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_15579 + 18 len 14]
                        require idx + 1 < mem[_10342]
                        mem[(32 * idx + 1) + _10342 + 32] = 0 / 1000 * mem[_15579 + 18 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) / mem[(32 * idx) + _10342 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]):
                            if not mem[_15579 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                            else:
                                if 1000 * mem[_15579 + 18 len 14] / mem[_15579 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15579 + 18 len 14]) < 1000 * mem[_15579 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15579 + 18 len 14])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15579 + 18 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15579 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15579 + 50 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) != mem[_15579 + 50 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_15579 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15579 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15579 + 50 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                            else:
                                if 1000 * mem[_15579 + 18 len 14] / mem[_15579 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15579 + 18 len 14]) < 1000 * mem[_15579 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15579 + 18 len 14])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15579 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15579 + 50 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15579 + 18 len 14])
                else:
                    if not mem[(32 * idx) + _10342 + 32]:
                        require mem[_15579 + 50 len 14]
                        if 1000 * mem[_15579 + 50 len 14] / mem[_15579 + 50 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_15579 + 50 len 14] < 1000 * mem[_15579 + 50 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_15579 + 50 len 14]
                        require idx + 1 < mem[_10342]
                        mem[(32 * idx + 1) + _10342 + 32] = 0 / 1000 * mem[_15579 + 50 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) / mem[(32 * idx) + _10342 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]):
                            if not mem[_15579 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                            else:
                                if 1000 * mem[_15579 + 50 len 14] / mem[_15579 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15579 + 50 len 14]) < 1000 * mem[_15579 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15579 + 50 len 14])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15579 + 50 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15579 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15579 + 18 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) != mem[_15579 + 18 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_15579 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15579 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15579 + 18 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                            else:
                                if 1000 * mem[_15579 + 50 len 14] / mem[_15579 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15579 + 50 len 14]) < 1000 * mem[_15579 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15579 + 50 len 14])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15579 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15579 + 18 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15579 + 50 len 14])
            else:
                _15580 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_15580] == mem[_15580 + 18 len 14]
                require mem[_15580 + 32] == mem[_15580 + 50 len 14]
                require mem[_15580 + 64] == mem[_15580 + 92 len 4]
                require idx < mem[_10342]
                require idx < mem[ceil32(return_data.size) + 192]
                if address(_15515) == address(_15528):
                    if not mem[(32 * idx) + _10342 + 32]:
                        require mem[_15580 + 18 len 14]
                        if 1000 * mem[_15580 + 18 len 14] / mem[_15580 + 18 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_15580 + 18 len 14] < 1000 * mem[_15580 + 18 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_15580 + 18 len 14]
                        require idx + 1 < mem[_10342]
                        mem[(32 * idx + 1) + _10342 + 32] = 0 / 1000 * mem[_15580 + 18 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) / mem[(32 * idx) + _10342 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]):
                            if not mem[_15580 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                            else:
                                if 1000 * mem[_15580 + 18 len 14] / mem[_15580 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15580 + 18 len 14]) < 1000 * mem[_15580 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15580 + 18 len 14])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15580 + 18 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15580 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15580 + 50 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) != mem[_15580 + 50 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_15580 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15580 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15580 + 50 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                            else:
                                if 1000 * mem[_15580 + 18 len 14] / mem[_15580 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15580 + 18 len 14]) < 1000 * mem[_15580 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15580 + 18 len 14])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15580 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15580 + 50 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15580 + 18 len 14])
                else:
                    if not mem[(32 * idx) + _10342 + 32]:
                        require mem[_15580 + 50 len 14]
                        if 1000 * mem[_15580 + 50 len 14] / mem[_15580 + 50 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_15580 + 50 len 14] < 1000 * mem[_15580 + 50 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_15580 + 50 len 14]
                        require idx + 1 < mem[_10342]
                        mem[(32 * idx + 1) + _10342 + 32] = 0 / 1000 * mem[_15580 + 50 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) / mem[(32 * idx) + _10342 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]):
                            if not mem[_15580 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                            else:
                                if 1000 * mem[_15580 + 50 len 14] / mem[_15580 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15580 + 50 len 14]) < 1000 * mem[_15580 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15580 + 50 len 14])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = 0 / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15580 + 50 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15580 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15580 + 18 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) != mem[_15580 + 18 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_15580 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15580 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15580 + 18 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32])
                            else:
                                if 1000 * mem[_15580 + 50 len 14] / mem[_15580 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15580 + 50 len 14]) < 1000 * mem[_15580 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15580 + 50 len 14])
                                require idx + 1 < mem[_10342]
                                mem[(32 * idx + 1) + _10342 + 32] = (1000 * mem[(32 * idx) + _10342 + 32] * mem[_15580 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32] * mem[_15580 + 18 len 14]) / (1000 * mem[(32 * idx) + _10342 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _10342 + 32]) + (1000 * mem[_15580 + 50 len 14])
            _15484 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        require mem[_10342] - 1 < mem[_10342]
        if mem[(32 * mem[_10342] - 1) + _10342 + 32] < arg6:
            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT'
        require 0 < mem[ceil32(return_data.size) + 96]
        _15535 = mem[ceil32(return_data.size) + 128]
        require 0 < mem[ceil32(return_data.size) + 320]
        require 0 < mem[_10342]
        _15548 = mem[_10342 + 32]
        _15552 = mem[64]
        mem[mem[64] + 36] = mem[ceil32(return_data.size) + 364 len 20]
        mem[mem[64] + 68] = _15548
        _15598 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_15598 + 32] = mem[_15598 + 36 len 28] or 0xa9059cbb00000000000000000000000000000000000000000000000000000000
        _15612 = mem[_15598]
        idx = 0
        while idx < _15612:
            mem[idx + _15552 + 100] = mem[idx + _15598 + 32]
            idx = idx + 32
            continue 
        if ceil32(_15612) <= _15612:
            call address(_15535).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _15612 + _15552 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                if not mem[96]:
                    _25141 = mem[ceil32(return_data.size) + 96]
                    idx = 0
                    while idx < _25141 - 1:
                        require idx < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[_10342]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            _25453 = mem[(32 * idx + 1) + _10342 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27256 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25453
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27256))
                                        call address(_27256).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25453, this.address
                                    else:
                                        _27258 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27259 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27259 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27259 + 36] = 0
                                        mem[_27259 + 68] = _25453
                                        mem[_27259 + 100] = this.address
                                        mem[_27259 + 132] = 128
                                        mem[_27259 + 164] = mem[_27259]
                                        s = 0
                                        while s < mem[_27259]:
                                            mem[s + _27259 + 196] = mem[s + _27259 + 32]
                                            _25141 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27259]) > mem[_27259]:
                                            mem[mem[_27259] + _27259 + 196] = 0
                                        require ext_code.size(address(_27258))
                                        call address(_27258).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25453, address(this.address), 128, mem[_27259], mem[_27259 + 196 len ceil32(mem[_27259])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25917 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27933 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25453
                                        mem[mem[64] + 68] = address(_25917)
                                        require ext_code.size(address(_27933))
                                        call address(_27933).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25453, address(_25917)
                                    else:
                                        _27935 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27936 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27936 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27936 + 36] = 0
                                        mem[_27936 + 68] = _25453
                                        mem[_27936 + 100] = address(_25917)
                                        mem[_27936 + 132] = 128
                                        mem[_27936 + 164] = mem[_27936]
                                        s = 0
                                        while s < mem[_27936]:
                                            mem[s + _27936 + 196] = mem[s + _27936 + 32]
                                            _25141 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27936]) > mem[_27936]:
                                            mem[mem[_27936] + _27936 + 196] = 0
                                        require ext_code.size(address(_27935))
                                        call address(_27935).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25453, address(_25917), 128, mem[_27936], mem[_27936 + 196 len ceil32(mem[_27936])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27262 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25453
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27262))
                                        call address(_27262).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25453, 0, this.address
                                    else:
                                        _27264 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27265 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27265 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27265 + 36] = _25453
                                        mem[_27265 + 68] = 0
                                        mem[_27265 + 100] = this.address
                                        mem[_27265 + 132] = 128
                                        mem[_27265 + 164] = mem[_27265]
                                        s = 0
                                        while s < mem[_27265]:
                                            mem[s + _27265 + 196] = mem[s + _27265 + 32]
                                            _25141 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27265]) > mem[_27265]:
                                            mem[mem[_27265] + _27265 + 196] = 0
                                        require ext_code.size(address(_27264))
                                        call address(_27264).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25453, 0, address(this.address), 128, mem[_27265], mem[_27265 + 196 len ceil32(mem[_27265])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25919 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27938 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25453
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25919)
                                        require ext_code.size(address(_27938))
                                        call address(_27938).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25453, 0, address(_25919)
                                    else:
                                        _27940 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27941 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27941 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27941 + 36] = _25453
                                        mem[_27941 + 68] = 0
                                        mem[_27941 + 100] = address(_25919)
                                        mem[_27941 + 132] = 128
                                        mem[_27941 + 164] = mem[_27941]
                                        s = 0
                                        while s < mem[_27941]:
                                            mem[s + _27941 + 196] = mem[s + _27941 + 32]
                                            _25141 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27941]) > mem[_27941]:
                                            mem[mem[_27941] + _27941 + 196] = 0
                                        require ext_code.size(address(_27940))
                                        call address(_27940).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25453, 0, address(_25919), 128, mem[_27941], mem[_27941 + 196 len ceil32(mem[_27941])]
                        else:
                            _25454 = mem[(32 * idx + 1) + _10342 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27268 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25454
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27268))
                                        call address(_27268).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25454, this.address
                                    else:
                                        _27270 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27271 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27271 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27271 + 36] = 0
                                        mem[_27271 + 68] = _25454
                                        mem[_27271 + 100] = this.address
                                        mem[_27271 + 132] = 128
                                        mem[_27271 + 164] = mem[_27271]
                                        s = 0
                                        while s < mem[_27271]:
                                            mem[s + _27271 + 196] = mem[s + _27271 + 32]
                                            _25141 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27271]) > mem[_27271]:
                                            mem[mem[_27271] + _27271 + 196] = 0
                                        require ext_code.size(address(_27270))
                                        call address(_27270).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25454, address(this.address), 128, mem[_27271], mem[_27271 + 196 len ceil32(mem[_27271])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25921 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27943 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _25454
                                        mem[mem[64] + 68] = address(_25921)
                                        require ext_code.size(address(_27943))
                                        call address(_27943).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _25454, address(_25921)
                                    else:
                                        _27945 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27946 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27946 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27946 + 36] = 0
                                        mem[_27946 + 68] = _25454
                                        mem[_27946 + 100] = address(_25921)
                                        mem[_27946 + 132] = 128
                                        mem[_27946 + 164] = mem[_27946]
                                        s = 0
                                        while s < mem[_27946]:
                                            mem[s + _27946 + 196] = mem[s + _27946 + 32]
                                            _25141 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27946]) > mem[_27946]:
                                            mem[mem[_27946] + _27946 + 196] = 0
                                        require ext_code.size(address(_27945))
                                        call address(_27945).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _25454, address(_25921), 128, mem[_27946], mem[_27946 + 196 len ceil32(mem[_27946])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27274 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25454
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_27274))
                                        call address(_27274).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25454, 0, this.address
                                    else:
                                        _27276 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27277 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27277 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27277 + 36] = _25454
                                        mem[_27277 + 68] = 0
                                        mem[_27277 + 100] = this.address
                                        mem[_27277 + 132] = 128
                                        mem[_27277 + 164] = mem[_27277]
                                        s = 0
                                        while s < mem[_27277]:
                                            mem[s + _27277 + 196] = mem[s + _27277 + 32]
                                            _25141 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27277]) > mem[_27277]:
                                            mem[mem[_27277] + _27277 + 196] = 0
                                        require ext_code.size(address(_27276))
                                        call address(_27276).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25454, 0, address(this.address), 128, mem[_27277], mem[_27277 + 196 len ceil32(mem[_27277])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _25923 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _27948 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _25454
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_25923)
                                        require ext_code.size(address(_27948))
                                        call address(_27948).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _25454, 0, address(_25923)
                                    else:
                                        _27950 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _27951 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_27951 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_27951 + 36] = _25454
                                        mem[_27951 + 68] = 0
                                        mem[_27951 + 100] = address(_25923)
                                        mem[_27951 + 132] = 128
                                        mem[_27951 + 164] = mem[_27951]
                                        s = 0
                                        while s < mem[_27951]:
                                            mem[s + _27951 + 196] = mem[s + _27951 + 32]
                                            _25141 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_27951]) > mem[_27951]:
                                            mem[mem[_27951] + _27951 + 196] = 0
                                        require ext_code.size(address(_27950))
                                        call address(_27950).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _25454, 0, address(_25923), 128, mem[_27951], mem[_27951 + 196 len ceil32(mem[_27951])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25141 = mem[ceil32(return_data.size) + 96]
                        idx = idx + 1
                        continue 
                    _25293 = mem[64]
                    mem[mem[64]] = 32
                    _25333 = mem[_10342]
                    mem[mem[64] + 32] = mem[_10342]
                    idx = 0
                    s = _10342 + 32
                    t = mem[64] + 64
                    while idx < _25333:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _25293 + (32 * _25333) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                _25142 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _25142 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_10342]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _25455 = mem[(32 * idx + 1) + _10342 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27281 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25455
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27281))
                                    call address(_27281).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25455, this.address
                                else:
                                    _27283 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27284 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27284 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27284 + 36] = 0
                                    mem[_27284 + 68] = _25455
                                    mem[_27284 + 100] = this.address
                                    mem[_27284 + 132] = 128
                                    mem[_27284 + 164] = mem[_27284]
                                    s = 0
                                    while s < mem[_27284]:
                                        mem[s + _27284 + 196] = mem[s + _27284 + 32]
                                        _25142 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27284]) > mem[_27284]:
                                        mem[mem[_27284] + _27284 + 196] = 0
                                    require ext_code.size(address(_27283))
                                    call address(_27283).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25455, address(this.address), 128, mem[_27284], mem[_27284 + 196 len ceil32(mem[_27284])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25925 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27953 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25455
                                    mem[mem[64] + 68] = address(_25925)
                                    require ext_code.size(address(_27953))
                                    call address(_27953).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25455, address(_25925)
                                else:
                                    _27955 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27956 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27956 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27956 + 36] = 0
                                    mem[_27956 + 68] = _25455
                                    mem[_27956 + 100] = address(_25925)
                                    mem[_27956 + 132] = 128
                                    mem[_27956 + 164] = mem[_27956]
                                    s = 0
                                    while s < mem[_27956]:
                                        mem[s + _27956 + 196] = mem[s + _27956 + 32]
                                        _25142 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27956]) > mem[_27956]:
                                        mem[mem[_27956] + _27956 + 196] = 0
                                    require ext_code.size(address(_27955))
                                    call address(_27955).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25455, address(_25925), 128, mem[_27956], mem[_27956 + 196 len ceil32(mem[_27956])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27287 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25455
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27287))
                                    call address(_27287).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25455, 0, this.address
                                else:
                                    _27289 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27290 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27290 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27290 + 36] = _25455
                                    mem[_27290 + 68] = 0
                                    mem[_27290 + 100] = this.address
                                    mem[_27290 + 132] = 128
                                    mem[_27290 + 164] = mem[_27290]
                                    s = 0
                                    while s < mem[_27290]:
                                        mem[s + _27290 + 196] = mem[s + _27290 + 32]
                                        _25142 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27290]) > mem[_27290]:
                                        mem[mem[_27290] + _27290 + 196] = 0
                                    require ext_code.size(address(_27289))
                                    call address(_27289).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25455, 0, address(this.address), 128, mem[_27290], mem[_27290 + 196 len ceil32(mem[_27290])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25927 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27958 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25455
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25927)
                                    require ext_code.size(address(_27958))
                                    call address(_27958).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25455, 0, address(_25927)
                                else:
                                    _27960 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27961 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27961 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27961 + 36] = _25455
                                    mem[_27961 + 68] = 0
                                    mem[_27961 + 100] = address(_25927)
                                    mem[_27961 + 132] = 128
                                    mem[_27961 + 164] = mem[_27961]
                                    s = 0
                                    while s < mem[_27961]:
                                        mem[s + _27961 + 196] = mem[s + _27961 + 32]
                                        _25142 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27961]) > mem[_27961]:
                                        mem[mem[_27961] + _27961 + 196] = 0
                                    require ext_code.size(address(_27960))
                                    call address(_27960).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25455, 0, address(_25927), 128, mem[_27961], mem[_27961 + 196 len ceil32(mem[_27961])]
                    else:
                        _25456 = mem[(32 * idx + 1) + _10342 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27293 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25456
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27293))
                                    call address(_27293).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25456, this.address
                                else:
                                    _27295 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27296 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27296 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27296 + 36] = 0
                                    mem[_27296 + 68] = _25456
                                    mem[_27296 + 100] = this.address
                                    mem[_27296 + 132] = 128
                                    mem[_27296 + 164] = mem[_27296]
                                    s = 0
                                    while s < mem[_27296]:
                                        mem[s + _27296 + 196] = mem[s + _27296 + 32]
                                        _25142 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27296]) > mem[_27296]:
                                        mem[mem[_27296] + _27296 + 196] = 0
                                    require ext_code.size(address(_27295))
                                    call address(_27295).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25456, address(this.address), 128, mem[_27296], mem[_27296 + 196 len ceil32(mem[_27296])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25929 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27963 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25456
                                    mem[mem[64] + 68] = address(_25929)
                                    require ext_code.size(address(_27963))
                                    call address(_27963).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25456, address(_25929)
                                else:
                                    _27965 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27966 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27966 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27966 + 36] = 0
                                    mem[_27966 + 68] = _25456
                                    mem[_27966 + 100] = address(_25929)
                                    mem[_27966 + 132] = 128
                                    mem[_27966 + 164] = mem[_27966]
                                    s = 0
                                    while s < mem[_27966]:
                                        mem[s + _27966 + 196] = mem[s + _27966 + 32]
                                        _25142 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27966]) > mem[_27966]:
                                        mem[mem[_27966] + _27966 + 196] = 0
                                    require ext_code.size(address(_27965))
                                    call address(_27965).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25456, address(_25929), 128, mem[_27966], mem[_27966 + 196 len ceil32(mem[_27966])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27299 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25456
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27299))
                                    call address(_27299).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25456, 0, this.address
                                else:
                                    _27301 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27302 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27302 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27302 + 36] = _25456
                                    mem[_27302 + 68] = 0
                                    mem[_27302 + 100] = this.address
                                    mem[_27302 + 132] = 128
                                    mem[_27302 + 164] = mem[_27302]
                                    s = 0
                                    while s < mem[_27302]:
                                        mem[s + _27302 + 196] = mem[s + _27302 + 32]
                                        _25142 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27302]) > mem[_27302]:
                                        mem[mem[_27302] + _27302 + 196] = 0
                                    require ext_code.size(address(_27301))
                                    call address(_27301).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25456, 0, address(this.address), 128, mem[_27302], mem[_27302 + 196 len ceil32(mem[_27302])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25931 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27968 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25456
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25931)
                                    require ext_code.size(address(_27968))
                                    call address(_27968).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25456, 0, address(_25931)
                                else:
                                    _27970 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27971 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27971 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27971 + 36] = _25456
                                    mem[_27971 + 68] = 0
                                    mem[_27971 + 100] = address(_25931)
                                    mem[_27971 + 132] = 128
                                    mem[_27971 + 164] = mem[_27971]
                                    s = 0
                                    while s < mem[_27971]:
                                        mem[s + _27971 + 196] = mem[s + _27971 + 32]
                                        _25142 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27971]) > mem[_27971]:
                                        mem[mem[_27971] + _27971 + 196] = 0
                                    require ext_code.size(address(_27970))
                                    call address(_27970).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25456, 0, address(_25931), 128, mem[_27971], mem[_27971 + 196 len ceil32(mem[_27971])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25142 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                _25295 = mem[64]
                mem[mem[64]] = 32
                _25334 = mem[_10342]
                mem[mem[64] + 32] = mem[_10342]
                idx = 0
                s = _10342 + 32
                t = mem[64] + 64
                while idx < _25334:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _25295 + (32 * _25334) + -mem[64] + 64
            _20619 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_20619] = return_data.size
            mem[_20619 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not return_data.size:
                _25143 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _25143 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_10342]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _25457 = mem[(32 * idx + 1) + _10342 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27306 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25457
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27306))
                                    call address(_27306).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25457, this.address
                                else:
                                    _27308 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27309 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27309 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27309 + 36] = 0
                                    mem[_27309 + 68] = _25457
                                    mem[_27309 + 100] = this.address
                                    mem[_27309 + 132] = 128
                                    mem[_27309 + 164] = mem[_27309]
                                    s = 0
                                    while s < mem[_27309]:
                                        mem[s + _27309 + 196] = mem[s + _27309 + 32]
                                        _25143 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27309]) > mem[_27309]:
                                        mem[mem[_27309] + _27309 + 196] = 0
                                    require ext_code.size(address(_27308))
                                    call address(_27308).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25457, address(this.address), 128, mem[_27309], mem[_27309 + 196 len ceil32(mem[_27309])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25933 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27973 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25457
                                    mem[mem[64] + 68] = address(_25933)
                                    require ext_code.size(address(_27973))
                                    call address(_27973).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25457, address(_25933)
                                else:
                                    _27975 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27976 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27976 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27976 + 36] = 0
                                    mem[_27976 + 68] = _25457
                                    mem[_27976 + 100] = address(_25933)
                                    mem[_27976 + 132] = 128
                                    mem[_27976 + 164] = mem[_27976]
                                    s = 0
                                    while s < mem[_27976]:
                                        mem[s + _27976 + 196] = mem[s + _27976 + 32]
                                        _25143 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27976]) > mem[_27976]:
                                        mem[mem[_27976] + _27976 + 196] = 0
                                    require ext_code.size(address(_27975))
                                    call address(_27975).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25457, address(_25933), 128, mem[_27976], mem[_27976 + 196 len ceil32(mem[_27976])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27312 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25457
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27312))
                                    call address(_27312).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25457, 0, this.address
                                else:
                                    _27314 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27315 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27315 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27315 + 36] = _25457
                                    mem[_27315 + 68] = 0
                                    mem[_27315 + 100] = this.address
                                    mem[_27315 + 132] = 128
                                    mem[_27315 + 164] = mem[_27315]
                                    s = 0
                                    while s < mem[_27315]:
                                        mem[s + _27315 + 196] = mem[s + _27315 + 32]
                                        _25143 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27315]) > mem[_27315]:
                                        mem[mem[_27315] + _27315 + 196] = 0
                                    require ext_code.size(address(_27314))
                                    call address(_27314).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25457, 0, address(this.address), 128, mem[_27315], mem[_27315 + 196 len ceil32(mem[_27315])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25935 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27978 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25457
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25935)
                                    require ext_code.size(address(_27978))
                                    call address(_27978).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25457, 0, address(_25935)
                                else:
                                    _27980 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27981 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27981 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27981 + 36] = _25457
                                    mem[_27981 + 68] = 0
                                    mem[_27981 + 100] = address(_25935)
                                    mem[_27981 + 132] = 128
                                    mem[_27981 + 164] = mem[_27981]
                                    s = 0
                                    while s < mem[_27981]:
                                        mem[s + _27981 + 196] = mem[s + _27981 + 32]
                                        _25143 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27981]) > mem[_27981]:
                                        mem[mem[_27981] + _27981 + 196] = 0
                                    require ext_code.size(address(_27980))
                                    call address(_27980).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25457, 0, address(_25935), 128, mem[_27981], mem[_27981 + 196 len ceil32(mem[_27981])]
                    else:
                        _25458 = mem[(32 * idx + 1) + _10342 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27318 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25458
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27318))
                                    call address(_27318).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25458, this.address
                                else:
                                    _27320 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27321 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27321 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27321 + 36] = 0
                                    mem[_27321 + 68] = _25458
                                    mem[_27321 + 100] = this.address
                                    mem[_27321 + 132] = 128
                                    mem[_27321 + 164] = mem[_27321]
                                    s = 0
                                    while s < mem[_27321]:
                                        mem[s + _27321 + 196] = mem[s + _27321 + 32]
                                        _25143 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27321]) > mem[_27321]:
                                        mem[mem[_27321] + _27321 + 196] = 0
                                    require ext_code.size(address(_27320))
                                    call address(_27320).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25458, address(this.address), 128, mem[_27321], mem[_27321 + 196 len ceil32(mem[_27321])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25937 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27983 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25458
                                    mem[mem[64] + 68] = address(_25937)
                                    require ext_code.size(address(_27983))
                                    call address(_27983).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25458, address(_25937)
                                else:
                                    _27985 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27986 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27986 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27986 + 36] = 0
                                    mem[_27986 + 68] = _25458
                                    mem[_27986 + 100] = address(_25937)
                                    mem[_27986 + 132] = 128
                                    mem[_27986 + 164] = mem[_27986]
                                    s = 0
                                    while s < mem[_27986]:
                                        mem[s + _27986 + 196] = mem[s + _27986 + 32]
                                        _25143 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27986]) > mem[_27986]:
                                        mem[mem[_27986] + _27986 + 196] = 0
                                    require ext_code.size(address(_27985))
                                    call address(_27985).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25458, address(_25937), 128, mem[_27986], mem[_27986 + 196 len ceil32(mem[_27986])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27324 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25458
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27324))
                                    call address(_27324).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25458, 0, this.address
                                else:
                                    _27326 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27327 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27327 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27327 + 36] = _25458
                                    mem[_27327 + 68] = 0
                                    mem[_27327 + 100] = this.address
                                    mem[_27327 + 132] = 128
                                    mem[_27327 + 164] = mem[_27327]
                                    s = 0
                                    while s < mem[_27327]:
                                        mem[s + _27327 + 196] = mem[s + _27327 + 32]
                                        _25143 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27327]) > mem[_27327]:
                                        mem[mem[_27327] + _27327 + 196] = 0
                                    require ext_code.size(address(_27326))
                                    call address(_27326).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25458, 0, address(this.address), 128, mem[_27327], mem[_27327 + 196 len ceil32(mem[_27327])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25939 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27988 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25458
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25939)
                                    require ext_code.size(address(_27988))
                                    call address(_27988).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25458, 0, address(_25939)
                                else:
                                    _27990 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27991 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27991 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27991 + 36] = _25458
                                    mem[_27991 + 68] = 0
                                    mem[_27991 + 100] = address(_25939)
                                    mem[_27991 + 132] = 128
                                    mem[_27991 + 164] = mem[_27991]
                                    s = 0
                                    while s < mem[_27991]:
                                        mem[s + _27991 + 196] = mem[s + _27991 + 32]
                                        _25143 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27991]) > mem[_27991]:
                                        mem[mem[_27991] + _27991 + 196] = 0
                                    require ext_code.size(address(_27990))
                                    call address(_27990).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25458, 0, address(_25939), 128, mem[_27991], mem[_27991 + 196 len ceil32(mem[_27991])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25143 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                _25297 = mem[64]
                mem[mem[64]] = 32
                _25335 = mem[_10342]
                mem[mem[64] + 32] = mem[_10342]
                idx = 0
                s = _10342 + 32
                t = mem[64] + 64
                while idx < _25335:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _25297 + (32 * _25335) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_20619 + 32] == bool(mem[_20619 + 32])
            if not mem[_20619 + 32]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _25144 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _25144 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_10342]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _25459 = mem[(32 * idx + 1) + _10342 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27331 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25459
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27331))
                                call address(_27331).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25459, this.address
                            else:
                                _27333 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27334 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27334 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27334 + 36] = 0
                                mem[_27334 + 68] = _25459
                                mem[_27334 + 100] = this.address
                                mem[_27334 + 132] = 128
                                mem[_27334 + 164] = mem[_27334]
                                s = 0
                                while s < mem[_27334]:
                                    mem[s + _27334 + 196] = mem[s + _27334 + 32]
                                    _25144 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27334]) > mem[_27334]:
                                    mem[mem[_27334] + _27334 + 196] = 0
                                require ext_code.size(address(_27333))
                                call address(_27333).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25459, address(this.address), 128, mem[_27334], mem[_27334 + 196 len ceil32(mem[_27334])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25941 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27993 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25459
                                mem[mem[64] + 68] = address(_25941)
                                require ext_code.size(address(_27993))
                                call address(_27993).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25459, address(_25941)
                            else:
                                _27995 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27996 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27996 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27996 + 36] = 0
                                mem[_27996 + 68] = _25459
                                mem[_27996 + 100] = address(_25941)
                                mem[_27996 + 132] = 128
                                mem[_27996 + 164] = mem[_27996]
                                s = 0
                                while s < mem[_27996]:
                                    mem[s + _27996 + 196] = mem[s + _27996 + 32]
                                    _25144 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27996]) > mem[_27996]:
                                    mem[mem[_27996] + _27996 + 196] = 0
                                require ext_code.size(address(_27995))
                                call address(_27995).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25459, address(_25941), 128, mem[_27996], mem[_27996 + 196 len ceil32(mem[_27996])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27337 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25459
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27337))
                                call address(_27337).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25459, 0, this.address
                            else:
                                _27339 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27340 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27340 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27340 + 36] = _25459
                                mem[_27340 + 68] = 0
                                mem[_27340 + 100] = this.address
                                mem[_27340 + 132] = 128
                                mem[_27340 + 164] = mem[_27340]
                                s = 0
                                while s < mem[_27340]:
                                    mem[s + _27340 + 196] = mem[s + _27340 + 32]
                                    _25144 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27340]) > mem[_27340]:
                                    mem[mem[_27340] + _27340 + 196] = 0
                                require ext_code.size(address(_27339))
                                call address(_27339).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25459, 0, address(this.address), 128, mem[_27340], mem[_27340 + 196 len ceil32(mem[_27340])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25943 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27998 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25459
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25943)
                                require ext_code.size(address(_27998))
                                call address(_27998).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25459, 0, address(_25943)
                            else:
                                _28000 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _28001 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_28001 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_28001 + 36] = _25459
                                mem[_28001 + 68] = 0
                                mem[_28001 + 100] = address(_25943)
                                mem[_28001 + 132] = 128
                                mem[_28001 + 164] = mem[_28001]
                                s = 0
                                while s < mem[_28001]:
                                    mem[s + _28001 + 196] = mem[s + _28001 + 32]
                                    _25144 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_28001]) > mem[_28001]:
                                    mem[mem[_28001] + _28001 + 196] = 0
                                require ext_code.size(address(_28000))
                                call address(_28000).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25459, 0, address(_25943), 128, mem[_28001], mem[_28001 + 196 len ceil32(mem[_28001])]
                else:
                    _25460 = mem[(32 * idx + 1) + _10342 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27343 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25460
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27343))
                                call address(_27343).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25460, this.address
                            else:
                                _27345 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27346 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27346 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27346 + 36] = 0
                                mem[_27346 + 68] = _25460
                                mem[_27346 + 100] = this.address
                                mem[_27346 + 132] = 128
                                mem[_27346 + 164] = mem[_27346]
                                s = 0
                                while s < mem[_27346]:
                                    mem[s + _27346 + 196] = mem[s + _27346 + 32]
                                    _25144 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27346]) > mem[_27346]:
                                    mem[mem[_27346] + _27346 + 196] = 0
                                require ext_code.size(address(_27345))
                                call address(_27345).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25460, address(this.address), 128, mem[_27346], mem[_27346 + 196 len ceil32(mem[_27346])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25945 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _28003 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25460
                                mem[mem[64] + 68] = address(_25945)
                                require ext_code.size(address(_28003))
                                call address(_28003).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25460, address(_25945)
                            else:
                                _28005 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _28006 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_28006 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_28006 + 36] = 0
                                mem[_28006 + 68] = _25460
                                mem[_28006 + 100] = address(_25945)
                                mem[_28006 + 132] = 128
                                mem[_28006 + 164] = mem[_28006]
                                s = 0
                                while s < mem[_28006]:
                                    mem[s + _28006 + 196] = mem[s + _28006 + 32]
                                    _25144 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_28006]) > mem[_28006]:
                                    mem[mem[_28006] + _28006 + 196] = 0
                                require ext_code.size(address(_28005))
                                call address(_28005).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25460, address(_25945), 128, mem[_28006], mem[_28006 + 196 len ceil32(mem[_28006])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27349 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25460
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27349))
                                call address(_27349).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25460, 0, this.address
                            else:
                                _27351 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27352 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27352 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27352 + 36] = _25460
                                mem[_27352 + 68] = 0
                                mem[_27352 + 100] = this.address
                                mem[_27352 + 132] = 128
                                mem[_27352 + 164] = mem[_27352]
                                s = 0
                                while s < mem[_27352]:
                                    mem[s + _27352 + 196] = mem[s + _27352 + 32]
                                    _25144 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27352]) > mem[_27352]:
                                    mem[mem[_27352] + _27352 + 196] = 0
                                require ext_code.size(address(_27351))
                                call address(_27351).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25460, 0, address(this.address), 128, mem[_27352], mem[_27352 + 196 len ceil32(mem[_27352])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25947 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _28008 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25460
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25947)
                                require ext_code.size(address(_28008))
                                call address(_28008).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25460, 0, address(_25947)
                            else:
                                _28010 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _28011 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_28011 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_28011 + 36] = _25460
                                mem[_28011 + 68] = 0
                                mem[_28011 + 100] = address(_25947)
                                mem[_28011 + 132] = 128
                                mem[_28011 + 164] = mem[_28011]
                                s = 0
                                while s < mem[_28011]:
                                    mem[s + _28011 + 196] = mem[s + _28011 + 32]
                                    _25144 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_28011]) > mem[_28011]:
                                    mem[mem[_28011] + _28011 + 196] = 0
                                require ext_code.size(address(_28010))
                                call address(_28010).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25460, 0, address(_25947), 128, mem[_28011], mem[_28011 + 196 len ceil32(mem[_28011])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25144 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            _25299 = mem[64]
            mem[mem[64]] = 32
            _25336 = mem[_10342]
            mem[mem[64] + 32] = mem[_10342]
            idx = 0
            s = _10342 + 32
            t = mem[64] + 64
            while idx < _25336:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _25299 + (32 * _25336) + -mem[64] + 64
        mem[_15612 + _15552 + 100] = 0
        call address(_15535).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _15612 + _15552 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not mem[96]:
                _25145 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _25145 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_10342]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _25461 = mem[(32 * idx + 1) + _10342 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27356 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25461
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27356))
                                    call address(_27356).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25461, this.address
                                else:
                                    _27358 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27359 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27359 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27359 + 36] = 0
                                    mem[_27359 + 68] = _25461
                                    mem[_27359 + 100] = this.address
                                    mem[_27359 + 132] = 128
                                    mem[_27359 + 164] = mem[_27359]
                                    s = 0
                                    while s < mem[_27359]:
                                        mem[s + _27359 + 196] = mem[s + _27359 + 32]
                                        _25145 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27359]) > mem[_27359]:
                                        mem[mem[_27359] + _27359 + 196] = 0
                                    require ext_code.size(address(_27358))
                                    call address(_27358).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25461, address(this.address), 128, mem[_27359], mem[_27359 + 196 len ceil32(mem[_27359])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25949 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _28013 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25461
                                    mem[mem[64] + 68] = address(_25949)
                                    require ext_code.size(address(_28013))
                                    call address(_28013).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25461, address(_25949)
                                else:
                                    _28015 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _28016 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_28016 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_28016 + 36] = 0
                                    mem[_28016 + 68] = _25461
                                    mem[_28016 + 100] = address(_25949)
                                    mem[_28016 + 132] = 128
                                    mem[_28016 + 164] = mem[_28016]
                                    s = 0
                                    while s < mem[_28016]:
                                        mem[s + _28016 + 196] = mem[s + _28016 + 32]
                                        _25145 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_28016]) > mem[_28016]:
                                        mem[mem[_28016] + _28016 + 196] = 0
                                    require ext_code.size(address(_28015))
                                    call address(_28015).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25461, address(_25949), 128, mem[_28016], mem[_28016 + 196 len ceil32(mem[_28016])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27362 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25461
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27362))
                                    call address(_27362).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25461, 0, this.address
                                else:
                                    _27364 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27365 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27365 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27365 + 36] = _25461
                                    mem[_27365 + 68] = 0
                                    mem[_27365 + 100] = this.address
                                    mem[_27365 + 132] = 128
                                    mem[_27365 + 164] = mem[_27365]
                                    s = 0
                                    while s < mem[_27365]:
                                        mem[s + _27365 + 196] = mem[s + _27365 + 32]
                                        _25145 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27365]) > mem[_27365]:
                                        mem[mem[_27365] + _27365 + 196] = 0
                                    require ext_code.size(address(_27364))
                                    call address(_27364).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25461, 0, address(this.address), 128, mem[_27365], mem[_27365 + 196 len ceil32(mem[_27365])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25951 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _28018 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25461
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25951)
                                    require ext_code.size(address(_28018))
                                    call address(_28018).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25461, 0, address(_25951)
                                else:
                                    _28020 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _28021 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_28021 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_28021 + 36] = _25461
                                    mem[_28021 + 68] = 0
                                    mem[_28021 + 100] = address(_25951)
                                    mem[_28021 + 132] = 128
                                    mem[_28021 + 164] = mem[_28021]
                                    s = 0
                                    while s < mem[_28021]:
                                        mem[s + _28021 + 196] = mem[s + _28021 + 32]
                                        _25145 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_28021]) > mem[_28021]:
                                        mem[mem[_28021] + _28021 + 196] = 0
                                    require ext_code.size(address(_28020))
                                    call address(_28020).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25461, 0, address(_25951), 128, mem[_28021], mem[_28021 + 196 len ceil32(mem[_28021])]
                    else:
                        _25462 = mem[(32 * idx + 1) + _10342 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27368 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25462
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27368))
                                    call address(_27368).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25462, this.address
                                else:
                                    _27370 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27371 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27371 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27371 + 36] = 0
                                    mem[_27371 + 68] = _25462
                                    mem[_27371 + 100] = this.address
                                    mem[_27371 + 132] = 128
                                    mem[_27371 + 164] = mem[_27371]
                                    s = 0
                                    while s < mem[_27371]:
                                        mem[s + _27371 + 196] = mem[s + _27371 + 32]
                                        _25145 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27371]) > mem[_27371]:
                                        mem[mem[_27371] + _27371 + 196] = 0
                                    require ext_code.size(address(_27370))
                                    call address(_27370).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25462, address(this.address), 128, mem[_27371], mem[_27371 + 196 len ceil32(mem[_27371])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25953 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _28023 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _25462
                                    mem[mem[64] + 68] = address(_25953)
                                    require ext_code.size(address(_28023))
                                    call address(_28023).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _25462, address(_25953)
                                else:
                                    _28025 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _28026 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_28026 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_28026 + 36] = 0
                                    mem[_28026 + 68] = _25462
                                    mem[_28026 + 100] = address(_25953)
                                    mem[_28026 + 132] = 128
                                    mem[_28026 + 164] = mem[_28026]
                                    s = 0
                                    while s < mem[_28026]:
                                        mem[s + _28026 + 196] = mem[s + _28026 + 32]
                                        _25145 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_28026]) > mem[_28026]:
                                        mem[mem[_28026] + _28026 + 196] = 0
                                    require ext_code.size(address(_28025))
                                    call address(_28025).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _25462, address(_25953), 128, mem[_28026], mem[_28026 + 196 len ceil32(mem[_28026])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _27374 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25462
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_27374))
                                    call address(_27374).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25462, 0, this.address
                                else:
                                    _27376 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _27377 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_27377 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_27377 + 36] = _25462
                                    mem[_27377 + 68] = 0
                                    mem[_27377 + 100] = this.address
                                    mem[_27377 + 132] = 128
                                    mem[_27377 + 164] = mem[_27377]
                                    s = 0
                                    while s < mem[_27377]:
                                        mem[s + _27377 + 196] = mem[s + _27377 + 32]
                                        _25145 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_27377]) > mem[_27377]:
                                        mem[mem[_27377] + _27377 + 196] = 0
                                    require ext_code.size(address(_27376))
                                    call address(_27376).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25462, 0, address(this.address), 128, mem[_27377], mem[_27377 + 196 len ceil32(mem[_27377])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _25955 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _28028 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _25462
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_25955)
                                    require ext_code.size(address(_28028))
                                    call address(_28028).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _25462, 0, address(_25955)
                                else:
                                    _28030 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _28031 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_28031 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_28031 + 36] = _25462
                                    mem[_28031 + 68] = 0
                                    mem[_28031 + 100] = address(_25955)
                                    mem[_28031 + 132] = 128
                                    mem[_28031 + 164] = mem[_28031]
                                    s = 0
                                    while s < mem[_28031]:
                                        mem[s + _28031 + 196] = mem[s + _28031 + 32]
                                        _25145 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_28031]) > mem[_28031]:
                                        mem[mem[_28031] + _28031 + 196] = 0
                                    require ext_code.size(address(_28030))
                                    call address(_28030).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _25462, 0, address(_25955), 128, mem[_28031], mem[_28031 + 196 len ceil32(mem[_28031])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25145 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                _25301 = mem[64]
                mem[mem[64]] = 32
                _25337 = mem[_10342]
                mem[mem[64] + 32] = mem[_10342]
                idx = 0
                s = _10342 + 32
                t = mem[64] + 64
                while idx < _25337:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _25301 + (32 * _25337) + -mem[64] + 64
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _25146 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _25146 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_10342]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _25463 = mem[(32 * idx + 1) + _10342 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27381 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25463
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27381))
                                call address(_27381).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25463, this.address
                            else:
                                _27383 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27384 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27384 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27384 + 36] = 0
                                mem[_27384 + 68] = _25463
                                mem[_27384 + 100] = this.address
                                mem[_27384 + 132] = 128
                                mem[_27384 + 164] = mem[_27384]
                                s = 0
                                while s < mem[_27384]:
                                    mem[s + _27384 + 196] = mem[s + _27384 + 32]
                                    _25146 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27384]) > mem[_27384]:
                                    mem[mem[_27384] + _27384 + 196] = 0
                                require ext_code.size(address(_27383))
                                call address(_27383).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25463, address(this.address), 128, mem[_27384], mem[_27384 + 196 len ceil32(mem[_27384])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25957 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _28033 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25463
                                mem[mem[64] + 68] = address(_25957)
                                require ext_code.size(address(_28033))
                                call address(_28033).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25463, address(_25957)
                            else:
                                _28035 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _28036 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_28036 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_28036 + 36] = 0
                                mem[_28036 + 68] = _25463
                                mem[_28036 + 100] = address(_25957)
                                mem[_28036 + 132] = 128
                                mem[_28036 + 164] = mem[_28036]
                                s = 0
                                while s < mem[_28036]:
                                    mem[s + _28036 + 196] = mem[s + _28036 + 32]
                                    _25146 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_28036]) > mem[_28036]:
                                    mem[mem[_28036] + _28036 + 196] = 0
                                require ext_code.size(address(_28035))
                                call address(_28035).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25463, address(_25957), 128, mem[_28036], mem[_28036 + 196 len ceil32(mem[_28036])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27387 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25463
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27387))
                                call address(_27387).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25463, 0, this.address
                            else:
                                _27389 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27390 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27390 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27390 + 36] = _25463
                                mem[_27390 + 68] = 0
                                mem[_27390 + 100] = this.address
                                mem[_27390 + 132] = 128
                                mem[_27390 + 164] = mem[_27390]
                                s = 0
                                while s < mem[_27390]:
                                    mem[s + _27390 + 196] = mem[s + _27390 + 32]
                                    _25146 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27390]) > mem[_27390]:
                                    mem[mem[_27390] + _27390 + 196] = 0
                                require ext_code.size(address(_27389))
                                call address(_27389).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25463, 0, address(this.address), 128, mem[_27390], mem[_27390 + 196 len ceil32(mem[_27390])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25959 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _28038 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25463
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25959)
                                require ext_code.size(address(_28038))
                                call address(_28038).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25463, 0, address(_25959)
                            else:
                                _28040 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _28041 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_28041 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_28041 + 36] = _25463
                                mem[_28041 + 68] = 0
                                mem[_28041 + 100] = address(_25959)
                                mem[_28041 + 132] = 128
                                mem[_28041 + 164] = mem[_28041]
                                s = 0
                                while s < mem[_28041]:
                                    mem[s + _28041 + 196] = mem[s + _28041 + 32]
                                    _25146 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_28041]) > mem[_28041]:
                                    mem[mem[_28041] + _28041 + 196] = 0
                                require ext_code.size(address(_28040))
                                call address(_28040).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25463, 0, address(_25959), 128, mem[_28041], mem[_28041 + 196 len ceil32(mem[_28041])]
                else:
                    _25464 = mem[(32 * idx + 1) + _10342 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27393 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25464
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27393))
                                call address(_27393).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25464, this.address
                            else:
                                _27395 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27396 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27396 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27396 + 36] = 0
                                mem[_27396 + 68] = _25464
                                mem[_27396 + 100] = this.address
                                mem[_27396 + 132] = 128
                                mem[_27396 + 164] = mem[_27396]
                                s = 0
                                while s < mem[_27396]:
                                    mem[s + _27396 + 196] = mem[s + _27396 + 32]
                                    _25146 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27396]) > mem[_27396]:
                                    mem[mem[_27396] + _27396 + 196] = 0
                                require ext_code.size(address(_27395))
                                call address(_27395).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25464, address(this.address), 128, mem[_27396], mem[_27396 + 196 len ceil32(mem[_27396])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25961 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _28043 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25464
                                mem[mem[64] + 68] = address(_25961)
                                require ext_code.size(address(_28043))
                                call address(_28043).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25464, address(_25961)
                            else:
                                _28045 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _28046 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_28046 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_28046 + 36] = 0
                                mem[_28046 + 68] = _25464
                                mem[_28046 + 100] = address(_25961)
                                mem[_28046 + 132] = 128
                                mem[_28046 + 164] = mem[_28046]
                                s = 0
                                while s < mem[_28046]:
                                    mem[s + _28046 + 196] = mem[s + _28046 + 32]
                                    _25146 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_28046]) > mem[_28046]:
                                    mem[mem[_28046] + _28046 + 196] = 0
                                require ext_code.size(address(_28045))
                                call address(_28045).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25464, address(_25961), 128, mem[_28046], mem[_28046 + 196 len ceil32(mem[_28046])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27399 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25464
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27399))
                                call address(_27399).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25464, 0, this.address
                            else:
                                _27401 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27402 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27402 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27402 + 36] = _25464
                                mem[_27402 + 68] = 0
                                mem[_27402 + 100] = this.address
                                mem[_27402 + 132] = 128
                                mem[_27402 + 164] = mem[_27402]
                                s = 0
                                while s < mem[_27402]:
                                    mem[s + _27402 + 196] = mem[s + _27402 + 32]
                                    _25146 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27402]) > mem[_27402]:
                                    mem[mem[_27402] + _27402 + 196] = 0
                                require ext_code.size(address(_27401))
                                call address(_27401).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25464, 0, address(this.address), 128, mem[_27402], mem[_27402 + 196 len ceil32(mem[_27402])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25963 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _28048 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25464
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25963)
                                require ext_code.size(address(_28048))
                                call address(_28048).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25464, 0, address(_25963)
                            else:
                                _28050 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _28051 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_28051 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_28051 + 36] = _25464
                                mem[_28051 + 68] = 0
                                mem[_28051 + 100] = address(_25963)
                                mem[_28051 + 132] = 128
                                mem[_28051 + 164] = mem[_28051]
                                s = 0
                                while s < mem[_28051]:
                                    mem[s + _28051 + 196] = mem[s + _28051 + 32]
                                    _25146 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_28051]) > mem[_28051]:
                                    mem[mem[_28051] + _28051 + 196] = 0
                                require ext_code.size(address(_28050))
                                call address(_28050).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25464, 0, address(_25963), 128, mem[_28051], mem[_28051 + 196 len ceil32(mem[_28051])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25146 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            _25303 = mem[64]
            mem[mem[64]] = 32
            _25338 = mem[_10342]
            mem[mem[64] + 32] = mem[_10342]
            idx = 0
            s = _10342 + 32
            t = mem[64] + 64
            while idx < _25338:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _25303 + (32 * _25338) + -mem[64] + 64
        _20620 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_20620] = return_data.size
        mem[_20620 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        if not return_data.size:
            _25147 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _25147 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_10342]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _25465 = mem[(32 * idx + 1) + _10342 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27406 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25465
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27406))
                                call address(_27406).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25465, this.address
                            else:
                                _27408 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27409 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27409 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27409 + 36] = 0
                                mem[_27409 + 68] = _25465
                                mem[_27409 + 100] = this.address
                                mem[_27409 + 132] = 128
                                mem[_27409 + 164] = mem[_27409]
                                s = 0
                                while s < mem[_27409]:
                                    mem[s + _27409 + 196] = mem[s + _27409 + 32]
                                    _25147 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27409]) > mem[_27409]:
                                    mem[mem[_27409] + _27409 + 196] = 0
                                require ext_code.size(address(_27408))
                                call address(_27408).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25465, address(this.address), 128, mem[_27409], mem[_27409 + 196 len ceil32(mem[_27409])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25965 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _28053 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25465
                                mem[mem[64] + 68] = address(_25965)
                                require ext_code.size(address(_28053))
                                call address(_28053).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25465, address(_25965)
                            else:
                                _28055 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _28056 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_28056 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_28056 + 36] = 0
                                mem[_28056 + 68] = _25465
                                mem[_28056 + 100] = address(_25965)
                                mem[_28056 + 132] = 128
                                mem[_28056 + 164] = mem[_28056]
                                s = 0
                                while s < mem[_28056]:
                                    mem[s + _28056 + 196] = mem[s + _28056 + 32]
                                    _25147 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_28056]) > mem[_28056]:
                                    mem[mem[_28056] + _28056 + 196] = 0
                                require ext_code.size(address(_28055))
                                call address(_28055).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25465, address(_25965), 128, mem[_28056], mem[_28056 + 196 len ceil32(mem[_28056])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27412 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25465
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27412))
                                call address(_27412).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25465, 0, this.address
                            else:
                                _27414 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27415 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27415 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27415 + 36] = _25465
                                mem[_27415 + 68] = 0
                                mem[_27415 + 100] = this.address
                                mem[_27415 + 132] = 128
                                mem[_27415 + 164] = mem[_27415]
                                s = 0
                                while s < mem[_27415]:
                                    mem[s + _27415 + 196] = mem[s + _27415 + 32]
                                    _25147 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27415]) > mem[_27415]:
                                    mem[mem[_27415] + _27415 + 196] = 0
                                require ext_code.size(address(_27414))
                                call address(_27414).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25465, 0, address(this.address), 128, mem[_27415], mem[_27415 + 196 len ceil32(mem[_27415])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25967 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _28058 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25465
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25967)
                                require ext_code.size(address(_28058))
                                call address(_28058).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25465, 0, address(_25967)
                            else:
                                _28060 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _28061 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_28061 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_28061 + 36] = _25465
                                mem[_28061 + 68] = 0
                                mem[_28061 + 100] = address(_25967)
                                mem[_28061 + 132] = 128
                                mem[_28061 + 164] = mem[_28061]
                                s = 0
                                while s < mem[_28061]:
                                    mem[s + _28061 + 196] = mem[s + _28061 + 32]
                                    _25147 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_28061]) > mem[_28061]:
                                    mem[mem[_28061] + _28061 + 196] = 0
                                require ext_code.size(address(_28060))
                                call address(_28060).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25465, 0, address(_25967), 128, mem[_28061], mem[_28061 + 196 len ceil32(mem[_28061])]
                else:
                    _25466 = mem[(32 * idx + 1) + _10342 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27418 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25466
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27418))
                                call address(_27418).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25466, this.address
                            else:
                                _27420 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27421 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27421 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27421 + 36] = 0
                                mem[_27421 + 68] = _25466
                                mem[_27421 + 100] = this.address
                                mem[_27421 + 132] = 128
                                mem[_27421 + 164] = mem[_27421]
                                s = 0
                                while s < mem[_27421]:
                                    mem[s + _27421 + 196] = mem[s + _27421 + 32]
                                    _25147 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27421]) > mem[_27421]:
                                    mem[mem[_27421] + _27421 + 196] = 0
                                require ext_code.size(address(_27420))
                                call address(_27420).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25466, address(this.address), 128, mem[_27421], mem[_27421 + 196 len ceil32(mem[_27421])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25969 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _28063 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _25466
                                mem[mem[64] + 68] = address(_25969)
                                require ext_code.size(address(_28063))
                                call address(_28063).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _25466, address(_25969)
                            else:
                                _28065 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _28066 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_28066 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_28066 + 36] = 0
                                mem[_28066 + 68] = _25466
                                mem[_28066 + 100] = address(_25969)
                                mem[_28066 + 132] = 128
                                mem[_28066 + 164] = mem[_28066]
                                s = 0
                                while s < mem[_28066]:
                                    mem[s + _28066 + 196] = mem[s + _28066 + 32]
                                    _25147 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_28066]) > mem[_28066]:
                                    mem[mem[_28066] + _28066 + 196] = 0
                                require ext_code.size(address(_28065))
                                call address(_28065).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _25466, address(_25969), 128, mem[_28066], mem[_28066 + 196 len ceil32(mem[_28066])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _27424 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25466
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_27424))
                                call address(_27424).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25466, 0, this.address
                            else:
                                _27426 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _27427 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_27427 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_27427 + 36] = _25466
                                mem[_27427 + 68] = 0
                                mem[_27427 + 100] = this.address
                                mem[_27427 + 132] = 128
                                mem[_27427 + 164] = mem[_27427]
                                s = 0
                                while s < mem[_27427]:
                                    mem[s + _27427 + 196] = mem[s + _27427 + 32]
                                    _25147 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_27427]) > mem[_27427]:
                                    mem[mem[_27427] + _27427 + 196] = 0
                                require ext_code.size(address(_27426))
                                call address(_27426).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25466, 0, address(this.address), 128, mem[_27427], mem[_27427 + 196 len ceil32(mem[_27427])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _25971 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _28068 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25466
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_25971)
                                require ext_code.size(address(_28068))
                                call address(_28068).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _25466, 0, address(_25971)
                            else:
                                _28070 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _28071 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_28071 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_28071 + 36] = _25466
                                mem[_28071 + 68] = 0
                                mem[_28071 + 100] = address(_25971)
                                mem[_28071 + 132] = 128
                                mem[_28071 + 164] = mem[_28071]
                                s = 0
                                while s < mem[_28071]:
                                    mem[s + _28071 + 196] = mem[s + _28071 + 32]
                                    _25147 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_28071]) > mem[_28071]:
                                    mem[mem[_28071] + _28071 + 196] = 0
                                require ext_code.size(address(_28070))
                                call address(_28070).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _25466, 0, address(_25971), 128, mem[_28071], mem[_28071 + 196 len ceil32(mem[_28071])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25147 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            _25305 = mem[64]
            mem[mem[64]] = 32
            _25339 = mem[_10342]
            mem[mem[64] + 32] = mem[_10342]
            idx = 0
            s = _10342 + 32
            t = mem[64] + 64
            while idx < _25339:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _25305 + (32 * _25339) + -mem[64] + 64
        require return_data.size >= 32
        require mem[_20620 + 32] == bool(mem[_20620 + 32])
        if not mem[_20620 + 32]:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        _25148 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _25148 - 1:
            require idx < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[_10342]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _25467 = mem[(32 * idx + 1) + _10342 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _27431 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _25467
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_27431))
                            call address(_27431).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _25467, this.address
                        else:
                            _27433 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _27434 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_27434 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_27434 + 36] = 0
                            mem[_27434 + 68] = _25467
                            mem[_27434 + 100] = this.address
                            mem[_27434 + 132] = 128
                            mem[_27434 + 164] = mem[_27434]
                            s = 0
                            while s < mem[_27434]:
                                mem[s + _27434 + 196] = mem[s + _27434 + 32]
                                _25148 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_27434]) > mem[_27434]:
                                mem[mem[_27434] + _27434 + 196] = 0
                            require ext_code.size(address(_27433))
                            call address(_27433).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _25467, address(this.address), 128, mem[_27434], mem[_27434 + 196 len ceil32(mem[_27434])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _25973 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _28073 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _25467
                            mem[mem[64] + 68] = address(_25973)
                            require ext_code.size(address(_28073))
                            call address(_28073).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _25467, address(_25973)
                        else:
                            _28075 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _28076 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_28076 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_28076 + 36] = 0
                            mem[_28076 + 68] = _25467
                            mem[_28076 + 100] = address(_25973)
                            mem[_28076 + 132] = 128
                            mem[_28076 + 164] = mem[_28076]
                            s = 0
                            while s < mem[_28076]:
                                mem[s + _28076 + 196] = mem[s + _28076 + 32]
                                _25148 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_28076]) > mem[_28076]:
                                mem[mem[_28076] + _28076 + 196] = 0
                            require ext_code.size(address(_28075))
                            call address(_28075).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _25467, address(_25973), 128, mem[_28076], mem[_28076 + 196 len ceil32(mem[_28076])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _27437 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25467
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_27437))
                            call address(_27437).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _25467, 0, this.address
                        else:
                            _27439 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _27440 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_27440 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_27440 + 36] = _25467
                            mem[_27440 + 68] = 0
                            mem[_27440 + 100] = this.address
                            mem[_27440 + 132] = 128
                            mem[_27440 + 164] = mem[_27440]
                            s = 0
                            while s < mem[_27440]:
                                mem[s + _27440 + 196] = mem[s + _27440 + 32]
                                _25148 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_27440]) > mem[_27440]:
                                mem[mem[_27440] + _27440 + 196] = 0
                            require ext_code.size(address(_27439))
                            call address(_27439).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _25467, 0, address(this.address), 128, mem[_27440], mem[_27440 + 196 len ceil32(mem[_27440])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _25975 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _28078 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25467
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_25975)
                            require ext_code.size(address(_28078))
                            call address(_28078).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _25467, 0, address(_25975)
                        else:
                            _28080 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _28081 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_28081 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_28081 + 36] = _25467
                            mem[_28081 + 68] = 0
                            mem[_28081 + 100] = address(_25975)
                            mem[_28081 + 132] = 128
                            mem[_28081 + 164] = mem[_28081]
                            s = 0
                            while s < mem[_28081]:
                                mem[s + _28081 + 196] = mem[s + _28081 + 32]
                                _25148 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_28081]) > mem[_28081]:
                                mem[mem[_28081] + _28081 + 196] = 0
                            require ext_code.size(address(_28080))
                            call address(_28080).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _25467, 0, address(_25975), 128, mem[_28081], mem[_28081 + 196 len ceil32(mem[_28081])]
            else:
                _25468 = mem[(32 * idx + 1) + _10342 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _27443 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _25468
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_27443))
                            call address(_27443).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _25468, this.address
                        else:
                            _27445 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _27446 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_27446 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_27446 + 36] = 0
                            mem[_27446 + 68] = _25468
                            mem[_27446 + 100] = this.address
                            mem[_27446 + 132] = 128
                            mem[_27446 + 164] = mem[_27446]
                            s = 0
                            while s < mem[_27446]:
                                mem[s + _27446 + 196] = mem[s + _27446 + 32]
                                _25148 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_27446]) > mem[_27446]:
                                mem[mem[_27446] + _27446 + 196] = 0
                            require ext_code.size(address(_27445))
                            call address(_27445).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _25468, address(this.address), 128, mem[_27446], mem[_27446 + 196 len ceil32(mem[_27446])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _25977 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _28083 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _25468
                            mem[mem[64] + 68] = address(_25977)
                            require ext_code.size(address(_28083))
                            call address(_28083).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _25468, address(_25977)
                        else:
                            _28085 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _28086 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_28086 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_28086 + 36] = 0
                            mem[_28086 + 68] = _25468
                            mem[_28086 + 100] = address(_25977)
                            mem[_28086 + 132] = 128
                            mem[_28086 + 164] = mem[_28086]
                            s = 0
                            while s < mem[_28086]:
                                mem[s + _28086 + 196] = mem[s + _28086 + 32]
                                _25148 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_28086]) > mem[_28086]:
                                mem[mem[_28086] + _28086 + 196] = 0
                            require ext_code.size(address(_28085))
                            call address(_28085).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _25468, address(_25977), 128, mem[_28086], mem[_28086 + 196 len ceil32(mem[_28086])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _27449 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25468
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_27449))
                            call address(_27449).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _25468, 0, this.address
                        else:
                            _27451 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _27452 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_27452 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_27452 + 36] = _25468
                            mem[_27452 + 68] = 0
                            mem[_27452 + 100] = this.address
                            mem[_27452 + 132] = 128
                            mem[_27452 + 164] = mem[_27452]
                            s = 0
                            while s < mem[_27452]:
                                mem[s + _27452 + 196] = mem[s + _27452 + 32]
                                _25148 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_27452]) > mem[_27452]:
                                mem[mem[_27452] + _27452 + 196] = 0
                            require ext_code.size(address(_27451))
                            call address(_27451).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _25468, 0, address(this.address), 128, mem[_27452], mem[_27452 + 196 len ceil32(mem[_27452])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _25979 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _28088 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25468
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_25979)
                            require ext_code.size(address(_28088))
                            call address(_28088).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _25468, 0, address(_25979)
                        else:
                            _28090 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _28091 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_28091 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_28091 + 36] = _25468
                            mem[_28091 + 68] = 0
                            mem[_28091 + 100] = address(_25979)
                            mem[_28091 + 132] = 128
                            mem[_28091 + 164] = mem[_28091]
                            s = 0
                            while s < mem[_28091]:
                                mem[s + _28091 + 196] = mem[s + _28091 + 32]
                                _25148 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_28091]) > mem[_28091]:
                                mem[mem[_28091] + _28091 + 196] = 0
                            require ext_code.size(address(_28090))
                            call address(_28090).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _25468, 0, address(_25979), 128, mem[_28091], mem[_28091 + 196 len ceil32(mem[_28091])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25148 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        _25307 = mem[64]
        mem[mem[64]] = 32
        _25340 = mem[_10342]
        mem[mem[64] + 32] = mem[_10342]
        idx = 0
        s = _10342 + 32
        t = mem[64] + 64
        while idx < _25340:
            mem[t] = mem[s]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _25307 + (32 * _25340) + -mem[64] + 64
    revert with 0, 'Ownable: caller is not the owner'
}

function sub_bbd83fff(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 192
    require cd[4] == cd[4]
    require cd[36] == cd[36]
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    require cd[100] <= test266151307()
    require cd[100] + 35 < calldata.size
    require ('cd', 100).length <= test266151307()
    require cd[100] + (32 * ('cd', 100).length) + 36 <= calldata.size
    require cd[132] <= test266151307()
    require cd[132] + 35 < calldata.size
    require ('cd', 132).length <= test266151307()
    require cd[132] + (32 * ('cd', 132).length) + 36 <= calldata.size
    require cd[164] <= test266151307()
    require cd[164] + 35 < calldata.size
    require ('cd', 164).length <= test266151307()
    require cd[164] + (32 * ('cd', 164).length) + 36 <= calldata.size
    idx = 0
    while idx < stor0.length:
        mem[0] = 0
        if stor0[idx] != msg.sender:
            idx = idx + 1
            continue 
        mem[96] = ('cd', 68).length
        mem[128 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
        mem[(32 * ('cd', 68).length) + 128] = ('cd', 100).length
        mem[(32 * ('cd', 68).length) + 160 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
        mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 132).length
        mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 32 * ('cd', 132).length] = call.data[cd[132] + 36 len 32 * ('cd', 132).length]
        mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = ('cd', 68).length
        mem[64] = (32 * ('cd', 132).length) + (64 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
        if not ('cd', 68).length:
            require 0 < ('cd', 68).length
            mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = cd[4]
            idx = 0
            while idx < ('cd', 68).length - 1:
                require idx < mem[(32 * ('cd', 68).length) + 128]
                require idx < mem[96]
                _5262 = mem[(32 * idx) + 128]
                require idx + 1 < mem[96]
                _5269 = mem[(32 * idx + 1) + 128]
                require ext_code.size(mem[(32 * idx) + (32 * ('cd', 68).length) + 172 len 20])
                staticcall mem[(32 * idx) + (32 * ('cd', 68).length) + 172 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    _5293 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_5293] == mem[_5293 + 18 len 14]
                    require mem[_5293 + 32] == mem[_5293 + 50 len 14]
                    require mem[_5293 + 64] == mem[_5293 + 92 len 4]
                    require idx < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require idx < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    if address(_5262) == address(_5262):
                        if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]:
                            require mem[_5293 + 18 len 14]
                            if 1000 * mem[_5293 + 18 len 14] / mem[_5293 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if 1000 * mem[_5293 + 18 len 14] < 1000 * mem[_5293 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require 1000 * mem[_5293 + 18 len 14]
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / 1000 * mem[_5293 + 18 len 14]
                        else:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] + 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]):
                                if not mem[_5293 + 18 len 14]:
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                else:
                                    if 1000 * mem[_5293 + 18 len 14] / mem[_5293 + 18 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5293 + 18 len 14]) < 1000 * mem[_5293 + 18 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5293 + 18 len 14])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5293 + 18 len 14])
                            else:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5293 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5293 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) != mem[_5293 + 50 len 14]:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if not mem[_5293 + 18 len 14]:
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5293 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5293 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                else:
                                    if 1000 * mem[_5293 + 18 len 14] / mem[_5293 + 18 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5293 + 18 len 14]) < 1000 * mem[_5293 + 18 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5293 + 18 len 14])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5293 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5293 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5293 + 18 len 14])
                    else:
                        if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]:
                            require mem[_5293 + 50 len 14]
                            if 1000 * mem[_5293 + 50 len 14] / mem[_5293 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if 1000 * mem[_5293 + 50 len 14] < 1000 * mem[_5293 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require 1000 * mem[_5293 + 50 len 14]
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / 1000 * mem[_5293 + 50 len 14]
                        else:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] + 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]):
                                if not mem[_5293 + 50 len 14]:
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                else:
                                    if 1000 * mem[_5293 + 50 len 14] / mem[_5293 + 50 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5293 + 50 len 14]) < 1000 * mem[_5293 + 50 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5293 + 50 len 14])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5293 + 50 len 14])
                            else:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5293 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5293 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) != mem[_5293 + 18 len 14]:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if not mem[_5293 + 50 len 14]:
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5293 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5293 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                else:
                                    if 1000 * mem[_5293 + 50 len 14] / mem[_5293 + 50 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5293 + 50 len 14]) < 1000 * mem[_5293 + 50 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5293 + 50 len 14])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5293 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5293 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5293 + 50 len 14])
                else:
                    _5294 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_5294] == mem[_5294 + 18 len 14]
                    require mem[_5294 + 32] == mem[_5294 + 50 len 14]
                    require mem[_5294 + 64] == mem[_5294 + 92 len 4]
                    require idx < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require idx < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    if address(_5262) == address(_5269):
                        if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]:
                            require mem[_5294 + 18 len 14]
                            if 1000 * mem[_5294 + 18 len 14] / mem[_5294 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if 1000 * mem[_5294 + 18 len 14] < 1000 * mem[_5294 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require 1000 * mem[_5294 + 18 len 14]
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / 1000 * mem[_5294 + 18 len 14]
                        else:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] + 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]):
                                if not mem[_5294 + 18 len 14]:
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                else:
                                    if 1000 * mem[_5294 + 18 len 14] / mem[_5294 + 18 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5294 + 18 len 14]) < 1000 * mem[_5294 + 18 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5294 + 18 len 14])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5294 + 18 len 14])
                            else:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5294 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5294 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) != mem[_5294 + 50 len 14]:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if not mem[_5294 + 18 len 14]:
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5294 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5294 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                else:
                                    if 1000 * mem[_5294 + 18 len 14] / mem[_5294 + 18 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5294 + 18 len 14]) < 1000 * mem[_5294 + 18 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5294 + 18 len 14])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5294 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5294 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5294 + 18 len 14])
                    else:
                        if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]:
                            require mem[_5294 + 50 len 14]
                            if 1000 * mem[_5294 + 50 len 14] / mem[_5294 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if 1000 * mem[_5294 + 50 len 14] < 1000 * mem[_5294 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require 1000 * mem[_5294 + 50 len 14]
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / 1000 * mem[_5294 + 50 len 14]
                        else:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] + 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]):
                                if not mem[_5294 + 50 len 14]:
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                else:
                                    if 1000 * mem[_5294 + 50 len 14] / mem[_5294 + 50 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5294 + 50 len 14]) < 1000 * mem[_5294 + 50 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5294 + 50 len 14])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5294 + 50 len 14])
                            else:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5294 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5294 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) != mem[_5294 + 18 len 14]:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if not mem[_5294 + 50 len 14]:
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5294 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5294 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                else:
                                    if 1000 * mem[_5294 + 50 len 14] / mem[_5294 + 50 len 14] != 1000:
                                        revert with 0, 'SafeMath#mul: OVERFLOW'
                                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5294 + 50 len 14]) < 1000 * mem[_5294 + 50 len 14]:
                                        revert with 0, 'SafeMath#add: OVERFLOW'
                                    require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5294 + 50 len 14])
                                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5294 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5294 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5294 + 50 len 14])
                idx = idx + 1
                continue 
            require mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] - 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            if mem[(32 * mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] - 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] < cd[36]:
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT'
            require 0 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            require mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] - 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            if mem[(32 * mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] - 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]:
                revert with 0, 'Sorry bruh'
            require 0 < ('cd', 68).length
            require ('cd', 68)[0] == address(('cd', 68)[0])
            require 0 < ('cd', 100).length
            require ('cd', 100)[0] == address(('cd', 100)[0])
            require 0 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            _5313 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
            _5315 = mem[64]
            mem[mem[64] + 36] = address(('cd', 100)[0])
            mem[mem[64] + 68] = _5313
            _5357 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_5357 + 32] = mem[_5357 + 36 len 28] or 0xa9059cbb00000000000000000000000000000000000000000000000000000000
            _5363 = mem[_5357]
            idx = 0
            while idx < _5363:
                mem[idx + _5315 + 100] = mem[idx + _5357 + 32]
                idx = idx + 32
                continue 
            if ceil32(_5363) <= _5363:
                call address(('cd', 68)[0]).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _5363 + _5315 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                    if not mem[96]:
                        _7897 = mem[64]
                        mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                        mem[_7897] = ('cd', 68).length
                        mem[_7897 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                        mem[_7897 + (32 * ('cd', 68).length) + 32] = 0
                        _7898 = mem[64]
                        mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
                        mem[_7898] = ('cd', 100).length
                        mem[_7898 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                        mem[_7898 + (32 * ('cd', 100).length) + 32] = 0
                        _7899 = mem[64]
                        mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                        mem[_7899] = ('cd', 164).length
                        mem[_7899 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                        mem[_7899 + (32 * ('cd', 164).length) + 32] = 0
                        idx = 0
                        while idx < ('cd', 68).length - 1:
                            require idx < mem[_7897]
                            require idx + 1 < mem[_7897]
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            if mem[(32 * idx) + _7897 + 44 len 20] < mem[(32 * idx + 1) + _7897 + 44 len 20]:
                                _10313 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                                if mem[(32 * idx) + _7897 + 44 len 20] == mem[(32 * idx) + _7897 + 44 len 20]:
                                    if idx >= mem[_7897] - 2:
                                        require idx < mem[_7899]
                                        require idx < mem[_7898]
                                        if not mem[(32 * idx) + _7899 + 32]:
                                            _10940 = mem[(32 * idx) + _7898 + 32]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 0
                                            mem[mem[64] + 36] = _10313
                                            mem[mem[64] + 68] = this.address
                                            require ext_code.size(address(_10940))
                                            call address(_10940).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args 0, _10313, this.address
                                        else:
                                            _10942 = mem[(32 * idx) + _7898 + 32]
                                            _10943 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10943 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10943 + 36] = 0
                                            mem[_10943 + 68] = _10313
                                            mem[_10943 + 100] = this.address
                                            mem[_10943 + 132] = 128
                                            mem[_10943 + 164] = mem[_10943]
                                            s = 0
                                            while s < mem[_10943]:
                                                mem[s + _10943 + 196] = mem[s + _10943 + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_10943]) > mem[_10943]:
                                                mem[mem[_10943] + _10943 + 196] = 0
                                            require ext_code.size(address(_10942))
                                            call address(_10942).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, _10313, address(this.address), 128, mem[_10943], mem[_10943 + 196 len ceil32(mem[_10943])]
                                    else:
                                        require idx + 1 < mem[_7898]
                                        _10473 = mem[(32 * idx + 1) + _7898 + 32]
                                        require idx < mem[_7899]
                                        require idx < mem[_7898]
                                        if not mem[(32 * idx) + _7899 + 32]:
                                            _11337 = mem[(32 * idx) + _7898 + 32]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 0
                                            mem[mem[64] + 36] = _10313
                                            mem[mem[64] + 68] = address(_10473)
                                            require ext_code.size(address(_11337))
                                            call address(_11337).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args 0, _10313, address(_10473)
                                        else:
                                            _11339 = mem[(32 * idx) + _7898 + 32]
                                            _11340 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_11340 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_11340 + 36] = 0
                                            mem[_11340 + 68] = _10313
                                            mem[_11340 + 100] = address(_10473)
                                            mem[_11340 + 132] = 128
                                            mem[_11340 + 164] = mem[_11340]
                                            s = 0
                                            while s < mem[_11340]:
                                                mem[s + _11340 + 196] = mem[s + _11340 + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_11340]) > mem[_11340]:
                                                mem[mem[_11340] + _11340 + 196] = 0
                                            require ext_code.size(address(_11339))
                                            call address(_11339).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, _10313, address(_10473), 128, mem[_11340], mem[_11340 + 196 len ceil32(mem[_11340])]
                                else:
                                    if idx >= mem[_7897] - 2:
                                        require idx < mem[_7899]
                                        require idx < mem[_7898]
                                        if not mem[(32 * idx) + _7899 + 32]:
                                            _10946 = mem[(32 * idx) + _7898 + 32]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _10313
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = this.address
                                            require ext_code.size(address(_10946))
                                            call address(_10946).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args _10313, 0, this.address
                                        else:
                                            _10948 = mem[(32 * idx) + _7898 + 32]
                                            _10949 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10949 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10949 + 36] = _10313
                                            mem[_10949 + 68] = 0
                                            mem[_10949 + 100] = this.address
                                            mem[_10949 + 132] = 128
                                            mem[_10949 + 164] = mem[_10949]
                                            s = 0
                                            while s < mem[_10949]:
                                                mem[s + _10949 + 196] = mem[s + _10949 + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_10949]) > mem[_10949]:
                                                mem[mem[_10949] + _10949 + 196] = 0
                                            require ext_code.size(address(_10948))
                                            call address(_10948).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args _10313, 0, address(this.address), 128, mem[_10949], mem[_10949 + 196 len ceil32(mem[_10949])]
                                    else:
                                        require idx + 1 < mem[_7898]
                                        _10475 = mem[(32 * idx + 1) + _7898 + 32]
                                        require idx < mem[_7899]
                                        require idx < mem[_7898]
                                        if not mem[(32 * idx) + _7899 + 32]:
                                            _11342 = mem[(32 * idx) + _7898 + 32]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _10313
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = address(_10475)
                                            require ext_code.size(address(_11342))
                                            call address(_11342).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args _10313, 0, address(_10475)
                                        else:
                                            _11344 = mem[(32 * idx) + _7898 + 32]
                                            _11345 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_11345 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_11345 + 36] = _10313
                                            mem[_11345 + 68] = 0
                                            mem[_11345 + 100] = address(_10475)
                                            mem[_11345 + 132] = 128
                                            mem[_11345 + 164] = mem[_11345]
                                            s = 0
                                            while s < mem[_11345]:
                                                mem[s + _11345 + 196] = mem[s + _11345 + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_11345]) > mem[_11345]:
                                                mem[mem[_11345] + _11345 + 196] = 0
                                            require ext_code.size(address(_11344))
                                            call address(_11344).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args _10313, 0, address(_10475), 128, mem[_11345], mem[_11345 + 196 len ceil32(mem[_11345])]
                            else:
                                _10314 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                                if mem[(32 * idx) + _7897 + 44 len 20] == mem[(32 * idx + 1) + _7897 + 44 len 20]:
                                    if idx >= mem[_7897] - 2:
                                        require idx < mem[_7899]
                                        require idx < mem[_7898]
                                        if not mem[(32 * idx) + _7899 + 32]:
                                            _10952 = mem[(32 * idx) + _7898 + 32]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 0
                                            mem[mem[64] + 36] = _10314
                                            mem[mem[64] + 68] = this.address
                                            require ext_code.size(address(_10952))
                                            call address(_10952).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args 0, _10314, this.address
                                        else:
                                            _10954 = mem[(32 * idx) + _7898 + 32]
                                            _10955 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10955 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10955 + 36] = 0
                                            mem[_10955 + 68] = _10314
                                            mem[_10955 + 100] = this.address
                                            mem[_10955 + 132] = 128
                                            mem[_10955 + 164] = mem[_10955]
                                            s = 0
                                            while s < mem[_10955]:
                                                mem[s + _10955 + 196] = mem[s + _10955 + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_10955]) > mem[_10955]:
                                                mem[mem[_10955] + _10955 + 196] = 0
                                            require ext_code.size(address(_10954))
                                            call address(_10954).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, _10314, address(this.address), 128, mem[_10955], mem[_10955 + 196 len ceil32(mem[_10955])]
                                    else:
                                        require idx + 1 < mem[_7898]
                                        _10477 = mem[(32 * idx + 1) + _7898 + 32]
                                        require idx < mem[_7899]
                                        require idx < mem[_7898]
                                        if not mem[(32 * idx) + _7899 + 32]:
                                            _11347 = mem[(32 * idx) + _7898 + 32]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 0
                                            mem[mem[64] + 36] = _10314
                                            mem[mem[64] + 68] = address(_10477)
                                            require ext_code.size(address(_11347))
                                            call address(_11347).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args 0, _10314, address(_10477)
                                        else:
                                            _11349 = mem[(32 * idx) + _7898 + 32]
                                            _11350 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_11350 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_11350 + 36] = 0
                                            mem[_11350 + 68] = _10314
                                            mem[_11350 + 100] = address(_10477)
                                            mem[_11350 + 132] = 128
                                            mem[_11350 + 164] = mem[_11350]
                                            s = 0
                                            while s < mem[_11350]:
                                                mem[s + _11350 + 196] = mem[s + _11350 + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_11350]) > mem[_11350]:
                                                mem[mem[_11350] + _11350 + 196] = 0
                                            require ext_code.size(address(_11349))
                                            call address(_11349).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, _10314, address(_10477), 128, mem[_11350], mem[_11350 + 196 len ceil32(mem[_11350])]
                                else:
                                    if idx >= mem[_7897] - 2:
                                        require idx < mem[_7899]
                                        require idx < mem[_7898]
                                        if not mem[(32 * idx) + _7899 + 32]:
                                            _10958 = mem[(32 * idx) + _7898 + 32]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _10314
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = this.address
                                            require ext_code.size(address(_10958))
                                            call address(_10958).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args _10314, 0, this.address
                                        else:
                                            _10960 = mem[(32 * idx) + _7898 + 32]
                                            _10961 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10961 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10961 + 36] = _10314
                                            mem[_10961 + 68] = 0
                                            mem[_10961 + 100] = this.address
                                            mem[_10961 + 132] = 128
                                            mem[_10961 + 164] = mem[_10961]
                                            s = 0
                                            while s < mem[_10961]:
                                                mem[s + _10961 + 196] = mem[s + _10961 + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_10961]) > mem[_10961]:
                                                mem[mem[_10961] + _10961 + 196] = 0
                                            require ext_code.size(address(_10960))
                                            call address(_10960).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args _10314, 0, address(this.address), 128, mem[_10961], mem[_10961 + 196 len ceil32(mem[_10961])]
                                    else:
                                        require idx + 1 < mem[_7898]
                                        _10479 = mem[(32 * idx + 1) + _7898 + 32]
                                        require idx < mem[_7899]
                                        require idx < mem[_7898]
                                        if not mem[(32 * idx) + _7899 + 32]:
                                            _11352 = mem[(32 * idx) + _7898 + 32]
                                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _10314
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = address(_10479)
                                            require ext_code.size(address(_11352))
                                            call address(_11352).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                                 gas gas_remaining wei
                                                args _10314, 0, address(_10479)
                                        else:
                                            _11354 = mem[(32 * idx) + _7898 + 32]
                                            _11355 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_11355 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_11355 + 36] = _10314
                                            mem[_11355 + 68] = 0
                                            mem[_11355 + 100] = address(_10479)
                                            mem[_11355 + 132] = 128
                                            mem[_11355 + 164] = mem[_11355]
                                            s = 0
                                            while s < mem[_11355]:
                                                mem[s + _11355 + 196] = mem[s + _11355 + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(mem[_11355]) > mem[_11355]:
                                                mem[mem[_11355] + _11355 + 196] = 0
                                            require ext_code.size(address(_11354))
                                            call address(_11354).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args _10314, 0, address(_10479), 128, mem[_11355], mem[_11355 + 196 len ceil32(mem[_11355])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            continue 
                        _10233 = mem[64]
                        mem[mem[64]] = 32
                        _10265 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        idx = 0
                        s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
                        t = mem[64] + 64
                        while idx < _10265:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _10233 + (32 * _10265) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                    _8019 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                    mem[_8019] = ('cd', 68).length
                    mem[_8019 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                    mem[_8019 + (32 * ('cd', 68).length) + 32] = 0
                    _8020 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
                    mem[_8020] = ('cd', 100).length
                    mem[_8020 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                    mem[_8020 + (32 * ('cd', 100).length) + 32] = 0
                    _8021 = mem[64]
                    mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                    mem[_8021] = ('cd', 164).length
                    mem[_8021 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                    mem[_8021 + (32 * ('cd', 164).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 68).length - 1:
                        require idx < mem[_8019]
                        require idx + 1 < mem[_8019]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        if mem[(32 * idx) + _8019 + 44 len 20] < mem[(32 * idx + 1) + _8019 + 44 len 20]:
                            _10315 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                            if mem[(32 * idx) + _8019 + 44 len 20] == mem[(32 * idx) + _8019 + 44 len 20]:
                                if idx >= mem[_8019] - 2:
                                    require idx < mem[_8021]
                                    require idx < mem[_8020]
                                    if not mem[(32 * idx) + _8021 + 32]:
                                        _10965 = mem[(32 * idx) + _8020 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10315
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_10965))
                                        call address(_10965).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10315, this.address
                                    else:
                                        _10967 = mem[(32 * idx) + _8020 + 32]
                                        _10968 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_10968 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_10968 + 36] = 0
                                        mem[_10968 + 68] = _10315
                                        mem[_10968 + 100] = this.address
                                        mem[_10968 + 132] = 128
                                        mem[_10968 + 164] = mem[_10968]
                                        s = 0
                                        while s < mem[_10968]:
                                            mem[s + _10968 + 196] = mem[s + _10968 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_10968]) > mem[_10968]:
                                            mem[mem[_10968] + _10968 + 196] = 0
                                        require ext_code.size(address(_10967))
                                        call address(_10967).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10315, address(this.address), 128, mem[_10968], mem[_10968 + 196 len ceil32(mem[_10968])]
                                else:
                                    require idx + 1 < mem[_8020]
                                    _10481 = mem[(32 * idx + 1) + _8020 + 32]
                                    require idx < mem[_8021]
                                    require idx < mem[_8020]
                                    if not mem[(32 * idx) + _8021 + 32]:
                                        _11357 = mem[(32 * idx) + _8020 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10315
                                        mem[mem[64] + 68] = address(_10481)
                                        require ext_code.size(address(_11357))
                                        call address(_11357).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10315, address(_10481)
                                    else:
                                        _11359 = mem[(32 * idx) + _8020 + 32]
                                        _11360 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11360 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11360 + 36] = 0
                                        mem[_11360 + 68] = _10315
                                        mem[_11360 + 100] = address(_10481)
                                        mem[_11360 + 132] = 128
                                        mem[_11360 + 164] = mem[_11360]
                                        s = 0
                                        while s < mem[_11360]:
                                            mem[s + _11360 + 196] = mem[s + _11360 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11360]) > mem[_11360]:
                                            mem[mem[_11360] + _11360 + 196] = 0
                                        require ext_code.size(address(_11359))
                                        call address(_11359).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10315, address(_10481), 128, mem[_11360], mem[_11360 + 196 len ceil32(mem[_11360])]
                            else:
                                if idx >= mem[_8019] - 2:
                                    require idx < mem[_8021]
                                    require idx < mem[_8020]
                                    if not mem[(32 * idx) + _8021 + 32]:
                                        _10971 = mem[(32 * idx) + _8020 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10315
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_10971))
                                        call address(_10971).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10315, 0, this.address
                                    else:
                                        _10973 = mem[(32 * idx) + _8020 + 32]
                                        _10974 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_10974 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_10974 + 36] = _10315
                                        mem[_10974 + 68] = 0
                                        mem[_10974 + 100] = this.address
                                        mem[_10974 + 132] = 128
                                        mem[_10974 + 164] = mem[_10974]
                                        s = 0
                                        while s < mem[_10974]:
                                            mem[s + _10974 + 196] = mem[s + _10974 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_10974]) > mem[_10974]:
                                            mem[mem[_10974] + _10974 + 196] = 0
                                        require ext_code.size(address(_10973))
                                        call address(_10973).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10315, 0, address(this.address), 128, mem[_10974], mem[_10974 + 196 len ceil32(mem[_10974])]
                                else:
                                    require idx + 1 < mem[_8020]
                                    _10483 = mem[(32 * idx + 1) + _8020 + 32]
                                    require idx < mem[_8021]
                                    require idx < mem[_8020]
                                    if not mem[(32 * idx) + _8021 + 32]:
                                        _11362 = mem[(32 * idx) + _8020 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10315
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_10483)
                                        require ext_code.size(address(_11362))
                                        call address(_11362).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10315, 0, address(_10483)
                                    else:
                                        _11364 = mem[(32 * idx) + _8020 + 32]
                                        _11365 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11365 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11365 + 36] = _10315
                                        mem[_11365 + 68] = 0
                                        mem[_11365 + 100] = address(_10483)
                                        mem[_11365 + 132] = 128
                                        mem[_11365 + 164] = mem[_11365]
                                        s = 0
                                        while s < mem[_11365]:
                                            mem[s + _11365 + 196] = mem[s + _11365 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11365]) > mem[_11365]:
                                            mem[mem[_11365] + _11365 + 196] = 0
                                        require ext_code.size(address(_11364))
                                        call address(_11364).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10315, 0, address(_10483), 128, mem[_11365], mem[_11365 + 196 len ceil32(mem[_11365])]
                        else:
                            _10316 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                            if mem[(32 * idx) + _8019 + 44 len 20] == mem[(32 * idx + 1) + _8019 + 44 len 20]:
                                if idx >= mem[_8019] - 2:
                                    require idx < mem[_8021]
                                    require idx < mem[_8020]
                                    if not mem[(32 * idx) + _8021 + 32]:
                                        _10977 = mem[(32 * idx) + _8020 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10316
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_10977))
                                        call address(_10977).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10316, this.address
                                    else:
                                        _10979 = mem[(32 * idx) + _8020 + 32]
                                        _10980 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_10980 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_10980 + 36] = 0
                                        mem[_10980 + 68] = _10316
                                        mem[_10980 + 100] = this.address
                                        mem[_10980 + 132] = 128
                                        mem[_10980 + 164] = mem[_10980]
                                        s = 0
                                        while s < mem[_10980]:
                                            mem[s + _10980 + 196] = mem[s + _10980 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_10980]) > mem[_10980]:
                                            mem[mem[_10980] + _10980 + 196] = 0
                                        require ext_code.size(address(_10979))
                                        call address(_10979).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10316, address(this.address), 128, mem[_10980], mem[_10980 + 196 len ceil32(mem[_10980])]
                                else:
                                    require idx + 1 < mem[_8020]
                                    _10485 = mem[(32 * idx + 1) + _8020 + 32]
                                    require idx < mem[_8021]
                                    require idx < mem[_8020]
                                    if not mem[(32 * idx) + _8021 + 32]:
                                        _11367 = mem[(32 * idx) + _8020 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10316
                                        mem[mem[64] + 68] = address(_10485)
                                        require ext_code.size(address(_11367))
                                        call address(_11367).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10316, address(_10485)
                                    else:
                                        _11369 = mem[(32 * idx) + _8020 + 32]
                                        _11370 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11370 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11370 + 36] = 0
                                        mem[_11370 + 68] = _10316
                                        mem[_11370 + 100] = address(_10485)
                                        mem[_11370 + 132] = 128
                                        mem[_11370 + 164] = mem[_11370]
                                        s = 0
                                        while s < mem[_11370]:
                                            mem[s + _11370 + 196] = mem[s + _11370 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11370]) > mem[_11370]:
                                            mem[mem[_11370] + _11370 + 196] = 0
                                        require ext_code.size(address(_11369))
                                        call address(_11369).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10316, address(_10485), 128, mem[_11370], mem[_11370 + 196 len ceil32(mem[_11370])]
                            else:
                                if idx >= mem[_8019] - 2:
                                    require idx < mem[_8021]
                                    require idx < mem[_8020]
                                    if not mem[(32 * idx) + _8021 + 32]:
                                        _10983 = mem[(32 * idx) + _8020 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10316
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_10983))
                                        call address(_10983).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10316, 0, this.address
                                    else:
                                        _10985 = mem[(32 * idx) + _8020 + 32]
                                        _10986 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_10986 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_10986 + 36] = _10316
                                        mem[_10986 + 68] = 0
                                        mem[_10986 + 100] = this.address
                                        mem[_10986 + 132] = 128
                                        mem[_10986 + 164] = mem[_10986]
                                        s = 0
                                        while s < mem[_10986]:
                                            mem[s + _10986 + 196] = mem[s + _10986 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_10986]) > mem[_10986]:
                                            mem[mem[_10986] + _10986 + 196] = 0
                                        require ext_code.size(address(_10985))
                                        call address(_10985).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10316, 0, address(this.address), 128, mem[_10986], mem[_10986 + 196 len ceil32(mem[_10986])]
                                else:
                                    require idx + 1 < mem[_8020]
                                    _10487 = mem[(32 * idx + 1) + _8020 + 32]
                                    require idx < mem[_8021]
                                    require idx < mem[_8020]
                                    if not mem[(32 * idx) + _8021 + 32]:
                                        _11372 = mem[(32 * idx) + _8020 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10316
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_10487)
                                        require ext_code.size(address(_11372))
                                        call address(_11372).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10316, 0, address(_10487)
                                    else:
                                        _11374 = mem[(32 * idx) + _8020 + 32]
                                        _11375 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11375 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11375 + 36] = _10316
                                        mem[_11375 + 68] = 0
                                        mem[_11375 + 100] = address(_10487)
                                        mem[_11375 + 132] = 128
                                        mem[_11375 + 164] = mem[_11375]
                                        s = 0
                                        while s < mem[_11375]:
                                            mem[s + _11375 + 196] = mem[s + _11375 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11375]) > mem[_11375]:
                                            mem[mem[_11375] + _11375 + 196] = 0
                                        require ext_code.size(address(_11374))
                                        call address(_11374).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10316, 0, address(_10487), 128, mem[_11375], mem[_11375 + 196 len ceil32(mem[_11375])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                    _10235 = mem[64]
                    mem[mem[64]] = 32
                    _10266 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    idx = 0
                    s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
                    t = mem[64] + 64
                    while idx < _10266:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _10235 + (32 * _10266) + -mem[64] + 64
                _7869 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_7869] = return_data.size
                mem[_7869 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                if not return_data.size:
                    _7900 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                    mem[_7900] = ('cd', 68).length
                    mem[_7900 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                    mem[_7900 + (32 * ('cd', 68).length) + 32] = 0
                    _7901 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
                    mem[_7901] = ('cd', 100).length
                    mem[_7901 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                    mem[_7901 + (32 * ('cd', 100).length) + 32] = 0
                    _7902 = mem[64]
                    mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                    mem[_7902] = ('cd', 164).length
                    mem[_7902 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                    mem[_7902 + (32 * ('cd', 164).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 68).length - 1:
                        require idx < mem[_7900]
                        require idx + 1 < mem[_7900]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        if mem[(32 * idx) + _7900 + 44 len 20] < mem[(32 * idx + 1) + _7900 + 44 len 20]:
                            _10317 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                            if mem[(32 * idx) + _7900 + 44 len 20] == mem[(32 * idx) + _7900 + 44 len 20]:
                                if idx >= mem[_7900] - 2:
                                    require idx < mem[_7902]
                                    require idx < mem[_7901]
                                    if not mem[(32 * idx) + _7902 + 32]:
                                        _10990 = mem[(32 * idx) + _7901 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10317
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_10990))
                                        call address(_10990).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10317, this.address
                                    else:
                                        _10992 = mem[(32 * idx) + _7901 + 32]
                                        _10993 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_10993 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_10993 + 36] = 0
                                        mem[_10993 + 68] = _10317
                                        mem[_10993 + 100] = this.address
                                        mem[_10993 + 132] = 128
                                        mem[_10993 + 164] = mem[_10993]
                                        s = 0
                                        while s < mem[_10993]:
                                            mem[s + _10993 + 196] = mem[s + _10993 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_10993]) > mem[_10993]:
                                            mem[mem[_10993] + _10993 + 196] = 0
                                        require ext_code.size(address(_10992))
                                        call address(_10992).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10317, address(this.address), 128, mem[_10993], mem[_10993 + 196 len ceil32(mem[_10993])]
                                else:
                                    require idx + 1 < mem[_7901]
                                    _10489 = mem[(32 * idx + 1) + _7901 + 32]
                                    require idx < mem[_7902]
                                    require idx < mem[_7901]
                                    if not mem[(32 * idx) + _7902 + 32]:
                                        _11377 = mem[(32 * idx) + _7901 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10317
                                        mem[mem[64] + 68] = address(_10489)
                                        require ext_code.size(address(_11377))
                                        call address(_11377).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10317, address(_10489)
                                    else:
                                        _11379 = mem[(32 * idx) + _7901 + 32]
                                        _11380 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11380 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11380 + 36] = 0
                                        mem[_11380 + 68] = _10317
                                        mem[_11380 + 100] = address(_10489)
                                        mem[_11380 + 132] = 128
                                        mem[_11380 + 164] = mem[_11380]
                                        s = 0
                                        while s < mem[_11380]:
                                            mem[s + _11380 + 196] = mem[s + _11380 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11380]) > mem[_11380]:
                                            mem[mem[_11380] + _11380 + 196] = 0
                                        require ext_code.size(address(_11379))
                                        call address(_11379).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10317, address(_10489), 128, mem[_11380], mem[_11380 + 196 len ceil32(mem[_11380])]
                            else:
                                if idx >= mem[_7900] - 2:
                                    require idx < mem[_7902]
                                    require idx < mem[_7901]
                                    if not mem[(32 * idx) + _7902 + 32]:
                                        _10996 = mem[(32 * idx) + _7901 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10317
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_10996))
                                        call address(_10996).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10317, 0, this.address
                                    else:
                                        _10998 = mem[(32 * idx) + _7901 + 32]
                                        _10999 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_10999 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_10999 + 36] = _10317
                                        mem[_10999 + 68] = 0
                                        mem[_10999 + 100] = this.address
                                        mem[_10999 + 132] = 128
                                        mem[_10999 + 164] = mem[_10999]
                                        s = 0
                                        while s < mem[_10999]:
                                            mem[s + _10999 + 196] = mem[s + _10999 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_10999]) > mem[_10999]:
                                            mem[mem[_10999] + _10999 + 196] = 0
                                        require ext_code.size(address(_10998))
                                        call address(_10998).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10317, 0, address(this.address), 128, mem[_10999], mem[_10999 + 196 len ceil32(mem[_10999])]
                                else:
                                    require idx + 1 < mem[_7901]
                                    _10491 = mem[(32 * idx + 1) + _7901 + 32]
                                    require idx < mem[_7902]
                                    require idx < mem[_7901]
                                    if not mem[(32 * idx) + _7902 + 32]:
                                        _11382 = mem[(32 * idx) + _7901 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10317
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_10491)
                                        require ext_code.size(address(_11382))
                                        call address(_11382).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10317, 0, address(_10491)
                                    else:
                                        _11384 = mem[(32 * idx) + _7901 + 32]
                                        _11385 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11385 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11385 + 36] = _10317
                                        mem[_11385 + 68] = 0
                                        mem[_11385 + 100] = address(_10491)
                                        mem[_11385 + 132] = 128
                                        mem[_11385 + 164] = mem[_11385]
                                        s = 0
                                        while s < mem[_11385]:
                                            mem[s + _11385 + 196] = mem[s + _11385 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11385]) > mem[_11385]:
                                            mem[mem[_11385] + _11385 + 196] = 0
                                        require ext_code.size(address(_11384))
                                        call address(_11384).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10317, 0, address(_10491), 128, mem[_11385], mem[_11385 + 196 len ceil32(mem[_11385])]
                        else:
                            _10318 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                            if mem[(32 * idx) + _7900 + 44 len 20] == mem[(32 * idx + 1) + _7900 + 44 len 20]:
                                if idx >= mem[_7900] - 2:
                                    require idx < mem[_7902]
                                    require idx < mem[_7901]
                                    if not mem[(32 * idx) + _7902 + 32]:
                                        _11002 = mem[(32 * idx) + _7901 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10318
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_11002))
                                        call address(_11002).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10318, this.address
                                    else:
                                        _11004 = mem[(32 * idx) + _7901 + 32]
                                        _11005 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11005 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11005 + 36] = 0
                                        mem[_11005 + 68] = _10318
                                        mem[_11005 + 100] = this.address
                                        mem[_11005 + 132] = 128
                                        mem[_11005 + 164] = mem[_11005]
                                        s = 0
                                        while s < mem[_11005]:
                                            mem[s + _11005 + 196] = mem[s + _11005 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11005]) > mem[_11005]:
                                            mem[mem[_11005] + _11005 + 196] = 0
                                        require ext_code.size(address(_11004))
                                        call address(_11004).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10318, address(this.address), 128, mem[_11005], mem[_11005 + 196 len ceil32(mem[_11005])]
                                else:
                                    require idx + 1 < mem[_7901]
                                    _10493 = mem[(32 * idx + 1) + _7901 + 32]
                                    require idx < mem[_7902]
                                    require idx < mem[_7901]
                                    if not mem[(32 * idx) + _7902 + 32]:
                                        _11387 = mem[(32 * idx) + _7901 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10318
                                        mem[mem[64] + 68] = address(_10493)
                                        require ext_code.size(address(_11387))
                                        call address(_11387).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10318, address(_10493)
                                    else:
                                        _11389 = mem[(32 * idx) + _7901 + 32]
                                        _11390 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11390 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11390 + 36] = 0
                                        mem[_11390 + 68] = _10318
                                        mem[_11390 + 100] = address(_10493)
                                        mem[_11390 + 132] = 128
                                        mem[_11390 + 164] = mem[_11390]
                                        s = 0
                                        while s < mem[_11390]:
                                            mem[s + _11390 + 196] = mem[s + _11390 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11390]) > mem[_11390]:
                                            mem[mem[_11390] + _11390 + 196] = 0
                                        require ext_code.size(address(_11389))
                                        call address(_11389).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10318, address(_10493), 128, mem[_11390], mem[_11390 + 196 len ceil32(mem[_11390])]
                            else:
                                if idx >= mem[_7900] - 2:
                                    require idx < mem[_7902]
                                    require idx < mem[_7901]
                                    if not mem[(32 * idx) + _7902 + 32]:
                                        _11008 = mem[(32 * idx) + _7901 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10318
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_11008))
                                        call address(_11008).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10318, 0, this.address
                                    else:
                                        _11010 = mem[(32 * idx) + _7901 + 32]
                                        _11011 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11011 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11011 + 36] = _10318
                                        mem[_11011 + 68] = 0
                                        mem[_11011 + 100] = this.address
                                        mem[_11011 + 132] = 128
                                        mem[_11011 + 164] = mem[_11011]
                                        s = 0
                                        while s < mem[_11011]:
                                            mem[s + _11011 + 196] = mem[s + _11011 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11011]) > mem[_11011]:
                                            mem[mem[_11011] + _11011 + 196] = 0
                                        require ext_code.size(address(_11010))
                                        call address(_11010).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10318, 0, address(this.address), 128, mem[_11011], mem[_11011 + 196 len ceil32(mem[_11011])]
                                else:
                                    require idx + 1 < mem[_7901]
                                    _10495 = mem[(32 * idx + 1) + _7901 + 32]
                                    require idx < mem[_7902]
                                    require idx < mem[_7901]
                                    if not mem[(32 * idx) + _7902 + 32]:
                                        _11392 = mem[(32 * idx) + _7901 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10318
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_10495)
                                        require ext_code.size(address(_11392))
                                        call address(_11392).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10318, 0, address(_10495)
                                    else:
                                        _11394 = mem[(32 * idx) + _7901 + 32]
                                        _11395 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11395 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11395 + 36] = _10318
                                        mem[_11395 + 68] = 0
                                        mem[_11395 + 100] = address(_10495)
                                        mem[_11395 + 132] = 128
                                        mem[_11395 + 164] = mem[_11395]
                                        s = 0
                                        while s < mem[_11395]:
                                            mem[s + _11395 + 196] = mem[s + _11395 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11395]) > mem[_11395]:
                                            mem[mem[_11395] + _11395 + 196] = 0
                                        require ext_code.size(address(_11394))
                                        call address(_11394).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10318, 0, address(_10495), 128, mem[_11395], mem[_11395 + 196 len ceil32(mem[_11395])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                    _10237 = mem[64]
                    mem[mem[64]] = 32
                    _10267 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    idx = 0
                    s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
                    t = mem[64] + 64
                    while idx < _10267:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _10237 + (32 * _10267) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_7869 + 32] == bool(mem[_7869 + 32])
                if not mem[_7869 + 32]:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                _8024 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                mem[_8024] = ('cd', 68).length
                mem[_8024 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                mem[_8024 + (32 * ('cd', 68).length) + 32] = 0
                _8025 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
                mem[_8025] = ('cd', 100).length
                mem[_8025 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                mem[_8025 + (32 * ('cd', 100).length) + 32] = 0
                _8026 = mem[64]
                mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                mem[_8026] = ('cd', 164).length
                mem[_8026 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                mem[_8026 + (32 * ('cd', 164).length) + 32] = 0
                idx = 0
                while idx < ('cd', 68).length - 1:
                    require idx < mem[_8024]
                    require idx + 1 < mem[_8024]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if mem[(32 * idx) + _8024 + 44 len 20] < mem[(32 * idx + 1) + _8024 + 44 len 20]:
                        _10319 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                        if mem[(32 * idx) + _8024 + 44 len 20] == mem[(32 * idx) + _8024 + 44 len 20]:
                            if idx >= mem[_8024] - 2:
                                require idx < mem[_8026]
                                require idx < mem[_8025]
                                if not mem[(32 * idx) + _8026 + 32]:
                                    _11015 = mem[(32 * idx) + _8025 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10319
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11015))
                                    call address(_11015).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10319, this.address
                                else:
                                    _11017 = mem[(32 * idx) + _8025 + 32]
                                    _11018 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11018 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11018 + 36] = 0
                                    mem[_11018 + 68] = _10319
                                    mem[_11018 + 100] = this.address
                                    mem[_11018 + 132] = 128
                                    mem[_11018 + 164] = mem[_11018]
                                    s = 0
                                    while s < mem[_11018]:
                                        mem[s + _11018 + 196] = mem[s + _11018 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11018]) > mem[_11018]:
                                        mem[mem[_11018] + _11018 + 196] = 0
                                    require ext_code.size(address(_11017))
                                    call address(_11017).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10319, address(this.address), 128, mem[_11018], mem[_11018 + 196 len ceil32(mem[_11018])]
                            else:
                                require idx + 1 < mem[_8025]
                                _10497 = mem[(32 * idx + 1) + _8025 + 32]
                                require idx < mem[_8026]
                                require idx < mem[_8025]
                                if not mem[(32 * idx) + _8026 + 32]:
                                    _11397 = mem[(32 * idx) + _8025 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10319
                                    mem[mem[64] + 68] = address(_10497)
                                    require ext_code.size(address(_11397))
                                    call address(_11397).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10319, address(_10497)
                                else:
                                    _11399 = mem[(32 * idx) + _8025 + 32]
                                    _11400 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11400 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11400 + 36] = 0
                                    mem[_11400 + 68] = _10319
                                    mem[_11400 + 100] = address(_10497)
                                    mem[_11400 + 132] = 128
                                    mem[_11400 + 164] = mem[_11400]
                                    s = 0
                                    while s < mem[_11400]:
                                        mem[s + _11400 + 196] = mem[s + _11400 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11400]) > mem[_11400]:
                                        mem[mem[_11400] + _11400 + 196] = 0
                                    require ext_code.size(address(_11399))
                                    call address(_11399).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10319, address(_10497), 128, mem[_11400], mem[_11400 + 196 len ceil32(mem[_11400])]
                        else:
                            if idx >= mem[_8024] - 2:
                                require idx < mem[_8026]
                                require idx < mem[_8025]
                                if not mem[(32 * idx) + _8026 + 32]:
                                    _11021 = mem[(32 * idx) + _8025 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10319
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11021))
                                    call address(_11021).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10319, 0, this.address
                                else:
                                    _11023 = mem[(32 * idx) + _8025 + 32]
                                    _11024 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11024 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11024 + 36] = _10319
                                    mem[_11024 + 68] = 0
                                    mem[_11024 + 100] = this.address
                                    mem[_11024 + 132] = 128
                                    mem[_11024 + 164] = mem[_11024]
                                    s = 0
                                    while s < mem[_11024]:
                                        mem[s + _11024 + 196] = mem[s + _11024 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11024]) > mem[_11024]:
                                        mem[mem[_11024] + _11024 + 196] = 0
                                    require ext_code.size(address(_11023))
                                    call address(_11023).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10319, 0, address(this.address), 128, mem[_11024], mem[_11024 + 196 len ceil32(mem[_11024])]
                            else:
                                require idx + 1 < mem[_8025]
                                _10499 = mem[(32 * idx + 1) + _8025 + 32]
                                require idx < mem[_8026]
                                require idx < mem[_8025]
                                if not mem[(32 * idx) + _8026 + 32]:
                                    _11402 = mem[(32 * idx) + _8025 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10319
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_10499)
                                    require ext_code.size(address(_11402))
                                    call address(_11402).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10319, 0, address(_10499)
                                else:
                                    _11404 = mem[(32 * idx) + _8025 + 32]
                                    _11405 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11405 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11405 + 36] = _10319
                                    mem[_11405 + 68] = 0
                                    mem[_11405 + 100] = address(_10499)
                                    mem[_11405 + 132] = 128
                                    mem[_11405 + 164] = mem[_11405]
                                    s = 0
                                    while s < mem[_11405]:
                                        mem[s + _11405 + 196] = mem[s + _11405 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11405]) > mem[_11405]:
                                        mem[mem[_11405] + _11405 + 196] = 0
                                    require ext_code.size(address(_11404))
                                    call address(_11404).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10319, 0, address(_10499), 128, mem[_11405], mem[_11405 + 196 len ceil32(mem[_11405])]
                    else:
                        _10320 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                        if mem[(32 * idx) + _8024 + 44 len 20] == mem[(32 * idx + 1) + _8024 + 44 len 20]:
                            if idx >= mem[_8024] - 2:
                                require idx < mem[_8026]
                                require idx < mem[_8025]
                                if not mem[(32 * idx) + _8026 + 32]:
                                    _11027 = mem[(32 * idx) + _8025 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10320
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11027))
                                    call address(_11027).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10320, this.address
                                else:
                                    _11029 = mem[(32 * idx) + _8025 + 32]
                                    _11030 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11030 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11030 + 36] = 0
                                    mem[_11030 + 68] = _10320
                                    mem[_11030 + 100] = this.address
                                    mem[_11030 + 132] = 128
                                    mem[_11030 + 164] = mem[_11030]
                                    s = 0
                                    while s < mem[_11030]:
                                        mem[s + _11030 + 196] = mem[s + _11030 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11030]) > mem[_11030]:
                                        mem[mem[_11030] + _11030 + 196] = 0
                                    require ext_code.size(address(_11029))
                                    call address(_11029).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10320, address(this.address), 128, mem[_11030], mem[_11030 + 196 len ceil32(mem[_11030])]
                            else:
                                require idx + 1 < mem[_8025]
                                _10501 = mem[(32 * idx + 1) + _8025 + 32]
                                require idx < mem[_8026]
                                require idx < mem[_8025]
                                if not mem[(32 * idx) + _8026 + 32]:
                                    _11407 = mem[(32 * idx) + _8025 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10320
                                    mem[mem[64] + 68] = address(_10501)
                                    require ext_code.size(address(_11407))
                                    call address(_11407).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10320, address(_10501)
                                else:
                                    _11409 = mem[(32 * idx) + _8025 + 32]
                                    _11410 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11410 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11410 + 36] = 0
                                    mem[_11410 + 68] = _10320
                                    mem[_11410 + 100] = address(_10501)
                                    mem[_11410 + 132] = 128
                                    mem[_11410 + 164] = mem[_11410]
                                    s = 0
                                    while s < mem[_11410]:
                                        mem[s + _11410 + 196] = mem[s + _11410 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11410]) > mem[_11410]:
                                        mem[mem[_11410] + _11410 + 196] = 0
                                    require ext_code.size(address(_11409))
                                    call address(_11409).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10320, address(_10501), 128, mem[_11410], mem[_11410 + 196 len ceil32(mem[_11410])]
                        else:
                            if idx >= mem[_8024] - 2:
                                require idx < mem[_8026]
                                require idx < mem[_8025]
                                if not mem[(32 * idx) + _8026 + 32]:
                                    _11033 = mem[(32 * idx) + _8025 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10320
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11033))
                                    call address(_11033).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10320, 0, this.address
                                else:
                                    _11035 = mem[(32 * idx) + _8025 + 32]
                                    _11036 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11036 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11036 + 36] = _10320
                                    mem[_11036 + 68] = 0
                                    mem[_11036 + 100] = this.address
                                    mem[_11036 + 132] = 128
                                    mem[_11036 + 164] = mem[_11036]
                                    s = 0
                                    while s < mem[_11036]:
                                        mem[s + _11036 + 196] = mem[s + _11036 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11036]) > mem[_11036]:
                                        mem[mem[_11036] + _11036 + 196] = 0
                                    require ext_code.size(address(_11035))
                                    call address(_11035).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10320, 0, address(this.address), 128, mem[_11036], mem[_11036 + 196 len ceil32(mem[_11036])]
                            else:
                                require idx + 1 < mem[_8025]
                                _10503 = mem[(32 * idx + 1) + _8025 + 32]
                                require idx < mem[_8026]
                                require idx < mem[_8025]
                                if not mem[(32 * idx) + _8026 + 32]:
                                    _11412 = mem[(32 * idx) + _8025 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10320
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_10503)
                                    require ext_code.size(address(_11412))
                                    call address(_11412).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10320, 0, address(_10503)
                                else:
                                    _11414 = mem[(32 * idx) + _8025 + 32]
                                    _11415 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11415 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11415 + 36] = _10320
                                    mem[_11415 + 68] = 0
                                    mem[_11415 + 100] = address(_10503)
                                    mem[_11415 + 132] = 128
                                    mem[_11415 + 164] = mem[_11415]
                                    s = 0
                                    while s < mem[_11415]:
                                        mem[s + _11415 + 196] = mem[s + _11415 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11415]) > mem[_11415]:
                                        mem[mem[_11415] + _11415 + 196] = 0
                                    require ext_code.size(address(_11414))
                                    call address(_11414).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10320, 0, address(_10503), 128, mem[_11415], mem[_11415 + 196 len ceil32(mem[_11415])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                _10239 = mem[64]
                mem[mem[64]] = 32
                _10268 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                idx = 0
                s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
                t = mem[64] + 64
                while idx < _10268:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _10239 + (32 * _10268) + -mem[64] + 64
            mem[_5363 + _5315 + 100] = 0
            call address(('cd', 68)[0]).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _5363 + _5315 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                if not mem[96]:
                    _7903 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                    mem[_7903] = ('cd', 68).length
                    mem[_7903 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                    mem[_7903 + (32 * ('cd', 68).length) + 32] = 0
                    _7904 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
                    mem[_7904] = ('cd', 100).length
                    mem[_7904 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                    mem[_7904 + (32 * ('cd', 100).length) + 32] = 0
                    _7905 = mem[64]
                    mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                    mem[_7905] = ('cd', 164).length
                    mem[_7905 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                    mem[_7905 + (32 * ('cd', 164).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 68).length - 1:
                        require idx < mem[_7903]
                        require idx + 1 < mem[_7903]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        if mem[(32 * idx) + _7903 + 44 len 20] < mem[(32 * idx + 1) + _7903 + 44 len 20]:
                            _10321 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                            if mem[(32 * idx) + _7903 + 44 len 20] == mem[(32 * idx) + _7903 + 44 len 20]:
                                if idx >= mem[_7903] - 2:
                                    require idx < mem[_7905]
                                    require idx < mem[_7904]
                                    if not mem[(32 * idx) + _7905 + 32]:
                                        _11040 = mem[(32 * idx) + _7904 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10321
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_11040))
                                        call address(_11040).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10321, this.address
                                    else:
                                        _11042 = mem[(32 * idx) + _7904 + 32]
                                        _11043 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11043 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11043 + 36] = 0
                                        mem[_11043 + 68] = _10321
                                        mem[_11043 + 100] = this.address
                                        mem[_11043 + 132] = 128
                                        mem[_11043 + 164] = mem[_11043]
                                        s = 0
                                        while s < mem[_11043]:
                                            mem[s + _11043 + 196] = mem[s + _11043 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11043]) > mem[_11043]:
                                            mem[mem[_11043] + _11043 + 196] = 0
                                        require ext_code.size(address(_11042))
                                        call address(_11042).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10321, address(this.address), 128, mem[_11043], mem[_11043 + 196 len ceil32(mem[_11043])]
                                else:
                                    require idx + 1 < mem[_7904]
                                    _10505 = mem[(32 * idx + 1) + _7904 + 32]
                                    require idx < mem[_7905]
                                    require idx < mem[_7904]
                                    if not mem[(32 * idx) + _7905 + 32]:
                                        _11417 = mem[(32 * idx) + _7904 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10321
                                        mem[mem[64] + 68] = address(_10505)
                                        require ext_code.size(address(_11417))
                                        call address(_11417).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10321, address(_10505)
                                    else:
                                        _11419 = mem[(32 * idx) + _7904 + 32]
                                        _11420 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11420 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11420 + 36] = 0
                                        mem[_11420 + 68] = _10321
                                        mem[_11420 + 100] = address(_10505)
                                        mem[_11420 + 132] = 128
                                        mem[_11420 + 164] = mem[_11420]
                                        s = 0
                                        while s < mem[_11420]:
                                            mem[s + _11420 + 196] = mem[s + _11420 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11420]) > mem[_11420]:
                                            mem[mem[_11420] + _11420 + 196] = 0
                                        require ext_code.size(address(_11419))
                                        call address(_11419).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10321, address(_10505), 128, mem[_11420], mem[_11420 + 196 len ceil32(mem[_11420])]
                            else:
                                if idx >= mem[_7903] - 2:
                                    require idx < mem[_7905]
                                    require idx < mem[_7904]
                                    if not mem[(32 * idx) + _7905 + 32]:
                                        _11046 = mem[(32 * idx) + _7904 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10321
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_11046))
                                        call address(_11046).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10321, 0, this.address
                                    else:
                                        _11048 = mem[(32 * idx) + _7904 + 32]
                                        _11049 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11049 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11049 + 36] = _10321
                                        mem[_11049 + 68] = 0
                                        mem[_11049 + 100] = this.address
                                        mem[_11049 + 132] = 128
                                        mem[_11049 + 164] = mem[_11049]
                                        s = 0
                                        while s < mem[_11049]:
                                            mem[s + _11049 + 196] = mem[s + _11049 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11049]) > mem[_11049]:
                                            mem[mem[_11049] + _11049 + 196] = 0
                                        require ext_code.size(address(_11048))
                                        call address(_11048).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10321, 0, address(this.address), 128, mem[_11049], mem[_11049 + 196 len ceil32(mem[_11049])]
                                else:
                                    require idx + 1 < mem[_7904]
                                    _10507 = mem[(32 * idx + 1) + _7904 + 32]
                                    require idx < mem[_7905]
                                    require idx < mem[_7904]
                                    if not mem[(32 * idx) + _7905 + 32]:
                                        _11422 = mem[(32 * idx) + _7904 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10321
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_10507)
                                        require ext_code.size(address(_11422))
                                        call address(_11422).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10321, 0, address(_10507)
                                    else:
                                        _11424 = mem[(32 * idx) + _7904 + 32]
                                        _11425 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11425 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11425 + 36] = _10321
                                        mem[_11425 + 68] = 0
                                        mem[_11425 + 100] = address(_10507)
                                        mem[_11425 + 132] = 128
                                        mem[_11425 + 164] = mem[_11425]
                                        s = 0
                                        while s < mem[_11425]:
                                            mem[s + _11425 + 196] = mem[s + _11425 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11425]) > mem[_11425]:
                                            mem[mem[_11425] + _11425 + 196] = 0
                                        require ext_code.size(address(_11424))
                                        call address(_11424).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10321, 0, address(_10507), 128, mem[_11425], mem[_11425 + 196 len ceil32(mem[_11425])]
                        else:
                            _10322 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                            if mem[(32 * idx) + _7903 + 44 len 20] == mem[(32 * idx + 1) + _7903 + 44 len 20]:
                                if idx >= mem[_7903] - 2:
                                    require idx < mem[_7905]
                                    require idx < mem[_7904]
                                    if not mem[(32 * idx) + _7905 + 32]:
                                        _11052 = mem[(32 * idx) + _7904 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10322
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_11052))
                                        call address(_11052).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10322, this.address
                                    else:
                                        _11054 = mem[(32 * idx) + _7904 + 32]
                                        _11055 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11055 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11055 + 36] = 0
                                        mem[_11055 + 68] = _10322
                                        mem[_11055 + 100] = this.address
                                        mem[_11055 + 132] = 128
                                        mem[_11055 + 164] = mem[_11055]
                                        s = 0
                                        while s < mem[_11055]:
                                            mem[s + _11055 + 196] = mem[s + _11055 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11055]) > mem[_11055]:
                                            mem[mem[_11055] + _11055 + 196] = 0
                                        require ext_code.size(address(_11054))
                                        call address(_11054).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10322, address(this.address), 128, mem[_11055], mem[_11055 + 196 len ceil32(mem[_11055])]
                                else:
                                    require idx + 1 < mem[_7904]
                                    _10509 = mem[(32 * idx + 1) + _7904 + 32]
                                    require idx < mem[_7905]
                                    require idx < mem[_7904]
                                    if not mem[(32 * idx) + _7905 + 32]:
                                        _11427 = mem[(32 * idx) + _7904 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10322
                                        mem[mem[64] + 68] = address(_10509)
                                        require ext_code.size(address(_11427))
                                        call address(_11427).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10322, address(_10509)
                                    else:
                                        _11429 = mem[(32 * idx) + _7904 + 32]
                                        _11430 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11430 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11430 + 36] = 0
                                        mem[_11430 + 68] = _10322
                                        mem[_11430 + 100] = address(_10509)
                                        mem[_11430 + 132] = 128
                                        mem[_11430 + 164] = mem[_11430]
                                        s = 0
                                        while s < mem[_11430]:
                                            mem[s + _11430 + 196] = mem[s + _11430 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11430]) > mem[_11430]:
                                            mem[mem[_11430] + _11430 + 196] = 0
                                        require ext_code.size(address(_11429))
                                        call address(_11429).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10322, address(_10509), 128, mem[_11430], mem[_11430 + 196 len ceil32(mem[_11430])]
                            else:
                                if idx >= mem[_7903] - 2:
                                    require idx < mem[_7905]
                                    require idx < mem[_7904]
                                    if not mem[(32 * idx) + _7905 + 32]:
                                        _11058 = mem[(32 * idx) + _7904 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10322
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_11058))
                                        call address(_11058).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10322, 0, this.address
                                    else:
                                        _11060 = mem[(32 * idx) + _7904 + 32]
                                        _11061 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11061 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11061 + 36] = _10322
                                        mem[_11061 + 68] = 0
                                        mem[_11061 + 100] = this.address
                                        mem[_11061 + 132] = 128
                                        mem[_11061 + 164] = mem[_11061]
                                        s = 0
                                        while s < mem[_11061]:
                                            mem[s + _11061 + 196] = mem[s + _11061 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11061]) > mem[_11061]:
                                            mem[mem[_11061] + _11061 + 196] = 0
                                        require ext_code.size(address(_11060))
                                        call address(_11060).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10322, 0, address(this.address), 128, mem[_11061], mem[_11061 + 196 len ceil32(mem[_11061])]
                                else:
                                    require idx + 1 < mem[_7904]
                                    _10511 = mem[(32 * idx + 1) + _7904 + 32]
                                    require idx < mem[_7905]
                                    require idx < mem[_7904]
                                    if not mem[(32 * idx) + _7905 + 32]:
                                        _11432 = mem[(32 * idx) + _7904 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10322
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_10511)
                                        require ext_code.size(address(_11432))
                                        call address(_11432).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10322, 0, address(_10511)
                                    else:
                                        _11434 = mem[(32 * idx) + _7904 + 32]
                                        _11435 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11435 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11435 + 36] = _10322
                                        mem[_11435 + 68] = 0
                                        mem[_11435 + 100] = address(_10511)
                                        mem[_11435 + 132] = 128
                                        mem[_11435 + 164] = mem[_11435]
                                        s = 0
                                        while s < mem[_11435]:
                                            mem[s + _11435 + 196] = mem[s + _11435 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11435]) > mem[_11435]:
                                            mem[mem[_11435] + _11435 + 196] = 0
                                        require ext_code.size(address(_11434))
                                        call address(_11434).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10322, 0, address(_10511), 128, mem[_11435], mem[_11435 + 196 len ceil32(mem[_11435])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                    _10241 = mem[64]
                    mem[mem[64]] = 32
                    _10269 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    idx = 0
                    s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
                    t = mem[64] + 64
                    while idx < _10269:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _10241 + (32 * _10269) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                _8029 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                mem[_8029] = ('cd', 68).length
                mem[_8029 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                mem[_8029 + (32 * ('cd', 68).length) + 32] = 0
                _8030 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
                mem[_8030] = ('cd', 100).length
                mem[_8030 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                mem[_8030 + (32 * ('cd', 100).length) + 32] = 0
                _8031 = mem[64]
                mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                mem[_8031] = ('cd', 164).length
                mem[_8031 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                mem[_8031 + (32 * ('cd', 164).length) + 32] = 0
                idx = 0
                while idx < ('cd', 68).length - 1:
                    require idx < mem[_8029]
                    require idx + 1 < mem[_8029]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if mem[(32 * idx) + _8029 + 44 len 20] < mem[(32 * idx + 1) + _8029 + 44 len 20]:
                        _10323 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                        if mem[(32 * idx) + _8029 + 44 len 20] == mem[(32 * idx) + _8029 + 44 len 20]:
                            if idx >= mem[_8029] - 2:
                                require idx < mem[_8031]
                                require idx < mem[_8030]
                                if not mem[(32 * idx) + _8031 + 32]:
                                    _11065 = mem[(32 * idx) + _8030 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10323
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11065))
                                    call address(_11065).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10323, this.address
                                else:
                                    _11067 = mem[(32 * idx) + _8030 + 32]
                                    _11068 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11068 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11068 + 36] = 0
                                    mem[_11068 + 68] = _10323
                                    mem[_11068 + 100] = this.address
                                    mem[_11068 + 132] = 128
                                    mem[_11068 + 164] = mem[_11068]
                                    s = 0
                                    while s < mem[_11068]:
                                        mem[s + _11068 + 196] = mem[s + _11068 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11068]) > mem[_11068]:
                                        mem[mem[_11068] + _11068 + 196] = 0
                                    require ext_code.size(address(_11067))
                                    call address(_11067).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10323, address(this.address), 128, mem[_11068], mem[_11068 + 196 len ceil32(mem[_11068])]
                            else:
                                require idx + 1 < mem[_8030]
                                _10513 = mem[(32 * idx + 1) + _8030 + 32]
                                require idx < mem[_8031]
                                require idx < mem[_8030]
                                if not mem[(32 * idx) + _8031 + 32]:
                                    _11437 = mem[(32 * idx) + _8030 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10323
                                    mem[mem[64] + 68] = address(_10513)
                                    require ext_code.size(address(_11437))
                                    call address(_11437).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10323, address(_10513)
                                else:
                                    _11439 = mem[(32 * idx) + _8030 + 32]
                                    _11440 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11440 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11440 + 36] = 0
                                    mem[_11440 + 68] = _10323
                                    mem[_11440 + 100] = address(_10513)
                                    mem[_11440 + 132] = 128
                                    mem[_11440 + 164] = mem[_11440]
                                    s = 0
                                    while s < mem[_11440]:
                                        mem[s + _11440 + 196] = mem[s + _11440 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11440]) > mem[_11440]:
                                        mem[mem[_11440] + _11440 + 196] = 0
                                    require ext_code.size(address(_11439))
                                    call address(_11439).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10323, address(_10513), 128, mem[_11440], mem[_11440 + 196 len ceil32(mem[_11440])]
                        else:
                            if idx >= mem[_8029] - 2:
                                require idx < mem[_8031]
                                require idx < mem[_8030]
                                if not mem[(32 * idx) + _8031 + 32]:
                                    _11071 = mem[(32 * idx) + _8030 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10323
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11071))
                                    call address(_11071).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10323, 0, this.address
                                else:
                                    _11073 = mem[(32 * idx) + _8030 + 32]
                                    _11074 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11074 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11074 + 36] = _10323
                                    mem[_11074 + 68] = 0
                                    mem[_11074 + 100] = this.address
                                    mem[_11074 + 132] = 128
                                    mem[_11074 + 164] = mem[_11074]
                                    s = 0
                                    while s < mem[_11074]:
                                        mem[s + _11074 + 196] = mem[s + _11074 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11074]) > mem[_11074]:
                                        mem[mem[_11074] + _11074 + 196] = 0
                                    require ext_code.size(address(_11073))
                                    call address(_11073).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10323, 0, address(this.address), 128, mem[_11074], mem[_11074 + 196 len ceil32(mem[_11074])]
                            else:
                                require idx + 1 < mem[_8030]
                                _10515 = mem[(32 * idx + 1) + _8030 + 32]
                                require idx < mem[_8031]
                                require idx < mem[_8030]
                                if not mem[(32 * idx) + _8031 + 32]:
                                    _11442 = mem[(32 * idx) + _8030 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10323
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_10515)
                                    require ext_code.size(address(_11442))
                                    call address(_11442).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10323, 0, address(_10515)
                                else:
                                    _11444 = mem[(32 * idx) + _8030 + 32]
                                    _11445 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11445 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11445 + 36] = _10323
                                    mem[_11445 + 68] = 0
                                    mem[_11445 + 100] = address(_10515)
                                    mem[_11445 + 132] = 128
                                    mem[_11445 + 164] = mem[_11445]
                                    s = 0
                                    while s < mem[_11445]:
                                        mem[s + _11445 + 196] = mem[s + _11445 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11445]) > mem[_11445]:
                                        mem[mem[_11445] + _11445 + 196] = 0
                                    require ext_code.size(address(_11444))
                                    call address(_11444).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10323, 0, address(_10515), 128, mem[_11445], mem[_11445 + 196 len ceil32(mem[_11445])]
                    else:
                        _10324 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                        if mem[(32 * idx) + _8029 + 44 len 20] == mem[(32 * idx + 1) + _8029 + 44 len 20]:
                            if idx >= mem[_8029] - 2:
                                require idx < mem[_8031]
                                require idx < mem[_8030]
                                if not mem[(32 * idx) + _8031 + 32]:
                                    _11077 = mem[(32 * idx) + _8030 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10324
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11077))
                                    call address(_11077).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10324, this.address
                                else:
                                    _11079 = mem[(32 * idx) + _8030 + 32]
                                    _11080 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11080 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11080 + 36] = 0
                                    mem[_11080 + 68] = _10324
                                    mem[_11080 + 100] = this.address
                                    mem[_11080 + 132] = 128
                                    mem[_11080 + 164] = mem[_11080]
                                    s = 0
                                    while s < mem[_11080]:
                                        mem[s + _11080 + 196] = mem[s + _11080 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11080]) > mem[_11080]:
                                        mem[mem[_11080] + _11080 + 196] = 0
                                    require ext_code.size(address(_11079))
                                    call address(_11079).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10324, address(this.address), 128, mem[_11080], mem[_11080 + 196 len ceil32(mem[_11080])]
                            else:
                                require idx + 1 < mem[_8030]
                                _10517 = mem[(32 * idx + 1) + _8030 + 32]
                                require idx < mem[_8031]
                                require idx < mem[_8030]
                                if not mem[(32 * idx) + _8031 + 32]:
                                    _11447 = mem[(32 * idx) + _8030 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10324
                                    mem[mem[64] + 68] = address(_10517)
                                    require ext_code.size(address(_11447))
                                    call address(_11447).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10324, address(_10517)
                                else:
                                    _11449 = mem[(32 * idx) + _8030 + 32]
                                    _11450 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11450 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11450 + 36] = 0
                                    mem[_11450 + 68] = _10324
                                    mem[_11450 + 100] = address(_10517)
                                    mem[_11450 + 132] = 128
                                    mem[_11450 + 164] = mem[_11450]
                                    s = 0
                                    while s < mem[_11450]:
                                        mem[s + _11450 + 196] = mem[s + _11450 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11450]) > mem[_11450]:
                                        mem[mem[_11450] + _11450 + 196] = 0
                                    require ext_code.size(address(_11449))
                                    call address(_11449).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10324, address(_10517), 128, mem[_11450], mem[_11450 + 196 len ceil32(mem[_11450])]
                        else:
                            if idx >= mem[_8029] - 2:
                                require idx < mem[_8031]
                                require idx < mem[_8030]
                                if not mem[(32 * idx) + _8031 + 32]:
                                    _11083 = mem[(32 * idx) + _8030 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10324
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11083))
                                    call address(_11083).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10324, 0, this.address
                                else:
                                    _11085 = mem[(32 * idx) + _8030 + 32]
                                    _11086 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11086 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11086 + 36] = _10324
                                    mem[_11086 + 68] = 0
                                    mem[_11086 + 100] = this.address
                                    mem[_11086 + 132] = 128
                                    mem[_11086 + 164] = mem[_11086]
                                    s = 0
                                    while s < mem[_11086]:
                                        mem[s + _11086 + 196] = mem[s + _11086 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11086]) > mem[_11086]:
                                        mem[mem[_11086] + _11086 + 196] = 0
                                    require ext_code.size(address(_11085))
                                    call address(_11085).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10324, 0, address(this.address), 128, mem[_11086], mem[_11086 + 196 len ceil32(mem[_11086])]
                            else:
                                require idx + 1 < mem[_8030]
                                _10519 = mem[(32 * idx + 1) + _8030 + 32]
                                require idx < mem[_8031]
                                require idx < mem[_8030]
                                if not mem[(32 * idx) + _8031 + 32]:
                                    _11452 = mem[(32 * idx) + _8030 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10324
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_10519)
                                    require ext_code.size(address(_11452))
                                    call address(_11452).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10324, 0, address(_10519)
                                else:
                                    _11454 = mem[(32 * idx) + _8030 + 32]
                                    _11455 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11455 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11455 + 36] = _10324
                                    mem[_11455 + 68] = 0
                                    mem[_11455 + 100] = address(_10519)
                                    mem[_11455 + 132] = 128
                                    mem[_11455 + 164] = mem[_11455]
                                    s = 0
                                    while s < mem[_11455]:
                                        mem[s + _11455 + 196] = mem[s + _11455 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11455]) > mem[_11455]:
                                        mem[mem[_11455] + _11455 + 196] = 0
                                    require ext_code.size(address(_11454))
                                    call address(_11454).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10324, 0, address(_10519), 128, mem[_11455], mem[_11455 + 196 len ceil32(mem[_11455])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                _10243 = mem[64]
                mem[mem[64]] = 32
                _10270 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                idx = 0
                s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
                t = mem[64] + 64
                while idx < _10270:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _10243 + (32 * _10270) + -mem[64] + 64
            _7870 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_7870] = return_data.size
            mem[_7870 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not return_data.size:
                _7906 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                mem[_7906] = ('cd', 68).length
                mem[_7906 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                mem[_7906 + (32 * ('cd', 68).length) + 32] = 0
                _7907 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
                mem[_7907] = ('cd', 100).length
                mem[_7907 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                mem[_7907 + (32 * ('cd', 100).length) + 32] = 0
                _7908 = mem[64]
                mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                mem[_7908] = ('cd', 164).length
                mem[_7908 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                mem[_7908 + (32 * ('cd', 164).length) + 32] = 0
                idx = 0
                while idx < ('cd', 68).length - 1:
                    require idx < mem[_7906]
                    require idx + 1 < mem[_7906]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if mem[(32 * idx) + _7906 + 44 len 20] < mem[(32 * idx + 1) + _7906 + 44 len 20]:
                        _10325 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                        if mem[(32 * idx) + _7906 + 44 len 20] == mem[(32 * idx) + _7906 + 44 len 20]:
                            if idx >= mem[_7906] - 2:
                                require idx < mem[_7908]
                                require idx < mem[_7907]
                                if not mem[(32 * idx) + _7908 + 32]:
                                    _11090 = mem[(32 * idx) + _7907 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10325
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11090))
                                    call address(_11090).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10325, this.address
                                else:
                                    _11092 = mem[(32 * idx) + _7907 + 32]
                                    _11093 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11093 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11093 + 36] = 0
                                    mem[_11093 + 68] = _10325
                                    mem[_11093 + 100] = this.address
                                    mem[_11093 + 132] = 128
                                    mem[_11093 + 164] = mem[_11093]
                                    s = 0
                                    while s < mem[_11093]:
                                        mem[s + _11093 + 196] = mem[s + _11093 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11093]) > mem[_11093]:
                                        mem[mem[_11093] + _11093 + 196] = 0
                                    require ext_code.size(address(_11092))
                                    call address(_11092).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10325, address(this.address), 128, mem[_11093], mem[_11093 + 196 len ceil32(mem[_11093])]
                            else:
                                require idx + 1 < mem[_7907]
                                _10521 = mem[(32 * idx + 1) + _7907 + 32]
                                require idx < mem[_7908]
                                require idx < mem[_7907]
                                if not mem[(32 * idx) + _7908 + 32]:
                                    _11457 = mem[(32 * idx) + _7907 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10325
                                    mem[mem[64] + 68] = address(_10521)
                                    require ext_code.size(address(_11457))
                                    call address(_11457).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10325, address(_10521)
                                else:
                                    _11459 = mem[(32 * idx) + _7907 + 32]
                                    _11460 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11460 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11460 + 36] = 0
                                    mem[_11460 + 68] = _10325
                                    mem[_11460 + 100] = address(_10521)
                                    mem[_11460 + 132] = 128
                                    mem[_11460 + 164] = mem[_11460]
                                    s = 0
                                    while s < mem[_11460]:
                                        mem[s + _11460 + 196] = mem[s + _11460 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11460]) > mem[_11460]:
                                        mem[mem[_11460] + _11460 + 196] = 0
                                    require ext_code.size(address(_11459))
                                    call address(_11459).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10325, address(_10521), 128, mem[_11460], mem[_11460 + 196 len ceil32(mem[_11460])]
                        else:
                            if idx >= mem[_7906] - 2:
                                require idx < mem[_7908]
                                require idx < mem[_7907]
                                if not mem[(32 * idx) + _7908 + 32]:
                                    _11096 = mem[(32 * idx) + _7907 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10325
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11096))
                                    call address(_11096).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10325, 0, this.address
                                else:
                                    _11098 = mem[(32 * idx) + _7907 + 32]
                                    _11099 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11099 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11099 + 36] = _10325
                                    mem[_11099 + 68] = 0
                                    mem[_11099 + 100] = this.address
                                    mem[_11099 + 132] = 128
                                    mem[_11099 + 164] = mem[_11099]
                                    s = 0
                                    while s < mem[_11099]:
                                        mem[s + _11099 + 196] = mem[s + _11099 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11099]) > mem[_11099]:
                                        mem[mem[_11099] + _11099 + 196] = 0
                                    require ext_code.size(address(_11098))
                                    call address(_11098).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10325, 0, address(this.address), 128, mem[_11099], mem[_11099 + 196 len ceil32(mem[_11099])]
                            else:
                                require idx + 1 < mem[_7907]
                                _10523 = mem[(32 * idx + 1) + _7907 + 32]
                                require idx < mem[_7908]
                                require idx < mem[_7907]
                                if not mem[(32 * idx) + _7908 + 32]:
                                    _11462 = mem[(32 * idx) + _7907 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10325
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_10523)
                                    require ext_code.size(address(_11462))
                                    call address(_11462).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10325, 0, address(_10523)
                                else:
                                    _11464 = mem[(32 * idx) + _7907 + 32]
                                    _11465 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11465 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11465 + 36] = _10325
                                    mem[_11465 + 68] = 0
                                    mem[_11465 + 100] = address(_10523)
                                    mem[_11465 + 132] = 128
                                    mem[_11465 + 164] = mem[_11465]
                                    s = 0
                                    while s < mem[_11465]:
                                        mem[s + _11465 + 196] = mem[s + _11465 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11465]) > mem[_11465]:
                                        mem[mem[_11465] + _11465 + 196] = 0
                                    require ext_code.size(address(_11464))
                                    call address(_11464).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10325, 0, address(_10523), 128, mem[_11465], mem[_11465 + 196 len ceil32(mem[_11465])]
                    else:
                        _10326 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                        if mem[(32 * idx) + _7906 + 44 len 20] == mem[(32 * idx + 1) + _7906 + 44 len 20]:
                            if idx >= mem[_7906] - 2:
                                require idx < mem[_7908]
                                require idx < mem[_7907]
                                if not mem[(32 * idx) + _7908 + 32]:
                                    _11102 = mem[(32 * idx) + _7907 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10326
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11102))
                                    call address(_11102).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10326, this.address
                                else:
                                    _11104 = mem[(32 * idx) + _7907 + 32]
                                    _11105 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11105 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11105 + 36] = 0
                                    mem[_11105 + 68] = _10326
                                    mem[_11105 + 100] = this.address
                                    mem[_11105 + 132] = 128
                                    mem[_11105 + 164] = mem[_11105]
                                    s = 0
                                    while s < mem[_11105]:
                                        mem[s + _11105 + 196] = mem[s + _11105 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11105]) > mem[_11105]:
                                        mem[mem[_11105] + _11105 + 196] = 0
                                    require ext_code.size(address(_11104))
                                    call address(_11104).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10326, address(this.address), 128, mem[_11105], mem[_11105 + 196 len ceil32(mem[_11105])]
                            else:
                                require idx + 1 < mem[_7907]
                                _10525 = mem[(32 * idx + 1) + _7907 + 32]
                                require idx < mem[_7908]
                                require idx < mem[_7907]
                                if not mem[(32 * idx) + _7908 + 32]:
                                    _11467 = mem[(32 * idx) + _7907 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10326
                                    mem[mem[64] + 68] = address(_10525)
                                    require ext_code.size(address(_11467))
                                    call address(_11467).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10326, address(_10525)
                                else:
                                    _11469 = mem[(32 * idx) + _7907 + 32]
                                    _11470 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11470 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11470 + 36] = 0
                                    mem[_11470 + 68] = _10326
                                    mem[_11470 + 100] = address(_10525)
                                    mem[_11470 + 132] = 128
                                    mem[_11470 + 164] = mem[_11470]
                                    s = 0
                                    while s < mem[_11470]:
                                        mem[s + _11470 + 196] = mem[s + _11470 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11470]) > mem[_11470]:
                                        mem[mem[_11470] + _11470 + 196] = 0
                                    require ext_code.size(address(_11469))
                                    call address(_11469).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10326, address(_10525), 128, mem[_11470], mem[_11470 + 196 len ceil32(mem[_11470])]
                        else:
                            if idx >= mem[_7906] - 2:
                                require idx < mem[_7908]
                                require idx < mem[_7907]
                                if not mem[(32 * idx) + _7908 + 32]:
                                    _11108 = mem[(32 * idx) + _7907 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10326
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11108))
                                    call address(_11108).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10326, 0, this.address
                                else:
                                    _11110 = mem[(32 * idx) + _7907 + 32]
                                    _11111 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11111 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11111 + 36] = _10326
                                    mem[_11111 + 68] = 0
                                    mem[_11111 + 100] = this.address
                                    mem[_11111 + 132] = 128
                                    mem[_11111 + 164] = mem[_11111]
                                    s = 0
                                    while s < mem[_11111]:
                                        mem[s + _11111 + 196] = mem[s + _11111 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11111]) > mem[_11111]:
                                        mem[mem[_11111] + _11111 + 196] = 0
                                    require ext_code.size(address(_11110))
                                    call address(_11110).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10326, 0, address(this.address), 128, mem[_11111], mem[_11111 + 196 len ceil32(mem[_11111])]
                            else:
                                require idx + 1 < mem[_7907]
                                _10527 = mem[(32 * idx + 1) + _7907 + 32]
                                require idx < mem[_7908]
                                require idx < mem[_7907]
                                if not mem[(32 * idx) + _7908 + 32]:
                                    _11472 = mem[(32 * idx) + _7907 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10326
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_10527)
                                    require ext_code.size(address(_11472))
                                    call address(_11472).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10326, 0, address(_10527)
                                else:
                                    _11474 = mem[(32 * idx) + _7907 + 32]
                                    _11475 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11475 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11475 + 36] = _10326
                                    mem[_11475 + 68] = 0
                                    mem[_11475 + 100] = address(_10527)
                                    mem[_11475 + 132] = 128
                                    mem[_11475 + 164] = mem[_11475]
                                    s = 0
                                    while s < mem[_11475]:
                                        mem[s + _11475 + 196] = mem[s + _11475 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11475]) > mem[_11475]:
                                        mem[mem[_11475] + _11475 + 196] = 0
                                    require ext_code.size(address(_11474))
                                    call address(_11474).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10326, 0, address(_10527), 128, mem[_11475], mem[_11475 + 196 len ceil32(mem[_11475])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                _10245 = mem[64]
                mem[mem[64]] = 32
                _10271 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                idx = 0
                s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
                t = mem[64] + 64
                while idx < _10271:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _10245 + (32 * _10271) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_7870 + 32] == bool(mem[_7870 + 32])
            if not mem[_7870 + 32]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _8034 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
            mem[_8034] = ('cd', 68).length
            mem[_8034 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
            mem[_8034 + (32 * ('cd', 68).length) + 32] = 0
            _8035 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
            mem[_8035] = ('cd', 100).length
            mem[_8035 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
            mem[_8035 + (32 * ('cd', 100).length) + 32] = 0
            _8036 = mem[64]
            mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
            mem[_8036] = ('cd', 164).length
            mem[_8036 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
            mem[_8036 + (32 * ('cd', 164).length) + 32] = 0
            idx = 0
            while idx < ('cd', 68).length - 1:
                require idx < mem[_8034]
                require idx + 1 < mem[_8034]
                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                if mem[(32 * idx) + _8034 + 44 len 20] < mem[(32 * idx + 1) + _8034 + 44 len 20]:
                    _10327 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                    if mem[(32 * idx) + _8034 + 44 len 20] == mem[(32 * idx) + _8034 + 44 len 20]:
                        if idx >= mem[_8034] - 2:
                            require idx < mem[_8036]
                            require idx < mem[_8035]
                            if not mem[(32 * idx) + _8036 + 32]:
                                _11115 = mem[(32 * idx) + _8035 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10327
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11115))
                                call address(_11115).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10327, this.address
                            else:
                                _11117 = mem[(32 * idx) + _8035 + 32]
                                _11118 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11118 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11118 + 36] = 0
                                mem[_11118 + 68] = _10327
                                mem[_11118 + 100] = this.address
                                mem[_11118 + 132] = 128
                                mem[_11118 + 164] = mem[_11118]
                                s = 0
                                while s < mem[_11118]:
                                    mem[s + _11118 + 196] = mem[s + _11118 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11118]) > mem[_11118]:
                                    mem[mem[_11118] + _11118 + 196] = 0
                                require ext_code.size(address(_11117))
                                call address(_11117).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10327, address(this.address), 128, mem[_11118], mem[_11118 + 196 len ceil32(mem[_11118])]
                        else:
                            require idx + 1 < mem[_8035]
                            _10529 = mem[(32 * idx + 1) + _8035 + 32]
                            require idx < mem[_8036]
                            require idx < mem[_8035]
                            if not mem[(32 * idx) + _8036 + 32]:
                                _11477 = mem[(32 * idx) + _8035 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10327
                                mem[mem[64] + 68] = address(_10529)
                                require ext_code.size(address(_11477))
                                call address(_11477).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10327, address(_10529)
                            else:
                                _11479 = mem[(32 * idx) + _8035 + 32]
                                _11480 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11480 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11480 + 36] = 0
                                mem[_11480 + 68] = _10327
                                mem[_11480 + 100] = address(_10529)
                                mem[_11480 + 132] = 128
                                mem[_11480 + 164] = mem[_11480]
                                s = 0
                                while s < mem[_11480]:
                                    mem[s + _11480 + 196] = mem[s + _11480 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11480]) > mem[_11480]:
                                    mem[mem[_11480] + _11480 + 196] = 0
                                require ext_code.size(address(_11479))
                                call address(_11479).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10327, address(_10529), 128, mem[_11480], mem[_11480 + 196 len ceil32(mem[_11480])]
                    else:
                        if idx >= mem[_8034] - 2:
                            require idx < mem[_8036]
                            require idx < mem[_8035]
                            if not mem[(32 * idx) + _8036 + 32]:
                                _11121 = mem[(32 * idx) + _8035 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10327
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11121))
                                call address(_11121).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10327, 0, this.address
                            else:
                                _11123 = mem[(32 * idx) + _8035 + 32]
                                _11124 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11124 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11124 + 36] = _10327
                                mem[_11124 + 68] = 0
                                mem[_11124 + 100] = this.address
                                mem[_11124 + 132] = 128
                                mem[_11124 + 164] = mem[_11124]
                                s = 0
                                while s < mem[_11124]:
                                    mem[s + _11124 + 196] = mem[s + _11124 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11124]) > mem[_11124]:
                                    mem[mem[_11124] + _11124 + 196] = 0
                                require ext_code.size(address(_11123))
                                call address(_11123).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10327, 0, address(this.address), 128, mem[_11124], mem[_11124 + 196 len ceil32(mem[_11124])]
                        else:
                            require idx + 1 < mem[_8035]
                            _10531 = mem[(32 * idx + 1) + _8035 + 32]
                            require idx < mem[_8036]
                            require idx < mem[_8035]
                            if not mem[(32 * idx) + _8036 + 32]:
                                _11482 = mem[(32 * idx) + _8035 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10327
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_10531)
                                require ext_code.size(address(_11482))
                                call address(_11482).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10327, 0, address(_10531)
                            else:
                                _11484 = mem[(32 * idx) + _8035 + 32]
                                _11485 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11485 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11485 + 36] = _10327
                                mem[_11485 + 68] = 0
                                mem[_11485 + 100] = address(_10531)
                                mem[_11485 + 132] = 128
                                mem[_11485 + 164] = mem[_11485]
                                s = 0
                                while s < mem[_11485]:
                                    mem[s + _11485 + 196] = mem[s + _11485 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11485]) > mem[_11485]:
                                    mem[mem[_11485] + _11485 + 196] = 0
                                require ext_code.size(address(_11484))
                                call address(_11484).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10327, 0, address(_10531), 128, mem[_11485], mem[_11485 + 196 len ceil32(mem[_11485])]
                else:
                    _10328 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                    if mem[(32 * idx) + _8034 + 44 len 20] == mem[(32 * idx + 1) + _8034 + 44 len 20]:
                        if idx >= mem[_8034] - 2:
                            require idx < mem[_8036]
                            require idx < mem[_8035]
                            if not mem[(32 * idx) + _8036 + 32]:
                                _11127 = mem[(32 * idx) + _8035 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10328
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11127))
                                call address(_11127).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10328, this.address
                            else:
                                _11129 = mem[(32 * idx) + _8035 + 32]
                                _11130 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11130 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11130 + 36] = 0
                                mem[_11130 + 68] = _10328
                                mem[_11130 + 100] = this.address
                                mem[_11130 + 132] = 128
                                mem[_11130 + 164] = mem[_11130]
                                s = 0
                                while s < mem[_11130]:
                                    mem[s + _11130 + 196] = mem[s + _11130 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11130]) > mem[_11130]:
                                    mem[mem[_11130] + _11130 + 196] = 0
                                require ext_code.size(address(_11129))
                                call address(_11129).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10328, address(this.address), 128, mem[_11130], mem[_11130 + 196 len ceil32(mem[_11130])]
                        else:
                            require idx + 1 < mem[_8035]
                            _10533 = mem[(32 * idx + 1) + _8035 + 32]
                            require idx < mem[_8036]
                            require idx < mem[_8035]
                            if not mem[(32 * idx) + _8036 + 32]:
                                _11487 = mem[(32 * idx) + _8035 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10328
                                mem[mem[64] + 68] = address(_10533)
                                require ext_code.size(address(_11487))
                                call address(_11487).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10328, address(_10533)
                            else:
                                _11489 = mem[(32 * idx) + _8035 + 32]
                                _11490 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11490 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11490 + 36] = 0
                                mem[_11490 + 68] = _10328
                                mem[_11490 + 100] = address(_10533)
                                mem[_11490 + 132] = 128
                                mem[_11490 + 164] = mem[_11490]
                                s = 0
                                while s < mem[_11490]:
                                    mem[s + _11490 + 196] = mem[s + _11490 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11490]) > mem[_11490]:
                                    mem[mem[_11490] + _11490 + 196] = 0
                                require ext_code.size(address(_11489))
                                call address(_11489).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10328, address(_10533), 128, mem[_11490], mem[_11490 + 196 len ceil32(mem[_11490])]
                    else:
                        if idx >= mem[_8034] - 2:
                            require idx < mem[_8036]
                            require idx < mem[_8035]
                            if not mem[(32 * idx) + _8036 + 32]:
                                _11133 = mem[(32 * idx) + _8035 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10328
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11133))
                                call address(_11133).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10328, 0, this.address
                            else:
                                _11135 = mem[(32 * idx) + _8035 + 32]
                                _11136 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11136 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11136 + 36] = _10328
                                mem[_11136 + 68] = 0
                                mem[_11136 + 100] = this.address
                                mem[_11136 + 132] = 128
                                mem[_11136 + 164] = mem[_11136]
                                s = 0
                                while s < mem[_11136]:
                                    mem[s + _11136 + 196] = mem[s + _11136 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11136]) > mem[_11136]:
                                    mem[mem[_11136] + _11136 + 196] = 0
                                require ext_code.size(address(_11135))
                                call address(_11135).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10328, 0, address(this.address), 128, mem[_11136], mem[_11136 + 196 len ceil32(mem[_11136])]
                        else:
                            require idx + 1 < mem[_8035]
                            _10535 = mem[(32 * idx + 1) + _8035 + 32]
                            require idx < mem[_8036]
                            require idx < mem[_8035]
                            if not mem[(32 * idx) + _8036 + 32]:
                                _11492 = mem[(32 * idx) + _8035 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10328
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_10535)
                                require ext_code.size(address(_11492))
                                call address(_11492).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10328, 0, address(_10535)
                            else:
                                _11494 = mem[(32 * idx) + _8035 + 32]
                                _11495 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11495 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11495 + 36] = _10328
                                mem[_11495 + 68] = 0
                                mem[_11495 + 100] = address(_10535)
                                mem[_11495 + 132] = 128
                                mem[_11495 + 164] = mem[_11495]
                                s = 0
                                while s < mem[_11495]:
                                    mem[s + _11495 + 196] = mem[s + _11495 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11495]) > mem[_11495]:
                                    mem[mem[_11495] + _11495 + 196] = 0
                                require ext_code.size(address(_11494))
                                call address(_11494).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10328, 0, address(_10535), 128, mem[_11495], mem[_11495 + 196 len ceil32(mem[_11495])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            _10247 = mem[64]
            mem[mem[64]] = 32
            _10272 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            idx = 0
            s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
            t = mem[64] + 64
            while idx < _10272:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _10247 + (32 * _10272) + -mem[64] + 64
        mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224 len 32 * ('cd', 68).length] = code.data[10348 len 32 * ('cd', 68).length]
        require 0 < ('cd', 68).length
        mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = cd[4]
        idx = 0
        while idx < ('cd', 68).length - 1:
            require idx < mem[(32 * ('cd', 68).length) + 128]
            require idx < mem[96]
            _5265 = mem[(32 * idx) + 128]
            require idx + 1 < mem[96]
            _5272 = mem[(32 * idx + 1) + 128]
            require ext_code.size(mem[(32 * idx) + (32 * ('cd', 68).length) + 172 len 20])
            staticcall mem[(32 * idx) + (32 * ('cd', 68).length) + 172 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                _5295 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_5295] == mem[_5295 + 18 len 14]
                require mem[_5295 + 32] == mem[_5295 + 50 len 14]
                require mem[_5295 + 64] == mem[_5295 + 92 len 4]
                require idx < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require idx < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if address(_5265) == address(_5265):
                    if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]:
                        require mem[_5295 + 18 len 14]
                        if 1000 * mem[_5295 + 18 len 14] / mem[_5295 + 18 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_5295 + 18 len 14] < 1000 * mem[_5295 + 18 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_5295 + 18 len 14]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / 1000 * mem[_5295 + 18 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]):
                            if not mem[_5295 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                            else:
                                if 1000 * mem[_5295 + 18 len 14] / mem[_5295 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5295 + 18 len 14]) < 1000 * mem[_5295 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5295 + 18 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5295 + 18 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5295 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5295 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) != mem[_5295 + 50 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_5295 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5295 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5295 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                            else:
                                if 1000 * mem[_5295 + 18 len 14] / mem[_5295 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5295 + 18 len 14]) < 1000 * mem[_5295 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5295 + 18 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5295 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5295 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5295 + 18 len 14])
                else:
                    if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]:
                        require mem[_5295 + 50 len 14]
                        if 1000 * mem[_5295 + 50 len 14] / mem[_5295 + 50 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_5295 + 50 len 14] < 1000 * mem[_5295 + 50 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_5295 + 50 len 14]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / 1000 * mem[_5295 + 50 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]):
                            if not mem[_5295 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                            else:
                                if 1000 * mem[_5295 + 50 len 14] / mem[_5295 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5295 + 50 len 14]) < 1000 * mem[_5295 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5295 + 50 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5295 + 50 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5295 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5295 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) != mem[_5295 + 18 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_5295 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5295 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5295 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                            else:
                                if 1000 * mem[_5295 + 50 len 14] / mem[_5295 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5295 + 50 len 14]) < 1000 * mem[_5295 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5295 + 50 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5295 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5295 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5295 + 50 len 14])
            else:
                _5296 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_5296] == mem[_5296 + 18 len 14]
                require mem[_5296 + 32] == mem[_5296 + 50 len 14]
                require mem[_5296 + 64] == mem[_5296 + 92 len 4]
                require idx < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require idx < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if address(_5265) == address(_5272):
                    if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]:
                        require mem[_5296 + 18 len 14]
                        if 1000 * mem[_5296 + 18 len 14] / mem[_5296 + 18 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_5296 + 18 len 14] < 1000 * mem[_5296 + 18 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_5296 + 18 len 14]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / 1000 * mem[_5296 + 18 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]):
                            if not mem[_5296 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                            else:
                                if 1000 * mem[_5296 + 18 len 14] / mem[_5296 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5296 + 18 len 14]) < 1000 * mem[_5296 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5296 + 18 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5296 + 18 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5296 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5296 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) != mem[_5296 + 50 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_5296 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5296 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5296 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                            else:
                                if 1000 * mem[_5296 + 18 len 14] / mem[_5296 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5296 + 18 len 14]) < 1000 * mem[_5296 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5296 + 18 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5296 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5296 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5296 + 18 len 14])
                else:
                    if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]:
                        require mem[_5296 + 50 len 14]
                        if 1000 * mem[_5296 + 50 len 14] / mem[_5296 + 50 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_5296 + 50 len 14] < 1000 * mem[_5296 + 50 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_5296 + 50 len 14]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / 1000 * mem[_5296 + 50 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]):
                            if not mem[_5296 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                            else:
                                if 1000 * mem[_5296 + 50 len 14] / mem[_5296 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5296 + 50 len 14]) < 1000 * mem[_5296 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5296 + 50 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5296 + 50 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5296 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5296 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) != mem[_5296 + 18 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_5296 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5296 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5296 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224])
                            else:
                                if 1000 * mem[_5296 + 50 len 14] / mem[_5296 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5296 + 50 len 14]) < 1000 * mem[_5296 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5296 + 50 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5296 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] * mem[_5296 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]) + (1000 * mem[_5296 + 50 len 14])
            idx = idx + 1
            continue 
        require mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] - 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
        if mem[(32 * mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] - 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] < cd[36]:
            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT'
        require 0 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
        require mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] - 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
        if mem[(32 * mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] - 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224] < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]:
            revert with 0, 'Sorry bruh'
        require 0 < ('cd', 68).length
        require ('cd', 68)[0] == address(('cd', 68)[0])
        require 0 < ('cd', 100).length
        require ('cd', 100)[0] == address(('cd', 100)[0])
        require 0 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
        _5314 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
        _5316 = mem[64]
        mem[mem[64] + 36] = address(('cd', 100)[0])
        mem[mem[64] + 68] = _5314
        _5360 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_5360 + 32] = mem[_5360 + 36 len 28] or 0xa9059cbb00000000000000000000000000000000000000000000000000000000
        _5364 = mem[_5360]
        idx = 0
        while idx < _5364:
            mem[idx + _5316 + 100] = mem[idx + _5360 + 32]
            idx = idx + 32
            continue 
        if ceil32(_5364) <= _5364:
            call address(('cd', 68)[0]).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _5364 + _5316 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                if not mem[96]:
                    _7909 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                    mem[_7909] = ('cd', 68).length
                    mem[_7909 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                    mem[_7909 + (32 * ('cd', 68).length) + 32] = 0
                    _7910 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
                    mem[_7910] = ('cd', 100).length
                    mem[_7910 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                    mem[_7910 + (32 * ('cd', 100).length) + 32] = 0
                    _7911 = mem[64]
                    mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                    mem[_7911] = ('cd', 164).length
                    mem[_7911 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                    mem[_7911 + (32 * ('cd', 164).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 68).length - 1:
                        require idx < mem[_7909]
                        require idx + 1 < mem[_7909]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        if mem[(32 * idx) + _7909 + 44 len 20] < mem[(32 * idx + 1) + _7909 + 44 len 20]:
                            _10329 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                            if mem[(32 * idx) + _7909 + 44 len 20] == mem[(32 * idx) + _7909 + 44 len 20]:
                                if idx >= mem[_7909] - 2:
                                    require idx < mem[_7911]
                                    require idx < mem[_7910]
                                    if not mem[(32 * idx) + _7911 + 32]:
                                        _11140 = mem[(32 * idx) + _7910 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10329
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_11140))
                                        call address(_11140).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10329, this.address
                                    else:
                                        _11142 = mem[(32 * idx) + _7910 + 32]
                                        _11143 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11143 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11143 + 36] = 0
                                        mem[_11143 + 68] = _10329
                                        mem[_11143 + 100] = this.address
                                        mem[_11143 + 132] = 128
                                        mem[_11143 + 164] = mem[_11143]
                                        s = 0
                                        while s < mem[_11143]:
                                            mem[s + _11143 + 196] = mem[s + _11143 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11143]) > mem[_11143]:
                                            mem[mem[_11143] + _11143 + 196] = 0
                                        require ext_code.size(address(_11142))
                                        call address(_11142).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10329, address(this.address), 128, mem[_11143], mem[_11143 + 196 len ceil32(mem[_11143])]
                                else:
                                    require idx + 1 < mem[_7910]
                                    _10537 = mem[(32 * idx + 1) + _7910 + 32]
                                    require idx < mem[_7911]
                                    require idx < mem[_7910]
                                    if not mem[(32 * idx) + _7911 + 32]:
                                        _11497 = mem[(32 * idx) + _7910 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10329
                                        mem[mem[64] + 68] = address(_10537)
                                        require ext_code.size(address(_11497))
                                        call address(_11497).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10329, address(_10537)
                                    else:
                                        _11499 = mem[(32 * idx) + _7910 + 32]
                                        _11500 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11500 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11500 + 36] = 0
                                        mem[_11500 + 68] = _10329
                                        mem[_11500 + 100] = address(_10537)
                                        mem[_11500 + 132] = 128
                                        mem[_11500 + 164] = mem[_11500]
                                        s = 0
                                        while s < mem[_11500]:
                                            mem[s + _11500 + 196] = mem[s + _11500 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11500]) > mem[_11500]:
                                            mem[mem[_11500] + _11500 + 196] = 0
                                        require ext_code.size(address(_11499))
                                        call address(_11499).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10329, address(_10537), 128, mem[_11500], mem[_11500 + 196 len ceil32(mem[_11500])]
                            else:
                                if idx >= mem[_7909] - 2:
                                    require idx < mem[_7911]
                                    require idx < mem[_7910]
                                    if not mem[(32 * idx) + _7911 + 32]:
                                        _11146 = mem[(32 * idx) + _7910 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10329
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_11146))
                                        call address(_11146).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10329, 0, this.address
                                    else:
                                        _11148 = mem[(32 * idx) + _7910 + 32]
                                        _11149 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11149 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11149 + 36] = _10329
                                        mem[_11149 + 68] = 0
                                        mem[_11149 + 100] = this.address
                                        mem[_11149 + 132] = 128
                                        mem[_11149 + 164] = mem[_11149]
                                        s = 0
                                        while s < mem[_11149]:
                                            mem[s + _11149 + 196] = mem[s + _11149 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11149]) > mem[_11149]:
                                            mem[mem[_11149] + _11149 + 196] = 0
                                        require ext_code.size(address(_11148))
                                        call address(_11148).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10329, 0, address(this.address), 128, mem[_11149], mem[_11149 + 196 len ceil32(mem[_11149])]
                                else:
                                    require idx + 1 < mem[_7910]
                                    _10539 = mem[(32 * idx + 1) + _7910 + 32]
                                    require idx < mem[_7911]
                                    require idx < mem[_7910]
                                    if not mem[(32 * idx) + _7911 + 32]:
                                        _11502 = mem[(32 * idx) + _7910 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10329
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_10539)
                                        require ext_code.size(address(_11502))
                                        call address(_11502).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10329, 0, address(_10539)
                                    else:
                                        _11504 = mem[(32 * idx) + _7910 + 32]
                                        _11505 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11505 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11505 + 36] = _10329
                                        mem[_11505 + 68] = 0
                                        mem[_11505 + 100] = address(_10539)
                                        mem[_11505 + 132] = 128
                                        mem[_11505 + 164] = mem[_11505]
                                        s = 0
                                        while s < mem[_11505]:
                                            mem[s + _11505 + 196] = mem[s + _11505 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11505]) > mem[_11505]:
                                            mem[mem[_11505] + _11505 + 196] = 0
                                        require ext_code.size(address(_11504))
                                        call address(_11504).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10329, 0, address(_10539), 128, mem[_11505], mem[_11505 + 196 len ceil32(mem[_11505])]
                        else:
                            _10330 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                            if mem[(32 * idx) + _7909 + 44 len 20] == mem[(32 * idx + 1) + _7909 + 44 len 20]:
                                if idx >= mem[_7909] - 2:
                                    require idx < mem[_7911]
                                    require idx < mem[_7910]
                                    if not mem[(32 * idx) + _7911 + 32]:
                                        _11152 = mem[(32 * idx) + _7910 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10330
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_11152))
                                        call address(_11152).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10330, this.address
                                    else:
                                        _11154 = mem[(32 * idx) + _7910 + 32]
                                        _11155 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11155 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11155 + 36] = 0
                                        mem[_11155 + 68] = _10330
                                        mem[_11155 + 100] = this.address
                                        mem[_11155 + 132] = 128
                                        mem[_11155 + 164] = mem[_11155]
                                        s = 0
                                        while s < mem[_11155]:
                                            mem[s + _11155 + 196] = mem[s + _11155 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11155]) > mem[_11155]:
                                            mem[mem[_11155] + _11155 + 196] = 0
                                        require ext_code.size(address(_11154))
                                        call address(_11154).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10330, address(this.address), 128, mem[_11155], mem[_11155 + 196 len ceil32(mem[_11155])]
                                else:
                                    require idx + 1 < mem[_7910]
                                    _10541 = mem[(32 * idx + 1) + _7910 + 32]
                                    require idx < mem[_7911]
                                    require idx < mem[_7910]
                                    if not mem[(32 * idx) + _7911 + 32]:
                                        _11507 = mem[(32 * idx) + _7910 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _10330
                                        mem[mem[64] + 68] = address(_10541)
                                        require ext_code.size(address(_11507))
                                        call address(_11507).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _10330, address(_10541)
                                    else:
                                        _11509 = mem[(32 * idx) + _7910 + 32]
                                        _11510 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11510 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11510 + 36] = 0
                                        mem[_11510 + 68] = _10330
                                        mem[_11510 + 100] = address(_10541)
                                        mem[_11510 + 132] = 128
                                        mem[_11510 + 164] = mem[_11510]
                                        s = 0
                                        while s < mem[_11510]:
                                            mem[s + _11510 + 196] = mem[s + _11510 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11510]) > mem[_11510]:
                                            mem[mem[_11510] + _11510 + 196] = 0
                                        require ext_code.size(address(_11509))
                                        call address(_11509).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _10330, address(_10541), 128, mem[_11510], mem[_11510 + 196 len ceil32(mem[_11510])]
                            else:
                                if idx >= mem[_7909] - 2:
                                    require idx < mem[_7911]
                                    require idx < mem[_7910]
                                    if not mem[(32 * idx) + _7911 + 32]:
                                        _11158 = mem[(32 * idx) + _7910 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10330
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_11158))
                                        call address(_11158).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10330, 0, this.address
                                    else:
                                        _11160 = mem[(32 * idx) + _7910 + 32]
                                        _11161 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11161 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11161 + 36] = _10330
                                        mem[_11161 + 68] = 0
                                        mem[_11161 + 100] = this.address
                                        mem[_11161 + 132] = 128
                                        mem[_11161 + 164] = mem[_11161]
                                        s = 0
                                        while s < mem[_11161]:
                                            mem[s + _11161 + 196] = mem[s + _11161 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11161]) > mem[_11161]:
                                            mem[mem[_11161] + _11161 + 196] = 0
                                        require ext_code.size(address(_11160))
                                        call address(_11160).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10330, 0, address(this.address), 128, mem[_11161], mem[_11161 + 196 len ceil32(mem[_11161])]
                                else:
                                    require idx + 1 < mem[_7910]
                                    _10543 = mem[(32 * idx + 1) + _7910 + 32]
                                    require idx < mem[_7911]
                                    require idx < mem[_7910]
                                    if not mem[(32 * idx) + _7911 + 32]:
                                        _11512 = mem[(32 * idx) + _7910 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _10330
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_10543)
                                        require ext_code.size(address(_11512))
                                        call address(_11512).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _10330, 0, address(_10543)
                                    else:
                                        _11514 = mem[(32 * idx) + _7910 + 32]
                                        _11515 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_11515 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_11515 + 36] = _10330
                                        mem[_11515 + 68] = 0
                                        mem[_11515 + 100] = address(_10543)
                                        mem[_11515 + 132] = 128
                                        mem[_11515 + 164] = mem[_11515]
                                        s = 0
                                        while s < mem[_11515]:
                                            mem[s + _11515 + 196] = mem[s + _11515 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_11515]) > mem[_11515]:
                                            mem[mem[_11515] + _11515 + 196] = 0
                                        require ext_code.size(address(_11514))
                                        call address(_11514).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _10330, 0, address(_10543), 128, mem[_11515], mem[_11515 + 196 len ceil32(mem[_11515])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                    _10249 = mem[64]
                    mem[mem[64]] = 32
                    _10273 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    idx = 0
                    s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
                    t = mem[64] + 64
                    while idx < _10273:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _10249 + (32 * _10273) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                _8039 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                mem[_8039] = ('cd', 68).length
                mem[_8039 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                mem[_8039 + (32 * ('cd', 68).length) + 32] = 0
                _8040 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
                mem[_8040] = ('cd', 100).length
                mem[_8040 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                mem[_8040 + (32 * ('cd', 100).length) + 32] = 0
                _8041 = mem[64]
                mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                mem[_8041] = ('cd', 164).length
                mem[_8041 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                mem[_8041 + (32 * ('cd', 164).length) + 32] = 0
                idx = 0
                while idx < ('cd', 68).length - 1:
                    require idx < mem[_8039]
                    require idx + 1 < mem[_8039]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if mem[(32 * idx) + _8039 + 44 len 20] < mem[(32 * idx + 1) + _8039 + 44 len 20]:
                        _10331 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                        if mem[(32 * idx) + _8039 + 44 len 20] == mem[(32 * idx) + _8039 + 44 len 20]:
                            if idx >= mem[_8039] - 2:
                                require idx < mem[_8041]
                                require idx < mem[_8040]
                                if not mem[(32 * idx) + _8041 + 32]:
                                    _11165 = mem[(32 * idx) + _8040 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10331
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11165))
                                    call address(_11165).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10331, this.address
                                else:
                                    _11167 = mem[(32 * idx) + _8040 + 32]
                                    _11168 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11168 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11168 + 36] = 0
                                    mem[_11168 + 68] = _10331
                                    mem[_11168 + 100] = this.address
                                    mem[_11168 + 132] = 128
                                    mem[_11168 + 164] = mem[_11168]
                                    s = 0
                                    while s < mem[_11168]:
                                        mem[s + _11168 + 196] = mem[s + _11168 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11168]) > mem[_11168]:
                                        mem[mem[_11168] + _11168 + 196] = 0
                                    require ext_code.size(address(_11167))
                                    call address(_11167).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10331, address(this.address), 128, mem[_11168], mem[_11168 + 196 len ceil32(mem[_11168])]
                            else:
                                require idx + 1 < mem[_8040]
                                _10545 = mem[(32 * idx + 1) + _8040 + 32]
                                require idx < mem[_8041]
                                require idx < mem[_8040]
                                if not mem[(32 * idx) + _8041 + 32]:
                                    _11517 = mem[(32 * idx) + _8040 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10331
                                    mem[mem[64] + 68] = address(_10545)
                                    require ext_code.size(address(_11517))
                                    call address(_11517).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10331, address(_10545)
                                else:
                                    _11519 = mem[(32 * idx) + _8040 + 32]
                                    _11520 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11520 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11520 + 36] = 0
                                    mem[_11520 + 68] = _10331
                                    mem[_11520 + 100] = address(_10545)
                                    mem[_11520 + 132] = 128
                                    mem[_11520 + 164] = mem[_11520]
                                    s = 0
                                    while s < mem[_11520]:
                                        mem[s + _11520 + 196] = mem[s + _11520 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11520]) > mem[_11520]:
                                        mem[mem[_11520] + _11520 + 196] = 0
                                    require ext_code.size(address(_11519))
                                    call address(_11519).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10331, address(_10545), 128, mem[_11520], mem[_11520 + 196 len ceil32(mem[_11520])]
                        else:
                            if idx >= mem[_8039] - 2:
                                require idx < mem[_8041]
                                require idx < mem[_8040]
                                if not mem[(32 * idx) + _8041 + 32]:
                                    _11171 = mem[(32 * idx) + _8040 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10331
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11171))
                                    call address(_11171).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10331, 0, this.address
                                else:
                                    _11173 = mem[(32 * idx) + _8040 + 32]
                                    _11174 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11174 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11174 + 36] = _10331
                                    mem[_11174 + 68] = 0
                                    mem[_11174 + 100] = this.address
                                    mem[_11174 + 132] = 128
                                    mem[_11174 + 164] = mem[_11174]
                                    s = 0
                                    while s < mem[_11174]:
                                        mem[s + _11174 + 196] = mem[s + _11174 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11174]) > mem[_11174]:
                                        mem[mem[_11174] + _11174 + 196] = 0
                                    require ext_code.size(address(_11173))
                                    call address(_11173).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10331, 0, address(this.address), 128, mem[_11174], mem[_11174 + 196 len ceil32(mem[_11174])]
                            else:
                                require idx + 1 < mem[_8040]
                                _10547 = mem[(32 * idx + 1) + _8040 + 32]
                                require idx < mem[_8041]
                                require idx < mem[_8040]
                                if not mem[(32 * idx) + _8041 + 32]:
                                    _11522 = mem[(32 * idx) + _8040 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10331
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_10547)
                                    require ext_code.size(address(_11522))
                                    call address(_11522).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10331, 0, address(_10547)
                                else:
                                    _11524 = mem[(32 * idx) + _8040 + 32]
                                    _11525 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11525 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11525 + 36] = _10331
                                    mem[_11525 + 68] = 0
                                    mem[_11525 + 100] = address(_10547)
                                    mem[_11525 + 132] = 128
                                    mem[_11525 + 164] = mem[_11525]
                                    s = 0
                                    while s < mem[_11525]:
                                        mem[s + _11525 + 196] = mem[s + _11525 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11525]) > mem[_11525]:
                                        mem[mem[_11525] + _11525 + 196] = 0
                                    require ext_code.size(address(_11524))
                                    call address(_11524).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10331, 0, address(_10547), 128, mem[_11525], mem[_11525 + 196 len ceil32(mem[_11525])]
                    else:
                        _10332 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                        if mem[(32 * idx) + _8039 + 44 len 20] == mem[(32 * idx + 1) + _8039 + 44 len 20]:
                            if idx >= mem[_8039] - 2:
                                require idx < mem[_8041]
                                require idx < mem[_8040]
                                if not mem[(32 * idx) + _8041 + 32]:
                                    _11177 = mem[(32 * idx) + _8040 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10332
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11177))
                                    call address(_11177).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10332, this.address
                                else:
                                    _11179 = mem[(32 * idx) + _8040 + 32]
                                    _11180 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11180 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11180 + 36] = 0
                                    mem[_11180 + 68] = _10332
                                    mem[_11180 + 100] = this.address
                                    mem[_11180 + 132] = 128
                                    mem[_11180 + 164] = mem[_11180]
                                    s = 0
                                    while s < mem[_11180]:
                                        mem[s + _11180 + 196] = mem[s + _11180 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11180]) > mem[_11180]:
                                        mem[mem[_11180] + _11180 + 196] = 0
                                    require ext_code.size(address(_11179))
                                    call address(_11179).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10332, address(this.address), 128, mem[_11180], mem[_11180 + 196 len ceil32(mem[_11180])]
                            else:
                                require idx + 1 < mem[_8040]
                                _10549 = mem[(32 * idx + 1) + _8040 + 32]
                                require idx < mem[_8041]
                                require idx < mem[_8040]
                                if not mem[(32 * idx) + _8041 + 32]:
                                    _11527 = mem[(32 * idx) + _8040 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10332
                                    mem[mem[64] + 68] = address(_10549)
                                    require ext_code.size(address(_11527))
                                    call address(_11527).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10332, address(_10549)
                                else:
                                    _11529 = mem[(32 * idx) + _8040 + 32]
                                    _11530 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11530 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11530 + 36] = 0
                                    mem[_11530 + 68] = _10332
                                    mem[_11530 + 100] = address(_10549)
                                    mem[_11530 + 132] = 128
                                    mem[_11530 + 164] = mem[_11530]
                                    s = 0
                                    while s < mem[_11530]:
                                        mem[s + _11530 + 196] = mem[s + _11530 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11530]) > mem[_11530]:
                                        mem[mem[_11530] + _11530 + 196] = 0
                                    require ext_code.size(address(_11529))
                                    call address(_11529).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10332, address(_10549), 128, mem[_11530], mem[_11530 + 196 len ceil32(mem[_11530])]
                        else:
                            if idx >= mem[_8039] - 2:
                                require idx < mem[_8041]
                                require idx < mem[_8040]
                                if not mem[(32 * idx) + _8041 + 32]:
                                    _11183 = mem[(32 * idx) + _8040 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10332
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11183))
                                    call address(_11183).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10332, 0, this.address
                                else:
                                    _11185 = mem[(32 * idx) + _8040 + 32]
                                    _11186 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11186 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11186 + 36] = _10332
                                    mem[_11186 + 68] = 0
                                    mem[_11186 + 100] = this.address
                                    mem[_11186 + 132] = 128
                                    mem[_11186 + 164] = mem[_11186]
                                    s = 0
                                    while s < mem[_11186]:
                                        mem[s + _11186 + 196] = mem[s + _11186 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11186]) > mem[_11186]:
                                        mem[mem[_11186] + _11186 + 196] = 0
                                    require ext_code.size(address(_11185))
                                    call address(_11185).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10332, 0, address(this.address), 128, mem[_11186], mem[_11186 + 196 len ceil32(mem[_11186])]
                            else:
                                require idx + 1 < mem[_8040]
                                _10551 = mem[(32 * idx + 1) + _8040 + 32]
                                require idx < mem[_8041]
                                require idx < mem[_8040]
                                if not mem[(32 * idx) + _8041 + 32]:
                                    _11532 = mem[(32 * idx) + _8040 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10332
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_10551)
                                    require ext_code.size(address(_11532))
                                    call address(_11532).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10332, 0, address(_10551)
                                else:
                                    _11534 = mem[(32 * idx) + _8040 + 32]
                                    _11535 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11535 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11535 + 36] = _10332
                                    mem[_11535 + 68] = 0
                                    mem[_11535 + 100] = address(_10551)
                                    mem[_11535 + 132] = 128
                                    mem[_11535 + 164] = mem[_11535]
                                    s = 0
                                    while s < mem[_11535]:
                                        mem[s + _11535 + 196] = mem[s + _11535 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11535]) > mem[_11535]:
                                        mem[mem[_11535] + _11535 + 196] = 0
                                    require ext_code.size(address(_11534))
                                    call address(_11534).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10332, 0, address(_10551), 128, mem[_11535], mem[_11535 + 196 len ceil32(mem[_11535])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                _10251 = mem[64]
                mem[mem[64]] = 32
                _10274 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                idx = 0
                s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
                t = mem[64] + 64
                while idx < _10274:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _10251 + (32 * _10274) + -mem[64] + 64
            _7871 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_7871] = return_data.size
            mem[_7871 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not return_data.size:
                _7912 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                mem[_7912] = ('cd', 68).length
                mem[_7912 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                mem[_7912 + (32 * ('cd', 68).length) + 32] = 0
                _7913 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
                mem[_7913] = ('cd', 100).length
                mem[_7913 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                mem[_7913 + (32 * ('cd', 100).length) + 32] = 0
                _7914 = mem[64]
                mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                mem[_7914] = ('cd', 164).length
                mem[_7914 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                mem[_7914 + (32 * ('cd', 164).length) + 32] = 0
                idx = 0
                while idx < ('cd', 68).length - 1:
                    require idx < mem[_7912]
                    require idx + 1 < mem[_7912]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if mem[(32 * idx) + _7912 + 44 len 20] < mem[(32 * idx + 1) + _7912 + 44 len 20]:
                        _10333 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                        if mem[(32 * idx) + _7912 + 44 len 20] == mem[(32 * idx) + _7912 + 44 len 20]:
                            if idx >= mem[_7912] - 2:
                                require idx < mem[_7914]
                                require idx < mem[_7913]
                                if not mem[(32 * idx) + _7914 + 32]:
                                    _11190 = mem[(32 * idx) + _7913 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10333
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11190))
                                    call address(_11190).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10333, this.address
                                else:
                                    _11192 = mem[(32 * idx) + _7913 + 32]
                                    _11193 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11193 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11193 + 36] = 0
                                    mem[_11193 + 68] = _10333
                                    mem[_11193 + 100] = this.address
                                    mem[_11193 + 132] = 128
                                    mem[_11193 + 164] = mem[_11193]
                                    s = 0
                                    while s < mem[_11193]:
                                        mem[s + _11193 + 196] = mem[s + _11193 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11193]) > mem[_11193]:
                                        mem[mem[_11193] + _11193 + 196] = 0
                                    require ext_code.size(address(_11192))
                                    call address(_11192).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10333, address(this.address), 128, mem[_11193], mem[_11193 + 196 len ceil32(mem[_11193])]
                            else:
                                require idx + 1 < mem[_7913]
                                _10553 = mem[(32 * idx + 1) + _7913 + 32]
                                require idx < mem[_7914]
                                require idx < mem[_7913]
                                if not mem[(32 * idx) + _7914 + 32]:
                                    _11537 = mem[(32 * idx) + _7913 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10333
                                    mem[mem[64] + 68] = address(_10553)
                                    require ext_code.size(address(_11537))
                                    call address(_11537).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10333, address(_10553)
                                else:
                                    _11539 = mem[(32 * idx) + _7913 + 32]
                                    _11540 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11540 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11540 + 36] = 0
                                    mem[_11540 + 68] = _10333
                                    mem[_11540 + 100] = address(_10553)
                                    mem[_11540 + 132] = 128
                                    mem[_11540 + 164] = mem[_11540]
                                    s = 0
                                    while s < mem[_11540]:
                                        mem[s + _11540 + 196] = mem[s + _11540 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11540]) > mem[_11540]:
                                        mem[mem[_11540] + _11540 + 196] = 0
                                    require ext_code.size(address(_11539))
                                    call address(_11539).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10333, address(_10553), 128, mem[_11540], mem[_11540 + 196 len ceil32(mem[_11540])]
                        else:
                            if idx >= mem[_7912] - 2:
                                require idx < mem[_7914]
                                require idx < mem[_7913]
                                if not mem[(32 * idx) + _7914 + 32]:
                                    _11196 = mem[(32 * idx) + _7913 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10333
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11196))
                                    call address(_11196).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10333, 0, this.address
                                else:
                                    _11198 = mem[(32 * idx) + _7913 + 32]
                                    _11199 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11199 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11199 + 36] = _10333
                                    mem[_11199 + 68] = 0
                                    mem[_11199 + 100] = this.address
                                    mem[_11199 + 132] = 128
                                    mem[_11199 + 164] = mem[_11199]
                                    s = 0
                                    while s < mem[_11199]:
                                        mem[s + _11199 + 196] = mem[s + _11199 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11199]) > mem[_11199]:
                                        mem[mem[_11199] + _11199 + 196] = 0
                                    require ext_code.size(address(_11198))
                                    call address(_11198).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10333, 0, address(this.address), 128, mem[_11199], mem[_11199 + 196 len ceil32(mem[_11199])]
                            else:
                                require idx + 1 < mem[_7913]
                                _10555 = mem[(32 * idx + 1) + _7913 + 32]
                                require idx < mem[_7914]
                                require idx < mem[_7913]
                                if not mem[(32 * idx) + _7914 + 32]:
                                    _11542 = mem[(32 * idx) + _7913 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10333
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_10555)
                                    require ext_code.size(address(_11542))
                                    call address(_11542).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10333, 0, address(_10555)
                                else:
                                    _11544 = mem[(32 * idx) + _7913 + 32]
                                    _11545 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11545 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11545 + 36] = _10333
                                    mem[_11545 + 68] = 0
                                    mem[_11545 + 100] = address(_10555)
                                    mem[_11545 + 132] = 128
                                    mem[_11545 + 164] = mem[_11545]
                                    s = 0
                                    while s < mem[_11545]:
                                        mem[s + _11545 + 196] = mem[s + _11545 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11545]) > mem[_11545]:
                                        mem[mem[_11545] + _11545 + 196] = 0
                                    require ext_code.size(address(_11544))
                                    call address(_11544).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10333, 0, address(_10555), 128, mem[_11545], mem[_11545 + 196 len ceil32(mem[_11545])]
                    else:
                        _10334 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                        if mem[(32 * idx) + _7912 + 44 len 20] == mem[(32 * idx + 1) + _7912 + 44 len 20]:
                            if idx >= mem[_7912] - 2:
                                require idx < mem[_7914]
                                require idx < mem[_7913]
                                if not mem[(32 * idx) + _7914 + 32]:
                                    _11202 = mem[(32 * idx) + _7913 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10334
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11202))
                                    call address(_11202).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10334, this.address
                                else:
                                    _11204 = mem[(32 * idx) + _7913 + 32]
                                    _11205 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11205 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11205 + 36] = 0
                                    mem[_11205 + 68] = _10334
                                    mem[_11205 + 100] = this.address
                                    mem[_11205 + 132] = 128
                                    mem[_11205 + 164] = mem[_11205]
                                    s = 0
                                    while s < mem[_11205]:
                                        mem[s + _11205 + 196] = mem[s + _11205 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11205]) > mem[_11205]:
                                        mem[mem[_11205] + _11205 + 196] = 0
                                    require ext_code.size(address(_11204))
                                    call address(_11204).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10334, address(this.address), 128, mem[_11205], mem[_11205 + 196 len ceil32(mem[_11205])]
                            else:
                                require idx + 1 < mem[_7913]
                                _10557 = mem[(32 * idx + 1) + _7913 + 32]
                                require idx < mem[_7914]
                                require idx < mem[_7913]
                                if not mem[(32 * idx) + _7914 + 32]:
                                    _11547 = mem[(32 * idx) + _7913 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10334
                                    mem[mem[64] + 68] = address(_10557)
                                    require ext_code.size(address(_11547))
                                    call address(_11547).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10334, address(_10557)
                                else:
                                    _11549 = mem[(32 * idx) + _7913 + 32]
                                    _11550 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11550 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11550 + 36] = 0
                                    mem[_11550 + 68] = _10334
                                    mem[_11550 + 100] = address(_10557)
                                    mem[_11550 + 132] = 128
                                    mem[_11550 + 164] = mem[_11550]
                                    s = 0
                                    while s < mem[_11550]:
                                        mem[s + _11550 + 196] = mem[s + _11550 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11550]) > mem[_11550]:
                                        mem[mem[_11550] + _11550 + 196] = 0
                                    require ext_code.size(address(_11549))
                                    call address(_11549).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10334, address(_10557), 128, mem[_11550], mem[_11550 + 196 len ceil32(mem[_11550])]
                        else:
                            if idx >= mem[_7912] - 2:
                                require idx < mem[_7914]
                                require idx < mem[_7913]
                                if not mem[(32 * idx) + _7914 + 32]:
                                    _11208 = mem[(32 * idx) + _7913 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10334
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11208))
                                    call address(_11208).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10334, 0, this.address
                                else:
                                    _11210 = mem[(32 * idx) + _7913 + 32]
                                    _11211 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11211 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11211 + 36] = _10334
                                    mem[_11211 + 68] = 0
                                    mem[_11211 + 100] = this.address
                                    mem[_11211 + 132] = 128
                                    mem[_11211 + 164] = mem[_11211]
                                    s = 0
                                    while s < mem[_11211]:
                                        mem[s + _11211 + 196] = mem[s + _11211 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11211]) > mem[_11211]:
                                        mem[mem[_11211] + _11211 + 196] = 0
                                    require ext_code.size(address(_11210))
                                    call address(_11210).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10334, 0, address(this.address), 128, mem[_11211], mem[_11211 + 196 len ceil32(mem[_11211])]
                            else:
                                require idx + 1 < mem[_7913]
                                _10559 = mem[(32 * idx + 1) + _7913 + 32]
                                require idx < mem[_7914]
                                require idx < mem[_7913]
                                if not mem[(32 * idx) + _7914 + 32]:
                                    _11552 = mem[(32 * idx) + _7913 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10334
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_10559)
                                    require ext_code.size(address(_11552))
                                    call address(_11552).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10334, 0, address(_10559)
                                else:
                                    _11554 = mem[(32 * idx) + _7913 + 32]
                                    _11555 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11555 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11555 + 36] = _10334
                                    mem[_11555 + 68] = 0
                                    mem[_11555 + 100] = address(_10559)
                                    mem[_11555 + 132] = 128
                                    mem[_11555 + 164] = mem[_11555]
                                    s = 0
                                    while s < mem[_11555]:
                                        mem[s + _11555 + 196] = mem[s + _11555 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11555]) > mem[_11555]:
                                        mem[mem[_11555] + _11555 + 196] = 0
                                    require ext_code.size(address(_11554))
                                    call address(_11554).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10334, 0, address(_10559), 128, mem[_11555], mem[_11555 + 196 len ceil32(mem[_11555])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                _10253 = mem[64]
                mem[mem[64]] = 32
                _10275 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                idx = 0
                s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
                t = mem[64] + 64
                while idx < _10275:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _10253 + (32 * _10275) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_7871 + 32] == bool(mem[_7871 + 32])
            if not mem[_7871 + 32]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _8044 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
            mem[_8044] = ('cd', 68).length
            mem[_8044 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
            mem[_8044 + (32 * ('cd', 68).length) + 32] = 0
            _8045 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
            mem[_8045] = ('cd', 100).length
            mem[_8045 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
            mem[_8045 + (32 * ('cd', 100).length) + 32] = 0
            _8046 = mem[64]
            mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
            mem[_8046] = ('cd', 164).length
            mem[_8046 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
            mem[_8046 + (32 * ('cd', 164).length) + 32] = 0
            idx = 0
            while idx < ('cd', 68).length - 1:
                require idx < mem[_8044]
                require idx + 1 < mem[_8044]
                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                if mem[(32 * idx) + _8044 + 44 len 20] < mem[(32 * idx + 1) + _8044 + 44 len 20]:
                    _10335 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                    if mem[(32 * idx) + _8044 + 44 len 20] == mem[(32 * idx) + _8044 + 44 len 20]:
                        if idx >= mem[_8044] - 2:
                            require idx < mem[_8046]
                            require idx < mem[_8045]
                            if not mem[(32 * idx) + _8046 + 32]:
                                _11215 = mem[(32 * idx) + _8045 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10335
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11215))
                                call address(_11215).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10335, this.address
                            else:
                                _11217 = mem[(32 * idx) + _8045 + 32]
                                _11218 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11218 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11218 + 36] = 0
                                mem[_11218 + 68] = _10335
                                mem[_11218 + 100] = this.address
                                mem[_11218 + 132] = 128
                                mem[_11218 + 164] = mem[_11218]
                                s = 0
                                while s < mem[_11218]:
                                    mem[s + _11218 + 196] = mem[s + _11218 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11218]) > mem[_11218]:
                                    mem[mem[_11218] + _11218 + 196] = 0
                                require ext_code.size(address(_11217))
                                call address(_11217).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10335, address(this.address), 128, mem[_11218], mem[_11218 + 196 len ceil32(mem[_11218])]
                        else:
                            require idx + 1 < mem[_8045]
                            _10561 = mem[(32 * idx + 1) + _8045 + 32]
                            require idx < mem[_8046]
                            require idx < mem[_8045]
                            if not mem[(32 * idx) + _8046 + 32]:
                                _11557 = mem[(32 * idx) + _8045 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10335
                                mem[mem[64] + 68] = address(_10561)
                                require ext_code.size(address(_11557))
                                call address(_11557).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10335, address(_10561)
                            else:
                                _11559 = mem[(32 * idx) + _8045 + 32]
                                _11560 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11560 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11560 + 36] = 0
                                mem[_11560 + 68] = _10335
                                mem[_11560 + 100] = address(_10561)
                                mem[_11560 + 132] = 128
                                mem[_11560 + 164] = mem[_11560]
                                s = 0
                                while s < mem[_11560]:
                                    mem[s + _11560 + 196] = mem[s + _11560 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11560]) > mem[_11560]:
                                    mem[mem[_11560] + _11560 + 196] = 0
                                require ext_code.size(address(_11559))
                                call address(_11559).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10335, address(_10561), 128, mem[_11560], mem[_11560 + 196 len ceil32(mem[_11560])]
                    else:
                        if idx >= mem[_8044] - 2:
                            require idx < mem[_8046]
                            require idx < mem[_8045]
                            if not mem[(32 * idx) + _8046 + 32]:
                                _11221 = mem[(32 * idx) + _8045 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10335
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11221))
                                call address(_11221).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10335, 0, this.address
                            else:
                                _11223 = mem[(32 * idx) + _8045 + 32]
                                _11224 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11224 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11224 + 36] = _10335
                                mem[_11224 + 68] = 0
                                mem[_11224 + 100] = this.address
                                mem[_11224 + 132] = 128
                                mem[_11224 + 164] = mem[_11224]
                                s = 0
                                while s < mem[_11224]:
                                    mem[s + _11224 + 196] = mem[s + _11224 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11224]) > mem[_11224]:
                                    mem[mem[_11224] + _11224 + 196] = 0
                                require ext_code.size(address(_11223))
                                call address(_11223).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10335, 0, address(this.address), 128, mem[_11224], mem[_11224 + 196 len ceil32(mem[_11224])]
                        else:
                            require idx + 1 < mem[_8045]
                            _10563 = mem[(32 * idx + 1) + _8045 + 32]
                            require idx < mem[_8046]
                            require idx < mem[_8045]
                            if not mem[(32 * idx) + _8046 + 32]:
                                _11562 = mem[(32 * idx) + _8045 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10335
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_10563)
                                require ext_code.size(address(_11562))
                                call address(_11562).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10335, 0, address(_10563)
                            else:
                                _11564 = mem[(32 * idx) + _8045 + 32]
                                _11565 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11565 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11565 + 36] = _10335
                                mem[_11565 + 68] = 0
                                mem[_11565 + 100] = address(_10563)
                                mem[_11565 + 132] = 128
                                mem[_11565 + 164] = mem[_11565]
                                s = 0
                                while s < mem[_11565]:
                                    mem[s + _11565 + 196] = mem[s + _11565 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11565]) > mem[_11565]:
                                    mem[mem[_11565] + _11565 + 196] = 0
                                require ext_code.size(address(_11564))
                                call address(_11564).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10335, 0, address(_10563), 128, mem[_11565], mem[_11565 + 196 len ceil32(mem[_11565])]
                else:
                    _10336 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                    if mem[(32 * idx) + _8044 + 44 len 20] == mem[(32 * idx + 1) + _8044 + 44 len 20]:
                        if idx >= mem[_8044] - 2:
                            require idx < mem[_8046]
                            require idx < mem[_8045]
                            if not mem[(32 * idx) + _8046 + 32]:
                                _11227 = mem[(32 * idx) + _8045 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10336
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11227))
                                call address(_11227).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10336, this.address
                            else:
                                _11229 = mem[(32 * idx) + _8045 + 32]
                                _11230 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11230 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11230 + 36] = 0
                                mem[_11230 + 68] = _10336
                                mem[_11230 + 100] = this.address
                                mem[_11230 + 132] = 128
                                mem[_11230 + 164] = mem[_11230]
                                s = 0
                                while s < mem[_11230]:
                                    mem[s + _11230 + 196] = mem[s + _11230 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11230]) > mem[_11230]:
                                    mem[mem[_11230] + _11230 + 196] = 0
                                require ext_code.size(address(_11229))
                                call address(_11229).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10336, address(this.address), 128, mem[_11230], mem[_11230 + 196 len ceil32(mem[_11230])]
                        else:
                            require idx + 1 < mem[_8045]
                            _10565 = mem[(32 * idx + 1) + _8045 + 32]
                            require idx < mem[_8046]
                            require idx < mem[_8045]
                            if not mem[(32 * idx) + _8046 + 32]:
                                _11567 = mem[(32 * idx) + _8045 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10336
                                mem[mem[64] + 68] = address(_10565)
                                require ext_code.size(address(_11567))
                                call address(_11567).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10336, address(_10565)
                            else:
                                _11569 = mem[(32 * idx) + _8045 + 32]
                                _11570 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11570 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11570 + 36] = 0
                                mem[_11570 + 68] = _10336
                                mem[_11570 + 100] = address(_10565)
                                mem[_11570 + 132] = 128
                                mem[_11570 + 164] = mem[_11570]
                                s = 0
                                while s < mem[_11570]:
                                    mem[s + _11570 + 196] = mem[s + _11570 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11570]) > mem[_11570]:
                                    mem[mem[_11570] + _11570 + 196] = 0
                                require ext_code.size(address(_11569))
                                call address(_11569).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10336, address(_10565), 128, mem[_11570], mem[_11570 + 196 len ceil32(mem[_11570])]
                    else:
                        if idx >= mem[_8044] - 2:
                            require idx < mem[_8046]
                            require idx < mem[_8045]
                            if not mem[(32 * idx) + _8046 + 32]:
                                _11233 = mem[(32 * idx) + _8045 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10336
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11233))
                                call address(_11233).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10336, 0, this.address
                            else:
                                _11235 = mem[(32 * idx) + _8045 + 32]
                                _11236 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11236 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11236 + 36] = _10336
                                mem[_11236 + 68] = 0
                                mem[_11236 + 100] = this.address
                                mem[_11236 + 132] = 128
                                mem[_11236 + 164] = mem[_11236]
                                s = 0
                                while s < mem[_11236]:
                                    mem[s + _11236 + 196] = mem[s + _11236 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11236]) > mem[_11236]:
                                    mem[mem[_11236] + _11236 + 196] = 0
                                require ext_code.size(address(_11235))
                                call address(_11235).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10336, 0, address(this.address), 128, mem[_11236], mem[_11236 + 196 len ceil32(mem[_11236])]
                        else:
                            require idx + 1 < mem[_8045]
                            _10567 = mem[(32 * idx + 1) + _8045 + 32]
                            require idx < mem[_8046]
                            require idx < mem[_8045]
                            if not mem[(32 * idx) + _8046 + 32]:
                                _11572 = mem[(32 * idx) + _8045 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10336
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_10567)
                                require ext_code.size(address(_11572))
                                call address(_11572).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10336, 0, address(_10567)
                            else:
                                _11574 = mem[(32 * idx) + _8045 + 32]
                                _11575 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11575 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11575 + 36] = _10336
                                mem[_11575 + 68] = 0
                                mem[_11575 + 100] = address(_10567)
                                mem[_11575 + 132] = 128
                                mem[_11575 + 164] = mem[_11575]
                                s = 0
                                while s < mem[_11575]:
                                    mem[s + _11575 + 196] = mem[s + _11575 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11575]) > mem[_11575]:
                                    mem[mem[_11575] + _11575 + 196] = 0
                                require ext_code.size(address(_11574))
                                call address(_11574).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10336, 0, address(_10567), 128, mem[_11575], mem[_11575 + 196 len ceil32(mem[_11575])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            _10255 = mem[64]
            mem[mem[64]] = 32
            _10276 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            idx = 0
            s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
            t = mem[64] + 64
            while idx < _10276:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _10255 + (32 * _10276) + -mem[64] + 64
        mem[_5364 + _5316 + 100] = 0
        call address(('cd', 68)[0]).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _5364 + _5316 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not mem[96]:
                _7915 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                mem[_7915] = ('cd', 68).length
                mem[_7915 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                mem[_7915 + (32 * ('cd', 68).length) + 32] = 0
                _7916 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
                mem[_7916] = ('cd', 100).length
                mem[_7916 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                mem[_7916 + (32 * ('cd', 100).length) + 32] = 0
                _7917 = mem[64]
                mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                mem[_7917] = ('cd', 164).length
                mem[_7917 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                mem[_7917 + (32 * ('cd', 164).length) + 32] = 0
                idx = 0
                while idx < ('cd', 68).length - 1:
                    require idx < mem[_7915]
                    require idx + 1 < mem[_7915]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if mem[(32 * idx) + _7915 + 44 len 20] < mem[(32 * idx + 1) + _7915 + 44 len 20]:
                        _10337 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                        if mem[(32 * idx) + _7915 + 44 len 20] == mem[(32 * idx) + _7915 + 44 len 20]:
                            if idx >= mem[_7915] - 2:
                                require idx < mem[_7917]
                                require idx < mem[_7916]
                                if not mem[(32 * idx) + _7917 + 32]:
                                    _11240 = mem[(32 * idx) + _7916 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10337
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11240))
                                    call address(_11240).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10337, this.address
                                else:
                                    _11242 = mem[(32 * idx) + _7916 + 32]
                                    _11243 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11243 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11243 + 36] = 0
                                    mem[_11243 + 68] = _10337
                                    mem[_11243 + 100] = this.address
                                    mem[_11243 + 132] = 128
                                    mem[_11243 + 164] = mem[_11243]
                                    s = 0
                                    while s < mem[_11243]:
                                        mem[s + _11243 + 196] = mem[s + _11243 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11243]) > mem[_11243]:
                                        mem[mem[_11243] + _11243 + 196] = 0
                                    require ext_code.size(address(_11242))
                                    call address(_11242).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10337, address(this.address), 128, mem[_11243], mem[_11243 + 196 len ceil32(mem[_11243])]
                            else:
                                require idx + 1 < mem[_7916]
                                _10569 = mem[(32 * idx + 1) + _7916 + 32]
                                require idx < mem[_7917]
                                require idx < mem[_7916]
                                if not mem[(32 * idx) + _7917 + 32]:
                                    _11577 = mem[(32 * idx) + _7916 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10337
                                    mem[mem[64] + 68] = address(_10569)
                                    require ext_code.size(address(_11577))
                                    call address(_11577).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10337, address(_10569)
                                else:
                                    _11579 = mem[(32 * idx) + _7916 + 32]
                                    _11580 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11580 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11580 + 36] = 0
                                    mem[_11580 + 68] = _10337
                                    mem[_11580 + 100] = address(_10569)
                                    mem[_11580 + 132] = 128
                                    mem[_11580 + 164] = mem[_11580]
                                    s = 0
                                    while s < mem[_11580]:
                                        mem[s + _11580 + 196] = mem[s + _11580 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11580]) > mem[_11580]:
                                        mem[mem[_11580] + _11580 + 196] = 0
                                    require ext_code.size(address(_11579))
                                    call address(_11579).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10337, address(_10569), 128, mem[_11580], mem[_11580 + 196 len ceil32(mem[_11580])]
                        else:
                            if idx >= mem[_7915] - 2:
                                require idx < mem[_7917]
                                require idx < mem[_7916]
                                if not mem[(32 * idx) + _7917 + 32]:
                                    _11246 = mem[(32 * idx) + _7916 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10337
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11246))
                                    call address(_11246).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10337, 0, this.address
                                else:
                                    _11248 = mem[(32 * idx) + _7916 + 32]
                                    _11249 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11249 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11249 + 36] = _10337
                                    mem[_11249 + 68] = 0
                                    mem[_11249 + 100] = this.address
                                    mem[_11249 + 132] = 128
                                    mem[_11249 + 164] = mem[_11249]
                                    s = 0
                                    while s < mem[_11249]:
                                        mem[s + _11249 + 196] = mem[s + _11249 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11249]) > mem[_11249]:
                                        mem[mem[_11249] + _11249 + 196] = 0
                                    require ext_code.size(address(_11248))
                                    call address(_11248).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10337, 0, address(this.address), 128, mem[_11249], mem[_11249 + 196 len ceil32(mem[_11249])]
                            else:
                                require idx + 1 < mem[_7916]
                                _10571 = mem[(32 * idx + 1) + _7916 + 32]
                                require idx < mem[_7917]
                                require idx < mem[_7916]
                                if not mem[(32 * idx) + _7917 + 32]:
                                    _11582 = mem[(32 * idx) + _7916 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10337
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_10571)
                                    require ext_code.size(address(_11582))
                                    call address(_11582).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10337, 0, address(_10571)
                                else:
                                    _11584 = mem[(32 * idx) + _7916 + 32]
                                    _11585 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11585 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11585 + 36] = _10337
                                    mem[_11585 + 68] = 0
                                    mem[_11585 + 100] = address(_10571)
                                    mem[_11585 + 132] = 128
                                    mem[_11585 + 164] = mem[_11585]
                                    s = 0
                                    while s < mem[_11585]:
                                        mem[s + _11585 + 196] = mem[s + _11585 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11585]) > mem[_11585]:
                                        mem[mem[_11585] + _11585 + 196] = 0
                                    require ext_code.size(address(_11584))
                                    call address(_11584).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10337, 0, address(_10571), 128, mem[_11585], mem[_11585 + 196 len ceil32(mem[_11585])]
                    else:
                        _10338 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                        if mem[(32 * idx) + _7915 + 44 len 20] == mem[(32 * idx + 1) + _7915 + 44 len 20]:
                            if idx >= mem[_7915] - 2:
                                require idx < mem[_7917]
                                require idx < mem[_7916]
                                if not mem[(32 * idx) + _7917 + 32]:
                                    _11252 = mem[(32 * idx) + _7916 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10338
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11252))
                                    call address(_11252).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10338, this.address
                                else:
                                    _11254 = mem[(32 * idx) + _7916 + 32]
                                    _11255 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11255 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11255 + 36] = 0
                                    mem[_11255 + 68] = _10338
                                    mem[_11255 + 100] = this.address
                                    mem[_11255 + 132] = 128
                                    mem[_11255 + 164] = mem[_11255]
                                    s = 0
                                    while s < mem[_11255]:
                                        mem[s + _11255 + 196] = mem[s + _11255 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11255]) > mem[_11255]:
                                        mem[mem[_11255] + _11255 + 196] = 0
                                    require ext_code.size(address(_11254))
                                    call address(_11254).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10338, address(this.address), 128, mem[_11255], mem[_11255 + 196 len ceil32(mem[_11255])]
                            else:
                                require idx + 1 < mem[_7916]
                                _10573 = mem[(32 * idx + 1) + _7916 + 32]
                                require idx < mem[_7917]
                                require idx < mem[_7916]
                                if not mem[(32 * idx) + _7917 + 32]:
                                    _11587 = mem[(32 * idx) + _7916 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _10338
                                    mem[mem[64] + 68] = address(_10573)
                                    require ext_code.size(address(_11587))
                                    call address(_11587).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _10338, address(_10573)
                                else:
                                    _11589 = mem[(32 * idx) + _7916 + 32]
                                    _11590 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11590 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11590 + 36] = 0
                                    mem[_11590 + 68] = _10338
                                    mem[_11590 + 100] = address(_10573)
                                    mem[_11590 + 132] = 128
                                    mem[_11590 + 164] = mem[_11590]
                                    s = 0
                                    while s < mem[_11590]:
                                        mem[s + _11590 + 196] = mem[s + _11590 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11590]) > mem[_11590]:
                                        mem[mem[_11590] + _11590 + 196] = 0
                                    require ext_code.size(address(_11589))
                                    call address(_11589).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _10338, address(_10573), 128, mem[_11590], mem[_11590 + 196 len ceil32(mem[_11590])]
                        else:
                            if idx >= mem[_7915] - 2:
                                require idx < mem[_7917]
                                require idx < mem[_7916]
                                if not mem[(32 * idx) + _7917 + 32]:
                                    _11258 = mem[(32 * idx) + _7916 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10338
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_11258))
                                    call address(_11258).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10338, 0, this.address
                                else:
                                    _11260 = mem[(32 * idx) + _7916 + 32]
                                    _11261 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11261 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11261 + 36] = _10338
                                    mem[_11261 + 68] = 0
                                    mem[_11261 + 100] = this.address
                                    mem[_11261 + 132] = 128
                                    mem[_11261 + 164] = mem[_11261]
                                    s = 0
                                    while s < mem[_11261]:
                                        mem[s + _11261 + 196] = mem[s + _11261 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11261]) > mem[_11261]:
                                        mem[mem[_11261] + _11261 + 196] = 0
                                    require ext_code.size(address(_11260))
                                    call address(_11260).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10338, 0, address(this.address), 128, mem[_11261], mem[_11261 + 196 len ceil32(mem[_11261])]
                            else:
                                require idx + 1 < mem[_7916]
                                _10575 = mem[(32 * idx + 1) + _7916 + 32]
                                require idx < mem[_7917]
                                require idx < mem[_7916]
                                if not mem[(32 * idx) + _7917 + 32]:
                                    _11592 = mem[(32 * idx) + _7916 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _10338
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_10575)
                                    require ext_code.size(address(_11592))
                                    call address(_11592).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _10338, 0, address(_10575)
                                else:
                                    _11594 = mem[(32 * idx) + _7916 + 32]
                                    _11595 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_11595 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_11595 + 36] = _10338
                                    mem[_11595 + 68] = 0
                                    mem[_11595 + 100] = address(_10575)
                                    mem[_11595 + 132] = 128
                                    mem[_11595 + 164] = mem[_11595]
                                    s = 0
                                    while s < mem[_11595]:
                                        mem[s + _11595 + 196] = mem[s + _11595 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_11595]) > mem[_11595]:
                                        mem[mem[_11595] + _11595 + 196] = 0
                                    require ext_code.size(address(_11594))
                                    call address(_11594).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _10338, 0, address(_10575), 128, mem[_11595], mem[_11595 + 196 len ceil32(mem[_11595])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                _10257 = mem[64]
                mem[mem[64]] = 32
                _10277 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                idx = 0
                s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
                t = mem[64] + 64
                while idx < _10277:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _10257 + (32 * _10277) + -mem[64] + 64
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _8049 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
            mem[_8049] = ('cd', 68).length
            mem[_8049 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
            mem[_8049 + (32 * ('cd', 68).length) + 32] = 0
            _8050 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
            mem[_8050] = ('cd', 100).length
            mem[_8050 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
            mem[_8050 + (32 * ('cd', 100).length) + 32] = 0
            _8051 = mem[64]
            mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
            mem[_8051] = ('cd', 164).length
            mem[_8051 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
            mem[_8051 + (32 * ('cd', 164).length) + 32] = 0
            idx = 0
            while idx < ('cd', 68).length - 1:
                require idx < mem[_8049]
                require idx + 1 < mem[_8049]
                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                if mem[(32 * idx) + _8049 + 44 len 20] < mem[(32 * idx + 1) + _8049 + 44 len 20]:
                    _10339 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                    if mem[(32 * idx) + _8049 + 44 len 20] == mem[(32 * idx) + _8049 + 44 len 20]:
                        if idx >= mem[_8049] - 2:
                            require idx < mem[_8051]
                            require idx < mem[_8050]
                            if not mem[(32 * idx) + _8051 + 32]:
                                _11265 = mem[(32 * idx) + _8050 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10339
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11265))
                                call address(_11265).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10339, this.address
                            else:
                                _11267 = mem[(32 * idx) + _8050 + 32]
                                _11268 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11268 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11268 + 36] = 0
                                mem[_11268 + 68] = _10339
                                mem[_11268 + 100] = this.address
                                mem[_11268 + 132] = 128
                                mem[_11268 + 164] = mem[_11268]
                                s = 0
                                while s < mem[_11268]:
                                    mem[s + _11268 + 196] = mem[s + _11268 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11268]) > mem[_11268]:
                                    mem[mem[_11268] + _11268 + 196] = 0
                                require ext_code.size(address(_11267))
                                call address(_11267).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10339, address(this.address), 128, mem[_11268], mem[_11268 + 196 len ceil32(mem[_11268])]
                        else:
                            require idx + 1 < mem[_8050]
                            _10577 = mem[(32 * idx + 1) + _8050 + 32]
                            require idx < mem[_8051]
                            require idx < mem[_8050]
                            if not mem[(32 * idx) + _8051 + 32]:
                                _11597 = mem[(32 * idx) + _8050 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10339
                                mem[mem[64] + 68] = address(_10577)
                                require ext_code.size(address(_11597))
                                call address(_11597).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10339, address(_10577)
                            else:
                                _11599 = mem[(32 * idx) + _8050 + 32]
                                _11600 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11600 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11600 + 36] = 0
                                mem[_11600 + 68] = _10339
                                mem[_11600 + 100] = address(_10577)
                                mem[_11600 + 132] = 128
                                mem[_11600 + 164] = mem[_11600]
                                s = 0
                                while s < mem[_11600]:
                                    mem[s + _11600 + 196] = mem[s + _11600 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11600]) > mem[_11600]:
                                    mem[mem[_11600] + _11600 + 196] = 0
                                require ext_code.size(address(_11599))
                                call address(_11599).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10339, address(_10577), 128, mem[_11600], mem[_11600 + 196 len ceil32(mem[_11600])]
                    else:
                        if idx >= mem[_8049] - 2:
                            require idx < mem[_8051]
                            require idx < mem[_8050]
                            if not mem[(32 * idx) + _8051 + 32]:
                                _11271 = mem[(32 * idx) + _8050 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10339
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11271))
                                call address(_11271).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10339, 0, this.address
                            else:
                                _11273 = mem[(32 * idx) + _8050 + 32]
                                _11274 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11274 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11274 + 36] = _10339
                                mem[_11274 + 68] = 0
                                mem[_11274 + 100] = this.address
                                mem[_11274 + 132] = 128
                                mem[_11274 + 164] = mem[_11274]
                                s = 0
                                while s < mem[_11274]:
                                    mem[s + _11274 + 196] = mem[s + _11274 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11274]) > mem[_11274]:
                                    mem[mem[_11274] + _11274 + 196] = 0
                                require ext_code.size(address(_11273))
                                call address(_11273).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10339, 0, address(this.address), 128, mem[_11274], mem[_11274 + 196 len ceil32(mem[_11274])]
                        else:
                            require idx + 1 < mem[_8050]
                            _10579 = mem[(32 * idx + 1) + _8050 + 32]
                            require idx < mem[_8051]
                            require idx < mem[_8050]
                            if not mem[(32 * idx) + _8051 + 32]:
                                _11602 = mem[(32 * idx) + _8050 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10339
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_10579)
                                require ext_code.size(address(_11602))
                                call address(_11602).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10339, 0, address(_10579)
                            else:
                                _11604 = mem[(32 * idx) + _8050 + 32]
                                _11605 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11605 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11605 + 36] = _10339
                                mem[_11605 + 68] = 0
                                mem[_11605 + 100] = address(_10579)
                                mem[_11605 + 132] = 128
                                mem[_11605 + 164] = mem[_11605]
                                s = 0
                                while s < mem[_11605]:
                                    mem[s + _11605 + 196] = mem[s + _11605 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11605]) > mem[_11605]:
                                    mem[mem[_11605] + _11605 + 196] = 0
                                require ext_code.size(address(_11604))
                                call address(_11604).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10339, 0, address(_10579), 128, mem[_11605], mem[_11605 + 196 len ceil32(mem[_11605])]
                else:
                    _10340 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                    if mem[(32 * idx) + _8049 + 44 len 20] == mem[(32 * idx + 1) + _8049 + 44 len 20]:
                        if idx >= mem[_8049] - 2:
                            require idx < mem[_8051]
                            require idx < mem[_8050]
                            if not mem[(32 * idx) + _8051 + 32]:
                                _11277 = mem[(32 * idx) + _8050 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10340
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11277))
                                call address(_11277).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10340, this.address
                            else:
                                _11279 = mem[(32 * idx) + _8050 + 32]
                                _11280 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11280 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11280 + 36] = 0
                                mem[_11280 + 68] = _10340
                                mem[_11280 + 100] = this.address
                                mem[_11280 + 132] = 128
                                mem[_11280 + 164] = mem[_11280]
                                s = 0
                                while s < mem[_11280]:
                                    mem[s + _11280 + 196] = mem[s + _11280 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11280]) > mem[_11280]:
                                    mem[mem[_11280] + _11280 + 196] = 0
                                require ext_code.size(address(_11279))
                                call address(_11279).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10340, address(this.address), 128, mem[_11280], mem[_11280 + 196 len ceil32(mem[_11280])]
                        else:
                            require idx + 1 < mem[_8050]
                            _10581 = mem[(32 * idx + 1) + _8050 + 32]
                            require idx < mem[_8051]
                            require idx < mem[_8050]
                            if not mem[(32 * idx) + _8051 + 32]:
                                _11607 = mem[(32 * idx) + _8050 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10340
                                mem[mem[64] + 68] = address(_10581)
                                require ext_code.size(address(_11607))
                                call address(_11607).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10340, address(_10581)
                            else:
                                _11609 = mem[(32 * idx) + _8050 + 32]
                                _11610 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11610 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11610 + 36] = 0
                                mem[_11610 + 68] = _10340
                                mem[_11610 + 100] = address(_10581)
                                mem[_11610 + 132] = 128
                                mem[_11610 + 164] = mem[_11610]
                                s = 0
                                while s < mem[_11610]:
                                    mem[s + _11610 + 196] = mem[s + _11610 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11610]) > mem[_11610]:
                                    mem[mem[_11610] + _11610 + 196] = 0
                                require ext_code.size(address(_11609))
                                call address(_11609).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10340, address(_10581), 128, mem[_11610], mem[_11610 + 196 len ceil32(mem[_11610])]
                    else:
                        if idx >= mem[_8049] - 2:
                            require idx < mem[_8051]
                            require idx < mem[_8050]
                            if not mem[(32 * idx) + _8051 + 32]:
                                _11283 = mem[(32 * idx) + _8050 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10340
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11283))
                                call address(_11283).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10340, 0, this.address
                            else:
                                _11285 = mem[(32 * idx) + _8050 + 32]
                                _11286 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11286 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11286 + 36] = _10340
                                mem[_11286 + 68] = 0
                                mem[_11286 + 100] = this.address
                                mem[_11286 + 132] = 128
                                mem[_11286 + 164] = mem[_11286]
                                s = 0
                                while s < mem[_11286]:
                                    mem[s + _11286 + 196] = mem[s + _11286 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11286]) > mem[_11286]:
                                    mem[mem[_11286] + _11286 + 196] = 0
                                require ext_code.size(address(_11285))
                                call address(_11285).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10340, 0, address(this.address), 128, mem[_11286], mem[_11286 + 196 len ceil32(mem[_11286])]
                        else:
                            require idx + 1 < mem[_8050]
                            _10583 = mem[(32 * idx + 1) + _8050 + 32]
                            require idx < mem[_8051]
                            require idx < mem[_8050]
                            if not mem[(32 * idx) + _8051 + 32]:
                                _11612 = mem[(32 * idx) + _8050 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10340
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_10583)
                                require ext_code.size(address(_11612))
                                call address(_11612).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10340, 0, address(_10583)
                            else:
                                _11614 = mem[(32 * idx) + _8050 + 32]
                                _11615 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11615 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11615 + 36] = _10340
                                mem[_11615 + 68] = 0
                                mem[_11615 + 100] = address(_10583)
                                mem[_11615 + 132] = 128
                                mem[_11615 + 164] = mem[_11615]
                                s = 0
                                while s < mem[_11615]:
                                    mem[s + _11615 + 196] = mem[s + _11615 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11615]) > mem[_11615]:
                                    mem[mem[_11615] + _11615 + 196] = 0
                                require ext_code.size(address(_11614))
                                call address(_11614).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10340, 0, address(_10583), 128, mem[_11615], mem[_11615 + 196 len ceil32(mem[_11615])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            _10259 = mem[64]
            mem[mem[64]] = 32
            _10278 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            idx = 0
            s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
            t = mem[64] + 64
            while idx < _10278:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _10259 + (32 * _10278) + -mem[64] + 64
        _7872 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_7872] = return_data.size
        mem[_7872 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        if not return_data.size:
            _7918 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
            mem[_7918] = ('cd', 68).length
            mem[_7918 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
            mem[_7918 + (32 * ('cd', 68).length) + 32] = 0
            _7919 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
            mem[_7919] = ('cd', 100).length
            mem[_7919 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
            mem[_7919 + (32 * ('cd', 100).length) + 32] = 0
            _7920 = mem[64]
            mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
            mem[_7920] = ('cd', 164).length
            mem[_7920 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
            mem[_7920 + (32 * ('cd', 164).length) + 32] = 0
            idx = 0
            while idx < ('cd', 68).length - 1:
                require idx < mem[_7918]
                require idx + 1 < mem[_7918]
                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                if mem[(32 * idx) + _7918 + 44 len 20] < mem[(32 * idx + 1) + _7918 + 44 len 20]:
                    _10341 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                    if mem[(32 * idx) + _7918 + 44 len 20] == mem[(32 * idx) + _7918 + 44 len 20]:
                        if idx >= mem[_7918] - 2:
                            require idx < mem[_7920]
                            require idx < mem[_7919]
                            if not mem[(32 * idx) + _7920 + 32]:
                                _11290 = mem[(32 * idx) + _7919 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10341
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11290))
                                call address(_11290).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10341, this.address
                            else:
                                _11292 = mem[(32 * idx) + _7919 + 32]
                                _11293 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11293 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11293 + 36] = 0
                                mem[_11293 + 68] = _10341
                                mem[_11293 + 100] = this.address
                                mem[_11293 + 132] = 128
                                mem[_11293 + 164] = mem[_11293]
                                s = 0
                                while s < mem[_11293]:
                                    mem[s + _11293 + 196] = mem[s + _11293 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11293]) > mem[_11293]:
                                    mem[mem[_11293] + _11293 + 196] = 0
                                require ext_code.size(address(_11292))
                                call address(_11292).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10341, address(this.address), 128, mem[_11293], mem[_11293 + 196 len ceil32(mem[_11293])]
                        else:
                            require idx + 1 < mem[_7919]
                            _10585 = mem[(32 * idx + 1) + _7919 + 32]
                            require idx < mem[_7920]
                            require idx < mem[_7919]
                            if not mem[(32 * idx) + _7920 + 32]:
                                _11617 = mem[(32 * idx) + _7919 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10341
                                mem[mem[64] + 68] = address(_10585)
                                require ext_code.size(address(_11617))
                                call address(_11617).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10341, address(_10585)
                            else:
                                _11619 = mem[(32 * idx) + _7919 + 32]
                                _11620 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11620 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11620 + 36] = 0
                                mem[_11620 + 68] = _10341
                                mem[_11620 + 100] = address(_10585)
                                mem[_11620 + 132] = 128
                                mem[_11620 + 164] = mem[_11620]
                                s = 0
                                while s < mem[_11620]:
                                    mem[s + _11620 + 196] = mem[s + _11620 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11620]) > mem[_11620]:
                                    mem[mem[_11620] + _11620 + 196] = 0
                                require ext_code.size(address(_11619))
                                call address(_11619).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10341, address(_10585), 128, mem[_11620], mem[_11620 + 196 len ceil32(mem[_11620])]
                    else:
                        if idx >= mem[_7918] - 2:
                            require idx < mem[_7920]
                            require idx < mem[_7919]
                            if not mem[(32 * idx) + _7920 + 32]:
                                _11296 = mem[(32 * idx) + _7919 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10341
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11296))
                                call address(_11296).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10341, 0, this.address
                            else:
                                _11298 = mem[(32 * idx) + _7919 + 32]
                                _11299 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11299 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11299 + 36] = _10341
                                mem[_11299 + 68] = 0
                                mem[_11299 + 100] = this.address
                                mem[_11299 + 132] = 128
                                mem[_11299 + 164] = mem[_11299]
                                s = 0
                                while s < mem[_11299]:
                                    mem[s + _11299 + 196] = mem[s + _11299 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11299]) > mem[_11299]:
                                    mem[mem[_11299] + _11299 + 196] = 0
                                require ext_code.size(address(_11298))
                                call address(_11298).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10341, 0, address(this.address), 128, mem[_11299], mem[_11299 + 196 len ceil32(mem[_11299])]
                        else:
                            require idx + 1 < mem[_7919]
                            _10587 = mem[(32 * idx + 1) + _7919 + 32]
                            require idx < mem[_7920]
                            require idx < mem[_7919]
                            if not mem[(32 * idx) + _7920 + 32]:
                                _11622 = mem[(32 * idx) + _7919 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10341
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_10587)
                                require ext_code.size(address(_11622))
                                call address(_11622).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10341, 0, address(_10587)
                            else:
                                _11624 = mem[(32 * idx) + _7919 + 32]
                                _11625 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11625 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11625 + 36] = _10341
                                mem[_11625 + 68] = 0
                                mem[_11625 + 100] = address(_10587)
                                mem[_11625 + 132] = 128
                                mem[_11625 + 164] = mem[_11625]
                                s = 0
                                while s < mem[_11625]:
                                    mem[s + _11625 + 196] = mem[s + _11625 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11625]) > mem[_11625]:
                                    mem[mem[_11625] + _11625 + 196] = 0
                                require ext_code.size(address(_11624))
                                call address(_11624).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10341, 0, address(_10587), 128, mem[_11625], mem[_11625 + 196 len ceil32(mem[_11625])]
                else:
                    _10342 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                    if mem[(32 * idx) + _7918 + 44 len 20] == mem[(32 * idx + 1) + _7918 + 44 len 20]:
                        if idx >= mem[_7918] - 2:
                            require idx < mem[_7920]
                            require idx < mem[_7919]
                            if not mem[(32 * idx) + _7920 + 32]:
                                _11302 = mem[(32 * idx) + _7919 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10342
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11302))
                                call address(_11302).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10342, this.address
                            else:
                                _11304 = mem[(32 * idx) + _7919 + 32]
                                _11305 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11305 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11305 + 36] = 0
                                mem[_11305 + 68] = _10342
                                mem[_11305 + 100] = this.address
                                mem[_11305 + 132] = 128
                                mem[_11305 + 164] = mem[_11305]
                                s = 0
                                while s < mem[_11305]:
                                    mem[s + _11305 + 196] = mem[s + _11305 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11305]) > mem[_11305]:
                                    mem[mem[_11305] + _11305 + 196] = 0
                                require ext_code.size(address(_11304))
                                call address(_11304).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10342, address(this.address), 128, mem[_11305], mem[_11305 + 196 len ceil32(mem[_11305])]
                        else:
                            require idx + 1 < mem[_7919]
                            _10589 = mem[(32 * idx + 1) + _7919 + 32]
                            require idx < mem[_7920]
                            require idx < mem[_7919]
                            if not mem[(32 * idx) + _7920 + 32]:
                                _11627 = mem[(32 * idx) + _7919 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _10342
                                mem[mem[64] + 68] = address(_10589)
                                require ext_code.size(address(_11627))
                                call address(_11627).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _10342, address(_10589)
                            else:
                                _11629 = mem[(32 * idx) + _7919 + 32]
                                _11630 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11630 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11630 + 36] = 0
                                mem[_11630 + 68] = _10342
                                mem[_11630 + 100] = address(_10589)
                                mem[_11630 + 132] = 128
                                mem[_11630 + 164] = mem[_11630]
                                s = 0
                                while s < mem[_11630]:
                                    mem[s + _11630 + 196] = mem[s + _11630 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11630]) > mem[_11630]:
                                    mem[mem[_11630] + _11630 + 196] = 0
                                require ext_code.size(address(_11629))
                                call address(_11629).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _10342, address(_10589), 128, mem[_11630], mem[_11630 + 196 len ceil32(mem[_11630])]
                    else:
                        if idx >= mem[_7918] - 2:
                            require idx < mem[_7920]
                            require idx < mem[_7919]
                            if not mem[(32 * idx) + _7920 + 32]:
                                _11308 = mem[(32 * idx) + _7919 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10342
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_11308))
                                call address(_11308).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10342, 0, this.address
                            else:
                                _11310 = mem[(32 * idx) + _7919 + 32]
                                _11311 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11311 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11311 + 36] = _10342
                                mem[_11311 + 68] = 0
                                mem[_11311 + 100] = this.address
                                mem[_11311 + 132] = 128
                                mem[_11311 + 164] = mem[_11311]
                                s = 0
                                while s < mem[_11311]:
                                    mem[s + _11311 + 196] = mem[s + _11311 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11311]) > mem[_11311]:
                                    mem[mem[_11311] + _11311 + 196] = 0
                                require ext_code.size(address(_11310))
                                call address(_11310).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10342, 0, address(this.address), 128, mem[_11311], mem[_11311 + 196 len ceil32(mem[_11311])]
                        else:
                            require idx + 1 < mem[_7919]
                            _10591 = mem[(32 * idx + 1) + _7919 + 32]
                            require idx < mem[_7920]
                            require idx < mem[_7919]
                            if not mem[(32 * idx) + _7920 + 32]:
                                _11632 = mem[(32 * idx) + _7919 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _10342
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_10591)
                                require ext_code.size(address(_11632))
                                call address(_11632).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _10342, 0, address(_10591)
                            else:
                                _11634 = mem[(32 * idx) + _7919 + 32]
                                _11635 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_11635 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_11635 + 36] = _10342
                                mem[_11635 + 68] = 0
                                mem[_11635 + 100] = address(_10591)
                                mem[_11635 + 132] = 128
                                mem[_11635 + 164] = mem[_11635]
                                s = 0
                                while s < mem[_11635]:
                                    mem[s + _11635 + 196] = mem[s + _11635 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_11635]) > mem[_11635]:
                                    mem[mem[_11635] + _11635 + 196] = 0
                                require ext_code.size(address(_11634))
                                call address(_11634).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _10342, 0, address(_10591), 128, mem[_11635], mem[_11635 + 196 len ceil32(mem[_11635])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            _10261 = mem[64]
            mem[mem[64]] = 32
            _10279 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            idx = 0
            s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
            t = mem[64] + 64
            while idx < _10279:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _10261 + (32 * _10279) + -mem[64] + 64
        require return_data.size >= 32
        require mem[_7872 + 32] == bool(mem[_7872 + 32])
        if not mem[_7872 + 32]:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        _8054 = mem[64]
        mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
        mem[_8054] = ('cd', 68).length
        mem[_8054 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
        mem[_8054 + (32 * ('cd', 68).length) + 32] = 0
        _8055 = mem[64]
        mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
        mem[_8055] = ('cd', 100).length
        mem[_8055 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
        mem[_8055 + (32 * ('cd', 100).length) + 32] = 0
        _8056 = mem[64]
        mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
        mem[_8056] = ('cd', 164).length
        mem[_8056 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
        mem[_8056 + (32 * ('cd', 164).length) + 32] = 0
        idx = 0
        while idx < ('cd', 68).length - 1:
            require idx < mem[_8054]
            require idx + 1 < mem[_8054]
            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            if mem[(32 * idx) + _8054 + 44 len 20] < mem[(32 * idx + 1) + _8054 + 44 len 20]:
                _10343 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                if mem[(32 * idx) + _8054 + 44 len 20] == mem[(32 * idx) + _8054 + 44 len 20]:
                    if idx >= mem[_8054] - 2:
                        require idx < mem[_8056]
                        require idx < mem[_8055]
                        if not mem[(32 * idx) + _8056 + 32]:
                            _11315 = mem[(32 * idx) + _8055 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _10343
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_11315))
                            call address(_11315).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _10343, this.address
                        else:
                            _11317 = mem[(32 * idx) + _8055 + 32]
                            _11318 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_11318 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_11318 + 36] = 0
                            mem[_11318 + 68] = _10343
                            mem[_11318 + 100] = this.address
                            mem[_11318 + 132] = 128
                            mem[_11318 + 164] = mem[_11318]
                            s = 0
                            while s < mem[_11318]:
                                mem[s + _11318 + 196] = mem[s + _11318 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_11318]) > mem[_11318]:
                                mem[mem[_11318] + _11318 + 196] = 0
                            require ext_code.size(address(_11317))
                            call address(_11317).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _10343, address(this.address), 128, mem[_11318], mem[_11318 + 196 len ceil32(mem[_11318])]
                    else:
                        require idx + 1 < mem[_8055]
                        _10593 = mem[(32 * idx + 1) + _8055 + 32]
                        require idx < mem[_8056]
                        require idx < mem[_8055]
                        if not mem[(32 * idx) + _8056 + 32]:
                            _11637 = mem[(32 * idx) + _8055 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _10343
                            mem[mem[64] + 68] = address(_10593)
                            require ext_code.size(address(_11637))
                            call address(_11637).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _10343, address(_10593)
                        else:
                            _11639 = mem[(32 * idx) + _8055 + 32]
                            _11640 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_11640 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_11640 + 36] = 0
                            mem[_11640 + 68] = _10343
                            mem[_11640 + 100] = address(_10593)
                            mem[_11640 + 132] = 128
                            mem[_11640 + 164] = mem[_11640]
                            s = 0
                            while s < mem[_11640]:
                                mem[s + _11640 + 196] = mem[s + _11640 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_11640]) > mem[_11640]:
                                mem[mem[_11640] + _11640 + 196] = 0
                            require ext_code.size(address(_11639))
                            call address(_11639).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _10343, address(_10593), 128, mem[_11640], mem[_11640 + 196 len ceil32(mem[_11640])]
                else:
                    if idx >= mem[_8054] - 2:
                        require idx < mem[_8056]
                        require idx < mem[_8055]
                        if not mem[(32 * idx) + _8056 + 32]:
                            _11321 = mem[(32 * idx) + _8055 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _10343
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_11321))
                            call address(_11321).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _10343, 0, this.address
                        else:
                            _11323 = mem[(32 * idx) + _8055 + 32]
                            _11324 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_11324 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_11324 + 36] = _10343
                            mem[_11324 + 68] = 0
                            mem[_11324 + 100] = this.address
                            mem[_11324 + 132] = 128
                            mem[_11324 + 164] = mem[_11324]
                            s = 0
                            while s < mem[_11324]:
                                mem[s + _11324 + 196] = mem[s + _11324 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_11324]) > mem[_11324]:
                                mem[mem[_11324] + _11324 + 196] = 0
                            require ext_code.size(address(_11323))
                            call address(_11323).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _10343, 0, address(this.address), 128, mem[_11324], mem[_11324 + 196 len ceil32(mem[_11324])]
                    else:
                        require idx + 1 < mem[_8055]
                        _10595 = mem[(32 * idx + 1) + _8055 + 32]
                        require idx < mem[_8056]
                        require idx < mem[_8055]
                        if not mem[(32 * idx) + _8056 + 32]:
                            _11642 = mem[(32 * idx) + _8055 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _10343
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_10595)
                            require ext_code.size(address(_11642))
                            call address(_11642).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _10343, 0, address(_10595)
                        else:
                            _11644 = mem[(32 * idx) + _8055 + 32]
                            _11645 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_11645 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_11645 + 36] = _10343
                            mem[_11645 + 68] = 0
                            mem[_11645 + 100] = address(_10595)
                            mem[_11645 + 132] = 128
                            mem[_11645 + 164] = mem[_11645]
                            s = 0
                            while s < mem[_11645]:
                                mem[s + _11645 + 196] = mem[s + _11645 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_11645]) > mem[_11645]:
                                mem[mem[_11645] + _11645 + 196] = 0
                            require ext_code.size(address(_11644))
                            call address(_11644).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _10343, 0, address(_10595), 128, mem[_11645], mem[_11645 + 196 len ceil32(mem[_11645])]
            else:
                _10344 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224]
                if mem[(32 * idx) + _8054 + 44 len 20] == mem[(32 * idx + 1) + _8054 + 44 len 20]:
                    if idx >= mem[_8054] - 2:
                        require idx < mem[_8056]
                        require idx < mem[_8055]
                        if not mem[(32 * idx) + _8056 + 32]:
                            _11327 = mem[(32 * idx) + _8055 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _10344
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_11327))
                            call address(_11327).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _10344, this.address
                        else:
                            _11329 = mem[(32 * idx) + _8055 + 32]
                            _11330 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_11330 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_11330 + 36] = 0
                            mem[_11330 + 68] = _10344
                            mem[_11330 + 100] = this.address
                            mem[_11330 + 132] = 128
                            mem[_11330 + 164] = mem[_11330]
                            s = 0
                            while s < mem[_11330]:
                                mem[s + _11330 + 196] = mem[s + _11330 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_11330]) > mem[_11330]:
                                mem[mem[_11330] + _11330 + 196] = 0
                            require ext_code.size(address(_11329))
                            call address(_11329).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _10344, address(this.address), 128, mem[_11330], mem[_11330 + 196 len ceil32(mem[_11330])]
                    else:
                        require idx + 1 < mem[_8055]
                        _10597 = mem[(32 * idx + 1) + _8055 + 32]
                        require idx < mem[_8056]
                        require idx < mem[_8055]
                        if not mem[(32 * idx) + _8056 + 32]:
                            _11647 = mem[(32 * idx) + _8055 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _10344
                            mem[mem[64] + 68] = address(_10597)
                            require ext_code.size(address(_11647))
                            call address(_11647).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _10344, address(_10597)
                        else:
                            _11649 = mem[(32 * idx) + _8055 + 32]
                            _11650 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_11650 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_11650 + 36] = 0
                            mem[_11650 + 68] = _10344
                            mem[_11650 + 100] = address(_10597)
                            mem[_11650 + 132] = 128
                            mem[_11650 + 164] = mem[_11650]
                            s = 0
                            while s < mem[_11650]:
                                mem[s + _11650 + 196] = mem[s + _11650 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_11650]) > mem[_11650]:
                                mem[mem[_11650] + _11650 + 196] = 0
                            require ext_code.size(address(_11649))
                            call address(_11649).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _10344, address(_10597), 128, mem[_11650], mem[_11650 + 196 len ceil32(mem[_11650])]
                else:
                    if idx >= mem[_8054] - 2:
                        require idx < mem[_8056]
                        require idx < mem[_8055]
                        if not mem[(32 * idx) + _8056 + 32]:
                            _11333 = mem[(32 * idx) + _8055 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _10344
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_11333))
                            call address(_11333).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _10344, 0, this.address
                        else:
                            _11335 = mem[(32 * idx) + _8055 + 32]
                            _11336 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_11336 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_11336 + 36] = _10344
                            mem[_11336 + 68] = 0
                            mem[_11336 + 100] = this.address
                            mem[_11336 + 132] = 128
                            mem[_11336 + 164] = mem[_11336]
                            s = 0
                            while s < mem[_11336]:
                                mem[s + _11336 + 196] = mem[s + _11336 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_11336]) > mem[_11336]:
                                mem[mem[_11336] + _11336 + 196] = 0
                            require ext_code.size(address(_11335))
                            call address(_11335).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _10344, 0, address(this.address), 128, mem[_11336], mem[_11336 + 196 len ceil32(mem[_11336])]
                    else:
                        require idx + 1 < mem[_8055]
                        _10599 = mem[(32 * idx + 1) + _8055 + 32]
                        require idx < mem[_8056]
                        require idx < mem[_8055]
                        if not mem[(32 * idx) + _8056 + 32]:
                            _11652 = mem[(32 * idx) + _8055 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _10344
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_10599)
                            require ext_code.size(address(_11652))
                            call address(_11652).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _10344, 0, address(_10599)
                        else:
                            _11654 = mem[(32 * idx) + _8055 + 32]
                            _11655 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_11655 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_11655 + 36] = _10344
                            mem[_11655 + 68] = 0
                            mem[_11655 + 100] = address(_10599)
                            mem[_11655 + 132] = 128
                            mem[_11655 + 164] = mem[_11655]
                            s = 0
                            while s < mem[_11655]:
                                mem[s + _11655 + 196] = mem[s + _11655 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_11655]) > mem[_11655]:
                                mem[mem[_11655] + _11655 + 196] = 0
                            require ext_code.size(address(_11654))
                            call address(_11654).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _10344, 0, address(_10599), 128, mem[_11655], mem[_11655 + 196 len ceil32(mem[_11655])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        _10263 = mem[64]
        mem[mem[64]] = 32
        _10280 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
        mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
        idx = 0
        s = (32 * ('cd', 132).length) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 224
        t = mem[64] + 64
        while idx < _10280:
            mem[t] = mem[s]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _10263 + (32 * _10280) + -mem[64] + 64
    revert with 0, 'Ownable: caller is not the owner'
}



}
