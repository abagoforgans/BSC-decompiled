contract main {




// =====================  Runtime code  =====================


#
#  - sandwichTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5)
#
address factoryAddress;
uint32 stor1;
address WETHAddress;
uint256 stor1;

function WETH() payable {
    return address(WETHAddress)
}

function factory() payable {
    return factoryAddress
}

function _fallback() payable {
    revert
}

function sandwichExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) payable {
    require calldata.size - 4 >= 160
    require arg3 <= 4294967296
    require arg3 + 36 <= calldata.size
    require arg3.length <= 4294967296 and arg3 + (32 * arg3.length) + 36 <= calldata.size
    if arg5 < block.timestamp:
        revert with 0, 'PancakeRouter: EXPIRED'
    mem[96] = arg3.length
    mem[128 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
    if arg3.length < 2:
        revert with 0, 'PancakeLibrary: INVALID_PATH'
    require arg3.length <= test266151307()
    mem[(32 * arg3.length) + 128] = arg3.length
    mem[64] = (64 * arg3.length) + 160
    if not arg3.length:
        require 0 < arg3.length
        mem[(32 * arg3.length) + 160] = arg1
        idx = 0
        while idx < arg3.length - 1:
            require idx < mem[96]
            _9937 = mem[(32 * idx) + 128]
            require idx + 1 < mem[96]
            _9944 = mem[(32 * idx + 1) + 128]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _10045 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                    mem[mem[64] + 52] = address(_9944)
                    _10046 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _10048 = sha3(mem[_10046 + 32 len mem[_10046]])
                    mem[_10045 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_10045 + 105] = Mask(160, 96, factoryAddress)
                    mem[_10045 + 125] = _10048
                    mem[_10045 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                    mem[_10045 + 72] = 85
                    if address(_9937) == address(_9944):
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_10045 + 292 len 29]
                    if address(_9937) < address(_9944):
                        if not address(_9937):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_10045 + 221] = address(_9937)
                        mem[_10045 + 241] = address(_9944)
                        mem[_10045 + 189] = 40
                        mem[_10045 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_10045 + 294] = Mask(160, 96, factoryAddress)
                        mem[_10045 + 314] = sha3(address(_9937), address(_9944))
                        mem[_10045 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_10045 + 261] = 85
                        mem[64] = _10045 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9937), address(_9944)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_9937), address(_9944)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_9944):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_10045 + 221] = address(_9944)
                        mem[_10045 + 241] = address(_9937)
                        mem[_10045 + 189] = 40
                        mem[_10045 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_10045 + 294] = Mask(160, 96, factoryAddress)
                        mem[_10045 + 314] = sha3(address(_9944), address(_9937))
                        mem[_10045 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_10045 + 261] = 85
                        mem[64] = _10045 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9944), address(_9937)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_9944), address(_9937)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                                gas gas_remaining wei
                    mem[_10045 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * arg3.length) + 128]
                    if mem[(32 * idx) + (32 * arg3.length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[_10045 + 487 len 23]
                    if address(_9937) == address(_9937):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10045 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10045 + 484 len 26]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        else:
                            require ext_call.return_data[50 len 14]
                            if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10045 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10045 + 484 len 26]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        else:
                            require ext_call.return_data[18 len 14]
                            if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _10052 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                    mem[mem[64] + 52] = address(_9937)
                    _10053 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _10055 = sha3(mem[_10053 + 32 len mem[_10053]])
                    mem[_10052 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_10052 + 105] = Mask(160, 96, factoryAddress)
                    mem[_10052 + 125] = _10055
                    mem[_10052 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                    mem[_10052 + 72] = 85
                    if address(_9937) == address(_9944):
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_10052 + 292 len 29]
                    if address(_9937) < address(_9944):
                        if not address(_9937):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_10052 + 221] = address(_9937)
                        mem[_10052 + 241] = address(_9944)
                        mem[_10052 + 189] = 40
                        mem[_10052 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_10052 + 294] = Mask(160, 96, factoryAddress)
                        mem[_10052 + 314] = sha3(address(_9937), address(_9944))
                        mem[_10052 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_10052 + 261] = 85
                        mem[64] = _10052 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9937), address(_9944)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_9937), address(_9944)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_9944):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_10052 + 221] = address(_9944)
                        mem[_10052 + 241] = address(_9937)
                        mem[_10052 + 189] = 40
                        mem[_10052 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_10052 + 294] = Mask(160, 96, factoryAddress)
                        mem[_10052 + 314] = sha3(address(_9944), address(_9937))
                        mem[_10052 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_10052 + 261] = 85
                        mem[64] = _10052 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9944), address(_9937)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_9944), address(_9937)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                                gas gas_remaining wei
                    mem[_10052 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * arg3.length) + 128]
                    if mem[(32 * idx) + (32 * arg3.length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[_10052 + 487 len 23]
                    if address(_9937) == address(_9937):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10052 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10052 + 484 len 26]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        else:
                            require ext_call.return_data[50 len 14]
                            if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10052 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10052 + 484 len 26]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        else:
                            require ext_call.return_data[18 len 14]
                            if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _10059 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                    mem[mem[64] + 52] = address(_9944)
                    _10060 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _10062 = sha3(mem[_10060 + 32 len mem[_10060]])
                    mem[_10059 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_10059 + 105] = Mask(160, 96, factoryAddress)
                    mem[_10059 + 125] = _10062
                    mem[_10059 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                    mem[_10059 + 72] = 85
                    if address(_9937) == address(_9944):
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_10059 + 292 len 29]
                    if address(_9937) < address(_9944):
                        if not address(_9937):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_10059 + 221] = address(_9937)
                        mem[_10059 + 241] = address(_9944)
                        mem[_10059 + 189] = 40
                        mem[_10059 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_10059 + 294] = Mask(160, 96, factoryAddress)
                        mem[_10059 + 314] = sha3(address(_9937), address(_9944))
                        mem[_10059 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_10059 + 261] = 85
                        mem[64] = _10059 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9937), address(_9944)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_9937), address(_9944)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_9944):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_10059 + 221] = address(_9944)
                        mem[_10059 + 241] = address(_9937)
                        mem[_10059 + 189] = 40
                        mem[_10059 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_10059 + 294] = Mask(160, 96, factoryAddress)
                        mem[_10059 + 314] = sha3(address(_9944), address(_9937))
                        mem[_10059 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_10059 + 261] = 85
                        mem[64] = _10059 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9944), address(_9937)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_9944), address(_9937)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                                gas gas_remaining wei
                    mem[_10059 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * arg3.length) + 128]
                    if mem[(32 * idx) + (32 * arg3.length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[_10059 + 487 len 23]
                    if address(_9944) == address(_9937):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10059 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10059 + 484 len 26]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        else:
                            require ext_call.return_data[50 len 14]
                            if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10059 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10059 + 484 len 26]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        else:
                            require ext_call.return_data[18 len 14]
                            if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _10066 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                    mem[mem[64] + 52] = address(_9937)
                    _10067 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _10069 = sha3(mem[_10067 + 32 len mem[_10067]])
                    mem[_10066 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_10066 + 105] = Mask(160, 96, factoryAddress)
                    mem[_10066 + 125] = _10069
                    mem[_10066 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                    mem[_10066 + 72] = 85
                    if address(_9937) == address(_9944):
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_10066 + 292 len 29]
                    if address(_9937) < address(_9944):
                        if not address(_9937):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_10066 + 221] = address(_9937)
                        mem[_10066 + 241] = address(_9944)
                        mem[_10066 + 189] = 40
                        mem[_10066 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_10066 + 294] = Mask(160, 96, factoryAddress)
                        mem[_10066 + 314] = sha3(address(_9937), address(_9944))
                        mem[_10066 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_10066 + 261] = 85
                        mem[64] = _10066 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9937), address(_9944)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_9937), address(_9944)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_9944):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_10066 + 221] = address(_9944)
                        mem[_10066 + 241] = address(_9937)
                        mem[_10066 + 189] = 40
                        mem[_10066 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_10066 + 294] = Mask(160, 96, factoryAddress)
                        mem[_10066 + 314] = sha3(address(_9944), address(_9937))
                        mem[_10066 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_10066 + 261] = 85
                        mem[64] = _10066 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9944), address(_9937)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_9944), address(_9937)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                                gas gas_remaining wei
                    mem[_10066 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * arg3.length) + 128]
                    if mem[(32 * idx) + (32 * arg3.length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[_10066 + 487 len 23]
                    if address(_9944) == address(_9937):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10066 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10066 + 484 len 26]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        else:
                            require ext_call.return_data[50 len 14]
                            if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10066 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10066 + 484 len 26]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        else:
                            require ext_call.return_data[18 len 14]
                            if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
            idx = idx + 1
            continue 
        require mem[(32 * arg3.length) + 128] - 1 < mem[(32 * arg3.length) + 128]
        if mem[(32 * mem[(32 * arg3.length) + 128] - 1) + (32 * arg3.length) + 160] < arg2:
            revert with 0, 
                        32,
                        41,
                        0x6450616e63616b65526f757465723a20494e53554646494349454e545f4f55545055545f414d4f554e,
                        mem[mem[64] + 109 len 23]
        require 0 < arg3.length
        require 1 < arg3.length
        if address(cd[(arg3 + 36)]) == address(cd[(arg3 + 68)]):
            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
        if address(cd[(arg3 + 36)]) < address(cd[(arg3 + 68)]):
            if not address(cd[(arg3 + 36)]):
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            _9983 = mem[64]
            mem[mem[64] + 32] = address(cd[(arg3 + 36)])
            mem[mem[64] + 52] = address(cd[(arg3 + 68)])
            _9984 = mem[64]
            mem[mem[64]] = 40
            mem[64] = mem[64] + 72
            _9986 = sha3(mem[_9984 + 32 len mem[_9984]])
            mem[_9983 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
            mem[_9983 + 105] = Mask(160, 96, factoryAddress)
            mem[_9983 + 125] = _9986
            mem[_9983 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
            mem[_9983 + 72] = 85
            require 0 < mem[(32 * arg3.length) + 128]
            _10015 = mem[(32 * arg3.length) + 160]
            mem[_9983 + 225] = address(WETHAddress)
            mem[_9983 + 257] = address(sha3(0, factoryAddress, _9986, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
            mem[_9983 + 289] = _10015
            mem[_9983 + 189] = 100
            mem[_9983 + 225 len 28] = Mask(224, 0, stor1)
            mem[_9983 + 221 len 4] = unknown_0x23b872dd(?????)
            mem[_9983 + 321 len 96] = unknown_0x23b872dd(?????), Mask(224, 0, stor1), uint32(stor1), address(sha3(0, factoryAddress, _9986, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), Mask(224, 32, _10015) >> 32
            mem[_9983 + 445 len 4] = Mask(32, 64, _10015) >> 64
            call address(cd[(arg3 + 36)]) with:
                 gas gas_remaining wei
                args Mask(224, 32, _10015) << 480, mem[_9983 + 417 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 
                                32,
                                49,
                                0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                                mem[_9983 + 438 len 7],
                                Mask(32, 64, _10015) >> 64,
                                mem[_9983 + 449 len 4]
                if not mem[96]:
                    mem[64] = _9983 + (32 * arg3.length) + 353
                    mem[_9983 + 321] = arg3.length
                    mem[_9983 + 353 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
                    mem[_9983 + (32 * arg3.length) + 353] = 0
                    idx = 0
                    while idx < arg3.length - 1:
                        require idx < mem[_9983 + 321]
                        _28679 = mem[(32 * idx) + _9983 + 353]
                        require idx + 1 < mem[_9983 + 321]
                        _28714 = mem[(32 * idx + 1) + _9983 + 353]
                        if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx + 1) + _9983 + 365 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _9983 + 365 len 20] < mem[(32 * idx + 1) + _9983 + 365 len 20]:
                            if not mem[(32 * idx) + _9983 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            _28935 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                            if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx) + _9983 + 365 len 20]:
                                if idx >= mem[_9983 + 321] - 2:
                                    if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx) + _9983 + 365 len 20] < mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        if not mem[(32 * idx) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _29941 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_28714)
                                        _29942 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _29944 = sha3(mem[_29942 + 32 len mem[_29942]])
                                        mem[_29941 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_29941 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_29941 + 125] = _29944
                                        mem[_29941 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_29941 + 72] = 85
                                        mem[_29941 + 189] = 0
                                        mem[64] = _29941 + 221
                                        mem[_29941 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_29941 + 225] = 0
                                        mem[_29941 + 257] = _28935
                                        mem[_29941 + 289] = arg4
                                        mem[_29941 + 321] = 128
                                        mem[_29941 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _29941 + 385] = mem[s + _29941 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _29944, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, _29944, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28935, address(arg4), 128, 0
                                    else:
                                        if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _29948 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_28679)
                                        _29949 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _29951 = sha3(mem[_29949 + 32 len mem[_29949]])
                                        mem[_29948 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_29948 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_29948 + 125] = _29951
                                        mem[_29948 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_29948 + 72] = 85
                                        mem[_29948 + 189] = 0
                                        mem[64] = _29948 + 221
                                        mem[_29948 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_29948 + 225] = 0
                                        mem[_29948 + 257] = _28935
                                        mem[_29948 + 289] = arg4
                                        mem[_29948 + 321] = 128
                                        mem[_29948 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _29948 + 385] = mem[s + _29948 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _29951, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, _29951, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28935, address(arg4), 128, 0
                                else:
                                    require idx + 2 < mem[_9983 + 321]
                                    _29095 = mem[(32 * idx + 2) + _9983 + 353]
                                    if mem[(32 * idx + 1) + _9983 + 365 len 20] == mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx + 1) + _9983 + 365 len 20] < mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                        if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _29927 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_29095)
                                        _29928 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _29930 = sha3(mem[_29928 + 32 len mem[_29928]])
                                        mem[_29927 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_29927 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_29927 + 125] = _29930
                                        mem[_29927 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_29927 + 72] = 85
                                        if address(_28679) == address(_28714):
                                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_29927 + 292 len 29]
                                        if address(_28679) < address(_28714):
                                            if not address(_28679):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_29927 + 221] = address(_28679)
                                            mem[_29927 + 241] = address(_28714)
                                            mem[_29927 + 189] = 40
                                            mem[_29927 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_29927 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_29927 + 314] = sha3(address(_28679), address(_28714))
                                            mem[_29927 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_29927 + 261] = 85
                                            mem[_29927 + 378] = 0
                                            mem[64] = _29927 + 410
                                            mem[_29927 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_29927 + 414] = 0
                                            mem[_29927 + 446] = _28935
                                            mem[_29927 + 478] = address(sha3(0, factoryAddress, _29930, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_29927 + 510] = 128
                                            mem[_29927 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _29927 + 574] = mem[s + _29927 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _28935, address(sha3(0, factoryAddress, _29930, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                        else:
                                            if not address(_28714):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_29927 + 221] = address(_28714)
                                            mem[_29927 + 241] = address(_28679)
                                            mem[_29927 + 189] = 40
                                            mem[_29927 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_29927 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_29927 + 314] = sha3(address(_28714), address(_28679))
                                            mem[_29927 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_29927 + 261] = 85
                                            mem[_29927 + 378] = 0
                                            mem[64] = _29927 + 410
                                            mem[_29927 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_29927 + 414] = 0
                                            mem[_29927 + 446] = _28935
                                            mem[_29927 + 478] = address(sha3(0, factoryAddress, _29930, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_29927 + 510] = 128
                                            mem[_29927 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _29927 + 574] = mem[s + _29927 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _28935, address(sha3(0, factoryAddress, _29930, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _29934 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_28714)
                                        _29935 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _29937 = sha3(mem[_29935 + 32 len mem[_29935]])
                                        mem[_29934 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_29934 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_29934 + 125] = _29937
                                        mem[_29934 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_29934 + 72] = 85
                                        if address(_28679) == address(_28714):
                                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_29934 + 292 len 29]
                                        if address(_28679) < address(_28714):
                                            if not address(_28679):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_29934 + 221] = address(_28679)
                                            mem[_29934 + 241] = address(_28714)
                                            mem[_29934 + 189] = 40
                                            mem[_29934 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_29934 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_29934 + 314] = sha3(address(_28679), address(_28714))
                                            mem[_29934 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_29934 + 261] = 85
                                            mem[_29934 + 378] = 0
                                            mem[64] = _29934 + 410
                                            mem[_29934 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_29934 + 414] = 0
                                            mem[_29934 + 446] = _28935
                                            mem[_29934 + 478] = address(sha3(0, factoryAddress, _29937, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_29934 + 510] = 128
                                            mem[_29934 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _29934 + 574] = mem[s + _29934 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _28935, address(sha3(0, factoryAddress, _29937, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                        else:
                                            if not address(_28714):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_29934 + 221] = address(_28714)
                                            mem[_29934 + 241] = address(_28679)
                                            mem[_29934 + 189] = 40
                                            mem[_29934 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_29934 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_29934 + 314] = sha3(address(_28714), address(_28679))
                                            mem[_29934 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_29934 + 261] = 85
                                            mem[_29934 + 378] = 0
                                            mem[64] = _29934 + 410
                                            mem[_29934 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_29934 + 414] = 0
                                            mem[_29934 + 446] = _28935
                                            mem[_29934 + 478] = address(sha3(0, factoryAddress, _29937, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_29934 + 510] = 128
                                            mem[_29934 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _29934 + 574] = mem[s + _29934 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _28935, address(sha3(0, factoryAddress, _29937, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if idx >= mem[_9983 + 321] - 2:
                                    if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx) + _9983 + 365 len 20] < mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        if not mem[(32 * idx) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _29969 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_28714)
                                        _29970 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _29972 = sha3(mem[_29970 + 32 len mem[_29970]])
                                        mem[_29969 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_29969 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_29969 + 125] = _29972
                                        mem[_29969 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_29969 + 72] = 85
                                        mem[_29969 + 189] = 0
                                        mem[64] = _29969 + 221
                                        mem[_29969 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_29969 + 225] = _28935
                                        mem[_29969 + 257] = 0
                                        mem[_29969 + 289] = arg4
                                        mem[_29969 + 321] = 128
                                        mem[_29969 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _29969 + 385] = mem[s + _29969 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _29972, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, _29972, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28935, 0, address(arg4), 128, 0
                                    else:
                                        if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _29976 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_28679)
                                        _29977 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _29979 = sha3(mem[_29977 + 32 len mem[_29977]])
                                        mem[_29976 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_29976 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_29976 + 125] = _29979
                                        mem[_29976 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_29976 + 72] = 85
                                        mem[_29976 + 189] = 0
                                        mem[64] = _29976 + 221
                                        mem[_29976 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_29976 + 225] = _28935
                                        mem[_29976 + 257] = 0
                                        mem[_29976 + 289] = arg4
                                        mem[_29976 + 321] = 128
                                        mem[_29976 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _29976 + 385] = mem[s + _29976 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _29979, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, _29979, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28935, 0, address(arg4), 128, 0
                                else:
                                    require idx + 2 < mem[_9983 + 321]
                                    _29096 = mem[(32 * idx + 2) + _9983 + 353]
                                    if mem[(32 * idx + 1) + _9983 + 365 len 20] == mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx + 1) + _9983 + 365 len 20] < mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                        if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _29955 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_29096)
                                        _29956 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _29958 = sha3(mem[_29956 + 32 len mem[_29956]])
                                        mem[_29955 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_29955 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_29955 + 125] = _29958
                                        mem[_29955 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_29955 + 72] = 85
                                        if address(_28679) == address(_28714):
                                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_29955 + 292 len 29]
                                        if address(_28679) < address(_28714):
                                            if not address(_28679):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_29955 + 221] = address(_28679)
                                            mem[_29955 + 241] = address(_28714)
                                            mem[_29955 + 189] = 40
                                            mem[_29955 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_29955 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_29955 + 314] = sha3(address(_28679), address(_28714))
                                            mem[_29955 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_29955 + 261] = 85
                                            mem[_29955 + 378] = 0
                                            mem[64] = _29955 + 410
                                            mem[_29955 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_29955 + 414] = _28935
                                            mem[_29955 + 446] = 0
                                            mem[_29955 + 478] = address(sha3(0, factoryAddress, _29958, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_29955 + 510] = 128
                                            mem[_29955 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _29955 + 574] = mem[s + _29955 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _28935, 0, address(sha3(0, factoryAddress, _29958, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                        else:
                                            if not address(_28714):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_29955 + 221] = address(_28714)
                                            mem[_29955 + 241] = address(_28679)
                                            mem[_29955 + 189] = 40
                                            mem[_29955 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_29955 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_29955 + 314] = sha3(address(_28714), address(_28679))
                                            mem[_29955 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_29955 + 261] = 85
                                            mem[_29955 + 378] = 0
                                            mem[64] = _29955 + 410
                                            mem[_29955 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_29955 + 414] = _28935
                                            mem[_29955 + 446] = 0
                                            mem[_29955 + 478] = address(sha3(0, factoryAddress, _29958, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_29955 + 510] = 128
                                            mem[_29955 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _29955 + 574] = mem[s + _29955 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _28935, 0, address(sha3(0, factoryAddress, _29958, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _29962 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_28714)
                                        _29963 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _29965 = sha3(mem[_29963 + 32 len mem[_29963]])
                                        mem[_29962 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_29962 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_29962 + 125] = _29965
                                        mem[_29962 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_29962 + 72] = 85
                                        if address(_28679) == address(_28714):
                                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_29962 + 292 len 29]
                                        if address(_28679) < address(_28714):
                                            if not address(_28679):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_29962 + 221] = address(_28679)
                                            mem[_29962 + 241] = address(_28714)
                                            mem[_29962 + 189] = 40
                                            mem[_29962 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_29962 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_29962 + 314] = sha3(address(_28679), address(_28714))
                                            mem[_29962 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_29962 + 261] = 85
                                            mem[_29962 + 378] = 0
                                            mem[64] = _29962 + 410
                                            mem[_29962 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_29962 + 414] = _28935
                                            mem[_29962 + 446] = 0
                                            mem[_29962 + 478] = address(sha3(0, factoryAddress, _29965, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_29962 + 510] = 128
                                            mem[_29962 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _29962 + 574] = mem[s + _29962 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _28935, 0, address(sha3(0, factoryAddress, _29965, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                        else:
                                            if not address(_28714):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_29962 + 221] = address(_28714)
                                            mem[_29962 + 241] = address(_28679)
                                            mem[_29962 + 189] = 40
                                            mem[_29962 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_29962 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_29962 + 314] = sha3(address(_28714), address(_28679))
                                            mem[_29962 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_29962 + 261] = 85
                                            mem[_29962 + 378] = 0
                                            mem[64] = _29962 + 410
                                            mem[_29962 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_29962 + 414] = _28935
                                            mem[_29962 + 446] = 0
                                            mem[_29962 + 478] = address(sha3(0, factoryAddress, _29965, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_29962 + 510] = 128
                                            mem[_29962 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _29962 + 574] = mem[s + _29962 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _28935, 0, address(sha3(0, factoryAddress, _29965, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[(32 * arg3.length) + 128]
                            _28936 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                            if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                if idx >= mem[_9983 + 321] - 2:
                                    if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx) + _9983 + 365 len 20] < mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        if not mem[(32 * idx) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _29997 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_28714)
                                        _29998 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _30000 = sha3(mem[_29998 + 32 len mem[_29998]])
                                        mem[_29997 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_29997 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_29997 + 125] = _30000
                                        mem[_29997 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_29997 + 72] = 85
                                        mem[_29997 + 189] = 0
                                        mem[64] = _29997 + 221
                                        mem[_29997 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_29997 + 225] = 0
                                        mem[_29997 + 257] = _28936
                                        mem[_29997 + 289] = arg4
                                        mem[_29997 + 321] = 128
                                        mem[_29997 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _29997 + 385] = mem[s + _29997 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _30000, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, _30000, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28936, address(arg4), 128, 0
                                    else:
                                        if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _30004 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_28679)
                                        _30005 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _30007 = sha3(mem[_30005 + 32 len mem[_30005]])
                                        mem[_30004 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30004 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_30004 + 125] = _30007
                                        mem[_30004 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30004 + 72] = 85
                                        mem[_30004 + 189] = 0
                                        mem[64] = _30004 + 221
                                        mem[_30004 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30004 + 225] = 0
                                        mem[_30004 + 257] = _28936
                                        mem[_30004 + 289] = arg4
                                        mem[_30004 + 321] = 128
                                        mem[_30004 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30004 + 385] = mem[s + _30004 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _30007, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, _30007, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28936, address(arg4), 128, 0
                                else:
                                    require idx + 2 < mem[_9983 + 321]
                                    _29097 = mem[(32 * idx + 2) + _9983 + 353]
                                    if mem[(32 * idx + 1) + _9983 + 365 len 20] == mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx + 1) + _9983 + 365 len 20] < mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                        if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _29983 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_29097)
                                        _29984 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _29986 = sha3(mem[_29984 + 32 len mem[_29984]])
                                        mem[_29983 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_29983 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_29983 + 125] = _29986
                                        mem[_29983 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_29983 + 72] = 85
                                        if address(_28679) == address(_28714):
                                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_29983 + 292 len 29]
                                        if address(_28679) < address(_28714):
                                            if not address(_28679):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_29983 + 221] = address(_28679)
                                            mem[_29983 + 241] = address(_28714)
                                            mem[_29983 + 189] = 40
                                            mem[_29983 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_29983 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_29983 + 314] = sha3(address(_28679), address(_28714))
                                            mem[_29983 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_29983 + 261] = 85
                                            mem[_29983 + 378] = 0
                                            mem[64] = _29983 + 410
                                            mem[_29983 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_29983 + 414] = 0
                                            mem[_29983 + 446] = _28936
                                            mem[_29983 + 478] = address(sha3(0, factoryAddress, _29986, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_29983 + 510] = 128
                                            mem[_29983 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _29983 + 574] = mem[s + _29983 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _28936, address(sha3(0, factoryAddress, _29986, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                        else:
                                            if not address(_28714):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_29983 + 221] = address(_28714)
                                            mem[_29983 + 241] = address(_28679)
                                            mem[_29983 + 189] = 40
                                            mem[_29983 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_29983 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_29983 + 314] = sha3(address(_28714), address(_28679))
                                            mem[_29983 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_29983 + 261] = 85
                                            mem[_29983 + 378] = 0
                                            mem[64] = _29983 + 410
                                            mem[_29983 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_29983 + 414] = 0
                                            mem[_29983 + 446] = _28936
                                            mem[_29983 + 478] = address(sha3(0, factoryAddress, _29986, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_29983 + 510] = 128
                                            mem[_29983 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _29983 + 574] = mem[s + _29983 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _28936, address(sha3(0, factoryAddress, _29986, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _29990 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_28714)
                                        _29991 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _29993 = sha3(mem[_29991 + 32 len mem[_29991]])
                                        mem[_29990 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_29990 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_29990 + 125] = _29993
                                        mem[_29990 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_29990 + 72] = 85
                                        if address(_28679) == address(_28714):
                                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_29990 + 292 len 29]
                                        if address(_28679) < address(_28714):
                                            if not address(_28679):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_29990 + 221] = address(_28679)
                                            mem[_29990 + 241] = address(_28714)
                                            mem[_29990 + 189] = 40
                                            mem[_29990 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_29990 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_29990 + 314] = sha3(address(_28679), address(_28714))
                                            mem[_29990 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_29990 + 261] = 85
                                            mem[_29990 + 378] = 0
                                            mem[64] = _29990 + 410
                                            mem[_29990 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_29990 + 414] = 0
                                            mem[_29990 + 446] = _28936
                                            mem[_29990 + 478] = address(sha3(0, factoryAddress, _29993, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_29990 + 510] = 128
                                            mem[_29990 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _29990 + 574] = mem[s + _29990 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _28936, address(sha3(0, factoryAddress, _29993, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                        else:
                                            if not address(_28714):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_29990 + 221] = address(_28714)
                                            mem[_29990 + 241] = address(_28679)
                                            mem[_29990 + 189] = 40
                                            mem[_29990 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_29990 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_29990 + 314] = sha3(address(_28714), address(_28679))
                                            mem[_29990 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_29990 + 261] = 85
                                            mem[_29990 + 378] = 0
                                            mem[64] = _29990 + 410
                                            mem[_29990 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_29990 + 414] = 0
                                            mem[_29990 + 446] = _28936
                                            mem[_29990 + 478] = address(sha3(0, factoryAddress, _29993, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_29990 + 510] = 128
                                            mem[_29990 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _29990 + 574] = mem[s + _29990 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _28936, address(sha3(0, factoryAddress, _29993, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if idx >= mem[_9983 + 321] - 2:
                                    if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx) + _9983 + 365 len 20] < mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        if not mem[(32 * idx) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _30025 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_28714)
                                        _30026 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _30028 = sha3(mem[_30026 + 32 len mem[_30026]])
                                        mem[_30025 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30025 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_30025 + 125] = _30028
                                        mem[_30025 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30025 + 72] = 85
                                        mem[_30025 + 189] = 0
                                        mem[64] = _30025 + 221
                                        mem[_30025 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30025 + 225] = _28936
                                        mem[_30025 + 257] = 0
                                        mem[_30025 + 289] = arg4
                                        mem[_30025 + 321] = 128
                                        mem[_30025 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30025 + 385] = mem[s + _30025 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _30028, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, _30028, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28936, 0, address(arg4), 128, 0
                                    else:
                                        if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _30032 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_28679)
                                        _30033 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _30035 = sha3(mem[_30033 + 32 len mem[_30033]])
                                        mem[_30032 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30032 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_30032 + 125] = _30035
                                        mem[_30032 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30032 + 72] = 85
                                        mem[_30032 + 189] = 0
                                        mem[64] = _30032 + 221
                                        mem[_30032 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30032 + 225] = _28936
                                        mem[_30032 + 257] = 0
                                        mem[_30032 + 289] = arg4
                                        mem[_30032 + 321] = 128
                                        mem[_30032 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30032 + 385] = mem[s + _30032 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _30035, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, _30035, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28936, 0, address(arg4), 128, 0
                                else:
                                    require idx + 2 < mem[_9983 + 321]
                                    _29098 = mem[(32 * idx + 2) + _9983 + 353]
                                    if mem[(32 * idx + 1) + _9983 + 365 len 20] == mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx + 1) + _9983 + 365 len 20] < mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                        if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _30011 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_29098)
                                        _30012 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _30014 = sha3(mem[_30012 + 32 len mem[_30012]])
                                        mem[_30011 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30011 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_30011 + 125] = _30014
                                        mem[_30011 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30011 + 72] = 85
                                        if address(_28679) == address(_28714):
                                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30011 + 292 len 29]
                                        if address(_28679) < address(_28714):
                                            if not address(_28679):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_30011 + 221] = address(_28679)
                                            mem[_30011 + 241] = address(_28714)
                                            mem[_30011 + 189] = 40
                                            mem[_30011 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_30011 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_30011 + 314] = sha3(address(_28679), address(_28714))
                                            mem[_30011 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_30011 + 261] = 85
                                            mem[_30011 + 378] = 0
                                            mem[64] = _30011 + 410
                                            mem[_30011 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30011 + 414] = _28936
                                            mem[_30011 + 446] = 0
                                            mem[_30011 + 478] = address(sha3(0, factoryAddress, _30014, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_30011 + 510] = 128
                                            mem[_30011 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _30011 + 574] = mem[s + _30011 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _28936, 0, address(sha3(0, factoryAddress, _30014, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                        else:
                                            if not address(_28714):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_30011 + 221] = address(_28714)
                                            mem[_30011 + 241] = address(_28679)
                                            mem[_30011 + 189] = 40
                                            mem[_30011 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_30011 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_30011 + 314] = sha3(address(_28714), address(_28679))
                                            mem[_30011 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_30011 + 261] = 85
                                            mem[_30011 + 378] = 0
                                            mem[64] = _30011 + 410
                                            mem[_30011 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30011 + 414] = _28936
                                            mem[_30011 + 446] = 0
                                            mem[_30011 + 478] = address(sha3(0, factoryAddress, _30014, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_30011 + 510] = 128
                                            mem[_30011 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _30011 + 574] = mem[s + _30011 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _28936, 0, address(sha3(0, factoryAddress, _30014, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _30018 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + 353])
                                        mem[mem[64] + 52] = address(_28714)
                                        _30019 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _30021 = sha3(mem[_30019 + 32 len mem[_30019]])
                                        mem[_30018 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30018 + 105] = Mask(160, 96, factoryAddress)
                                        mem[_30018 + 125] = _30021
                                        mem[_30018 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30018 + 72] = 85
                                        if address(_28679) == address(_28714):
                                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30018 + 292 len 29]
                                        if address(_28679) < address(_28714):
                                            if not address(_28679):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_30018 + 221] = address(_28679)
                                            mem[_30018 + 241] = address(_28714)
                                            mem[_30018 + 189] = 40
                                            mem[_30018 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_30018 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_30018 + 314] = sha3(address(_28679), address(_28714))
                                            mem[_30018 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_30018 + 261] = 85
                                            mem[_30018 + 378] = 0
                                            mem[64] = _30018 + 410
                                            mem[_30018 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30018 + 414] = _28936
                                            mem[_30018 + 446] = 0
                                            mem[_30018 + 478] = address(sha3(0, factoryAddress, _30021, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_30018 + 510] = 128
                                            mem[_30018 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _30018 + 574] = mem[s + _30018 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28679), address(_28714)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _28936, 0, address(sha3(0, factoryAddress, _30021, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                        else:
                                            if not address(_28714):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_30018 + 221] = address(_28714)
                                            mem[_30018 + 241] = address(_28679)
                                            mem[_30018 + 189] = 40
                                            mem[_30018 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_30018 + 294] = Mask(160, 96, factoryAddress)
                                            mem[_30018 + 314] = sha3(address(_28714), address(_28679))
                                            mem[_30018 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                            mem[_30018 + 261] = 85
                                            mem[_30018 + 378] = 0
                                            mem[64] = _30018 + 410
                                            mem[_30018 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30018 + 414] = _28936
                                            mem[_30018 + 446] = 0
                                            mem[_30018 + 478] = address(sha3(0, factoryAddress, _30021, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                            mem[_30018 + 510] = 128
                                            mem[_30018 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _30018 + 574] = mem[s + _30018 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                            call address(sha3(0, factoryAddress, sha3(address(_28714), address(_28679)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _28936, 0, address(sha3(0, factoryAddress, _30021, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                    mem[mem[64]] = 32
                    mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
                    _28713 = mem[(32 * arg3.length) + 128]
                    mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
                    return 32, mem[mem[64] + 32 len (32 * _28713) + 32]
                require mem[96] >= 32
                if not mem[128]:
                    revert with 0, 
                                32,
                                49,
                                0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                                mem[_9983 + 438 len 7],
                                Mask(32, 64, _10015) >> 64,
                                mem[_9983 + 449 len 4]
                mem[64] = _9983 + (32 * arg3.length) + 353
                mem[_9983 + 321] = arg3.length
                mem[_9983 + 353 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
                mem[_9983 + (32 * arg3.length) + 353] = 0
                idx = 0
                while idx < arg3.length - 1:
                    require idx < mem[_9983 + 321]
                    _28681 = mem[(32 * idx) + _9983 + 353]
                    require idx + 1 < mem[_9983 + 321]
                    _28718 = mem[(32 * idx + 1) + _9983 + 353]
                    if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx + 1) + _9983 + 365 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _9983 + 365 len 20] < mem[(32 * idx + 1) + _9983 + 365 len 20]:
                        if not mem[(32 * idx) + _9983 + 365 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        _28937 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                        if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx) + _9983 + 365 len 20]:
                            if idx >= mem[_9983 + 321] - 2:
                                if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9983 + 365 len 20] < mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                    if not mem[(32 * idx) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30053 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_28718)
                                    _30054 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30056 = sha3(mem[_30054 + 32 len mem[_30054]])
                                    mem[_30053 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30053 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30053 + 125] = _30056
                                    mem[_30053 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30053 + 72] = 85
                                    mem[_30053 + 189] = 0
                                    mem[64] = _30053 + 221
                                    mem[_30053 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30053 + 225] = 0
                                    mem[_30053 + 257] = _28937
                                    mem[_30053 + 289] = arg4
                                    mem[_30053 + 321] = 128
                                    mem[_30053 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30053 + 385] = mem[s + _30053 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30056, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30056, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28937, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30060 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_28681)
                                    _30061 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30063 = sha3(mem[_30061 + 32 len mem[_30061]])
                                    mem[_30060 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30060 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30060 + 125] = _30063
                                    mem[_30060 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30060 + 72] = 85
                                    mem[_30060 + 189] = 0
                                    mem[64] = _30060 + 221
                                    mem[_30060 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30060 + 225] = 0
                                    mem[_30060 + 257] = _28937
                                    mem[_30060 + 289] = arg4
                                    mem[_30060 + 321] = 128
                                    mem[_30060 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30060 + 385] = mem[s + _30060 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30063, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30063, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28937, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9983 + 321]
                                _29099 = mem[(32 * idx + 2) + _9983 + 353]
                                if mem[(32 * idx + 1) + _9983 + 365 len 20] == mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9983 + 365 len 20] < mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30039 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_29099)
                                    _30040 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30042 = sha3(mem[_30040 + 32 len mem[_30040]])
                                    mem[_30039 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30039 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30039 + 125] = _30042
                                    mem[_30039 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30039 + 72] = 85
                                    if address(_28681) == address(_28718):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30039 + 292 len 29]
                                    if address(_28681) < address(_28718):
                                        if not address(_28681):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30039 + 221] = address(_28681)
                                        mem[_30039 + 241] = address(_28718)
                                        mem[_30039 + 189] = 40
                                        mem[_30039 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30039 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30039 + 314] = sha3(address(_28681), address(_28718))
                                        mem[_30039 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30039 + 261] = 85
                                        mem[_30039 + 378] = 0
                                        mem[64] = _30039 + 410
                                        mem[_30039 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30039 + 414] = 0
                                        mem[_30039 + 446] = _28937
                                        mem[_30039 + 478] = address(sha3(0, factoryAddress, _30042, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30039 + 510] = 128
                                        mem[_30039 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30039 + 574] = mem[s + _30039 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28937, address(sha3(0, factoryAddress, _30042, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28718):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30039 + 221] = address(_28718)
                                        mem[_30039 + 241] = address(_28681)
                                        mem[_30039 + 189] = 40
                                        mem[_30039 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30039 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30039 + 314] = sha3(address(_28718), address(_28681))
                                        mem[_30039 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30039 + 261] = 85
                                        mem[_30039 + 378] = 0
                                        mem[64] = _30039 + 410
                                        mem[_30039 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30039 + 414] = 0
                                        mem[_30039 + 446] = _28937
                                        mem[_30039 + 478] = address(sha3(0, factoryAddress, _30042, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30039 + 510] = 128
                                        mem[_30039 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30039 + 574] = mem[s + _30039 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28937, address(sha3(0, factoryAddress, _30042, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30046 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_28718)
                                    _30047 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30049 = sha3(mem[_30047 + 32 len mem[_30047]])
                                    mem[_30046 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30046 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30046 + 125] = _30049
                                    mem[_30046 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30046 + 72] = 85
                                    if address(_28681) == address(_28718):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30046 + 292 len 29]
                                    if address(_28681) < address(_28718):
                                        if not address(_28681):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30046 + 221] = address(_28681)
                                        mem[_30046 + 241] = address(_28718)
                                        mem[_30046 + 189] = 40
                                        mem[_30046 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30046 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30046 + 314] = sha3(address(_28681), address(_28718))
                                        mem[_30046 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30046 + 261] = 85
                                        mem[_30046 + 378] = 0
                                        mem[64] = _30046 + 410
                                        mem[_30046 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30046 + 414] = 0
                                        mem[_30046 + 446] = _28937
                                        mem[_30046 + 478] = address(sha3(0, factoryAddress, _30049, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30046 + 510] = 128
                                        mem[_30046 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30046 + 574] = mem[s + _30046 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28937, address(sha3(0, factoryAddress, _30049, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28718):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30046 + 221] = address(_28718)
                                        mem[_30046 + 241] = address(_28681)
                                        mem[_30046 + 189] = 40
                                        mem[_30046 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30046 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30046 + 314] = sha3(address(_28718), address(_28681))
                                        mem[_30046 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30046 + 261] = 85
                                        mem[_30046 + 378] = 0
                                        mem[64] = _30046 + 410
                                        mem[_30046 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30046 + 414] = 0
                                        mem[_30046 + 446] = _28937
                                        mem[_30046 + 478] = address(sha3(0, factoryAddress, _30049, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30046 + 510] = 128
                                        mem[_30046 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30046 + 574] = mem[s + _30046 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28937, address(sha3(0, factoryAddress, _30049, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if idx >= mem[_9983 + 321] - 2:
                                if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9983 + 365 len 20] < mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                    if not mem[(32 * idx) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30081 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_28718)
                                    _30082 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30084 = sha3(mem[_30082 + 32 len mem[_30082]])
                                    mem[_30081 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30081 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30081 + 125] = _30084
                                    mem[_30081 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30081 + 72] = 85
                                    mem[_30081 + 189] = 0
                                    mem[64] = _30081 + 221
                                    mem[_30081 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30081 + 225] = _28937
                                    mem[_30081 + 257] = 0
                                    mem[_30081 + 289] = arg4
                                    mem[_30081 + 321] = 128
                                    mem[_30081 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30081 + 385] = mem[s + _30081 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30084, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30084, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28937, 0, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30088 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_28681)
                                    _30089 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30091 = sha3(mem[_30089 + 32 len mem[_30089]])
                                    mem[_30088 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30088 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30088 + 125] = _30091
                                    mem[_30088 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30088 + 72] = 85
                                    mem[_30088 + 189] = 0
                                    mem[64] = _30088 + 221
                                    mem[_30088 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30088 + 225] = _28937
                                    mem[_30088 + 257] = 0
                                    mem[_30088 + 289] = arg4
                                    mem[_30088 + 321] = 128
                                    mem[_30088 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30088 + 385] = mem[s + _30088 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30091, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30091, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28937, 0, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9983 + 321]
                                _29100 = mem[(32 * idx + 2) + _9983 + 353]
                                if mem[(32 * idx + 1) + _9983 + 365 len 20] == mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9983 + 365 len 20] < mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30067 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_29100)
                                    _30068 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30070 = sha3(mem[_30068 + 32 len mem[_30068]])
                                    mem[_30067 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30067 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30067 + 125] = _30070
                                    mem[_30067 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30067 + 72] = 85
                                    if address(_28681) == address(_28718):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30067 + 292 len 29]
                                    if address(_28681) < address(_28718):
                                        if not address(_28681):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30067 + 221] = address(_28681)
                                        mem[_30067 + 241] = address(_28718)
                                        mem[_30067 + 189] = 40
                                        mem[_30067 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30067 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30067 + 314] = sha3(address(_28681), address(_28718))
                                        mem[_30067 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30067 + 261] = 85
                                        mem[_30067 + 378] = 0
                                        mem[64] = _30067 + 410
                                        mem[_30067 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30067 + 414] = _28937
                                        mem[_30067 + 446] = 0
                                        mem[_30067 + 478] = address(sha3(0, factoryAddress, _30070, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30067 + 510] = 128
                                        mem[_30067 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30067 + 574] = mem[s + _30067 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28937, 0, address(sha3(0, factoryAddress, _30070, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28718):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30067 + 221] = address(_28718)
                                        mem[_30067 + 241] = address(_28681)
                                        mem[_30067 + 189] = 40
                                        mem[_30067 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30067 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30067 + 314] = sha3(address(_28718), address(_28681))
                                        mem[_30067 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30067 + 261] = 85
                                        mem[_30067 + 378] = 0
                                        mem[64] = _30067 + 410
                                        mem[_30067 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30067 + 414] = _28937
                                        mem[_30067 + 446] = 0
                                        mem[_30067 + 478] = address(sha3(0, factoryAddress, _30070, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30067 + 510] = 128
                                        mem[_30067 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30067 + 574] = mem[s + _30067 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28937, 0, address(sha3(0, factoryAddress, _30070, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30074 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_28718)
                                    _30075 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30077 = sha3(mem[_30075 + 32 len mem[_30075]])
                                    mem[_30074 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30074 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30074 + 125] = _30077
                                    mem[_30074 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30074 + 72] = 85
                                    if address(_28681) == address(_28718):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30074 + 292 len 29]
                                    if address(_28681) < address(_28718):
                                        if not address(_28681):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30074 + 221] = address(_28681)
                                        mem[_30074 + 241] = address(_28718)
                                        mem[_30074 + 189] = 40
                                        mem[_30074 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30074 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30074 + 314] = sha3(address(_28681), address(_28718))
                                        mem[_30074 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30074 + 261] = 85
                                        mem[_30074 + 378] = 0
                                        mem[64] = _30074 + 410
                                        mem[_30074 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30074 + 414] = _28937
                                        mem[_30074 + 446] = 0
                                        mem[_30074 + 478] = address(sha3(0, factoryAddress, _30077, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30074 + 510] = 128
                                        mem[_30074 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30074 + 574] = mem[s + _30074 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28937, 0, address(sha3(0, factoryAddress, _30077, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28718):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30074 + 221] = address(_28718)
                                        mem[_30074 + 241] = address(_28681)
                                        mem[_30074 + 189] = 40
                                        mem[_30074 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30074 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30074 + 314] = sha3(address(_28718), address(_28681))
                                        mem[_30074 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30074 + 261] = 85
                                        mem[_30074 + 378] = 0
                                        mem[64] = _30074 + 410
                                        mem[_30074 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30074 + 414] = _28937
                                        mem[_30074 + 446] = 0
                                        mem[_30074 + 478] = address(sha3(0, factoryAddress, _30077, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30074 + 510] = 128
                                        mem[_30074 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30074 + 574] = mem[s + _30074 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28937, 0, address(sha3(0, factoryAddress, _30077, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        _28938 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                        if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx + 1) + _9983 + 365 len 20]:
                            if idx >= mem[_9983 + 321] - 2:
                                if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9983 + 365 len 20] < mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                    if not mem[(32 * idx) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30109 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_28718)
                                    _30110 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30112 = sha3(mem[_30110 + 32 len mem[_30110]])
                                    mem[_30109 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30109 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30109 + 125] = _30112
                                    mem[_30109 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30109 + 72] = 85
                                    mem[_30109 + 189] = 0
                                    mem[64] = _30109 + 221
                                    mem[_30109 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30109 + 225] = 0
                                    mem[_30109 + 257] = _28938
                                    mem[_30109 + 289] = arg4
                                    mem[_30109 + 321] = 128
                                    mem[_30109 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30109 + 385] = mem[s + _30109 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30112, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30112, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28938, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30116 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_28681)
                                    _30117 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30119 = sha3(mem[_30117 + 32 len mem[_30117]])
                                    mem[_30116 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30116 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30116 + 125] = _30119
                                    mem[_30116 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30116 + 72] = 85
                                    mem[_30116 + 189] = 0
                                    mem[64] = _30116 + 221
                                    mem[_30116 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30116 + 225] = 0
                                    mem[_30116 + 257] = _28938
                                    mem[_30116 + 289] = arg4
                                    mem[_30116 + 321] = 128
                                    mem[_30116 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30116 + 385] = mem[s + _30116 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30119, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30119, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28938, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9983 + 321]
                                _29101 = mem[(32 * idx + 2) + _9983 + 353]
                                if mem[(32 * idx + 1) + _9983 + 365 len 20] == mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9983 + 365 len 20] < mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30095 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_29101)
                                    _30096 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30098 = sha3(mem[_30096 + 32 len mem[_30096]])
                                    mem[_30095 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30095 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30095 + 125] = _30098
                                    mem[_30095 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30095 + 72] = 85
                                    if address(_28681) == address(_28718):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30095 + 292 len 29]
                                    if address(_28681) < address(_28718):
                                        if not address(_28681):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30095 + 221] = address(_28681)
                                        mem[_30095 + 241] = address(_28718)
                                        mem[_30095 + 189] = 40
                                        mem[_30095 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30095 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30095 + 314] = sha3(address(_28681), address(_28718))
                                        mem[_30095 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30095 + 261] = 85
                                        mem[_30095 + 378] = 0
                                        mem[64] = _30095 + 410
                                        mem[_30095 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30095 + 414] = 0
                                        mem[_30095 + 446] = _28938
                                        mem[_30095 + 478] = address(sha3(0, factoryAddress, _30098, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30095 + 510] = 128
                                        mem[_30095 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30095 + 574] = mem[s + _30095 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28938, address(sha3(0, factoryAddress, _30098, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28718):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30095 + 221] = address(_28718)
                                        mem[_30095 + 241] = address(_28681)
                                        mem[_30095 + 189] = 40
                                        mem[_30095 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30095 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30095 + 314] = sha3(address(_28718), address(_28681))
                                        mem[_30095 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30095 + 261] = 85
                                        mem[_30095 + 378] = 0
                                        mem[64] = _30095 + 410
                                        mem[_30095 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30095 + 414] = 0
                                        mem[_30095 + 446] = _28938
                                        mem[_30095 + 478] = address(sha3(0, factoryAddress, _30098, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30095 + 510] = 128
                                        mem[_30095 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30095 + 574] = mem[s + _30095 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28938, address(sha3(0, factoryAddress, _30098, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30102 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_28718)
                                    _30103 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30105 = sha3(mem[_30103 + 32 len mem[_30103]])
                                    mem[_30102 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30102 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30102 + 125] = _30105
                                    mem[_30102 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30102 + 72] = 85
                                    if address(_28681) == address(_28718):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30102 + 292 len 29]
                                    if address(_28681) < address(_28718):
                                        if not address(_28681):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30102 + 221] = address(_28681)
                                        mem[_30102 + 241] = address(_28718)
                                        mem[_30102 + 189] = 40
                                        mem[_30102 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30102 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30102 + 314] = sha3(address(_28681), address(_28718))
                                        mem[_30102 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30102 + 261] = 85
                                        mem[_30102 + 378] = 0
                                        mem[64] = _30102 + 410
                                        mem[_30102 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30102 + 414] = 0
                                        mem[_30102 + 446] = _28938
                                        mem[_30102 + 478] = address(sha3(0, factoryAddress, _30105, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30102 + 510] = 128
                                        mem[_30102 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30102 + 574] = mem[s + _30102 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28938, address(sha3(0, factoryAddress, _30105, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28718):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30102 + 221] = address(_28718)
                                        mem[_30102 + 241] = address(_28681)
                                        mem[_30102 + 189] = 40
                                        mem[_30102 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30102 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30102 + 314] = sha3(address(_28718), address(_28681))
                                        mem[_30102 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30102 + 261] = 85
                                        mem[_30102 + 378] = 0
                                        mem[64] = _30102 + 410
                                        mem[_30102 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30102 + 414] = 0
                                        mem[_30102 + 446] = _28938
                                        mem[_30102 + 478] = address(sha3(0, factoryAddress, _30105, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30102 + 510] = 128
                                        mem[_30102 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30102 + 574] = mem[s + _30102 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28938, address(sha3(0, factoryAddress, _30105, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if idx >= mem[_9983 + 321] - 2:
                                if mem[(32 * idx) + _9983 + 365 len 20] == mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9983 + 365 len 20] < mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                    if not mem[(32 * idx) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30137 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_28718)
                                    _30138 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30140 = sha3(mem[_30138 + 32 len mem[_30138]])
                                    mem[_30137 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30137 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30137 + 125] = _30140
                                    mem[_30137 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30137 + 72] = 85
                                    mem[_30137 + 189] = 0
                                    mem[64] = _30137 + 221
                                    mem[_30137 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30137 + 225] = _28938
                                    mem[_30137 + 257] = 0
                                    mem[_30137 + 289] = arg4
                                    mem[_30137 + 321] = 128
                                    mem[_30137 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30137 + 385] = mem[s + _30137 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30140, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30140, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28938, 0, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30144 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_28681)
                                    _30145 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30147 = sha3(mem[_30145 + 32 len mem[_30145]])
                                    mem[_30144 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30144 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30144 + 125] = _30147
                                    mem[_30144 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30144 + 72] = 85
                                    mem[_30144 + 189] = 0
                                    mem[64] = _30144 + 221
                                    mem[_30144 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30144 + 225] = _28938
                                    mem[_30144 + 257] = 0
                                    mem[_30144 + 289] = arg4
                                    mem[_30144 + 321] = 128
                                    mem[_30144 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30144 + 385] = mem[s + _30144 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30147, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30147, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28938, 0, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9983 + 321]
                                _29102 = mem[(32 * idx + 2) + _9983 + 353]
                                if mem[(32 * idx + 1) + _9983 + 365 len 20] == mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9983 + 365 len 20] < mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30123 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_29102)
                                    _30124 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30126 = sha3(mem[_30124 + 32 len mem[_30124]])
                                    mem[_30123 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30123 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30123 + 125] = _30126
                                    mem[_30123 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30123 + 72] = 85
                                    if address(_28681) == address(_28718):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30123 + 292 len 29]
                                    if address(_28681) < address(_28718):
                                        if not address(_28681):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30123 + 221] = address(_28681)
                                        mem[_30123 + 241] = address(_28718)
                                        mem[_30123 + 189] = 40
                                        mem[_30123 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30123 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30123 + 314] = sha3(address(_28681), address(_28718))
                                        mem[_30123 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30123 + 261] = 85
                                        mem[_30123 + 378] = 0
                                        mem[64] = _30123 + 410
                                        mem[_30123 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30123 + 414] = _28938
                                        mem[_30123 + 446] = 0
                                        mem[_30123 + 478] = address(sha3(0, factoryAddress, _30126, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30123 + 510] = 128
                                        mem[_30123 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30123 + 574] = mem[s + _30123 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28938, 0, address(sha3(0, factoryAddress, _30126, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28718):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30123 + 221] = address(_28718)
                                        mem[_30123 + 241] = address(_28681)
                                        mem[_30123 + 189] = 40
                                        mem[_30123 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30123 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30123 + 314] = sha3(address(_28718), address(_28681))
                                        mem[_30123 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30123 + 261] = 85
                                        mem[_30123 + 378] = 0
                                        mem[64] = _30123 + 410
                                        mem[_30123 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30123 + 414] = _28938
                                        mem[_30123 + 446] = 0
                                        mem[_30123 + 478] = address(sha3(0, factoryAddress, _30126, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30123 + 510] = 128
                                        mem[_30123 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30123 + 574] = mem[s + _30123 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28938, 0, address(sha3(0, factoryAddress, _30126, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9983 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30130 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + 353])
                                    mem[mem[64] + 52] = address(_28718)
                                    _30131 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30133 = sha3(mem[_30131 + 32 len mem[_30131]])
                                    mem[_30130 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30130 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30130 + 125] = _30133
                                    mem[_30130 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30130 + 72] = 85
                                    if address(_28681) == address(_28718):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30130 + 292 len 29]
                                    if address(_28681) < address(_28718):
                                        if not address(_28681):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30130 + 221] = address(_28681)
                                        mem[_30130 + 241] = address(_28718)
                                        mem[_30130 + 189] = 40
                                        mem[_30130 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30130 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30130 + 314] = sha3(address(_28681), address(_28718))
                                        mem[_30130 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30130 + 261] = 85
                                        mem[_30130 + 378] = 0
                                        mem[64] = _30130 + 410
                                        mem[_30130 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30130 + 414] = _28938
                                        mem[_30130 + 446] = 0
                                        mem[_30130 + 478] = address(sha3(0, factoryAddress, _30133, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30130 + 510] = 128
                                        mem[_30130 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30130 + 574] = mem[s + _30130 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28681), address(_28718)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28938, 0, address(sha3(0, factoryAddress, _30133, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28718):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30130 + 221] = address(_28718)
                                        mem[_30130 + 241] = address(_28681)
                                        mem[_30130 + 189] = 40
                                        mem[_30130 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30130 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30130 + 314] = sha3(address(_28718), address(_28681))
                                        mem[_30130 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30130 + 261] = 85
                                        mem[_30130 + 378] = 0
                                        mem[64] = _30130 + 410
                                        mem[_30130 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30130 + 414] = _28938
                                        mem[_30130 + 446] = 0
                                        mem[_30130 + 478] = address(sha3(0, factoryAddress, _30133, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30130 + 510] = 128
                                        mem[_30130 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30130 + 574] = mem[s + _30130 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28718), address(_28681)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28938, 0, address(sha3(0, factoryAddress, _30133, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
                _28717 = mem[(32 * arg3.length) + 128]
                mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
                return 32, mem[mem[64] + 32 len (32 * _28717) + 32]
            mem[_9983 + 321] = return_data.size
            mem[_9983 + 353 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 
                            32,
                            49,
                            0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                            mem[_9983 + ceil32(return_data.size) + 439 len 15]
            if not return_data.size:
                mem[64] = _9983 + ceil32(return_data.size) + (32 * arg3.length) + 354
                mem[_9983 + ceil32(return_data.size) + 322] = arg3.length
                mem[_9983 + ceil32(return_data.size) + 354 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
                mem[_9983 + ceil32(return_data.size) + (32 * arg3.length) + 354] = 0
                idx = 0
                while idx < arg3.length - 1:
                    require idx < mem[_9983 + ceil32(return_data.size) + 322]
                    _28683 = mem[(32 * idx) + _9983 + ceil32(return_data.size) + 354]
                    require idx + 1 < mem[_9983 + ceil32(return_data.size) + 322]
                    _28722 = mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354]
                    if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        _28939 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                        if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20]:
                            if idx >= mem[_9983 + ceil32(return_data.size) + 322] - 2:
                                if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30165 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_28722)
                                    _30166 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30168 = sha3(mem[_30166 + 32 len mem[_30166]])
                                    mem[_30165 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30165 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30165 + 125] = _30168
                                    mem[_30165 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30165 + 72] = 85
                                    mem[_30165 + 189] = 0
                                    mem[64] = _30165 + 221
                                    mem[_30165 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30165 + 225] = 0
                                    mem[_30165 + 257] = _28939
                                    mem[_30165 + 289] = arg4
                                    mem[_30165 + 321] = 128
                                    mem[_30165 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30165 + 385] = mem[s + _30165 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30168, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30168, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28939, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30172 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_28683)
                                    _30173 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30175 = sha3(mem[_30173 + 32 len mem[_30173]])
                                    mem[_30172 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30172 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30172 + 125] = _30175
                                    mem[_30172 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30172 + 72] = 85
                                    mem[_30172 + 189] = 0
                                    mem[64] = _30172 + 221
                                    mem[_30172 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30172 + 225] = 0
                                    mem[_30172 + 257] = _28939
                                    mem[_30172 + 289] = arg4
                                    mem[_30172 + 321] = 128
                                    mem[_30172 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30172 + 385] = mem[s + _30172 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30175, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30175, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28939, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9983 + ceil32(return_data.size) + 322]
                                _29103 = mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354]
                                if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30151 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_29103)
                                    _30152 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30154 = sha3(mem[_30152 + 32 len mem[_30152]])
                                    mem[_30151 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30151 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30151 + 125] = _30154
                                    mem[_30151 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30151 + 72] = 85
                                    if address(_28683) == address(_28722):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30151 + 292 len 29]
                                    if address(_28683) < address(_28722):
                                        if not address(_28683):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30151 + 221] = address(_28683)
                                        mem[_30151 + 241] = address(_28722)
                                        mem[_30151 + 189] = 40
                                        mem[_30151 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30151 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30151 + 314] = sha3(address(_28683), address(_28722))
                                        mem[_30151 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30151 + 261] = 85
                                        mem[_30151 + 378] = 0
                                        mem[64] = _30151 + 410
                                        mem[_30151 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30151 + 414] = 0
                                        mem[_30151 + 446] = _28939
                                        mem[_30151 + 478] = address(sha3(0, factoryAddress, _30154, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30151 + 510] = 128
                                        mem[_30151 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30151 + 574] = mem[s + _30151 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28939, address(sha3(0, factoryAddress, _30154, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28722):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30151 + 221] = address(_28722)
                                        mem[_30151 + 241] = address(_28683)
                                        mem[_30151 + 189] = 40
                                        mem[_30151 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30151 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30151 + 314] = sha3(address(_28722), address(_28683))
                                        mem[_30151 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30151 + 261] = 85
                                        mem[_30151 + 378] = 0
                                        mem[64] = _30151 + 410
                                        mem[_30151 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30151 + 414] = 0
                                        mem[_30151 + 446] = _28939
                                        mem[_30151 + 478] = address(sha3(0, factoryAddress, _30154, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30151 + 510] = 128
                                        mem[_30151 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30151 + 574] = mem[s + _30151 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28939, address(sha3(0, factoryAddress, _30154, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30158 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_28722)
                                    _30159 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30161 = sha3(mem[_30159 + 32 len mem[_30159]])
                                    mem[_30158 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30158 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30158 + 125] = _30161
                                    mem[_30158 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30158 + 72] = 85
                                    if address(_28683) == address(_28722):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30158 + 292 len 29]
                                    if address(_28683) < address(_28722):
                                        if not address(_28683):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30158 + 221] = address(_28683)
                                        mem[_30158 + 241] = address(_28722)
                                        mem[_30158 + 189] = 40
                                        mem[_30158 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30158 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30158 + 314] = sha3(address(_28683), address(_28722))
                                        mem[_30158 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30158 + 261] = 85
                                        mem[_30158 + 378] = 0
                                        mem[64] = _30158 + 410
                                        mem[_30158 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30158 + 414] = 0
                                        mem[_30158 + 446] = _28939
                                        mem[_30158 + 478] = address(sha3(0, factoryAddress, _30161, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30158 + 510] = 128
                                        mem[_30158 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30158 + 574] = mem[s + _30158 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28939, address(sha3(0, factoryAddress, _30161, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28722):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30158 + 221] = address(_28722)
                                        mem[_30158 + 241] = address(_28683)
                                        mem[_30158 + 189] = 40
                                        mem[_30158 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30158 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30158 + 314] = sha3(address(_28722), address(_28683))
                                        mem[_30158 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30158 + 261] = 85
                                        mem[_30158 + 378] = 0
                                        mem[64] = _30158 + 410
                                        mem[_30158 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30158 + 414] = 0
                                        mem[_30158 + 446] = _28939
                                        mem[_30158 + 478] = address(sha3(0, factoryAddress, _30161, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30158 + 510] = 128
                                        mem[_30158 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30158 + 574] = mem[s + _30158 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28939, address(sha3(0, factoryAddress, _30161, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if idx >= mem[_9983 + ceil32(return_data.size) + 322] - 2:
                                if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30193 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_28722)
                                    _30194 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30196 = sha3(mem[_30194 + 32 len mem[_30194]])
                                    mem[_30193 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30193 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30193 + 125] = _30196
                                    mem[_30193 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30193 + 72] = 85
                                    mem[_30193 + 189] = 0
                                    mem[64] = _30193 + 221
                                    mem[_30193 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30193 + 225] = _28939
                                    mem[_30193 + 257] = 0
                                    mem[_30193 + 289] = arg4
                                    mem[_30193 + 321] = 128
                                    mem[_30193 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30193 + 385] = mem[s + _30193 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30196, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30196, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28939, 0, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30200 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_28683)
                                    _30201 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30203 = sha3(mem[_30201 + 32 len mem[_30201]])
                                    mem[_30200 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30200 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30200 + 125] = _30203
                                    mem[_30200 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30200 + 72] = 85
                                    mem[_30200 + 189] = 0
                                    mem[64] = _30200 + 221
                                    mem[_30200 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30200 + 225] = _28939
                                    mem[_30200 + 257] = 0
                                    mem[_30200 + 289] = arg4
                                    mem[_30200 + 321] = 128
                                    mem[_30200 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30200 + 385] = mem[s + _30200 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30203, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30203, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28939, 0, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9983 + ceil32(return_data.size) + 322]
                                _29104 = mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354]
                                if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30179 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_29104)
                                    _30180 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30182 = sha3(mem[_30180 + 32 len mem[_30180]])
                                    mem[_30179 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30179 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30179 + 125] = _30182
                                    mem[_30179 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30179 + 72] = 85
                                    if address(_28683) == address(_28722):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30179 + 292 len 29]
                                    if address(_28683) < address(_28722):
                                        if not address(_28683):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30179 + 221] = address(_28683)
                                        mem[_30179 + 241] = address(_28722)
                                        mem[_30179 + 189] = 40
                                        mem[_30179 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30179 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30179 + 314] = sha3(address(_28683), address(_28722))
                                        mem[_30179 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30179 + 261] = 85
                                        mem[_30179 + 378] = 0
                                        mem[64] = _30179 + 410
                                        mem[_30179 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30179 + 414] = _28939
                                        mem[_30179 + 446] = 0
                                        mem[_30179 + 478] = address(sha3(0, factoryAddress, _30182, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30179 + 510] = 128
                                        mem[_30179 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30179 + 574] = mem[s + _30179 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28939, 0, address(sha3(0, factoryAddress, _30182, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28722):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30179 + 221] = address(_28722)
                                        mem[_30179 + 241] = address(_28683)
                                        mem[_30179 + 189] = 40
                                        mem[_30179 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30179 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30179 + 314] = sha3(address(_28722), address(_28683))
                                        mem[_30179 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30179 + 261] = 85
                                        mem[_30179 + 378] = 0
                                        mem[64] = _30179 + 410
                                        mem[_30179 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30179 + 414] = _28939
                                        mem[_30179 + 446] = 0
                                        mem[_30179 + 478] = address(sha3(0, factoryAddress, _30182, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30179 + 510] = 128
                                        mem[_30179 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30179 + 574] = mem[s + _30179 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28939, 0, address(sha3(0, factoryAddress, _30182, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30186 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_28722)
                                    _30187 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30189 = sha3(mem[_30187 + 32 len mem[_30187]])
                                    mem[_30186 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30186 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30186 + 125] = _30189
                                    mem[_30186 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30186 + 72] = 85
                                    if address(_28683) == address(_28722):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30186 + 292 len 29]
                                    if address(_28683) < address(_28722):
                                        if not address(_28683):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30186 + 221] = address(_28683)
                                        mem[_30186 + 241] = address(_28722)
                                        mem[_30186 + 189] = 40
                                        mem[_30186 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30186 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30186 + 314] = sha3(address(_28683), address(_28722))
                                        mem[_30186 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30186 + 261] = 85
                                        mem[_30186 + 378] = 0
                                        mem[64] = _30186 + 410
                                        mem[_30186 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30186 + 414] = _28939
                                        mem[_30186 + 446] = 0
                                        mem[_30186 + 478] = address(sha3(0, factoryAddress, _30189, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30186 + 510] = 128
                                        mem[_30186 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30186 + 574] = mem[s + _30186 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28939, 0, address(sha3(0, factoryAddress, _30189, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28722):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30186 + 221] = address(_28722)
                                        mem[_30186 + 241] = address(_28683)
                                        mem[_30186 + 189] = 40
                                        mem[_30186 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30186 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30186 + 314] = sha3(address(_28722), address(_28683))
                                        mem[_30186 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30186 + 261] = 85
                                        mem[_30186 + 378] = 0
                                        mem[64] = _30186 + 410
                                        mem[_30186 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30186 + 414] = _28939
                                        mem[_30186 + 446] = 0
                                        mem[_30186 + 478] = address(sha3(0, factoryAddress, _30189, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30186 + 510] = 128
                                        mem[_30186 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30186 + 574] = mem[s + _30186 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28939, 0, address(sha3(0, factoryAddress, _30189, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        _28940 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                        if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                            if idx >= mem[_9983 + ceil32(return_data.size) + 322] - 2:
                                if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30221 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_28722)
                                    _30222 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30224 = sha3(mem[_30222 + 32 len mem[_30222]])
                                    mem[_30221 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30221 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30221 + 125] = _30224
                                    mem[_30221 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30221 + 72] = 85
                                    mem[_30221 + 189] = 0
                                    mem[64] = _30221 + 221
                                    mem[_30221 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30221 + 225] = 0
                                    mem[_30221 + 257] = _28940
                                    mem[_30221 + 289] = arg4
                                    mem[_30221 + 321] = 128
                                    mem[_30221 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30221 + 385] = mem[s + _30221 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30224, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30224, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28940, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30228 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_28683)
                                    _30229 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30231 = sha3(mem[_30229 + 32 len mem[_30229]])
                                    mem[_30228 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30228 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30228 + 125] = _30231
                                    mem[_30228 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30228 + 72] = 85
                                    mem[_30228 + 189] = 0
                                    mem[64] = _30228 + 221
                                    mem[_30228 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30228 + 225] = 0
                                    mem[_30228 + 257] = _28940
                                    mem[_30228 + 289] = arg4
                                    mem[_30228 + 321] = 128
                                    mem[_30228 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30228 + 385] = mem[s + _30228 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30231, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30231, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28940, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9983 + ceil32(return_data.size) + 322]
                                _29105 = mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354]
                                if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30207 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_29105)
                                    _30208 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30210 = sha3(mem[_30208 + 32 len mem[_30208]])
                                    mem[_30207 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30207 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30207 + 125] = _30210
                                    mem[_30207 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30207 + 72] = 85
                                    if address(_28683) == address(_28722):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30207 + 292 len 29]
                                    if address(_28683) < address(_28722):
                                        if not address(_28683):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30207 + 221] = address(_28683)
                                        mem[_30207 + 241] = address(_28722)
                                        mem[_30207 + 189] = 40
                                        mem[_30207 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30207 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30207 + 314] = sha3(address(_28683), address(_28722))
                                        mem[_30207 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30207 + 261] = 85
                                        mem[_30207 + 378] = 0
                                        mem[64] = _30207 + 410
                                        mem[_30207 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30207 + 414] = 0
                                        mem[_30207 + 446] = _28940
                                        mem[_30207 + 478] = address(sha3(0, factoryAddress, _30210, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30207 + 510] = 128
                                        mem[_30207 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30207 + 574] = mem[s + _30207 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28940, address(sha3(0, factoryAddress, _30210, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28722):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30207 + 221] = address(_28722)
                                        mem[_30207 + 241] = address(_28683)
                                        mem[_30207 + 189] = 40
                                        mem[_30207 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30207 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30207 + 314] = sha3(address(_28722), address(_28683))
                                        mem[_30207 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30207 + 261] = 85
                                        mem[_30207 + 378] = 0
                                        mem[64] = _30207 + 410
                                        mem[_30207 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30207 + 414] = 0
                                        mem[_30207 + 446] = _28940
                                        mem[_30207 + 478] = address(sha3(0, factoryAddress, _30210, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30207 + 510] = 128
                                        mem[_30207 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30207 + 574] = mem[s + _30207 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28940, address(sha3(0, factoryAddress, _30210, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30214 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_28722)
                                    _30215 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30217 = sha3(mem[_30215 + 32 len mem[_30215]])
                                    mem[_30214 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30214 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30214 + 125] = _30217
                                    mem[_30214 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30214 + 72] = 85
                                    if address(_28683) == address(_28722):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30214 + 292 len 29]
                                    if address(_28683) < address(_28722):
                                        if not address(_28683):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30214 + 221] = address(_28683)
                                        mem[_30214 + 241] = address(_28722)
                                        mem[_30214 + 189] = 40
                                        mem[_30214 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30214 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30214 + 314] = sha3(address(_28683), address(_28722))
                                        mem[_30214 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30214 + 261] = 85
                                        mem[_30214 + 378] = 0
                                        mem[64] = _30214 + 410
                                        mem[_30214 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30214 + 414] = 0
                                        mem[_30214 + 446] = _28940
                                        mem[_30214 + 478] = address(sha3(0, factoryAddress, _30217, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30214 + 510] = 128
                                        mem[_30214 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30214 + 574] = mem[s + _30214 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28940, address(sha3(0, factoryAddress, _30217, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28722):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30214 + 221] = address(_28722)
                                        mem[_30214 + 241] = address(_28683)
                                        mem[_30214 + 189] = 40
                                        mem[_30214 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30214 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30214 + 314] = sha3(address(_28722), address(_28683))
                                        mem[_30214 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30214 + 261] = 85
                                        mem[_30214 + 378] = 0
                                        mem[64] = _30214 + 410
                                        mem[_30214 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30214 + 414] = 0
                                        mem[_30214 + 446] = _28940
                                        mem[_30214 + 478] = address(sha3(0, factoryAddress, _30217, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30214 + 510] = 128
                                        mem[_30214 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30214 + 574] = mem[s + _30214 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28940, address(sha3(0, factoryAddress, _30217, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if idx >= mem[_9983 + ceil32(return_data.size) + 322] - 2:
                                if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30249 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_28722)
                                    _30250 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30252 = sha3(mem[_30250 + 32 len mem[_30250]])
                                    mem[_30249 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30249 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30249 + 125] = _30252
                                    mem[_30249 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30249 + 72] = 85
                                    mem[_30249 + 189] = 0
                                    mem[64] = _30249 + 221
                                    mem[_30249 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30249 + 225] = _28940
                                    mem[_30249 + 257] = 0
                                    mem[_30249 + 289] = arg4
                                    mem[_30249 + 321] = 128
                                    mem[_30249 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30249 + 385] = mem[s + _30249 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30252, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30252, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28940, 0, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30256 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_28683)
                                    _30257 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30259 = sha3(mem[_30257 + 32 len mem[_30257]])
                                    mem[_30256 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30256 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30256 + 125] = _30259
                                    mem[_30256 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30256 + 72] = 85
                                    mem[_30256 + 189] = 0
                                    mem[64] = _30256 + 221
                                    mem[_30256 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30256 + 225] = _28940
                                    mem[_30256 + 257] = 0
                                    mem[_30256 + 289] = arg4
                                    mem[_30256 + 321] = 128
                                    mem[_30256 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30256 + 385] = mem[s + _30256 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30259, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30259, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28940, 0, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9983 + ceil32(return_data.size) + 322]
                                _29106 = mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354]
                                if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30235 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_29106)
                                    _30236 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30238 = sha3(mem[_30236 + 32 len mem[_30236]])
                                    mem[_30235 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30235 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30235 + 125] = _30238
                                    mem[_30235 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30235 + 72] = 85
                                    if address(_28683) == address(_28722):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30235 + 292 len 29]
                                    if address(_28683) < address(_28722):
                                        if not address(_28683):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30235 + 221] = address(_28683)
                                        mem[_30235 + 241] = address(_28722)
                                        mem[_30235 + 189] = 40
                                        mem[_30235 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30235 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30235 + 314] = sha3(address(_28683), address(_28722))
                                        mem[_30235 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30235 + 261] = 85
                                        mem[_30235 + 378] = 0
                                        mem[64] = _30235 + 410
                                        mem[_30235 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30235 + 414] = _28940
                                        mem[_30235 + 446] = 0
                                        mem[_30235 + 478] = address(sha3(0, factoryAddress, _30238, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30235 + 510] = 128
                                        mem[_30235 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30235 + 574] = mem[s + _30235 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28940, 0, address(sha3(0, factoryAddress, _30238, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28722):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30235 + 221] = address(_28722)
                                        mem[_30235 + 241] = address(_28683)
                                        mem[_30235 + 189] = 40
                                        mem[_30235 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30235 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30235 + 314] = sha3(address(_28722), address(_28683))
                                        mem[_30235 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30235 + 261] = 85
                                        mem[_30235 + 378] = 0
                                        mem[64] = _30235 + 410
                                        mem[_30235 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30235 + 414] = _28940
                                        mem[_30235 + 446] = 0
                                        mem[_30235 + 478] = address(sha3(0, factoryAddress, _30238, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30235 + 510] = 128
                                        mem[_30235 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30235 + 574] = mem[s + _30235 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28940, 0, address(sha3(0, factoryAddress, _30238, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30242 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_28722)
                                    _30243 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30245 = sha3(mem[_30243 + 32 len mem[_30243]])
                                    mem[_30242 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30242 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30242 + 125] = _30245
                                    mem[_30242 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30242 + 72] = 85
                                    if address(_28683) == address(_28722):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30242 + 292 len 29]
                                    if address(_28683) < address(_28722):
                                        if not address(_28683):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30242 + 221] = address(_28683)
                                        mem[_30242 + 241] = address(_28722)
                                        mem[_30242 + 189] = 40
                                        mem[_30242 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30242 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30242 + 314] = sha3(address(_28683), address(_28722))
                                        mem[_30242 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30242 + 261] = 85
                                        mem[_30242 + 378] = 0
                                        mem[64] = _30242 + 410
                                        mem[_30242 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30242 + 414] = _28940
                                        mem[_30242 + 446] = 0
                                        mem[_30242 + 478] = address(sha3(0, factoryAddress, _30245, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30242 + 510] = 128
                                        mem[_30242 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30242 + 574] = mem[s + _30242 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28683), address(_28722)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28940, 0, address(sha3(0, factoryAddress, _30245, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28722):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30242 + 221] = address(_28722)
                                        mem[_30242 + 241] = address(_28683)
                                        mem[_30242 + 189] = 40
                                        mem[_30242 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30242 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30242 + 314] = sha3(address(_28722), address(_28683))
                                        mem[_30242 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30242 + 261] = 85
                                        mem[_30242 + 378] = 0
                                        mem[64] = _30242 + 410
                                        mem[_30242 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30242 + 414] = _28940
                                        mem[_30242 + 446] = 0
                                        mem[_30242 + 478] = address(sha3(0, factoryAddress, _30245, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30242 + 510] = 128
                                        mem[_30242 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30242 + 574] = mem[s + _30242 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28722), address(_28683)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28940, 0, address(sha3(0, factoryAddress, _30245, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
                _28721 = mem[(32 * arg3.length) + 128]
                mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
                return 32, mem[mem[64] + 32 len (32 * _28721) + 32]
            require return_data.size >= 32
            if not mem[_9983 + 353]:
                revert with 0, 
                            32,
                            49,
                            0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                            mem[_9983 + ceil32(return_data.size) + 439 len 15]
            mem[64] = _9983 + ceil32(return_data.size) + (32 * arg3.length) + 354
            mem[_9983 + ceil32(return_data.size) + 322] = arg3.length
            mem[_9983 + ceil32(return_data.size) + 354 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
            mem[_9983 + ceil32(return_data.size) + (32 * arg3.length) + 354] = 0
            idx = 0
            while idx < arg3.length - 1:
                require idx < mem[_9983 + ceil32(return_data.size) + 322]
                _28685 = mem[(32 * idx) + _9983 + ceil32(return_data.size) + 354]
                require idx + 1 < mem[_9983 + ceil32(return_data.size) + 322]
                _28726 = mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354]
                if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                    if not mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * arg3.length) + 128]
                    _28941 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                    if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20]:
                        if idx >= mem[_9983 + ceil32(return_data.size) + 322] - 2:
                            if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30277 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28726)
                                _30278 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30280 = sha3(mem[_30278 + 32 len mem[_30278]])
                                mem[_30277 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30277 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30277 + 125] = _30280
                                mem[_30277 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30277 + 72] = 85
                                mem[_30277 + 189] = 0
                                mem[64] = _30277 + 221
                                mem[_30277 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30277 + 225] = 0
                                mem[_30277 + 257] = _28941
                                mem[_30277 + 289] = arg4
                                mem[_30277 + 321] = 128
                                mem[_30277 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30277 + 385] = mem[s + _30277 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30280, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30280, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28941, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30284 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28685)
                                _30285 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30287 = sha3(mem[_30285 + 32 len mem[_30285]])
                                mem[_30284 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30284 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30284 + 125] = _30287
                                mem[_30284 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30284 + 72] = 85
                                mem[_30284 + 189] = 0
                                mem[64] = _30284 + 221
                                mem[_30284 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30284 + 225] = 0
                                mem[_30284 + 257] = _28941
                                mem[_30284 + 289] = arg4
                                mem[_30284 + 321] = 128
                                mem[_30284 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30284 + 385] = mem[s + _30284 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30287, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30287, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28941, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9983 + ceil32(return_data.size) + 322]
                            _29107 = mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354]
                            if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30263 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_29107)
                                _30264 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30266 = sha3(mem[_30264 + 32 len mem[_30264]])
                                mem[_30263 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30263 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30263 + 125] = _30266
                                mem[_30263 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30263 + 72] = 85
                                if address(_28685) == address(_28726):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30263 + 292 len 29]
                                if address(_28685) < address(_28726):
                                    if not address(_28685):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30263 + 221] = address(_28685)
                                    mem[_30263 + 241] = address(_28726)
                                    mem[_30263 + 189] = 40
                                    mem[_30263 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30263 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30263 + 314] = sha3(address(_28685), address(_28726))
                                    mem[_30263 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30263 + 261] = 85
                                    mem[_30263 + 378] = 0
                                    mem[64] = _30263 + 410
                                    mem[_30263 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30263 + 414] = 0
                                    mem[_30263 + 446] = _28941
                                    mem[_30263 + 478] = address(sha3(0, factoryAddress, _30266, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30263 + 510] = 128
                                    mem[_30263 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30263 + 574] = mem[s + _30263 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28941, address(sha3(0, factoryAddress, _30266, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28726):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30263 + 221] = address(_28726)
                                    mem[_30263 + 241] = address(_28685)
                                    mem[_30263 + 189] = 40
                                    mem[_30263 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30263 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30263 + 314] = sha3(address(_28726), address(_28685))
                                    mem[_30263 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30263 + 261] = 85
                                    mem[_30263 + 378] = 0
                                    mem[64] = _30263 + 410
                                    mem[_30263 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30263 + 414] = 0
                                    mem[_30263 + 446] = _28941
                                    mem[_30263 + 478] = address(sha3(0, factoryAddress, _30266, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30263 + 510] = 128
                                    mem[_30263 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30263 + 574] = mem[s + _30263 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28941, address(sha3(0, factoryAddress, _30266, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30270 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28726)
                                _30271 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30273 = sha3(mem[_30271 + 32 len mem[_30271]])
                                mem[_30270 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30270 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30270 + 125] = _30273
                                mem[_30270 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30270 + 72] = 85
                                if address(_28685) == address(_28726):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30270 + 292 len 29]
                                if address(_28685) < address(_28726):
                                    if not address(_28685):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30270 + 221] = address(_28685)
                                    mem[_30270 + 241] = address(_28726)
                                    mem[_30270 + 189] = 40
                                    mem[_30270 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30270 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30270 + 314] = sha3(address(_28685), address(_28726))
                                    mem[_30270 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30270 + 261] = 85
                                    mem[_30270 + 378] = 0
                                    mem[64] = _30270 + 410
                                    mem[_30270 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30270 + 414] = 0
                                    mem[_30270 + 446] = _28941
                                    mem[_30270 + 478] = address(sha3(0, factoryAddress, _30273, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30270 + 510] = 128
                                    mem[_30270 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30270 + 574] = mem[s + _30270 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28941, address(sha3(0, factoryAddress, _30273, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28726):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30270 + 221] = address(_28726)
                                    mem[_30270 + 241] = address(_28685)
                                    mem[_30270 + 189] = 40
                                    mem[_30270 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30270 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30270 + 314] = sha3(address(_28726), address(_28685))
                                    mem[_30270 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30270 + 261] = 85
                                    mem[_30270 + 378] = 0
                                    mem[64] = _30270 + 410
                                    mem[_30270 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30270 + 414] = 0
                                    mem[_30270 + 446] = _28941
                                    mem[_30270 + 478] = address(sha3(0, factoryAddress, _30273, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30270 + 510] = 128
                                    mem[_30270 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30270 + 574] = mem[s + _30270 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28941, address(sha3(0, factoryAddress, _30273, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if idx >= mem[_9983 + ceil32(return_data.size) + 322] - 2:
                            if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30305 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28726)
                                _30306 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30308 = sha3(mem[_30306 + 32 len mem[_30306]])
                                mem[_30305 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30305 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30305 + 125] = _30308
                                mem[_30305 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30305 + 72] = 85
                                mem[_30305 + 189] = 0
                                mem[64] = _30305 + 221
                                mem[_30305 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30305 + 225] = _28941
                                mem[_30305 + 257] = 0
                                mem[_30305 + 289] = arg4
                                mem[_30305 + 321] = 128
                                mem[_30305 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30305 + 385] = mem[s + _30305 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30308, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30308, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28941, 0, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30312 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28685)
                                _30313 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30315 = sha3(mem[_30313 + 32 len mem[_30313]])
                                mem[_30312 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30312 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30312 + 125] = _30315
                                mem[_30312 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30312 + 72] = 85
                                mem[_30312 + 189] = 0
                                mem[64] = _30312 + 221
                                mem[_30312 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30312 + 225] = _28941
                                mem[_30312 + 257] = 0
                                mem[_30312 + 289] = arg4
                                mem[_30312 + 321] = 128
                                mem[_30312 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30312 + 385] = mem[s + _30312 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30315, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30315, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28941, 0, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9983 + ceil32(return_data.size) + 322]
                            _29108 = mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354]
                            if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30291 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_29108)
                                _30292 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30294 = sha3(mem[_30292 + 32 len mem[_30292]])
                                mem[_30291 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30291 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30291 + 125] = _30294
                                mem[_30291 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30291 + 72] = 85
                                if address(_28685) == address(_28726):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30291 + 292 len 29]
                                if address(_28685) < address(_28726):
                                    if not address(_28685):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30291 + 221] = address(_28685)
                                    mem[_30291 + 241] = address(_28726)
                                    mem[_30291 + 189] = 40
                                    mem[_30291 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30291 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30291 + 314] = sha3(address(_28685), address(_28726))
                                    mem[_30291 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30291 + 261] = 85
                                    mem[_30291 + 378] = 0
                                    mem[64] = _30291 + 410
                                    mem[_30291 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30291 + 414] = _28941
                                    mem[_30291 + 446] = 0
                                    mem[_30291 + 478] = address(sha3(0, factoryAddress, _30294, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30291 + 510] = 128
                                    mem[_30291 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30291 + 574] = mem[s + _30291 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28941, 0, address(sha3(0, factoryAddress, _30294, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28726):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30291 + 221] = address(_28726)
                                    mem[_30291 + 241] = address(_28685)
                                    mem[_30291 + 189] = 40
                                    mem[_30291 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30291 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30291 + 314] = sha3(address(_28726), address(_28685))
                                    mem[_30291 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30291 + 261] = 85
                                    mem[_30291 + 378] = 0
                                    mem[64] = _30291 + 410
                                    mem[_30291 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30291 + 414] = _28941
                                    mem[_30291 + 446] = 0
                                    mem[_30291 + 478] = address(sha3(0, factoryAddress, _30294, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30291 + 510] = 128
                                    mem[_30291 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30291 + 574] = mem[s + _30291 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28941, 0, address(sha3(0, factoryAddress, _30294, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30298 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28726)
                                _30299 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30301 = sha3(mem[_30299 + 32 len mem[_30299]])
                                mem[_30298 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30298 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30298 + 125] = _30301
                                mem[_30298 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30298 + 72] = 85
                                if address(_28685) == address(_28726):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30298 + 292 len 29]
                                if address(_28685) < address(_28726):
                                    if not address(_28685):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30298 + 221] = address(_28685)
                                    mem[_30298 + 241] = address(_28726)
                                    mem[_30298 + 189] = 40
                                    mem[_30298 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30298 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30298 + 314] = sha3(address(_28685), address(_28726))
                                    mem[_30298 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30298 + 261] = 85
                                    mem[_30298 + 378] = 0
                                    mem[64] = _30298 + 410
                                    mem[_30298 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30298 + 414] = _28941
                                    mem[_30298 + 446] = 0
                                    mem[_30298 + 478] = address(sha3(0, factoryAddress, _30301, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30298 + 510] = 128
                                    mem[_30298 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30298 + 574] = mem[s + _30298 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28941, 0, address(sha3(0, factoryAddress, _30301, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28726):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30298 + 221] = address(_28726)
                                    mem[_30298 + 241] = address(_28685)
                                    mem[_30298 + 189] = 40
                                    mem[_30298 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30298 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30298 + 314] = sha3(address(_28726), address(_28685))
                                    mem[_30298 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30298 + 261] = 85
                                    mem[_30298 + 378] = 0
                                    mem[64] = _30298 + 410
                                    mem[_30298 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30298 + 414] = _28941
                                    mem[_30298 + 446] = 0
                                    mem[_30298 + 478] = address(sha3(0, factoryAddress, _30301, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30298 + 510] = 128
                                    mem[_30298 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30298 + 574] = mem[s + _30298 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28941, 0, address(sha3(0, factoryAddress, _30301, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * arg3.length) + 128]
                    _28942 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                    if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                        if idx >= mem[_9983 + ceil32(return_data.size) + 322] - 2:
                            if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30333 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28726)
                                _30334 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30336 = sha3(mem[_30334 + 32 len mem[_30334]])
                                mem[_30333 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30333 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30333 + 125] = _30336
                                mem[_30333 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30333 + 72] = 85
                                mem[_30333 + 189] = 0
                                mem[64] = _30333 + 221
                                mem[_30333 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30333 + 225] = 0
                                mem[_30333 + 257] = _28942
                                mem[_30333 + 289] = arg4
                                mem[_30333 + 321] = 128
                                mem[_30333 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30333 + 385] = mem[s + _30333 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30336, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30336, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28942, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30340 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28685)
                                _30341 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30343 = sha3(mem[_30341 + 32 len mem[_30341]])
                                mem[_30340 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30340 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30340 + 125] = _30343
                                mem[_30340 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30340 + 72] = 85
                                mem[_30340 + 189] = 0
                                mem[64] = _30340 + 221
                                mem[_30340 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30340 + 225] = 0
                                mem[_30340 + 257] = _28942
                                mem[_30340 + 289] = arg4
                                mem[_30340 + 321] = 128
                                mem[_30340 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30340 + 385] = mem[s + _30340 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30343, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30343, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28942, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9983 + ceil32(return_data.size) + 322]
                            _29109 = mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354]
                            if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30319 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_29109)
                                _30320 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30322 = sha3(mem[_30320 + 32 len mem[_30320]])
                                mem[_30319 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30319 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30319 + 125] = _30322
                                mem[_30319 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30319 + 72] = 85
                                if address(_28685) == address(_28726):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30319 + 292 len 29]
                                if address(_28685) < address(_28726):
                                    if not address(_28685):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30319 + 221] = address(_28685)
                                    mem[_30319 + 241] = address(_28726)
                                    mem[_30319 + 189] = 40
                                    mem[_30319 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30319 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30319 + 314] = sha3(address(_28685), address(_28726))
                                    mem[_30319 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30319 + 261] = 85
                                    mem[_30319 + 378] = 0
                                    mem[64] = _30319 + 410
                                    mem[_30319 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30319 + 414] = 0
                                    mem[_30319 + 446] = _28942
                                    mem[_30319 + 478] = address(sha3(0, factoryAddress, _30322, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30319 + 510] = 128
                                    mem[_30319 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30319 + 574] = mem[s + _30319 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28942, address(sha3(0, factoryAddress, _30322, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28726):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30319 + 221] = address(_28726)
                                    mem[_30319 + 241] = address(_28685)
                                    mem[_30319 + 189] = 40
                                    mem[_30319 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30319 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30319 + 314] = sha3(address(_28726), address(_28685))
                                    mem[_30319 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30319 + 261] = 85
                                    mem[_30319 + 378] = 0
                                    mem[64] = _30319 + 410
                                    mem[_30319 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30319 + 414] = 0
                                    mem[_30319 + 446] = _28942
                                    mem[_30319 + 478] = address(sha3(0, factoryAddress, _30322, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30319 + 510] = 128
                                    mem[_30319 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30319 + 574] = mem[s + _30319 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28942, address(sha3(0, factoryAddress, _30322, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30326 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28726)
                                _30327 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30329 = sha3(mem[_30327 + 32 len mem[_30327]])
                                mem[_30326 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30326 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30326 + 125] = _30329
                                mem[_30326 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30326 + 72] = 85
                                if address(_28685) == address(_28726):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30326 + 292 len 29]
                                if address(_28685) < address(_28726):
                                    if not address(_28685):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30326 + 221] = address(_28685)
                                    mem[_30326 + 241] = address(_28726)
                                    mem[_30326 + 189] = 40
                                    mem[_30326 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30326 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30326 + 314] = sha3(address(_28685), address(_28726))
                                    mem[_30326 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30326 + 261] = 85
                                    mem[_30326 + 378] = 0
                                    mem[64] = _30326 + 410
                                    mem[_30326 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30326 + 414] = 0
                                    mem[_30326 + 446] = _28942
                                    mem[_30326 + 478] = address(sha3(0, factoryAddress, _30329, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30326 + 510] = 128
                                    mem[_30326 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30326 + 574] = mem[s + _30326 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28942, address(sha3(0, factoryAddress, _30329, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28726):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30326 + 221] = address(_28726)
                                    mem[_30326 + 241] = address(_28685)
                                    mem[_30326 + 189] = 40
                                    mem[_30326 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30326 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30326 + 314] = sha3(address(_28726), address(_28685))
                                    mem[_30326 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30326 + 261] = 85
                                    mem[_30326 + 378] = 0
                                    mem[64] = _30326 + 410
                                    mem[_30326 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30326 + 414] = 0
                                    mem[_30326 + 446] = _28942
                                    mem[_30326 + 478] = address(sha3(0, factoryAddress, _30329, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30326 + 510] = 128
                                    mem[_30326 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30326 + 574] = mem[s + _30326 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28942, address(sha3(0, factoryAddress, _30329, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if idx >= mem[_9983 + ceil32(return_data.size) + 322] - 2:
                            if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30361 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28726)
                                _30362 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30364 = sha3(mem[_30362 + 32 len mem[_30362]])
                                mem[_30361 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30361 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30361 + 125] = _30364
                                mem[_30361 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30361 + 72] = 85
                                mem[_30361 + 189] = 0
                                mem[64] = _30361 + 221
                                mem[_30361 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30361 + 225] = _28942
                                mem[_30361 + 257] = 0
                                mem[_30361 + 289] = arg4
                                mem[_30361 + 321] = 128
                                mem[_30361 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30361 + 385] = mem[s + _30361 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30364, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30364, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28942, 0, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30368 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28685)
                                _30369 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30371 = sha3(mem[_30369 + 32 len mem[_30369]])
                                mem[_30368 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30368 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30368 + 125] = _30371
                                mem[_30368 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30368 + 72] = 85
                                mem[_30368 + 189] = 0
                                mem[64] = _30368 + 221
                                mem[_30368 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30368 + 225] = _28942
                                mem[_30368 + 257] = 0
                                mem[_30368 + 289] = arg4
                                mem[_30368 + 321] = 128
                                mem[_30368 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30368 + 385] = mem[s + _30368 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30371, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30371, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28942, 0, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9983 + ceil32(return_data.size) + 322]
                            _29110 = mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354]
                            if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30347 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_29110)
                                _30348 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30350 = sha3(mem[_30348 + 32 len mem[_30348]])
                                mem[_30347 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30347 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30347 + 125] = _30350
                                mem[_30347 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30347 + 72] = 85
                                if address(_28685) == address(_28726):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30347 + 292 len 29]
                                if address(_28685) < address(_28726):
                                    if not address(_28685):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30347 + 221] = address(_28685)
                                    mem[_30347 + 241] = address(_28726)
                                    mem[_30347 + 189] = 40
                                    mem[_30347 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30347 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30347 + 314] = sha3(address(_28685), address(_28726))
                                    mem[_30347 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30347 + 261] = 85
                                    mem[_30347 + 378] = 0
                                    mem[64] = _30347 + 410
                                    mem[_30347 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30347 + 414] = _28942
                                    mem[_30347 + 446] = 0
                                    mem[_30347 + 478] = address(sha3(0, factoryAddress, _30350, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30347 + 510] = 128
                                    mem[_30347 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30347 + 574] = mem[s + _30347 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28942, 0, address(sha3(0, factoryAddress, _30350, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28726):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30347 + 221] = address(_28726)
                                    mem[_30347 + 241] = address(_28685)
                                    mem[_30347 + 189] = 40
                                    mem[_30347 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30347 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30347 + 314] = sha3(address(_28726), address(_28685))
                                    mem[_30347 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30347 + 261] = 85
                                    mem[_30347 + 378] = 0
                                    mem[64] = _30347 + 410
                                    mem[_30347 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30347 + 414] = _28942
                                    mem[_30347 + 446] = 0
                                    mem[_30347 + 478] = address(sha3(0, factoryAddress, _30350, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30347 + 510] = 128
                                    mem[_30347 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30347 + 574] = mem[s + _30347 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28942, 0, address(sha3(0, factoryAddress, _30350, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30354 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9983 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28726)
                                _30355 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30357 = sha3(mem[_30355 + 32 len mem[_30355]])
                                mem[_30354 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30354 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30354 + 125] = _30357
                                mem[_30354 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30354 + 72] = 85
                                if address(_28685) == address(_28726):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30354 + 292 len 29]
                                if address(_28685) < address(_28726):
                                    if not address(_28685):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30354 + 221] = address(_28685)
                                    mem[_30354 + 241] = address(_28726)
                                    mem[_30354 + 189] = 40
                                    mem[_30354 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30354 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30354 + 314] = sha3(address(_28685), address(_28726))
                                    mem[_30354 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30354 + 261] = 85
                                    mem[_30354 + 378] = 0
                                    mem[64] = _30354 + 410
                                    mem[_30354 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30354 + 414] = _28942
                                    mem[_30354 + 446] = 0
                                    mem[_30354 + 478] = address(sha3(0, factoryAddress, _30357, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30354 + 510] = 128
                                    mem[_30354 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30354 + 574] = mem[s + _30354 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28685), address(_28726)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28942, 0, address(sha3(0, factoryAddress, _30357, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28726):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30354 + 221] = address(_28726)
                                    mem[_30354 + 241] = address(_28685)
                                    mem[_30354 + 189] = 40
                                    mem[_30354 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30354 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30354 + 314] = sha3(address(_28726), address(_28685))
                                    mem[_30354 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30354 + 261] = 85
                                    mem[_30354 + 378] = 0
                                    mem[64] = _30354 + 410
                                    mem[_30354 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30354 + 414] = _28942
                                    mem[_30354 + 446] = 0
                                    mem[_30354 + 478] = address(sha3(0, factoryAddress, _30357, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30354 + 510] = 128
                                    mem[_30354 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30354 + 574] = mem[s + _30354 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28726), address(_28685)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28942, 0, address(sha3(0, factoryAddress, _30357, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
            _28725 = mem[(32 * arg3.length) + 128]
            mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _28725) + 32]
        if not address(cd[(arg3 + 68)]):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        _9990 = mem[64]
        mem[mem[64] + 32] = address(cd[(arg3 + 68)])
        mem[mem[64] + 52] = address(cd[(arg3 + 36)])
        _9991 = mem[64]
        mem[mem[64]] = 40
        mem[64] = mem[64] + 72
        _9993 = sha3(mem[_9991 + 32 len mem[_9991]])
        mem[_9990 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[_9990 + 105] = Mask(160, 96, factoryAddress)
        mem[_9990 + 125] = _9993
        mem[_9990 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
        mem[_9990 + 72] = 85
        require 0 < mem[(32 * arg3.length) + 128]
        _10016 = mem[(32 * arg3.length) + 160]
        mem[_9990 + 225] = address(WETHAddress)
        mem[_9990 + 257] = address(sha3(0, factoryAddress, _9993, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
        mem[_9990 + 289] = _10016
        mem[_9990 + 189] = 100
        mem[_9990 + 225 len 28] = Mask(224, 0, stor1)
        mem[_9990 + 221 len 4] = unknown_0x23b872dd(?????)
        mem[_9990 + 321 len 96] = unknown_0x23b872dd(?????), Mask(224, 0, stor1), uint32(stor1), address(sha3(0, factoryAddress, _9993, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), Mask(224, 32, _10016) >> 32
        mem[_9990 + 445 len 4] = Mask(32, 64, _10016) >> 64
        call address(cd[(arg3 + 36)]) with:
             gas gas_remaining wei
            args Mask(224, 32, _10016) << 480, mem[_9990 + 417 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 
                            32,
                            49,
                            0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                            mem[_9990 + 438 len 7],
                            Mask(32, 64, _10016) >> 64,
                            mem[_9990 + 449 len 4]
            if not mem[96]:
                mem[64] = _9990 + (32 * arg3.length) + 353
                mem[_9990 + 321] = arg3.length
                mem[_9990 + 353 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
                mem[_9990 + (32 * arg3.length) + 353] = 0
                idx = 0
                while idx < arg3.length - 1:
                    require idx < mem[_9990 + 321]
                    _28687 = mem[(32 * idx) + _9990 + 353]
                    require idx + 1 < mem[_9990 + 321]
                    _28730 = mem[(32 * idx + 1) + _9990 + 353]
                    if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx + 1) + _9990 + 365 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _9990 + 365 len 20] < mem[(32 * idx + 1) + _9990 + 365 len 20]:
                        if not mem[(32 * idx) + _9990 + 365 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        _28943 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                        if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx) + _9990 + 365 len 20]:
                            if idx >= mem[_9990 + 321] - 2:
                                if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9990 + 365 len 20] < mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    if not mem[(32 * idx) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30389 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_28730)
                                    _30390 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30392 = sha3(mem[_30390 + 32 len mem[_30390]])
                                    mem[_30389 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30389 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30389 + 125] = _30392
                                    mem[_30389 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30389 + 72] = 85
                                    mem[_30389 + 189] = 0
                                    mem[64] = _30389 + 221
                                    mem[_30389 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30389 + 225] = 0
                                    mem[_30389 + 257] = _28943
                                    mem[_30389 + 289] = arg4
                                    mem[_30389 + 321] = 128
                                    mem[_30389 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30389 + 385] = mem[s + _30389 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30392, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30392, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28943, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30396 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_28687)
                                    _30397 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30399 = sha3(mem[_30397 + 32 len mem[_30397]])
                                    mem[_30396 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30396 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30396 + 125] = _30399
                                    mem[_30396 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30396 + 72] = 85
                                    mem[_30396 + 189] = 0
                                    mem[64] = _30396 + 221
                                    mem[_30396 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30396 + 225] = 0
                                    mem[_30396 + 257] = _28943
                                    mem[_30396 + 289] = arg4
                                    mem[_30396 + 321] = 128
                                    mem[_30396 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30396 + 385] = mem[s + _30396 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30399, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30399, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28943, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9990 + 321]
                                _29111 = mem[(32 * idx + 2) + _9990 + 353]
                                if mem[(32 * idx + 1) + _9990 + 365 len 20] == mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9990 + 365 len 20] < mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30375 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_29111)
                                    _30376 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30378 = sha3(mem[_30376 + 32 len mem[_30376]])
                                    mem[_30375 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30375 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30375 + 125] = _30378
                                    mem[_30375 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30375 + 72] = 85
                                    if address(_28687) == address(_28730):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30375 + 292 len 29]
                                    if address(_28687) < address(_28730):
                                        if not address(_28687):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30375 + 221] = address(_28687)
                                        mem[_30375 + 241] = address(_28730)
                                        mem[_30375 + 189] = 40
                                        mem[_30375 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30375 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30375 + 314] = sha3(address(_28687), address(_28730))
                                        mem[_30375 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30375 + 261] = 85
                                        mem[_30375 + 378] = 0
                                        mem[64] = _30375 + 410
                                        mem[_30375 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30375 + 414] = 0
                                        mem[_30375 + 446] = _28943
                                        mem[_30375 + 478] = address(sha3(0, factoryAddress, _30378, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30375 + 510] = 128
                                        mem[_30375 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30375 + 574] = mem[s + _30375 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28943, address(sha3(0, factoryAddress, _30378, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28730):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30375 + 221] = address(_28730)
                                        mem[_30375 + 241] = address(_28687)
                                        mem[_30375 + 189] = 40
                                        mem[_30375 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30375 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30375 + 314] = sha3(address(_28730), address(_28687))
                                        mem[_30375 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30375 + 261] = 85
                                        mem[_30375 + 378] = 0
                                        mem[64] = _30375 + 410
                                        mem[_30375 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30375 + 414] = 0
                                        mem[_30375 + 446] = _28943
                                        mem[_30375 + 478] = address(sha3(0, factoryAddress, _30378, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30375 + 510] = 128
                                        mem[_30375 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30375 + 574] = mem[s + _30375 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28943, address(sha3(0, factoryAddress, _30378, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30382 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_28730)
                                    _30383 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30385 = sha3(mem[_30383 + 32 len mem[_30383]])
                                    mem[_30382 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30382 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30382 + 125] = _30385
                                    mem[_30382 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30382 + 72] = 85
                                    if address(_28687) == address(_28730):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30382 + 292 len 29]
                                    if address(_28687) < address(_28730):
                                        if not address(_28687):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30382 + 221] = address(_28687)
                                        mem[_30382 + 241] = address(_28730)
                                        mem[_30382 + 189] = 40
                                        mem[_30382 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30382 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30382 + 314] = sha3(address(_28687), address(_28730))
                                        mem[_30382 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30382 + 261] = 85
                                        mem[_30382 + 378] = 0
                                        mem[64] = _30382 + 410
                                        mem[_30382 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30382 + 414] = 0
                                        mem[_30382 + 446] = _28943
                                        mem[_30382 + 478] = address(sha3(0, factoryAddress, _30385, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30382 + 510] = 128
                                        mem[_30382 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30382 + 574] = mem[s + _30382 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28943, address(sha3(0, factoryAddress, _30385, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28730):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30382 + 221] = address(_28730)
                                        mem[_30382 + 241] = address(_28687)
                                        mem[_30382 + 189] = 40
                                        mem[_30382 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30382 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30382 + 314] = sha3(address(_28730), address(_28687))
                                        mem[_30382 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30382 + 261] = 85
                                        mem[_30382 + 378] = 0
                                        mem[64] = _30382 + 410
                                        mem[_30382 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30382 + 414] = 0
                                        mem[_30382 + 446] = _28943
                                        mem[_30382 + 478] = address(sha3(0, factoryAddress, _30385, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30382 + 510] = 128
                                        mem[_30382 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30382 + 574] = mem[s + _30382 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28943, address(sha3(0, factoryAddress, _30385, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if idx >= mem[_9990 + 321] - 2:
                                if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9990 + 365 len 20] < mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    if not mem[(32 * idx) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30417 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_28730)
                                    _30418 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30420 = sha3(mem[_30418 + 32 len mem[_30418]])
                                    mem[_30417 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30417 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30417 + 125] = _30420
                                    mem[_30417 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30417 + 72] = 85
                                    mem[_30417 + 189] = 0
                                    mem[64] = _30417 + 221
                                    mem[_30417 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30417 + 225] = _28943
                                    mem[_30417 + 257] = 0
                                    mem[_30417 + 289] = arg4
                                    mem[_30417 + 321] = 128
                                    mem[_30417 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30417 + 385] = mem[s + _30417 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30420, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30420, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28943, 0, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30424 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_28687)
                                    _30425 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30427 = sha3(mem[_30425 + 32 len mem[_30425]])
                                    mem[_30424 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30424 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30424 + 125] = _30427
                                    mem[_30424 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30424 + 72] = 85
                                    mem[_30424 + 189] = 0
                                    mem[64] = _30424 + 221
                                    mem[_30424 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30424 + 225] = _28943
                                    mem[_30424 + 257] = 0
                                    mem[_30424 + 289] = arg4
                                    mem[_30424 + 321] = 128
                                    mem[_30424 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30424 + 385] = mem[s + _30424 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30427, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30427, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28943, 0, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9990 + 321]
                                _29112 = mem[(32 * idx + 2) + _9990 + 353]
                                if mem[(32 * idx + 1) + _9990 + 365 len 20] == mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9990 + 365 len 20] < mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30403 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_29112)
                                    _30404 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30406 = sha3(mem[_30404 + 32 len mem[_30404]])
                                    mem[_30403 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30403 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30403 + 125] = _30406
                                    mem[_30403 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30403 + 72] = 85
                                    if address(_28687) == address(_28730):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30403 + 292 len 29]
                                    if address(_28687) < address(_28730):
                                        if not address(_28687):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30403 + 221] = address(_28687)
                                        mem[_30403 + 241] = address(_28730)
                                        mem[_30403 + 189] = 40
                                        mem[_30403 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30403 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30403 + 314] = sha3(address(_28687), address(_28730))
                                        mem[_30403 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30403 + 261] = 85
                                        mem[_30403 + 378] = 0
                                        mem[64] = _30403 + 410
                                        mem[_30403 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30403 + 414] = _28943
                                        mem[_30403 + 446] = 0
                                        mem[_30403 + 478] = address(sha3(0, factoryAddress, _30406, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30403 + 510] = 128
                                        mem[_30403 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30403 + 574] = mem[s + _30403 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28943, 0, address(sha3(0, factoryAddress, _30406, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28730):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30403 + 221] = address(_28730)
                                        mem[_30403 + 241] = address(_28687)
                                        mem[_30403 + 189] = 40
                                        mem[_30403 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30403 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30403 + 314] = sha3(address(_28730), address(_28687))
                                        mem[_30403 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30403 + 261] = 85
                                        mem[_30403 + 378] = 0
                                        mem[64] = _30403 + 410
                                        mem[_30403 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30403 + 414] = _28943
                                        mem[_30403 + 446] = 0
                                        mem[_30403 + 478] = address(sha3(0, factoryAddress, _30406, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30403 + 510] = 128
                                        mem[_30403 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30403 + 574] = mem[s + _30403 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28943, 0, address(sha3(0, factoryAddress, _30406, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30410 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_28730)
                                    _30411 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30413 = sha3(mem[_30411 + 32 len mem[_30411]])
                                    mem[_30410 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30410 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30410 + 125] = _30413
                                    mem[_30410 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30410 + 72] = 85
                                    if address(_28687) == address(_28730):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30410 + 292 len 29]
                                    if address(_28687) < address(_28730):
                                        if not address(_28687):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30410 + 221] = address(_28687)
                                        mem[_30410 + 241] = address(_28730)
                                        mem[_30410 + 189] = 40
                                        mem[_30410 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30410 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30410 + 314] = sha3(address(_28687), address(_28730))
                                        mem[_30410 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30410 + 261] = 85
                                        mem[_30410 + 378] = 0
                                        mem[64] = _30410 + 410
                                        mem[_30410 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30410 + 414] = _28943
                                        mem[_30410 + 446] = 0
                                        mem[_30410 + 478] = address(sha3(0, factoryAddress, _30413, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30410 + 510] = 128
                                        mem[_30410 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30410 + 574] = mem[s + _30410 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28943, 0, address(sha3(0, factoryAddress, _30413, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28730):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30410 + 221] = address(_28730)
                                        mem[_30410 + 241] = address(_28687)
                                        mem[_30410 + 189] = 40
                                        mem[_30410 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30410 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30410 + 314] = sha3(address(_28730), address(_28687))
                                        mem[_30410 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30410 + 261] = 85
                                        mem[_30410 + 378] = 0
                                        mem[64] = _30410 + 410
                                        mem[_30410 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30410 + 414] = _28943
                                        mem[_30410 + 446] = 0
                                        mem[_30410 + 478] = address(sha3(0, factoryAddress, _30413, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30410 + 510] = 128
                                        mem[_30410 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30410 + 574] = mem[s + _30410 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28943, 0, address(sha3(0, factoryAddress, _30413, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        _28944 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                        if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx + 1) + _9990 + 365 len 20]:
                            if idx >= mem[_9990 + 321] - 2:
                                if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9990 + 365 len 20] < mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    if not mem[(32 * idx) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30445 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_28730)
                                    _30446 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30448 = sha3(mem[_30446 + 32 len mem[_30446]])
                                    mem[_30445 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30445 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30445 + 125] = _30448
                                    mem[_30445 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30445 + 72] = 85
                                    mem[_30445 + 189] = 0
                                    mem[64] = _30445 + 221
                                    mem[_30445 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30445 + 225] = 0
                                    mem[_30445 + 257] = _28944
                                    mem[_30445 + 289] = arg4
                                    mem[_30445 + 321] = 128
                                    mem[_30445 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30445 + 385] = mem[s + _30445 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30448, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30448, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28944, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30452 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_28687)
                                    _30453 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30455 = sha3(mem[_30453 + 32 len mem[_30453]])
                                    mem[_30452 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30452 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30452 + 125] = _30455
                                    mem[_30452 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30452 + 72] = 85
                                    mem[_30452 + 189] = 0
                                    mem[64] = _30452 + 221
                                    mem[_30452 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30452 + 225] = 0
                                    mem[_30452 + 257] = _28944
                                    mem[_30452 + 289] = arg4
                                    mem[_30452 + 321] = 128
                                    mem[_30452 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30452 + 385] = mem[s + _30452 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30455, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30455, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28944, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9990 + 321]
                                _29113 = mem[(32 * idx + 2) + _9990 + 353]
                                if mem[(32 * idx + 1) + _9990 + 365 len 20] == mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9990 + 365 len 20] < mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30431 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_29113)
                                    _30432 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30434 = sha3(mem[_30432 + 32 len mem[_30432]])
                                    mem[_30431 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30431 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30431 + 125] = _30434
                                    mem[_30431 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30431 + 72] = 85
                                    if address(_28687) == address(_28730):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30431 + 292 len 29]
                                    if address(_28687) < address(_28730):
                                        if not address(_28687):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30431 + 221] = address(_28687)
                                        mem[_30431 + 241] = address(_28730)
                                        mem[_30431 + 189] = 40
                                        mem[_30431 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30431 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30431 + 314] = sha3(address(_28687), address(_28730))
                                        mem[_30431 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30431 + 261] = 85
                                        mem[_30431 + 378] = 0
                                        mem[64] = _30431 + 410
                                        mem[_30431 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30431 + 414] = 0
                                        mem[_30431 + 446] = _28944
                                        mem[_30431 + 478] = address(sha3(0, factoryAddress, _30434, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30431 + 510] = 128
                                        mem[_30431 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30431 + 574] = mem[s + _30431 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28944, address(sha3(0, factoryAddress, _30434, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28730):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30431 + 221] = address(_28730)
                                        mem[_30431 + 241] = address(_28687)
                                        mem[_30431 + 189] = 40
                                        mem[_30431 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30431 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30431 + 314] = sha3(address(_28730), address(_28687))
                                        mem[_30431 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30431 + 261] = 85
                                        mem[_30431 + 378] = 0
                                        mem[64] = _30431 + 410
                                        mem[_30431 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30431 + 414] = 0
                                        mem[_30431 + 446] = _28944
                                        mem[_30431 + 478] = address(sha3(0, factoryAddress, _30434, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30431 + 510] = 128
                                        mem[_30431 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30431 + 574] = mem[s + _30431 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28944, address(sha3(0, factoryAddress, _30434, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30438 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_28730)
                                    _30439 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30441 = sha3(mem[_30439 + 32 len mem[_30439]])
                                    mem[_30438 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30438 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30438 + 125] = _30441
                                    mem[_30438 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30438 + 72] = 85
                                    if address(_28687) == address(_28730):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30438 + 292 len 29]
                                    if address(_28687) < address(_28730):
                                        if not address(_28687):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30438 + 221] = address(_28687)
                                        mem[_30438 + 241] = address(_28730)
                                        mem[_30438 + 189] = 40
                                        mem[_30438 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30438 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30438 + 314] = sha3(address(_28687), address(_28730))
                                        mem[_30438 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30438 + 261] = 85
                                        mem[_30438 + 378] = 0
                                        mem[64] = _30438 + 410
                                        mem[_30438 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30438 + 414] = 0
                                        mem[_30438 + 446] = _28944
                                        mem[_30438 + 478] = address(sha3(0, factoryAddress, _30441, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30438 + 510] = 128
                                        mem[_30438 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30438 + 574] = mem[s + _30438 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28944, address(sha3(0, factoryAddress, _30441, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28730):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30438 + 221] = address(_28730)
                                        mem[_30438 + 241] = address(_28687)
                                        mem[_30438 + 189] = 40
                                        mem[_30438 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30438 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30438 + 314] = sha3(address(_28730), address(_28687))
                                        mem[_30438 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30438 + 261] = 85
                                        mem[_30438 + 378] = 0
                                        mem[64] = _30438 + 410
                                        mem[_30438 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30438 + 414] = 0
                                        mem[_30438 + 446] = _28944
                                        mem[_30438 + 478] = address(sha3(0, factoryAddress, _30441, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30438 + 510] = 128
                                        mem[_30438 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30438 + 574] = mem[s + _30438 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28944, address(sha3(0, factoryAddress, _30441, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if idx >= mem[_9990 + 321] - 2:
                                if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9990 + 365 len 20] < mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    if not mem[(32 * idx) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30473 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_28730)
                                    _30474 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30476 = sha3(mem[_30474 + 32 len mem[_30474]])
                                    mem[_30473 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30473 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30473 + 125] = _30476
                                    mem[_30473 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30473 + 72] = 85
                                    mem[_30473 + 189] = 0
                                    mem[64] = _30473 + 221
                                    mem[_30473 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30473 + 225] = _28944
                                    mem[_30473 + 257] = 0
                                    mem[_30473 + 289] = arg4
                                    mem[_30473 + 321] = 128
                                    mem[_30473 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30473 + 385] = mem[s + _30473 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30476, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30476, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28944, 0, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30480 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_28687)
                                    _30481 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30483 = sha3(mem[_30481 + 32 len mem[_30481]])
                                    mem[_30480 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30480 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30480 + 125] = _30483
                                    mem[_30480 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30480 + 72] = 85
                                    mem[_30480 + 189] = 0
                                    mem[64] = _30480 + 221
                                    mem[_30480 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30480 + 225] = _28944
                                    mem[_30480 + 257] = 0
                                    mem[_30480 + 289] = arg4
                                    mem[_30480 + 321] = 128
                                    mem[_30480 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30480 + 385] = mem[s + _30480 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30483, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30483, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28944, 0, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9990 + 321]
                                _29114 = mem[(32 * idx + 2) + _9990 + 353]
                                if mem[(32 * idx + 1) + _9990 + 365 len 20] == mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9990 + 365 len 20] < mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30459 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_29114)
                                    _30460 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30462 = sha3(mem[_30460 + 32 len mem[_30460]])
                                    mem[_30459 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30459 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30459 + 125] = _30462
                                    mem[_30459 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30459 + 72] = 85
                                    if address(_28687) == address(_28730):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30459 + 292 len 29]
                                    if address(_28687) < address(_28730):
                                        if not address(_28687):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30459 + 221] = address(_28687)
                                        mem[_30459 + 241] = address(_28730)
                                        mem[_30459 + 189] = 40
                                        mem[_30459 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30459 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30459 + 314] = sha3(address(_28687), address(_28730))
                                        mem[_30459 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30459 + 261] = 85
                                        mem[_30459 + 378] = 0
                                        mem[64] = _30459 + 410
                                        mem[_30459 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30459 + 414] = _28944
                                        mem[_30459 + 446] = 0
                                        mem[_30459 + 478] = address(sha3(0, factoryAddress, _30462, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30459 + 510] = 128
                                        mem[_30459 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30459 + 574] = mem[s + _30459 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28944, 0, address(sha3(0, factoryAddress, _30462, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28730):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30459 + 221] = address(_28730)
                                        mem[_30459 + 241] = address(_28687)
                                        mem[_30459 + 189] = 40
                                        mem[_30459 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30459 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30459 + 314] = sha3(address(_28730), address(_28687))
                                        mem[_30459 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30459 + 261] = 85
                                        mem[_30459 + 378] = 0
                                        mem[64] = _30459 + 410
                                        mem[_30459 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30459 + 414] = _28944
                                        mem[_30459 + 446] = 0
                                        mem[_30459 + 478] = address(sha3(0, factoryAddress, _30462, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30459 + 510] = 128
                                        mem[_30459 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30459 + 574] = mem[s + _30459 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28944, 0, address(sha3(0, factoryAddress, _30462, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30466 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + 353])
                                    mem[mem[64] + 52] = address(_28730)
                                    _30467 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30469 = sha3(mem[_30467 + 32 len mem[_30467]])
                                    mem[_30466 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30466 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30466 + 125] = _30469
                                    mem[_30466 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30466 + 72] = 85
                                    if address(_28687) == address(_28730):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30466 + 292 len 29]
                                    if address(_28687) < address(_28730):
                                        if not address(_28687):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30466 + 221] = address(_28687)
                                        mem[_30466 + 241] = address(_28730)
                                        mem[_30466 + 189] = 40
                                        mem[_30466 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30466 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30466 + 314] = sha3(address(_28687), address(_28730))
                                        mem[_30466 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30466 + 261] = 85
                                        mem[_30466 + 378] = 0
                                        mem[64] = _30466 + 410
                                        mem[_30466 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30466 + 414] = _28944
                                        mem[_30466 + 446] = 0
                                        mem[_30466 + 478] = address(sha3(0, factoryAddress, _30469, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30466 + 510] = 128
                                        mem[_30466 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30466 + 574] = mem[s + _30466 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28687), address(_28730)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28944, 0, address(sha3(0, factoryAddress, _30469, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28730):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30466 + 221] = address(_28730)
                                        mem[_30466 + 241] = address(_28687)
                                        mem[_30466 + 189] = 40
                                        mem[_30466 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30466 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30466 + 314] = sha3(address(_28730), address(_28687))
                                        mem[_30466 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30466 + 261] = 85
                                        mem[_30466 + 378] = 0
                                        mem[64] = _30466 + 410
                                        mem[_30466 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30466 + 414] = _28944
                                        mem[_30466 + 446] = 0
                                        mem[_30466 + 478] = address(sha3(0, factoryAddress, _30469, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30466 + 510] = 128
                                        mem[_30466 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30466 + 574] = mem[s + _30466 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28730), address(_28687)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28944, 0, address(sha3(0, factoryAddress, _30469, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
                _28729 = mem[(32 * arg3.length) + 128]
                mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
                return 32, mem[mem[64] + 32 len (32 * _28729) + 32]
            require mem[96] >= 32
            if not mem[128]:
                revert with 0, 
                            32,
                            49,
                            0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                            mem[_9990 + 438 len 7],
                            Mask(32, 64, _10016) >> 64,
                            mem[_9990 + 449 len 4]
            mem[64] = _9990 + (32 * arg3.length) + 353
            mem[_9990 + 321] = arg3.length
            mem[_9990 + 353 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
            mem[_9990 + (32 * arg3.length) + 353] = 0
            idx = 0
            while idx < arg3.length - 1:
                require idx < mem[_9990 + 321]
                _28689 = mem[(32 * idx) + _9990 + 353]
                require idx + 1 < mem[_9990 + 321]
                _28734 = mem[(32 * idx + 1) + _9990 + 353]
                if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx + 1) + _9990 + 365 len 20]:
                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + _9990 + 365 len 20] < mem[(32 * idx + 1) + _9990 + 365 len 20]:
                    if not mem[(32 * idx) + _9990 + 365 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * arg3.length) + 128]
                    _28945 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                    if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx) + _9990 + 365 len 20]:
                        if idx >= mem[_9990 + 321] - 2:
                            if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9990 + 365 len 20] < mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                if not mem[(32 * idx) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30501 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + 353])
                                mem[mem[64] + 52] = address(_28734)
                                _30502 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30504 = sha3(mem[_30502 + 32 len mem[_30502]])
                                mem[_30501 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30501 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30501 + 125] = _30504
                                mem[_30501 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30501 + 72] = 85
                                mem[_30501 + 189] = 0
                                mem[64] = _30501 + 221
                                mem[_30501 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30501 + 225] = 0
                                mem[_30501 + 257] = _28945
                                mem[_30501 + 289] = arg4
                                mem[_30501 + 321] = 128
                                mem[_30501 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30501 + 385] = mem[s + _30501 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30504, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30504, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28945, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30508 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                mem[mem[64] + 52] = address(_28689)
                                _30509 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30511 = sha3(mem[_30509 + 32 len mem[_30509]])
                                mem[_30508 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30508 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30508 + 125] = _30511
                                mem[_30508 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30508 + 72] = 85
                                mem[_30508 + 189] = 0
                                mem[64] = _30508 + 221
                                mem[_30508 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30508 + 225] = 0
                                mem[_30508 + 257] = _28945
                                mem[_30508 + 289] = arg4
                                mem[_30508 + 321] = 128
                                mem[_30508 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30508 + 385] = mem[s + _30508 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30511, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30511, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28945, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9990 + 321]
                            _29115 = mem[(32 * idx + 2) + _9990 + 353]
                            if mem[(32 * idx + 1) + _9990 + 365 len 20] == mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9990 + 365 len 20] < mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30487 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                mem[mem[64] + 52] = address(_29115)
                                _30488 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30490 = sha3(mem[_30488 + 32 len mem[_30488]])
                                mem[_30487 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30487 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30487 + 125] = _30490
                                mem[_30487 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30487 + 72] = 85
                                if address(_28689) == address(_28734):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30487 + 292 len 29]
                                if address(_28689) < address(_28734):
                                    if not address(_28689):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30487 + 221] = address(_28689)
                                    mem[_30487 + 241] = address(_28734)
                                    mem[_30487 + 189] = 40
                                    mem[_30487 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30487 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30487 + 314] = sha3(address(_28689), address(_28734))
                                    mem[_30487 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30487 + 261] = 85
                                    mem[_30487 + 378] = 0
                                    mem[64] = _30487 + 410
                                    mem[_30487 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30487 + 414] = 0
                                    mem[_30487 + 446] = _28945
                                    mem[_30487 + 478] = address(sha3(0, factoryAddress, _30490, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30487 + 510] = 128
                                    mem[_30487 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30487 + 574] = mem[s + _30487 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28945, address(sha3(0, factoryAddress, _30490, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28734):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30487 + 221] = address(_28734)
                                    mem[_30487 + 241] = address(_28689)
                                    mem[_30487 + 189] = 40
                                    mem[_30487 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30487 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30487 + 314] = sha3(address(_28734), address(_28689))
                                    mem[_30487 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30487 + 261] = 85
                                    mem[_30487 + 378] = 0
                                    mem[64] = _30487 + 410
                                    mem[_30487 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30487 + 414] = 0
                                    mem[_30487 + 446] = _28945
                                    mem[_30487 + 478] = address(sha3(0, factoryAddress, _30490, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30487 + 510] = 128
                                    mem[_30487 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30487 + 574] = mem[s + _30487 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28945, address(sha3(0, factoryAddress, _30490, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30494 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + 353])
                                mem[mem[64] + 52] = address(_28734)
                                _30495 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30497 = sha3(mem[_30495 + 32 len mem[_30495]])
                                mem[_30494 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30494 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30494 + 125] = _30497
                                mem[_30494 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30494 + 72] = 85
                                if address(_28689) == address(_28734):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30494 + 292 len 29]
                                if address(_28689) < address(_28734):
                                    if not address(_28689):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30494 + 221] = address(_28689)
                                    mem[_30494 + 241] = address(_28734)
                                    mem[_30494 + 189] = 40
                                    mem[_30494 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30494 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30494 + 314] = sha3(address(_28689), address(_28734))
                                    mem[_30494 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30494 + 261] = 85
                                    mem[_30494 + 378] = 0
                                    mem[64] = _30494 + 410
                                    mem[_30494 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30494 + 414] = 0
                                    mem[_30494 + 446] = _28945
                                    mem[_30494 + 478] = address(sha3(0, factoryAddress, _30497, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30494 + 510] = 128
                                    mem[_30494 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30494 + 574] = mem[s + _30494 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28945, address(sha3(0, factoryAddress, _30497, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28734):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30494 + 221] = address(_28734)
                                    mem[_30494 + 241] = address(_28689)
                                    mem[_30494 + 189] = 40
                                    mem[_30494 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30494 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30494 + 314] = sha3(address(_28734), address(_28689))
                                    mem[_30494 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30494 + 261] = 85
                                    mem[_30494 + 378] = 0
                                    mem[64] = _30494 + 410
                                    mem[_30494 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30494 + 414] = 0
                                    mem[_30494 + 446] = _28945
                                    mem[_30494 + 478] = address(sha3(0, factoryAddress, _30497, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30494 + 510] = 128
                                    mem[_30494 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30494 + 574] = mem[s + _30494 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28945, address(sha3(0, factoryAddress, _30497, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if idx >= mem[_9990 + 321] - 2:
                            if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9990 + 365 len 20] < mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                if not mem[(32 * idx) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30529 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + 353])
                                mem[mem[64] + 52] = address(_28734)
                                _30530 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30532 = sha3(mem[_30530 + 32 len mem[_30530]])
                                mem[_30529 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30529 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30529 + 125] = _30532
                                mem[_30529 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30529 + 72] = 85
                                mem[_30529 + 189] = 0
                                mem[64] = _30529 + 221
                                mem[_30529 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30529 + 225] = _28945
                                mem[_30529 + 257] = 0
                                mem[_30529 + 289] = arg4
                                mem[_30529 + 321] = 128
                                mem[_30529 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30529 + 385] = mem[s + _30529 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30532, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30532, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28945, 0, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30536 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                mem[mem[64] + 52] = address(_28689)
                                _30537 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30539 = sha3(mem[_30537 + 32 len mem[_30537]])
                                mem[_30536 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30536 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30536 + 125] = _30539
                                mem[_30536 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30536 + 72] = 85
                                mem[_30536 + 189] = 0
                                mem[64] = _30536 + 221
                                mem[_30536 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30536 + 225] = _28945
                                mem[_30536 + 257] = 0
                                mem[_30536 + 289] = arg4
                                mem[_30536 + 321] = 128
                                mem[_30536 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30536 + 385] = mem[s + _30536 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30539, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30539, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28945, 0, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9990 + 321]
                            _29116 = mem[(32 * idx + 2) + _9990 + 353]
                            if mem[(32 * idx + 1) + _9990 + 365 len 20] == mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9990 + 365 len 20] < mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30515 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                mem[mem[64] + 52] = address(_29116)
                                _30516 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30518 = sha3(mem[_30516 + 32 len mem[_30516]])
                                mem[_30515 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30515 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30515 + 125] = _30518
                                mem[_30515 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30515 + 72] = 85
                                if address(_28689) == address(_28734):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30515 + 292 len 29]
                                if address(_28689) < address(_28734):
                                    if not address(_28689):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30515 + 221] = address(_28689)
                                    mem[_30515 + 241] = address(_28734)
                                    mem[_30515 + 189] = 40
                                    mem[_30515 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30515 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30515 + 314] = sha3(address(_28689), address(_28734))
                                    mem[_30515 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30515 + 261] = 85
                                    mem[_30515 + 378] = 0
                                    mem[64] = _30515 + 410
                                    mem[_30515 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30515 + 414] = _28945
                                    mem[_30515 + 446] = 0
                                    mem[_30515 + 478] = address(sha3(0, factoryAddress, _30518, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30515 + 510] = 128
                                    mem[_30515 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30515 + 574] = mem[s + _30515 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28945, 0, address(sha3(0, factoryAddress, _30518, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28734):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30515 + 221] = address(_28734)
                                    mem[_30515 + 241] = address(_28689)
                                    mem[_30515 + 189] = 40
                                    mem[_30515 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30515 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30515 + 314] = sha3(address(_28734), address(_28689))
                                    mem[_30515 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30515 + 261] = 85
                                    mem[_30515 + 378] = 0
                                    mem[64] = _30515 + 410
                                    mem[_30515 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30515 + 414] = _28945
                                    mem[_30515 + 446] = 0
                                    mem[_30515 + 478] = address(sha3(0, factoryAddress, _30518, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30515 + 510] = 128
                                    mem[_30515 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30515 + 574] = mem[s + _30515 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28945, 0, address(sha3(0, factoryAddress, _30518, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30522 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + 353])
                                mem[mem[64] + 52] = address(_28734)
                                _30523 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30525 = sha3(mem[_30523 + 32 len mem[_30523]])
                                mem[_30522 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30522 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30522 + 125] = _30525
                                mem[_30522 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30522 + 72] = 85
                                if address(_28689) == address(_28734):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30522 + 292 len 29]
                                if address(_28689) < address(_28734):
                                    if not address(_28689):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30522 + 221] = address(_28689)
                                    mem[_30522 + 241] = address(_28734)
                                    mem[_30522 + 189] = 40
                                    mem[_30522 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30522 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30522 + 314] = sha3(address(_28689), address(_28734))
                                    mem[_30522 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30522 + 261] = 85
                                    mem[_30522 + 378] = 0
                                    mem[64] = _30522 + 410
                                    mem[_30522 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30522 + 414] = _28945
                                    mem[_30522 + 446] = 0
                                    mem[_30522 + 478] = address(sha3(0, factoryAddress, _30525, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30522 + 510] = 128
                                    mem[_30522 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30522 + 574] = mem[s + _30522 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28945, 0, address(sha3(0, factoryAddress, _30525, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28734):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30522 + 221] = address(_28734)
                                    mem[_30522 + 241] = address(_28689)
                                    mem[_30522 + 189] = 40
                                    mem[_30522 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30522 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30522 + 314] = sha3(address(_28734), address(_28689))
                                    mem[_30522 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30522 + 261] = 85
                                    mem[_30522 + 378] = 0
                                    mem[64] = _30522 + 410
                                    mem[_30522 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30522 + 414] = _28945
                                    mem[_30522 + 446] = 0
                                    mem[_30522 + 478] = address(sha3(0, factoryAddress, _30525, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30522 + 510] = 128
                                    mem[_30522 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30522 + 574] = mem[s + _30522 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28945, 0, address(sha3(0, factoryAddress, _30525, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * arg3.length) + 128]
                    _28946 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                    if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx + 1) + _9990 + 365 len 20]:
                        if idx >= mem[_9990 + 321] - 2:
                            if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9990 + 365 len 20] < mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                if not mem[(32 * idx) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30557 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + 353])
                                mem[mem[64] + 52] = address(_28734)
                                _30558 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30560 = sha3(mem[_30558 + 32 len mem[_30558]])
                                mem[_30557 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30557 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30557 + 125] = _30560
                                mem[_30557 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30557 + 72] = 85
                                mem[_30557 + 189] = 0
                                mem[64] = _30557 + 221
                                mem[_30557 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30557 + 225] = 0
                                mem[_30557 + 257] = _28946
                                mem[_30557 + 289] = arg4
                                mem[_30557 + 321] = 128
                                mem[_30557 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30557 + 385] = mem[s + _30557 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30560, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30560, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28946, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30564 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                mem[mem[64] + 52] = address(_28689)
                                _30565 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30567 = sha3(mem[_30565 + 32 len mem[_30565]])
                                mem[_30564 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30564 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30564 + 125] = _30567
                                mem[_30564 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30564 + 72] = 85
                                mem[_30564 + 189] = 0
                                mem[64] = _30564 + 221
                                mem[_30564 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30564 + 225] = 0
                                mem[_30564 + 257] = _28946
                                mem[_30564 + 289] = arg4
                                mem[_30564 + 321] = 128
                                mem[_30564 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30564 + 385] = mem[s + _30564 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30567, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30567, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28946, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9990 + 321]
                            _29117 = mem[(32 * idx + 2) + _9990 + 353]
                            if mem[(32 * idx + 1) + _9990 + 365 len 20] == mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9990 + 365 len 20] < mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30543 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                mem[mem[64] + 52] = address(_29117)
                                _30544 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30546 = sha3(mem[_30544 + 32 len mem[_30544]])
                                mem[_30543 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30543 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30543 + 125] = _30546
                                mem[_30543 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30543 + 72] = 85
                                if address(_28689) == address(_28734):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30543 + 292 len 29]
                                if address(_28689) < address(_28734):
                                    if not address(_28689):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30543 + 221] = address(_28689)
                                    mem[_30543 + 241] = address(_28734)
                                    mem[_30543 + 189] = 40
                                    mem[_30543 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30543 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30543 + 314] = sha3(address(_28689), address(_28734))
                                    mem[_30543 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30543 + 261] = 85
                                    mem[_30543 + 378] = 0
                                    mem[64] = _30543 + 410
                                    mem[_30543 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30543 + 414] = 0
                                    mem[_30543 + 446] = _28946
                                    mem[_30543 + 478] = address(sha3(0, factoryAddress, _30546, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30543 + 510] = 128
                                    mem[_30543 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30543 + 574] = mem[s + _30543 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28946, address(sha3(0, factoryAddress, _30546, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28734):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30543 + 221] = address(_28734)
                                    mem[_30543 + 241] = address(_28689)
                                    mem[_30543 + 189] = 40
                                    mem[_30543 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30543 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30543 + 314] = sha3(address(_28734), address(_28689))
                                    mem[_30543 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30543 + 261] = 85
                                    mem[_30543 + 378] = 0
                                    mem[64] = _30543 + 410
                                    mem[_30543 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30543 + 414] = 0
                                    mem[_30543 + 446] = _28946
                                    mem[_30543 + 478] = address(sha3(0, factoryAddress, _30546, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30543 + 510] = 128
                                    mem[_30543 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30543 + 574] = mem[s + _30543 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28946, address(sha3(0, factoryAddress, _30546, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30550 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + 353])
                                mem[mem[64] + 52] = address(_28734)
                                _30551 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30553 = sha3(mem[_30551 + 32 len mem[_30551]])
                                mem[_30550 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30550 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30550 + 125] = _30553
                                mem[_30550 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30550 + 72] = 85
                                if address(_28689) == address(_28734):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30550 + 292 len 29]
                                if address(_28689) < address(_28734):
                                    if not address(_28689):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30550 + 221] = address(_28689)
                                    mem[_30550 + 241] = address(_28734)
                                    mem[_30550 + 189] = 40
                                    mem[_30550 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30550 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30550 + 314] = sha3(address(_28689), address(_28734))
                                    mem[_30550 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30550 + 261] = 85
                                    mem[_30550 + 378] = 0
                                    mem[64] = _30550 + 410
                                    mem[_30550 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30550 + 414] = 0
                                    mem[_30550 + 446] = _28946
                                    mem[_30550 + 478] = address(sha3(0, factoryAddress, _30553, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30550 + 510] = 128
                                    mem[_30550 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30550 + 574] = mem[s + _30550 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28946, address(sha3(0, factoryAddress, _30553, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28734):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30550 + 221] = address(_28734)
                                    mem[_30550 + 241] = address(_28689)
                                    mem[_30550 + 189] = 40
                                    mem[_30550 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30550 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30550 + 314] = sha3(address(_28734), address(_28689))
                                    mem[_30550 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30550 + 261] = 85
                                    mem[_30550 + 378] = 0
                                    mem[64] = _30550 + 410
                                    mem[_30550 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30550 + 414] = 0
                                    mem[_30550 + 446] = _28946
                                    mem[_30550 + 478] = address(sha3(0, factoryAddress, _30553, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30550 + 510] = 128
                                    mem[_30550 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30550 + 574] = mem[s + _30550 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28946, address(sha3(0, factoryAddress, _30553, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if idx >= mem[_9990 + 321] - 2:
                            if mem[(32 * idx) + _9990 + 365 len 20] == mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9990 + 365 len 20] < mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                if not mem[(32 * idx) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30585 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + 353])
                                mem[mem[64] + 52] = address(_28734)
                                _30586 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30588 = sha3(mem[_30586 + 32 len mem[_30586]])
                                mem[_30585 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30585 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30585 + 125] = _30588
                                mem[_30585 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30585 + 72] = 85
                                mem[_30585 + 189] = 0
                                mem[64] = _30585 + 221
                                mem[_30585 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30585 + 225] = _28946
                                mem[_30585 + 257] = 0
                                mem[_30585 + 289] = arg4
                                mem[_30585 + 321] = 128
                                mem[_30585 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30585 + 385] = mem[s + _30585 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30588, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30588, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28946, 0, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30592 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                mem[mem[64] + 52] = address(_28689)
                                _30593 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30595 = sha3(mem[_30593 + 32 len mem[_30593]])
                                mem[_30592 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30592 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30592 + 125] = _30595
                                mem[_30592 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30592 + 72] = 85
                                mem[_30592 + 189] = 0
                                mem[64] = _30592 + 221
                                mem[_30592 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30592 + 225] = _28946
                                mem[_30592 + 257] = 0
                                mem[_30592 + 289] = arg4
                                mem[_30592 + 321] = 128
                                mem[_30592 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30592 + 385] = mem[s + _30592 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30595, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30595, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28946, 0, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9990 + 321]
                            _29118 = mem[(32 * idx + 2) + _9990 + 353]
                            if mem[(32 * idx + 1) + _9990 + 365 len 20] == mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9990 + 365 len 20] < mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30571 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + 353])
                                mem[mem[64] + 52] = address(_29118)
                                _30572 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30574 = sha3(mem[_30572 + 32 len mem[_30572]])
                                mem[_30571 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30571 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30571 + 125] = _30574
                                mem[_30571 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30571 + 72] = 85
                                if address(_28689) == address(_28734):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30571 + 292 len 29]
                                if address(_28689) < address(_28734):
                                    if not address(_28689):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30571 + 221] = address(_28689)
                                    mem[_30571 + 241] = address(_28734)
                                    mem[_30571 + 189] = 40
                                    mem[_30571 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30571 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30571 + 314] = sha3(address(_28689), address(_28734))
                                    mem[_30571 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30571 + 261] = 85
                                    mem[_30571 + 378] = 0
                                    mem[64] = _30571 + 410
                                    mem[_30571 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30571 + 414] = _28946
                                    mem[_30571 + 446] = 0
                                    mem[_30571 + 478] = address(sha3(0, factoryAddress, _30574, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30571 + 510] = 128
                                    mem[_30571 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30571 + 574] = mem[s + _30571 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28946, 0, address(sha3(0, factoryAddress, _30574, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28734):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30571 + 221] = address(_28734)
                                    mem[_30571 + 241] = address(_28689)
                                    mem[_30571 + 189] = 40
                                    mem[_30571 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30571 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30571 + 314] = sha3(address(_28734), address(_28689))
                                    mem[_30571 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30571 + 261] = 85
                                    mem[_30571 + 378] = 0
                                    mem[64] = _30571 + 410
                                    mem[_30571 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30571 + 414] = _28946
                                    mem[_30571 + 446] = 0
                                    mem[_30571 + 478] = address(sha3(0, factoryAddress, _30574, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30571 + 510] = 128
                                    mem[_30571 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30571 + 574] = mem[s + _30571 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28946, 0, address(sha3(0, factoryAddress, _30574, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9990 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30578 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + 353])
                                mem[mem[64] + 52] = address(_28734)
                                _30579 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30581 = sha3(mem[_30579 + 32 len mem[_30579]])
                                mem[_30578 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30578 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30578 + 125] = _30581
                                mem[_30578 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30578 + 72] = 85
                                if address(_28689) == address(_28734):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30578 + 292 len 29]
                                if address(_28689) < address(_28734):
                                    if not address(_28689):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30578 + 221] = address(_28689)
                                    mem[_30578 + 241] = address(_28734)
                                    mem[_30578 + 189] = 40
                                    mem[_30578 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30578 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30578 + 314] = sha3(address(_28689), address(_28734))
                                    mem[_30578 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30578 + 261] = 85
                                    mem[_30578 + 378] = 0
                                    mem[64] = _30578 + 410
                                    mem[_30578 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30578 + 414] = _28946
                                    mem[_30578 + 446] = 0
                                    mem[_30578 + 478] = address(sha3(0, factoryAddress, _30581, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30578 + 510] = 128
                                    mem[_30578 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30578 + 574] = mem[s + _30578 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28689), address(_28734)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28946, 0, address(sha3(0, factoryAddress, _30581, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28734):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30578 + 221] = address(_28734)
                                    mem[_30578 + 241] = address(_28689)
                                    mem[_30578 + 189] = 40
                                    mem[_30578 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30578 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30578 + 314] = sha3(address(_28734), address(_28689))
                                    mem[_30578 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30578 + 261] = 85
                                    mem[_30578 + 378] = 0
                                    mem[64] = _30578 + 410
                                    mem[_30578 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30578 + 414] = _28946
                                    mem[_30578 + 446] = 0
                                    mem[_30578 + 478] = address(sha3(0, factoryAddress, _30581, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30578 + 510] = 128
                                    mem[_30578 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30578 + 574] = mem[s + _30578 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28734), address(_28689)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28946, 0, address(sha3(0, factoryAddress, _30581, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
            _28733 = mem[(32 * arg3.length) + 128]
            mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _28733) + 32]
        mem[_9990 + 321] = return_data.size
        mem[_9990 + 353 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 
                        32,
                        49,
                        0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                        mem[_9990 + ceil32(return_data.size) + 439 len 15]
        if not return_data.size:
            mem[64] = _9990 + ceil32(return_data.size) + (32 * arg3.length) + 354
            mem[_9990 + ceil32(return_data.size) + 322] = arg3.length
            mem[_9990 + ceil32(return_data.size) + 354 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
            mem[_9990 + ceil32(return_data.size) + (32 * arg3.length) + 354] = 0
            idx = 0
            while idx < arg3.length - 1:
                require idx < mem[_9990 + ceil32(return_data.size) + 322]
                _28691 = mem[(32 * idx) + _9990 + ceil32(return_data.size) + 354]
                require idx + 1 < mem[_9990 + ceil32(return_data.size) + 322]
                _28738 = mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354]
                if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                    if not mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * arg3.length) + 128]
                    _28947 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                    if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20]:
                        if idx >= mem[_9990 + ceil32(return_data.size) + 322] - 2:
                            if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30613 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28738)
                                _30614 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30616 = sha3(mem[_30614 + 32 len mem[_30614]])
                                mem[_30613 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30613 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30613 + 125] = _30616
                                mem[_30613 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30613 + 72] = 85
                                mem[_30613 + 189] = 0
                                mem[64] = _30613 + 221
                                mem[_30613 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30613 + 225] = 0
                                mem[_30613 + 257] = _28947
                                mem[_30613 + 289] = arg4
                                mem[_30613 + 321] = 128
                                mem[_30613 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30613 + 385] = mem[s + _30613 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30616, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30616, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28947, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30620 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28691)
                                _30621 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30623 = sha3(mem[_30621 + 32 len mem[_30621]])
                                mem[_30620 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30620 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30620 + 125] = _30623
                                mem[_30620 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30620 + 72] = 85
                                mem[_30620 + 189] = 0
                                mem[64] = _30620 + 221
                                mem[_30620 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30620 + 225] = 0
                                mem[_30620 + 257] = _28947
                                mem[_30620 + 289] = arg4
                                mem[_30620 + 321] = 128
                                mem[_30620 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30620 + 385] = mem[s + _30620 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30623, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30623, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28947, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9990 + ceil32(return_data.size) + 322]
                            _29119 = mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354]
                            if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30599 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_29119)
                                _30600 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30602 = sha3(mem[_30600 + 32 len mem[_30600]])
                                mem[_30599 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30599 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30599 + 125] = _30602
                                mem[_30599 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30599 + 72] = 85
                                if address(_28691) == address(_28738):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30599 + 292 len 29]
                                if address(_28691) < address(_28738):
                                    if not address(_28691):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30599 + 221] = address(_28691)
                                    mem[_30599 + 241] = address(_28738)
                                    mem[_30599 + 189] = 40
                                    mem[_30599 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30599 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30599 + 314] = sha3(address(_28691), address(_28738))
                                    mem[_30599 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30599 + 261] = 85
                                    mem[_30599 + 378] = 0
                                    mem[64] = _30599 + 410
                                    mem[_30599 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30599 + 414] = 0
                                    mem[_30599 + 446] = _28947
                                    mem[_30599 + 478] = address(sha3(0, factoryAddress, _30602, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30599 + 510] = 128
                                    mem[_30599 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30599 + 574] = mem[s + _30599 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28947, address(sha3(0, factoryAddress, _30602, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28738):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30599 + 221] = address(_28738)
                                    mem[_30599 + 241] = address(_28691)
                                    mem[_30599 + 189] = 40
                                    mem[_30599 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30599 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30599 + 314] = sha3(address(_28738), address(_28691))
                                    mem[_30599 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30599 + 261] = 85
                                    mem[_30599 + 378] = 0
                                    mem[64] = _30599 + 410
                                    mem[_30599 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30599 + 414] = 0
                                    mem[_30599 + 446] = _28947
                                    mem[_30599 + 478] = address(sha3(0, factoryAddress, _30602, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30599 + 510] = 128
                                    mem[_30599 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30599 + 574] = mem[s + _30599 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28947, address(sha3(0, factoryAddress, _30602, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30606 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28738)
                                _30607 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30609 = sha3(mem[_30607 + 32 len mem[_30607]])
                                mem[_30606 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30606 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30606 + 125] = _30609
                                mem[_30606 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30606 + 72] = 85
                                if address(_28691) == address(_28738):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30606 + 292 len 29]
                                if address(_28691) < address(_28738):
                                    if not address(_28691):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30606 + 221] = address(_28691)
                                    mem[_30606 + 241] = address(_28738)
                                    mem[_30606 + 189] = 40
                                    mem[_30606 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30606 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30606 + 314] = sha3(address(_28691), address(_28738))
                                    mem[_30606 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30606 + 261] = 85
                                    mem[_30606 + 378] = 0
                                    mem[64] = _30606 + 410
                                    mem[_30606 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30606 + 414] = 0
                                    mem[_30606 + 446] = _28947
                                    mem[_30606 + 478] = address(sha3(0, factoryAddress, _30609, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30606 + 510] = 128
                                    mem[_30606 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30606 + 574] = mem[s + _30606 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28947, address(sha3(0, factoryAddress, _30609, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28738):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30606 + 221] = address(_28738)
                                    mem[_30606 + 241] = address(_28691)
                                    mem[_30606 + 189] = 40
                                    mem[_30606 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30606 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30606 + 314] = sha3(address(_28738), address(_28691))
                                    mem[_30606 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30606 + 261] = 85
                                    mem[_30606 + 378] = 0
                                    mem[64] = _30606 + 410
                                    mem[_30606 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30606 + 414] = 0
                                    mem[_30606 + 446] = _28947
                                    mem[_30606 + 478] = address(sha3(0, factoryAddress, _30609, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30606 + 510] = 128
                                    mem[_30606 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30606 + 574] = mem[s + _30606 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28947, address(sha3(0, factoryAddress, _30609, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if idx >= mem[_9990 + ceil32(return_data.size) + 322] - 2:
                            if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30641 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28738)
                                _30642 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30644 = sha3(mem[_30642 + 32 len mem[_30642]])
                                mem[_30641 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30641 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30641 + 125] = _30644
                                mem[_30641 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30641 + 72] = 85
                                mem[_30641 + 189] = 0
                                mem[64] = _30641 + 221
                                mem[_30641 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30641 + 225] = _28947
                                mem[_30641 + 257] = 0
                                mem[_30641 + 289] = arg4
                                mem[_30641 + 321] = 128
                                mem[_30641 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30641 + 385] = mem[s + _30641 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30644, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30644, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28947, 0, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30648 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28691)
                                _30649 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30651 = sha3(mem[_30649 + 32 len mem[_30649]])
                                mem[_30648 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30648 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30648 + 125] = _30651
                                mem[_30648 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30648 + 72] = 85
                                mem[_30648 + 189] = 0
                                mem[64] = _30648 + 221
                                mem[_30648 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30648 + 225] = _28947
                                mem[_30648 + 257] = 0
                                mem[_30648 + 289] = arg4
                                mem[_30648 + 321] = 128
                                mem[_30648 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30648 + 385] = mem[s + _30648 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30651, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30651, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28947, 0, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9990 + ceil32(return_data.size) + 322]
                            _29120 = mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354]
                            if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30627 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_29120)
                                _30628 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30630 = sha3(mem[_30628 + 32 len mem[_30628]])
                                mem[_30627 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30627 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30627 + 125] = _30630
                                mem[_30627 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30627 + 72] = 85
                                if address(_28691) == address(_28738):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30627 + 292 len 29]
                                if address(_28691) < address(_28738):
                                    if not address(_28691):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30627 + 221] = address(_28691)
                                    mem[_30627 + 241] = address(_28738)
                                    mem[_30627 + 189] = 40
                                    mem[_30627 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30627 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30627 + 314] = sha3(address(_28691), address(_28738))
                                    mem[_30627 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30627 + 261] = 85
                                    mem[_30627 + 378] = 0
                                    mem[64] = _30627 + 410
                                    mem[_30627 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30627 + 414] = _28947
                                    mem[_30627 + 446] = 0
                                    mem[_30627 + 478] = address(sha3(0, factoryAddress, _30630, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30627 + 510] = 128
                                    mem[_30627 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30627 + 574] = mem[s + _30627 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28947, 0, address(sha3(0, factoryAddress, _30630, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28738):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30627 + 221] = address(_28738)
                                    mem[_30627 + 241] = address(_28691)
                                    mem[_30627 + 189] = 40
                                    mem[_30627 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30627 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30627 + 314] = sha3(address(_28738), address(_28691))
                                    mem[_30627 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30627 + 261] = 85
                                    mem[_30627 + 378] = 0
                                    mem[64] = _30627 + 410
                                    mem[_30627 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30627 + 414] = _28947
                                    mem[_30627 + 446] = 0
                                    mem[_30627 + 478] = address(sha3(0, factoryAddress, _30630, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30627 + 510] = 128
                                    mem[_30627 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30627 + 574] = mem[s + _30627 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28947, 0, address(sha3(0, factoryAddress, _30630, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30634 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28738)
                                _30635 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30637 = sha3(mem[_30635 + 32 len mem[_30635]])
                                mem[_30634 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30634 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30634 + 125] = _30637
                                mem[_30634 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30634 + 72] = 85
                                if address(_28691) == address(_28738):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30634 + 292 len 29]
                                if address(_28691) < address(_28738):
                                    if not address(_28691):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30634 + 221] = address(_28691)
                                    mem[_30634 + 241] = address(_28738)
                                    mem[_30634 + 189] = 40
                                    mem[_30634 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30634 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30634 + 314] = sha3(address(_28691), address(_28738))
                                    mem[_30634 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30634 + 261] = 85
                                    mem[_30634 + 378] = 0
                                    mem[64] = _30634 + 410
                                    mem[_30634 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30634 + 414] = _28947
                                    mem[_30634 + 446] = 0
                                    mem[_30634 + 478] = address(sha3(0, factoryAddress, _30637, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30634 + 510] = 128
                                    mem[_30634 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30634 + 574] = mem[s + _30634 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28947, 0, address(sha3(0, factoryAddress, _30637, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28738):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30634 + 221] = address(_28738)
                                    mem[_30634 + 241] = address(_28691)
                                    mem[_30634 + 189] = 40
                                    mem[_30634 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30634 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30634 + 314] = sha3(address(_28738), address(_28691))
                                    mem[_30634 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30634 + 261] = 85
                                    mem[_30634 + 378] = 0
                                    mem[64] = _30634 + 410
                                    mem[_30634 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30634 + 414] = _28947
                                    mem[_30634 + 446] = 0
                                    mem[_30634 + 478] = address(sha3(0, factoryAddress, _30637, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30634 + 510] = 128
                                    mem[_30634 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30634 + 574] = mem[s + _30634 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28947, 0, address(sha3(0, factoryAddress, _30637, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * arg3.length) + 128]
                    _28948 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                    if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                        if idx >= mem[_9990 + ceil32(return_data.size) + 322] - 2:
                            if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30669 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28738)
                                _30670 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30672 = sha3(mem[_30670 + 32 len mem[_30670]])
                                mem[_30669 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30669 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30669 + 125] = _30672
                                mem[_30669 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30669 + 72] = 85
                                mem[_30669 + 189] = 0
                                mem[64] = _30669 + 221
                                mem[_30669 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30669 + 225] = 0
                                mem[_30669 + 257] = _28948
                                mem[_30669 + 289] = arg4
                                mem[_30669 + 321] = 128
                                mem[_30669 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30669 + 385] = mem[s + _30669 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30672, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30672, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28948, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30676 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28691)
                                _30677 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30679 = sha3(mem[_30677 + 32 len mem[_30677]])
                                mem[_30676 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30676 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30676 + 125] = _30679
                                mem[_30676 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30676 + 72] = 85
                                mem[_30676 + 189] = 0
                                mem[64] = _30676 + 221
                                mem[_30676 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30676 + 225] = 0
                                mem[_30676 + 257] = _28948
                                mem[_30676 + 289] = arg4
                                mem[_30676 + 321] = 128
                                mem[_30676 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30676 + 385] = mem[s + _30676 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30679, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30679, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28948, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9990 + ceil32(return_data.size) + 322]
                            _29121 = mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354]
                            if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30655 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_29121)
                                _30656 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30658 = sha3(mem[_30656 + 32 len mem[_30656]])
                                mem[_30655 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30655 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30655 + 125] = _30658
                                mem[_30655 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30655 + 72] = 85
                                if address(_28691) == address(_28738):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30655 + 292 len 29]
                                if address(_28691) < address(_28738):
                                    if not address(_28691):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30655 + 221] = address(_28691)
                                    mem[_30655 + 241] = address(_28738)
                                    mem[_30655 + 189] = 40
                                    mem[_30655 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30655 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30655 + 314] = sha3(address(_28691), address(_28738))
                                    mem[_30655 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30655 + 261] = 85
                                    mem[_30655 + 378] = 0
                                    mem[64] = _30655 + 410
                                    mem[_30655 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30655 + 414] = 0
                                    mem[_30655 + 446] = _28948
                                    mem[_30655 + 478] = address(sha3(0, factoryAddress, _30658, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30655 + 510] = 128
                                    mem[_30655 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30655 + 574] = mem[s + _30655 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28948, address(sha3(0, factoryAddress, _30658, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28738):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30655 + 221] = address(_28738)
                                    mem[_30655 + 241] = address(_28691)
                                    mem[_30655 + 189] = 40
                                    mem[_30655 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30655 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30655 + 314] = sha3(address(_28738), address(_28691))
                                    mem[_30655 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30655 + 261] = 85
                                    mem[_30655 + 378] = 0
                                    mem[64] = _30655 + 410
                                    mem[_30655 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30655 + 414] = 0
                                    mem[_30655 + 446] = _28948
                                    mem[_30655 + 478] = address(sha3(0, factoryAddress, _30658, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30655 + 510] = 128
                                    mem[_30655 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30655 + 574] = mem[s + _30655 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28948, address(sha3(0, factoryAddress, _30658, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30662 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28738)
                                _30663 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30665 = sha3(mem[_30663 + 32 len mem[_30663]])
                                mem[_30662 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30662 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30662 + 125] = _30665
                                mem[_30662 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30662 + 72] = 85
                                if address(_28691) == address(_28738):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30662 + 292 len 29]
                                if address(_28691) < address(_28738):
                                    if not address(_28691):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30662 + 221] = address(_28691)
                                    mem[_30662 + 241] = address(_28738)
                                    mem[_30662 + 189] = 40
                                    mem[_30662 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30662 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30662 + 314] = sha3(address(_28691), address(_28738))
                                    mem[_30662 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30662 + 261] = 85
                                    mem[_30662 + 378] = 0
                                    mem[64] = _30662 + 410
                                    mem[_30662 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30662 + 414] = 0
                                    mem[_30662 + 446] = _28948
                                    mem[_30662 + 478] = address(sha3(0, factoryAddress, _30665, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30662 + 510] = 128
                                    mem[_30662 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30662 + 574] = mem[s + _30662 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28948, address(sha3(0, factoryAddress, _30665, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28738):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30662 + 221] = address(_28738)
                                    mem[_30662 + 241] = address(_28691)
                                    mem[_30662 + 189] = 40
                                    mem[_30662 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30662 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30662 + 314] = sha3(address(_28738), address(_28691))
                                    mem[_30662 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30662 + 261] = 85
                                    mem[_30662 + 378] = 0
                                    mem[64] = _30662 + 410
                                    mem[_30662 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30662 + 414] = 0
                                    mem[_30662 + 446] = _28948
                                    mem[_30662 + 478] = address(sha3(0, factoryAddress, _30665, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30662 + 510] = 128
                                    mem[_30662 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30662 + 574] = mem[s + _30662 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28948, address(sha3(0, factoryAddress, _30665, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if idx >= mem[_9990 + ceil32(return_data.size) + 322] - 2:
                            if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30697 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28738)
                                _30698 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30700 = sha3(mem[_30698 + 32 len mem[_30698]])
                                mem[_30697 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30697 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30697 + 125] = _30700
                                mem[_30697 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30697 + 72] = 85
                                mem[_30697 + 189] = 0
                                mem[64] = _30697 + 221
                                mem[_30697 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30697 + 225] = _28948
                                mem[_30697 + 257] = 0
                                mem[_30697 + 289] = arg4
                                mem[_30697 + 321] = 128
                                mem[_30697 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30697 + 385] = mem[s + _30697 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30700, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30700, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28948, 0, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30704 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28691)
                                _30705 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30707 = sha3(mem[_30705 + 32 len mem[_30705]])
                                mem[_30704 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30704 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30704 + 125] = _30707
                                mem[_30704 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30704 + 72] = 85
                                mem[_30704 + 189] = 0
                                mem[64] = _30704 + 221
                                mem[_30704 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30704 + 225] = _28948
                                mem[_30704 + 257] = 0
                                mem[_30704 + 289] = arg4
                                mem[_30704 + 321] = 128
                                mem[_30704 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30704 + 385] = mem[s + _30704 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30707, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30707, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28948, 0, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9990 + ceil32(return_data.size) + 322]
                            _29122 = mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354]
                            if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30683 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_29122)
                                _30684 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30686 = sha3(mem[_30684 + 32 len mem[_30684]])
                                mem[_30683 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30683 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30683 + 125] = _30686
                                mem[_30683 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30683 + 72] = 85
                                if address(_28691) == address(_28738):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30683 + 292 len 29]
                                if address(_28691) < address(_28738):
                                    if not address(_28691):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30683 + 221] = address(_28691)
                                    mem[_30683 + 241] = address(_28738)
                                    mem[_30683 + 189] = 40
                                    mem[_30683 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30683 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30683 + 314] = sha3(address(_28691), address(_28738))
                                    mem[_30683 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30683 + 261] = 85
                                    mem[_30683 + 378] = 0
                                    mem[64] = _30683 + 410
                                    mem[_30683 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30683 + 414] = _28948
                                    mem[_30683 + 446] = 0
                                    mem[_30683 + 478] = address(sha3(0, factoryAddress, _30686, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30683 + 510] = 128
                                    mem[_30683 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30683 + 574] = mem[s + _30683 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28948, 0, address(sha3(0, factoryAddress, _30686, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28738):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30683 + 221] = address(_28738)
                                    mem[_30683 + 241] = address(_28691)
                                    mem[_30683 + 189] = 40
                                    mem[_30683 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30683 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30683 + 314] = sha3(address(_28738), address(_28691))
                                    mem[_30683 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30683 + 261] = 85
                                    mem[_30683 + 378] = 0
                                    mem[64] = _30683 + 410
                                    mem[_30683 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30683 + 414] = _28948
                                    mem[_30683 + 446] = 0
                                    mem[_30683 + 478] = address(sha3(0, factoryAddress, _30686, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30683 + 510] = 128
                                    mem[_30683 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30683 + 574] = mem[s + _30683 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28948, 0, address(sha3(0, factoryAddress, _30686, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30690 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28738)
                                _30691 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30693 = sha3(mem[_30691 + 32 len mem[_30691]])
                                mem[_30690 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30690 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30690 + 125] = _30693
                                mem[_30690 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30690 + 72] = 85
                                if address(_28691) == address(_28738):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30690 + 292 len 29]
                                if address(_28691) < address(_28738):
                                    if not address(_28691):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30690 + 221] = address(_28691)
                                    mem[_30690 + 241] = address(_28738)
                                    mem[_30690 + 189] = 40
                                    mem[_30690 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30690 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30690 + 314] = sha3(address(_28691), address(_28738))
                                    mem[_30690 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30690 + 261] = 85
                                    mem[_30690 + 378] = 0
                                    mem[64] = _30690 + 410
                                    mem[_30690 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30690 + 414] = _28948
                                    mem[_30690 + 446] = 0
                                    mem[_30690 + 478] = address(sha3(0, factoryAddress, _30693, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30690 + 510] = 128
                                    mem[_30690 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30690 + 574] = mem[s + _30690 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28691), address(_28738)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28948, 0, address(sha3(0, factoryAddress, _30693, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28738):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30690 + 221] = address(_28738)
                                    mem[_30690 + 241] = address(_28691)
                                    mem[_30690 + 189] = 40
                                    mem[_30690 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30690 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30690 + 314] = sha3(address(_28738), address(_28691))
                                    mem[_30690 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30690 + 261] = 85
                                    mem[_30690 + 378] = 0
                                    mem[64] = _30690 + 410
                                    mem[_30690 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30690 + 414] = _28948
                                    mem[_30690 + 446] = 0
                                    mem[_30690 + 478] = address(sha3(0, factoryAddress, _30693, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30690 + 510] = 128
                                    mem[_30690 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30690 + 574] = mem[s + _30690 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28738), address(_28691)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28948, 0, address(sha3(0, factoryAddress, _30693, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
            _28737 = mem[(32 * arg3.length) + 128]
            mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _28737) + 32]
        require return_data.size >= 32
        if not mem[_9990 + 353]:
            revert with 0, 
                        32,
                        49,
                        0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                        mem[_9990 + ceil32(return_data.size) + 439 len 15]
        mem[64] = _9990 + ceil32(return_data.size) + (32 * arg3.length) + 354
        mem[_9990 + ceil32(return_data.size) + 322] = arg3.length
        mem[_9990 + ceil32(return_data.size) + 354 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
        mem[_9990 + ceil32(return_data.size) + (32 * arg3.length) + 354] = 0
        idx = 0
        while idx < arg3.length - 1:
            require idx < mem[_9990 + ceil32(return_data.size) + 322]
            _28693 = mem[(32 * idx) + _9990 + ceil32(return_data.size) + 354]
            require idx + 1 < mem[_9990 + ceil32(return_data.size) + 322]
            _28742 = mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354]
            if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                if not mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * arg3.length) + 128]
                _28949 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20]:
                    if idx >= mem[_9990 + ceil32(return_data.size) + 322] - 2:
                        if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30725 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28742)
                            _30726 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30728 = sha3(mem[_30726 + 32 len mem[_30726]])
                            mem[_30725 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30725 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30725 + 125] = _30728
                            mem[_30725 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30725 + 72] = 85
                            mem[_30725 + 189] = 0
                            mem[64] = _30725 + 221
                            mem[_30725 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_30725 + 225] = 0
                            mem[_30725 + 257] = _28949
                            mem[_30725 + 289] = arg4
                            mem[_30725 + 321] = 128
                            mem[_30725 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _30725 + 385] = mem[s + _30725 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _30728, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _30728, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28949, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30732 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28693)
                            _30733 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30735 = sha3(mem[_30733 + 32 len mem[_30733]])
                            mem[_30732 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30732 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30732 + 125] = _30735
                            mem[_30732 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30732 + 72] = 85
                            mem[_30732 + 189] = 0
                            mem[64] = _30732 + 221
                            mem[_30732 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_30732 + 225] = 0
                            mem[_30732 + 257] = _28949
                            mem[_30732 + 289] = arg4
                            mem[_30732 + 321] = 128
                            mem[_30732 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _30732 + 385] = mem[s + _30732 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _30735, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _30735, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28949, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_9990 + ceil32(return_data.size) + 322]
                        _29123 = mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354]
                        if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30711 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_29123)
                            _30712 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30714 = sha3(mem[_30712 + 32 len mem[_30712]])
                            mem[_30711 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30711 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30711 + 125] = _30714
                            mem[_30711 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30711 + 72] = 85
                            if address(_28693) == address(_28742):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30711 + 292 len 29]
                            if address(_28693) < address(_28742):
                                if not address(_28693):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30711 + 221] = address(_28693)
                                mem[_30711 + 241] = address(_28742)
                                mem[_30711 + 189] = 40
                                mem[_30711 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30711 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30711 + 314] = sha3(address(_28693), address(_28742))
                                mem[_30711 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30711 + 261] = 85
                                mem[_30711 + 378] = 0
                                mem[64] = _30711 + 410
                                mem[_30711 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30711 + 414] = 0
                                mem[_30711 + 446] = _28949
                                mem[_30711 + 478] = address(sha3(0, factoryAddress, _30714, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30711 + 510] = 128
                                mem[_30711 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30711 + 574] = mem[s + _30711 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28949, address(sha3(0, factoryAddress, _30714, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28742):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30711 + 221] = address(_28742)
                                mem[_30711 + 241] = address(_28693)
                                mem[_30711 + 189] = 40
                                mem[_30711 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30711 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30711 + 314] = sha3(address(_28742), address(_28693))
                                mem[_30711 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30711 + 261] = 85
                                mem[_30711 + 378] = 0
                                mem[64] = _30711 + 410
                                mem[_30711 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30711 + 414] = 0
                                mem[_30711 + 446] = _28949
                                mem[_30711 + 478] = address(sha3(0, factoryAddress, _30714, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30711 + 510] = 128
                                mem[_30711 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30711 + 574] = mem[s + _30711 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28949, address(sha3(0, factoryAddress, _30714, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30718 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28742)
                            _30719 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30721 = sha3(mem[_30719 + 32 len mem[_30719]])
                            mem[_30718 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30718 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30718 + 125] = _30721
                            mem[_30718 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30718 + 72] = 85
                            if address(_28693) == address(_28742):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30718 + 292 len 29]
                            if address(_28693) < address(_28742):
                                if not address(_28693):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30718 + 221] = address(_28693)
                                mem[_30718 + 241] = address(_28742)
                                mem[_30718 + 189] = 40
                                mem[_30718 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30718 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30718 + 314] = sha3(address(_28693), address(_28742))
                                mem[_30718 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30718 + 261] = 85
                                mem[_30718 + 378] = 0
                                mem[64] = _30718 + 410
                                mem[_30718 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30718 + 414] = 0
                                mem[_30718 + 446] = _28949
                                mem[_30718 + 478] = address(sha3(0, factoryAddress, _30721, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30718 + 510] = 128
                                mem[_30718 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30718 + 574] = mem[s + _30718 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28949, address(sha3(0, factoryAddress, _30721, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28742):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30718 + 221] = address(_28742)
                                mem[_30718 + 241] = address(_28693)
                                mem[_30718 + 189] = 40
                                mem[_30718 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30718 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30718 + 314] = sha3(address(_28742), address(_28693))
                                mem[_30718 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30718 + 261] = 85
                                mem[_30718 + 378] = 0
                                mem[64] = _30718 + 410
                                mem[_30718 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30718 + 414] = 0
                                mem[_30718 + 446] = _28949
                                mem[_30718 + 478] = address(sha3(0, factoryAddress, _30721, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30718 + 510] = 128
                                mem[_30718 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30718 + 574] = mem[s + _30718 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28949, address(sha3(0, factoryAddress, _30721, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if idx >= mem[_9990 + ceil32(return_data.size) + 322] - 2:
                        if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30753 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28742)
                            _30754 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30756 = sha3(mem[_30754 + 32 len mem[_30754]])
                            mem[_30753 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30753 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30753 + 125] = _30756
                            mem[_30753 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30753 + 72] = 85
                            mem[_30753 + 189] = 0
                            mem[64] = _30753 + 221
                            mem[_30753 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_30753 + 225] = _28949
                            mem[_30753 + 257] = 0
                            mem[_30753 + 289] = arg4
                            mem[_30753 + 321] = 128
                            mem[_30753 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _30753 + 385] = mem[s + _30753 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _30756, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _30756, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28949, 0, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30760 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28693)
                            _30761 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30763 = sha3(mem[_30761 + 32 len mem[_30761]])
                            mem[_30760 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30760 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30760 + 125] = _30763
                            mem[_30760 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30760 + 72] = 85
                            mem[_30760 + 189] = 0
                            mem[64] = _30760 + 221
                            mem[_30760 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_30760 + 225] = _28949
                            mem[_30760 + 257] = 0
                            mem[_30760 + 289] = arg4
                            mem[_30760 + 321] = 128
                            mem[_30760 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _30760 + 385] = mem[s + _30760 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _30763, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _30763, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28949, 0, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_9990 + ceil32(return_data.size) + 322]
                        _29124 = mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354]
                        if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30739 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_29124)
                            _30740 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30742 = sha3(mem[_30740 + 32 len mem[_30740]])
                            mem[_30739 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30739 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30739 + 125] = _30742
                            mem[_30739 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30739 + 72] = 85
                            if address(_28693) == address(_28742):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30739 + 292 len 29]
                            if address(_28693) < address(_28742):
                                if not address(_28693):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30739 + 221] = address(_28693)
                                mem[_30739 + 241] = address(_28742)
                                mem[_30739 + 189] = 40
                                mem[_30739 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30739 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30739 + 314] = sha3(address(_28693), address(_28742))
                                mem[_30739 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30739 + 261] = 85
                                mem[_30739 + 378] = 0
                                mem[64] = _30739 + 410
                                mem[_30739 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30739 + 414] = _28949
                                mem[_30739 + 446] = 0
                                mem[_30739 + 478] = address(sha3(0, factoryAddress, _30742, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30739 + 510] = 128
                                mem[_30739 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30739 + 574] = mem[s + _30739 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28949, 0, address(sha3(0, factoryAddress, _30742, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28742):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30739 + 221] = address(_28742)
                                mem[_30739 + 241] = address(_28693)
                                mem[_30739 + 189] = 40
                                mem[_30739 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30739 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30739 + 314] = sha3(address(_28742), address(_28693))
                                mem[_30739 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30739 + 261] = 85
                                mem[_30739 + 378] = 0
                                mem[64] = _30739 + 410
                                mem[_30739 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30739 + 414] = _28949
                                mem[_30739 + 446] = 0
                                mem[_30739 + 478] = address(sha3(0, factoryAddress, _30742, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30739 + 510] = 128
                                mem[_30739 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30739 + 574] = mem[s + _30739 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28949, 0, address(sha3(0, factoryAddress, _30742, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30746 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28742)
                            _30747 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30749 = sha3(mem[_30747 + 32 len mem[_30747]])
                            mem[_30746 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30746 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30746 + 125] = _30749
                            mem[_30746 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30746 + 72] = 85
                            if address(_28693) == address(_28742):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30746 + 292 len 29]
                            if address(_28693) < address(_28742):
                                if not address(_28693):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30746 + 221] = address(_28693)
                                mem[_30746 + 241] = address(_28742)
                                mem[_30746 + 189] = 40
                                mem[_30746 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30746 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30746 + 314] = sha3(address(_28693), address(_28742))
                                mem[_30746 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30746 + 261] = 85
                                mem[_30746 + 378] = 0
                                mem[64] = _30746 + 410
                                mem[_30746 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30746 + 414] = _28949
                                mem[_30746 + 446] = 0
                                mem[_30746 + 478] = address(sha3(0, factoryAddress, _30749, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30746 + 510] = 128
                                mem[_30746 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30746 + 574] = mem[s + _30746 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28949, 0, address(sha3(0, factoryAddress, _30749, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28742):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30746 + 221] = address(_28742)
                                mem[_30746 + 241] = address(_28693)
                                mem[_30746 + 189] = 40
                                mem[_30746 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30746 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30746 + 314] = sha3(address(_28742), address(_28693))
                                mem[_30746 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30746 + 261] = 85
                                mem[_30746 + 378] = 0
                                mem[64] = _30746 + 410
                                mem[_30746 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30746 + 414] = _28949
                                mem[_30746 + 446] = 0
                                mem[_30746 + 478] = address(sha3(0, factoryAddress, _30749, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30746 + 510] = 128
                                mem[_30746 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30746 + 574] = mem[s + _30746 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28949, 0, address(sha3(0, factoryAddress, _30749, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
            else:
                if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * arg3.length) + 128]
                _28950 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                    if idx >= mem[_9990 + ceil32(return_data.size) + 322] - 2:
                        if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30781 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28742)
                            _30782 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30784 = sha3(mem[_30782 + 32 len mem[_30782]])
                            mem[_30781 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30781 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30781 + 125] = _30784
                            mem[_30781 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30781 + 72] = 85
                            mem[_30781 + 189] = 0
                            mem[64] = _30781 + 221
                            mem[_30781 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_30781 + 225] = 0
                            mem[_30781 + 257] = _28950
                            mem[_30781 + 289] = arg4
                            mem[_30781 + 321] = 128
                            mem[_30781 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _30781 + 385] = mem[s + _30781 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _30784, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _30784, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28950, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30788 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28693)
                            _30789 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30791 = sha3(mem[_30789 + 32 len mem[_30789]])
                            mem[_30788 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30788 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30788 + 125] = _30791
                            mem[_30788 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30788 + 72] = 85
                            mem[_30788 + 189] = 0
                            mem[64] = _30788 + 221
                            mem[_30788 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_30788 + 225] = 0
                            mem[_30788 + 257] = _28950
                            mem[_30788 + 289] = arg4
                            mem[_30788 + 321] = 128
                            mem[_30788 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _30788 + 385] = mem[s + _30788 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _30791, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _30791, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28950, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_9990 + ceil32(return_data.size) + 322]
                        _29125 = mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354]
                        if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30767 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_29125)
                            _30768 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30770 = sha3(mem[_30768 + 32 len mem[_30768]])
                            mem[_30767 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30767 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30767 + 125] = _30770
                            mem[_30767 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30767 + 72] = 85
                            if address(_28693) == address(_28742):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30767 + 292 len 29]
                            if address(_28693) < address(_28742):
                                if not address(_28693):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30767 + 221] = address(_28693)
                                mem[_30767 + 241] = address(_28742)
                                mem[_30767 + 189] = 40
                                mem[_30767 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30767 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30767 + 314] = sha3(address(_28693), address(_28742))
                                mem[_30767 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30767 + 261] = 85
                                mem[_30767 + 378] = 0
                                mem[64] = _30767 + 410
                                mem[_30767 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30767 + 414] = 0
                                mem[_30767 + 446] = _28950
                                mem[_30767 + 478] = address(sha3(0, factoryAddress, _30770, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30767 + 510] = 128
                                mem[_30767 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30767 + 574] = mem[s + _30767 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28950, address(sha3(0, factoryAddress, _30770, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28742):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30767 + 221] = address(_28742)
                                mem[_30767 + 241] = address(_28693)
                                mem[_30767 + 189] = 40
                                mem[_30767 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30767 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30767 + 314] = sha3(address(_28742), address(_28693))
                                mem[_30767 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30767 + 261] = 85
                                mem[_30767 + 378] = 0
                                mem[64] = _30767 + 410
                                mem[_30767 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30767 + 414] = 0
                                mem[_30767 + 446] = _28950
                                mem[_30767 + 478] = address(sha3(0, factoryAddress, _30770, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30767 + 510] = 128
                                mem[_30767 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30767 + 574] = mem[s + _30767 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28950, address(sha3(0, factoryAddress, _30770, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30774 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28742)
                            _30775 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30777 = sha3(mem[_30775 + 32 len mem[_30775]])
                            mem[_30774 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30774 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30774 + 125] = _30777
                            mem[_30774 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30774 + 72] = 85
                            if address(_28693) == address(_28742):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30774 + 292 len 29]
                            if address(_28693) < address(_28742):
                                if not address(_28693):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30774 + 221] = address(_28693)
                                mem[_30774 + 241] = address(_28742)
                                mem[_30774 + 189] = 40
                                mem[_30774 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30774 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30774 + 314] = sha3(address(_28693), address(_28742))
                                mem[_30774 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30774 + 261] = 85
                                mem[_30774 + 378] = 0
                                mem[64] = _30774 + 410
                                mem[_30774 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30774 + 414] = 0
                                mem[_30774 + 446] = _28950
                                mem[_30774 + 478] = address(sha3(0, factoryAddress, _30777, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30774 + 510] = 128
                                mem[_30774 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30774 + 574] = mem[s + _30774 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28950, address(sha3(0, factoryAddress, _30777, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28742):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30774 + 221] = address(_28742)
                                mem[_30774 + 241] = address(_28693)
                                mem[_30774 + 189] = 40
                                mem[_30774 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30774 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30774 + 314] = sha3(address(_28742), address(_28693))
                                mem[_30774 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30774 + 261] = 85
                                mem[_30774 + 378] = 0
                                mem[64] = _30774 + 410
                                mem[_30774 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30774 + 414] = 0
                                mem[_30774 + 446] = _28950
                                mem[_30774 + 478] = address(sha3(0, factoryAddress, _30777, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30774 + 510] = 128
                                mem[_30774 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30774 + 574] = mem[s + _30774 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28950, address(sha3(0, factoryAddress, _30777, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if idx >= mem[_9990 + ceil32(return_data.size) + 322] - 2:
                        if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30809 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28742)
                            _30810 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30812 = sha3(mem[_30810 + 32 len mem[_30810]])
                            mem[_30809 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30809 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30809 + 125] = _30812
                            mem[_30809 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30809 + 72] = 85
                            mem[_30809 + 189] = 0
                            mem[64] = _30809 + 221
                            mem[_30809 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_30809 + 225] = _28950
                            mem[_30809 + 257] = 0
                            mem[_30809 + 289] = arg4
                            mem[_30809 + 321] = 128
                            mem[_30809 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _30809 + 385] = mem[s + _30809 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _30812, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _30812, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28950, 0, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30816 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28693)
                            _30817 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30819 = sha3(mem[_30817 + 32 len mem[_30817]])
                            mem[_30816 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30816 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30816 + 125] = _30819
                            mem[_30816 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30816 + 72] = 85
                            mem[_30816 + 189] = 0
                            mem[64] = _30816 + 221
                            mem[_30816 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_30816 + 225] = _28950
                            mem[_30816 + 257] = 0
                            mem[_30816 + 289] = arg4
                            mem[_30816 + 321] = 128
                            mem[_30816 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _30816 + 385] = mem[s + _30816 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _30819, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _30819, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28950, 0, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_9990 + ceil32(return_data.size) + 322]
                        _29126 = mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354]
                        if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30795 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_29126)
                            _30796 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30798 = sha3(mem[_30796 + 32 len mem[_30796]])
                            mem[_30795 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30795 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30795 + 125] = _30798
                            mem[_30795 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30795 + 72] = 85
                            if address(_28693) == address(_28742):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30795 + 292 len 29]
                            if address(_28693) < address(_28742):
                                if not address(_28693):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30795 + 221] = address(_28693)
                                mem[_30795 + 241] = address(_28742)
                                mem[_30795 + 189] = 40
                                mem[_30795 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30795 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30795 + 314] = sha3(address(_28693), address(_28742))
                                mem[_30795 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30795 + 261] = 85
                                mem[_30795 + 378] = 0
                                mem[64] = _30795 + 410
                                mem[_30795 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30795 + 414] = _28950
                                mem[_30795 + 446] = 0
                                mem[_30795 + 478] = address(sha3(0, factoryAddress, _30798, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30795 + 510] = 128
                                mem[_30795 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30795 + 574] = mem[s + _30795 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28950, 0, address(sha3(0, factoryAddress, _30798, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28742):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30795 + 221] = address(_28742)
                                mem[_30795 + 241] = address(_28693)
                                mem[_30795 + 189] = 40
                                mem[_30795 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30795 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30795 + 314] = sha3(address(_28742), address(_28693))
                                mem[_30795 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30795 + 261] = 85
                                mem[_30795 + 378] = 0
                                mem[64] = _30795 + 410
                                mem[_30795 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30795 + 414] = _28950
                                mem[_30795 + 446] = 0
                                mem[_30795 + 478] = address(sha3(0, factoryAddress, _30798, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30795 + 510] = 128
                                mem[_30795 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30795 + 574] = mem[s + _30795 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28950, 0, address(sha3(0, factoryAddress, _30798, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30802 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9990 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28742)
                            _30803 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30805 = sha3(mem[_30803 + 32 len mem[_30803]])
                            mem[_30802 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30802 + 105] = Mask(160, 96, factoryAddress)
                            mem[_30802 + 125] = _30805
                            mem[_30802 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_30802 + 72] = 85
                            if address(_28693) == address(_28742):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30802 + 292 len 29]
                            if address(_28693) < address(_28742):
                                if not address(_28693):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30802 + 221] = address(_28693)
                                mem[_30802 + 241] = address(_28742)
                                mem[_30802 + 189] = 40
                                mem[_30802 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30802 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30802 + 314] = sha3(address(_28693), address(_28742))
                                mem[_30802 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30802 + 261] = 85
                                mem[_30802 + 378] = 0
                                mem[64] = _30802 + 410
                                mem[_30802 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30802 + 414] = _28950
                                mem[_30802 + 446] = 0
                                mem[_30802 + 478] = address(sha3(0, factoryAddress, _30805, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30802 + 510] = 128
                                mem[_30802 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30802 + 574] = mem[s + _30802 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28693), address(_28742)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28950, 0, address(sha3(0, factoryAddress, _30805, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28742):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_30802 + 221] = address(_28742)
                                mem[_30802 + 241] = address(_28693)
                                mem[_30802 + 189] = 40
                                mem[_30802 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30802 + 294] = Mask(160, 96, factoryAddress)
                                mem[_30802 + 314] = sha3(address(_28742), address(_28693))
                                mem[_30802 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30802 + 261] = 85
                                mem[_30802 + 378] = 0
                                mem[64] = _30802 + 410
                                mem[_30802 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30802 + 414] = _28950
                                mem[_30802 + 446] = 0
                                mem[_30802 + 478] = address(sha3(0, factoryAddress, _30805, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_30802 + 510] = 128
                                mem[_30802 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30802 + 574] = mem[s + _30802 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28742), address(_28693)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28950, 0, address(sha3(0, factoryAddress, _30805, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
        _28741 = mem[(32 * arg3.length) + 128]
        mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _28741) + 32]
    mem[(32 * arg3.length) + 160 len 32 * arg3.length] = call.data[calldata.size len 32 * arg3.length]
    require 0 < arg3.length
    mem[(32 * arg3.length) + 160] = arg1
    idx = 0
    while idx < arg3.length - 1:
        require idx < mem[96]
        _9941 = mem[(32 * idx) + 128]
        require idx + 1 < mem[96]
        _9946 = mem[(32 * idx + 1) + 128]
        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
            if not mem[(32 * idx) + 140 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _10083 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                mem[mem[64] + 52] = address(_9946)
                _10084 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _10086 = sha3(mem[_10084 + 32 len mem[_10084]])
                mem[_10083 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_10083 + 105] = Mask(160, 96, factoryAddress)
                mem[_10083 + 125] = _10086
                mem[_10083 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                mem[_10083 + 72] = 85
                if address(_9941) == address(_9946):
                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_10083 + 292 len 29]
                if address(_9941) < address(_9946):
                    if not address(_9941):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_10083 + 221] = address(_9941)
                    mem[_10083 + 241] = address(_9946)
                    mem[_10083 + 189] = 40
                    mem[_10083 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_10083 + 294] = Mask(160, 96, factoryAddress)
                    mem[_10083 + 314] = sha3(address(_9941), address(_9946))
                    mem[_10083 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                    mem[_10083 + 261] = 85
                    mem[64] = _10083 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9941), address(_9946)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_9941), address(_9946)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_9946):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_10083 + 221] = address(_9946)
                    mem[_10083 + 241] = address(_9941)
                    mem[_10083 + 189] = 40
                    mem[_10083 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_10083 + 294] = Mask(160, 96, factoryAddress)
                    mem[_10083 + 314] = sha3(address(_9946), address(_9941))
                    mem[_10083 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                    mem[_10083 + 261] = 85
                    mem[64] = _10083 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9946), address(_9941)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_9946), address(_9941)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                            gas gas_remaining wei
                mem[_10083 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * arg3.length) + 128]
                if mem[(32 * idx) + (32 * arg3.length) + 160] <= 0:
                    revert with 0, 
                                32,
                                41,
                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[_10083 + 487 len 23]
                if address(_9941) == address(_9941):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10083 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10083 + 484 len 26]
                    if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                    else:
                        require ext_call.return_data[50 len 14]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10083 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10083 + 484 len 26]
                    if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                    else:
                        require ext_call.return_data[18 len 14]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _10090 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                mem[mem[64] + 52] = address(_9941)
                _10091 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _10093 = sha3(mem[_10091 + 32 len mem[_10091]])
                mem[_10090 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_10090 + 105] = Mask(160, 96, factoryAddress)
                mem[_10090 + 125] = _10093
                mem[_10090 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                mem[_10090 + 72] = 85
                if address(_9941) == address(_9946):
                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_10090 + 292 len 29]
                if address(_9941) < address(_9946):
                    if not address(_9941):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_10090 + 221] = address(_9941)
                    mem[_10090 + 241] = address(_9946)
                    mem[_10090 + 189] = 40
                    mem[_10090 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_10090 + 294] = Mask(160, 96, factoryAddress)
                    mem[_10090 + 314] = sha3(address(_9941), address(_9946))
                    mem[_10090 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                    mem[_10090 + 261] = 85
                    mem[64] = _10090 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9941), address(_9946)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_9941), address(_9946)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_9946):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_10090 + 221] = address(_9946)
                    mem[_10090 + 241] = address(_9941)
                    mem[_10090 + 189] = 40
                    mem[_10090 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_10090 + 294] = Mask(160, 96, factoryAddress)
                    mem[_10090 + 314] = sha3(address(_9946), address(_9941))
                    mem[_10090 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                    mem[_10090 + 261] = 85
                    mem[64] = _10090 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9946), address(_9941)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_9946), address(_9941)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                            gas gas_remaining wei
                mem[_10090 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * arg3.length) + 128]
                if mem[(32 * idx) + (32 * arg3.length) + 160] <= 0:
                    revert with 0, 
                                32,
                                41,
                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[_10090 + 487 len 23]
                if address(_9941) == address(_9941):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10090 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10090 + 484 len 26]
                    if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                    else:
                        require ext_call.return_data[50 len 14]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10090 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10090 + 484 len 26]
                    if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                    else:
                        require ext_call.return_data[18 len 14]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
        else:
            if not mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _10097 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                mem[mem[64] + 52] = address(_9946)
                _10098 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _10100 = sha3(mem[_10098 + 32 len mem[_10098]])
                mem[_10097 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_10097 + 105] = Mask(160, 96, factoryAddress)
                mem[_10097 + 125] = _10100
                mem[_10097 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                mem[_10097 + 72] = 85
                if address(_9941) == address(_9946):
                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_10097 + 292 len 29]
                if address(_9941) < address(_9946):
                    if not address(_9941):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_10097 + 221] = address(_9941)
                    mem[_10097 + 241] = address(_9946)
                    mem[_10097 + 189] = 40
                    mem[_10097 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_10097 + 294] = Mask(160, 96, factoryAddress)
                    mem[_10097 + 314] = sha3(address(_9941), address(_9946))
                    mem[_10097 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                    mem[_10097 + 261] = 85
                    mem[64] = _10097 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9941), address(_9946)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_9941), address(_9946)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_9946):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_10097 + 221] = address(_9946)
                    mem[_10097 + 241] = address(_9941)
                    mem[_10097 + 189] = 40
                    mem[_10097 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_10097 + 294] = Mask(160, 96, factoryAddress)
                    mem[_10097 + 314] = sha3(address(_9946), address(_9941))
                    mem[_10097 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                    mem[_10097 + 261] = 85
                    mem[64] = _10097 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9946), address(_9941)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_9946), address(_9941)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                            gas gas_remaining wei
                mem[_10097 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * arg3.length) + 128]
                if mem[(32 * idx) + (32 * arg3.length) + 160] <= 0:
                    revert with 0, 
                                32,
                                41,
                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[_10097 + 487 len 23]
                if address(_9946) == address(_9941):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10097 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10097 + 484 len 26]
                    if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                    else:
                        require ext_call.return_data[50 len 14]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10097 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10097 + 484 len 26]
                    if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                    else:
                        require ext_call.return_data[18 len 14]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _10104 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                mem[mem[64] + 52] = address(_9941)
                _10105 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _10107 = sha3(mem[_10105 + 32 len mem[_10105]])
                mem[_10104 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_10104 + 105] = Mask(160, 96, factoryAddress)
                mem[_10104 + 125] = _10107
                mem[_10104 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                mem[_10104 + 72] = 85
                if address(_9941) == address(_9946):
                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_10104 + 292 len 29]
                if address(_9941) < address(_9946):
                    if not address(_9941):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_10104 + 221] = address(_9941)
                    mem[_10104 + 241] = address(_9946)
                    mem[_10104 + 189] = 40
                    mem[_10104 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_10104 + 294] = Mask(160, 96, factoryAddress)
                    mem[_10104 + 314] = sha3(address(_9941), address(_9946))
                    mem[_10104 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                    mem[_10104 + 261] = 85
                    mem[64] = _10104 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9941), address(_9946)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_9941), address(_9946)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_9946):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_10104 + 221] = address(_9946)
                    mem[_10104 + 241] = address(_9941)
                    mem[_10104 + 189] = 40
                    mem[_10104 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_10104 + 294] = Mask(160, 96, factoryAddress)
                    mem[_10104 + 314] = sha3(address(_9946), address(_9941))
                    mem[_10104 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                    mem[_10104 + 261] = 85
                    mem[64] = _10104 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_9946), address(_9941)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_9946), address(_9941)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).getReserves() with:
                            gas gas_remaining wei
                mem[_10104 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * arg3.length) + 128]
                if mem[(32 * idx) + (32 * arg3.length) + 160] <= 0:
                    revert with 0, 
                                32,
                                41,
                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[_10104 + 487 len 23]
                if address(_9946) == address(_9941):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10104 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10104 + 484 len 26]
                    if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                    else:
                        require ext_call.return_data[50 len 14]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10104 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_10104 + 484 len 26]
                    if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] / 998 != mem[(32 * idx) + (32 * arg3.length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 0 / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                    else:
                        require ext_call.return_data[18 len 14]
                        if 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 998 * mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160]) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg3.length) + 160] = 998 * mem[(32 * idx) + (32 * arg3.length) + 160] * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (998 * mem[(32 * idx) + (32 * arg3.length) + 160])
        idx = idx + 1
        continue 
    require mem[(32 * arg3.length) + 128] - 1 < mem[(32 * arg3.length) + 128]
    if mem[(32 * mem[(32 * arg3.length) + 128] - 1) + (32 * arg3.length) + 160] < arg2:
        revert with 0, 
                    32,
                    41,
                    0x6450616e63616b65526f757465723a20494e53554646494349454e545f4f55545055545f414d4f554e,
                    mem[mem[64] + 109 len 23]
    require 0 < arg3.length
    require 1 < arg3.length
    if address(cd[(arg3 + 36)]) == address(cd[(arg3 + 68)]):
        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
    if address(cd[(arg3 + 36)]) < address(cd[(arg3 + 68)]):
        if not address(cd[(arg3 + 36)]):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        _9997 = mem[64]
        mem[mem[64] + 32] = address(cd[(arg3 + 36)])
        mem[mem[64] + 52] = address(cd[(arg3 + 68)])
        _9998 = mem[64]
        mem[mem[64]] = 40
        mem[64] = mem[64] + 72
        _10000 = sha3(mem[_9998 + 32 len mem[_9998]])
        mem[_9997 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[_9997 + 105] = Mask(160, 96, factoryAddress)
        mem[_9997 + 125] = _10000
        mem[_9997 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
        mem[_9997 + 72] = 85
        require 0 < mem[(32 * arg3.length) + 128]
        _10025 = mem[(32 * arg3.length) + 160]
        mem[_9997 + 225] = address(WETHAddress)
        mem[_9997 + 257] = address(sha3(0, factoryAddress, _10000, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
        mem[_9997 + 289] = _10025
        mem[_9997 + 189] = 100
        mem[_9997 + 225 len 28] = Mask(224, 0, stor1)
        mem[_9997 + 221 len 4] = unknown_0x23b872dd(?????)
        mem[_9997 + 321 len 96] = unknown_0x23b872dd(?????), Mask(224, 0, stor1), uint32(stor1), address(sha3(0, factoryAddress, _10000, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), Mask(224, 32, _10025) >> 32
        mem[_9997 + 445 len 4] = Mask(32, 64, _10025) >> 64
        call address(cd[(arg3 + 36)]) with:
             gas gas_remaining wei
            args Mask(224, 32, _10025) << 480, mem[_9997 + 417 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 
                            32,
                            49,
                            0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                            mem[_9997 + 438 len 7],
                            Mask(32, 64, _10025) >> 64,
                            mem[_9997 + 449 len 4]
            if not mem[96]:
                mem[64] = _9997 + (32 * arg3.length) + 353
                mem[_9997 + 321] = arg3.length
                mem[_9997 + 353 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
                mem[_9997 + (32 * arg3.length) + 353] = 0
                idx = 0
                while idx < arg3.length - 1:
                    require idx < mem[_9997 + 321]
                    _28695 = mem[(32 * idx) + _9997 + 353]
                    require idx + 1 < mem[_9997 + 321]
                    _28746 = mem[(32 * idx + 1) + _9997 + 353]
                    if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx + 1) + _9997 + 365 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _9997 + 365 len 20] < mem[(32 * idx + 1) + _9997 + 365 len 20]:
                        if not mem[(32 * idx) + _9997 + 365 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        _28951 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                        if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx) + _9997 + 365 len 20]:
                            if idx >= mem[_9997 + 321] - 2:
                                if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9997 + 365 len 20] < mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    if not mem[(32 * idx) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30837 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_28746)
                                    _30838 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30840 = sha3(mem[_30838 + 32 len mem[_30838]])
                                    mem[_30837 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30837 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30837 + 125] = _30840
                                    mem[_30837 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30837 + 72] = 85
                                    mem[_30837 + 189] = 0
                                    mem[64] = _30837 + 221
                                    mem[_30837 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30837 + 225] = 0
                                    mem[_30837 + 257] = _28951
                                    mem[_30837 + 289] = arg4
                                    mem[_30837 + 321] = 128
                                    mem[_30837 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30837 + 385] = mem[s + _30837 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30840, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30840, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28951, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30844 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_28695)
                                    _30845 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30847 = sha3(mem[_30845 + 32 len mem[_30845]])
                                    mem[_30844 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30844 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30844 + 125] = _30847
                                    mem[_30844 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30844 + 72] = 85
                                    mem[_30844 + 189] = 0
                                    mem[64] = _30844 + 221
                                    mem[_30844 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30844 + 225] = 0
                                    mem[_30844 + 257] = _28951
                                    mem[_30844 + 289] = arg4
                                    mem[_30844 + 321] = 128
                                    mem[_30844 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30844 + 385] = mem[s + _30844 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30847, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30847, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28951, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9997 + 321]
                                _29127 = mem[(32 * idx + 2) + _9997 + 353]
                                if mem[(32 * idx + 1) + _9997 + 365 len 20] == mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9997 + 365 len 20] < mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30823 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_29127)
                                    _30824 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30826 = sha3(mem[_30824 + 32 len mem[_30824]])
                                    mem[_30823 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30823 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30823 + 125] = _30826
                                    mem[_30823 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30823 + 72] = 85
                                    if address(_28695) == address(_28746):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30823 + 292 len 29]
                                    if address(_28695) < address(_28746):
                                        if not address(_28695):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30823 + 221] = address(_28695)
                                        mem[_30823 + 241] = address(_28746)
                                        mem[_30823 + 189] = 40
                                        mem[_30823 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30823 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30823 + 314] = sha3(address(_28695), address(_28746))
                                        mem[_30823 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30823 + 261] = 85
                                        mem[_30823 + 378] = 0
                                        mem[64] = _30823 + 410
                                        mem[_30823 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30823 + 414] = 0
                                        mem[_30823 + 446] = _28951
                                        mem[_30823 + 478] = address(sha3(0, factoryAddress, _30826, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30823 + 510] = 128
                                        mem[_30823 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30823 + 574] = mem[s + _30823 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28951, address(sha3(0, factoryAddress, _30826, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28746):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30823 + 221] = address(_28746)
                                        mem[_30823 + 241] = address(_28695)
                                        mem[_30823 + 189] = 40
                                        mem[_30823 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30823 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30823 + 314] = sha3(address(_28746), address(_28695))
                                        mem[_30823 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30823 + 261] = 85
                                        mem[_30823 + 378] = 0
                                        mem[64] = _30823 + 410
                                        mem[_30823 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30823 + 414] = 0
                                        mem[_30823 + 446] = _28951
                                        mem[_30823 + 478] = address(sha3(0, factoryAddress, _30826, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30823 + 510] = 128
                                        mem[_30823 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30823 + 574] = mem[s + _30823 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28951, address(sha3(0, factoryAddress, _30826, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30830 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_28746)
                                    _30831 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30833 = sha3(mem[_30831 + 32 len mem[_30831]])
                                    mem[_30830 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30830 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30830 + 125] = _30833
                                    mem[_30830 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30830 + 72] = 85
                                    if address(_28695) == address(_28746):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30830 + 292 len 29]
                                    if address(_28695) < address(_28746):
                                        if not address(_28695):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30830 + 221] = address(_28695)
                                        mem[_30830 + 241] = address(_28746)
                                        mem[_30830 + 189] = 40
                                        mem[_30830 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30830 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30830 + 314] = sha3(address(_28695), address(_28746))
                                        mem[_30830 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30830 + 261] = 85
                                        mem[_30830 + 378] = 0
                                        mem[64] = _30830 + 410
                                        mem[_30830 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30830 + 414] = 0
                                        mem[_30830 + 446] = _28951
                                        mem[_30830 + 478] = address(sha3(0, factoryAddress, _30833, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30830 + 510] = 128
                                        mem[_30830 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30830 + 574] = mem[s + _30830 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28951, address(sha3(0, factoryAddress, _30833, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28746):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30830 + 221] = address(_28746)
                                        mem[_30830 + 241] = address(_28695)
                                        mem[_30830 + 189] = 40
                                        mem[_30830 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30830 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30830 + 314] = sha3(address(_28746), address(_28695))
                                        mem[_30830 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30830 + 261] = 85
                                        mem[_30830 + 378] = 0
                                        mem[64] = _30830 + 410
                                        mem[_30830 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30830 + 414] = 0
                                        mem[_30830 + 446] = _28951
                                        mem[_30830 + 478] = address(sha3(0, factoryAddress, _30833, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30830 + 510] = 128
                                        mem[_30830 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30830 + 574] = mem[s + _30830 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28951, address(sha3(0, factoryAddress, _30833, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if idx >= mem[_9997 + 321] - 2:
                                if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9997 + 365 len 20] < mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    if not mem[(32 * idx) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30865 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_28746)
                                    _30866 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30868 = sha3(mem[_30866 + 32 len mem[_30866]])
                                    mem[_30865 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30865 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30865 + 125] = _30868
                                    mem[_30865 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30865 + 72] = 85
                                    mem[_30865 + 189] = 0
                                    mem[64] = _30865 + 221
                                    mem[_30865 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30865 + 225] = _28951
                                    mem[_30865 + 257] = 0
                                    mem[_30865 + 289] = arg4
                                    mem[_30865 + 321] = 128
                                    mem[_30865 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30865 + 385] = mem[s + _30865 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30868, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30868, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28951, 0, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30872 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_28695)
                                    _30873 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30875 = sha3(mem[_30873 + 32 len mem[_30873]])
                                    mem[_30872 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30872 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30872 + 125] = _30875
                                    mem[_30872 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30872 + 72] = 85
                                    mem[_30872 + 189] = 0
                                    mem[64] = _30872 + 221
                                    mem[_30872 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30872 + 225] = _28951
                                    mem[_30872 + 257] = 0
                                    mem[_30872 + 289] = arg4
                                    mem[_30872 + 321] = 128
                                    mem[_30872 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30872 + 385] = mem[s + _30872 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30875, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30875, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28951, 0, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9997 + 321]
                                _29128 = mem[(32 * idx + 2) + _9997 + 353]
                                if mem[(32 * idx + 1) + _9997 + 365 len 20] == mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9997 + 365 len 20] < mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30851 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_29128)
                                    _30852 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30854 = sha3(mem[_30852 + 32 len mem[_30852]])
                                    mem[_30851 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30851 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30851 + 125] = _30854
                                    mem[_30851 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30851 + 72] = 85
                                    if address(_28695) == address(_28746):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30851 + 292 len 29]
                                    if address(_28695) < address(_28746):
                                        if not address(_28695):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30851 + 221] = address(_28695)
                                        mem[_30851 + 241] = address(_28746)
                                        mem[_30851 + 189] = 40
                                        mem[_30851 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30851 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30851 + 314] = sha3(address(_28695), address(_28746))
                                        mem[_30851 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30851 + 261] = 85
                                        mem[_30851 + 378] = 0
                                        mem[64] = _30851 + 410
                                        mem[_30851 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30851 + 414] = _28951
                                        mem[_30851 + 446] = 0
                                        mem[_30851 + 478] = address(sha3(0, factoryAddress, _30854, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30851 + 510] = 128
                                        mem[_30851 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30851 + 574] = mem[s + _30851 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28951, 0, address(sha3(0, factoryAddress, _30854, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28746):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30851 + 221] = address(_28746)
                                        mem[_30851 + 241] = address(_28695)
                                        mem[_30851 + 189] = 40
                                        mem[_30851 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30851 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30851 + 314] = sha3(address(_28746), address(_28695))
                                        mem[_30851 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30851 + 261] = 85
                                        mem[_30851 + 378] = 0
                                        mem[64] = _30851 + 410
                                        mem[_30851 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30851 + 414] = _28951
                                        mem[_30851 + 446] = 0
                                        mem[_30851 + 478] = address(sha3(0, factoryAddress, _30854, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30851 + 510] = 128
                                        mem[_30851 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30851 + 574] = mem[s + _30851 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28951, 0, address(sha3(0, factoryAddress, _30854, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30858 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_28746)
                                    _30859 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30861 = sha3(mem[_30859 + 32 len mem[_30859]])
                                    mem[_30858 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30858 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30858 + 125] = _30861
                                    mem[_30858 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30858 + 72] = 85
                                    if address(_28695) == address(_28746):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30858 + 292 len 29]
                                    if address(_28695) < address(_28746):
                                        if not address(_28695):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30858 + 221] = address(_28695)
                                        mem[_30858 + 241] = address(_28746)
                                        mem[_30858 + 189] = 40
                                        mem[_30858 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30858 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30858 + 314] = sha3(address(_28695), address(_28746))
                                        mem[_30858 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30858 + 261] = 85
                                        mem[_30858 + 378] = 0
                                        mem[64] = _30858 + 410
                                        mem[_30858 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30858 + 414] = _28951
                                        mem[_30858 + 446] = 0
                                        mem[_30858 + 478] = address(sha3(0, factoryAddress, _30861, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30858 + 510] = 128
                                        mem[_30858 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30858 + 574] = mem[s + _30858 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28951, 0, address(sha3(0, factoryAddress, _30861, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28746):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30858 + 221] = address(_28746)
                                        mem[_30858 + 241] = address(_28695)
                                        mem[_30858 + 189] = 40
                                        mem[_30858 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30858 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30858 + 314] = sha3(address(_28746), address(_28695))
                                        mem[_30858 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30858 + 261] = 85
                                        mem[_30858 + 378] = 0
                                        mem[64] = _30858 + 410
                                        mem[_30858 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30858 + 414] = _28951
                                        mem[_30858 + 446] = 0
                                        mem[_30858 + 478] = address(sha3(0, factoryAddress, _30861, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30858 + 510] = 128
                                        mem[_30858 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30858 + 574] = mem[s + _30858 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28951, 0, address(sha3(0, factoryAddress, _30861, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * arg3.length) + 128]
                        _28952 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                        if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx + 1) + _9997 + 365 len 20]:
                            if idx >= mem[_9997 + 321] - 2:
                                if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9997 + 365 len 20] < mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    if not mem[(32 * idx) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30893 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_28746)
                                    _30894 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30896 = sha3(mem[_30894 + 32 len mem[_30894]])
                                    mem[_30893 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30893 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30893 + 125] = _30896
                                    mem[_30893 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30893 + 72] = 85
                                    mem[_30893 + 189] = 0
                                    mem[64] = _30893 + 221
                                    mem[_30893 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30893 + 225] = 0
                                    mem[_30893 + 257] = _28952
                                    mem[_30893 + 289] = arg4
                                    mem[_30893 + 321] = 128
                                    mem[_30893 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30893 + 385] = mem[s + _30893 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30896, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30896, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28952, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30900 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_28695)
                                    _30901 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30903 = sha3(mem[_30901 + 32 len mem[_30901]])
                                    mem[_30900 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30900 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30900 + 125] = _30903
                                    mem[_30900 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30900 + 72] = 85
                                    mem[_30900 + 189] = 0
                                    mem[64] = _30900 + 221
                                    mem[_30900 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30900 + 225] = 0
                                    mem[_30900 + 257] = _28952
                                    mem[_30900 + 289] = arg4
                                    mem[_30900 + 321] = 128
                                    mem[_30900 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30900 + 385] = mem[s + _30900 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30903, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30903, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28952, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9997 + 321]
                                _29129 = mem[(32 * idx + 2) + _9997 + 353]
                                if mem[(32 * idx + 1) + _9997 + 365 len 20] == mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9997 + 365 len 20] < mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30879 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_29129)
                                    _30880 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30882 = sha3(mem[_30880 + 32 len mem[_30880]])
                                    mem[_30879 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30879 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30879 + 125] = _30882
                                    mem[_30879 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30879 + 72] = 85
                                    if address(_28695) == address(_28746):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30879 + 292 len 29]
                                    if address(_28695) < address(_28746):
                                        if not address(_28695):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30879 + 221] = address(_28695)
                                        mem[_30879 + 241] = address(_28746)
                                        mem[_30879 + 189] = 40
                                        mem[_30879 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30879 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30879 + 314] = sha3(address(_28695), address(_28746))
                                        mem[_30879 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30879 + 261] = 85
                                        mem[_30879 + 378] = 0
                                        mem[64] = _30879 + 410
                                        mem[_30879 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30879 + 414] = 0
                                        mem[_30879 + 446] = _28952
                                        mem[_30879 + 478] = address(sha3(0, factoryAddress, _30882, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30879 + 510] = 128
                                        mem[_30879 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30879 + 574] = mem[s + _30879 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28952, address(sha3(0, factoryAddress, _30882, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28746):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30879 + 221] = address(_28746)
                                        mem[_30879 + 241] = address(_28695)
                                        mem[_30879 + 189] = 40
                                        mem[_30879 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30879 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30879 + 314] = sha3(address(_28746), address(_28695))
                                        mem[_30879 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30879 + 261] = 85
                                        mem[_30879 + 378] = 0
                                        mem[64] = _30879 + 410
                                        mem[_30879 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30879 + 414] = 0
                                        mem[_30879 + 446] = _28952
                                        mem[_30879 + 478] = address(sha3(0, factoryAddress, _30882, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30879 + 510] = 128
                                        mem[_30879 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30879 + 574] = mem[s + _30879 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28952, address(sha3(0, factoryAddress, _30882, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30886 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_28746)
                                    _30887 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30889 = sha3(mem[_30887 + 32 len mem[_30887]])
                                    mem[_30886 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30886 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30886 + 125] = _30889
                                    mem[_30886 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30886 + 72] = 85
                                    if address(_28695) == address(_28746):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30886 + 292 len 29]
                                    if address(_28695) < address(_28746):
                                        if not address(_28695):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30886 + 221] = address(_28695)
                                        mem[_30886 + 241] = address(_28746)
                                        mem[_30886 + 189] = 40
                                        mem[_30886 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30886 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30886 + 314] = sha3(address(_28695), address(_28746))
                                        mem[_30886 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30886 + 261] = 85
                                        mem[_30886 + 378] = 0
                                        mem[64] = _30886 + 410
                                        mem[_30886 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30886 + 414] = 0
                                        mem[_30886 + 446] = _28952
                                        mem[_30886 + 478] = address(sha3(0, factoryAddress, _30889, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30886 + 510] = 128
                                        mem[_30886 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30886 + 574] = mem[s + _30886 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28952, address(sha3(0, factoryAddress, _30889, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28746):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30886 + 221] = address(_28746)
                                        mem[_30886 + 241] = address(_28695)
                                        mem[_30886 + 189] = 40
                                        mem[_30886 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30886 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30886 + 314] = sha3(address(_28746), address(_28695))
                                        mem[_30886 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30886 + 261] = 85
                                        mem[_30886 + 378] = 0
                                        mem[64] = _30886 + 410
                                        mem[_30886 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30886 + 414] = 0
                                        mem[_30886 + 446] = _28952
                                        mem[_30886 + 478] = address(sha3(0, factoryAddress, _30889, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30886 + 510] = 128
                                        mem[_30886 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30886 + 574] = mem[s + _30886 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _28952, address(sha3(0, factoryAddress, _30889, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if idx >= mem[_9997 + 321] - 2:
                                if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _9997 + 365 len 20] < mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    if not mem[(32 * idx) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30921 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_28746)
                                    _30922 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30924 = sha3(mem[_30922 + 32 len mem[_30922]])
                                    mem[_30921 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30921 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30921 + 125] = _30924
                                    mem[_30921 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30921 + 72] = 85
                                    mem[_30921 + 189] = 0
                                    mem[64] = _30921 + 221
                                    mem[_30921 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30921 + 225] = _28952
                                    mem[_30921 + 257] = 0
                                    mem[_30921 + 289] = arg4
                                    mem[_30921 + 321] = 128
                                    mem[_30921 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30921 + 385] = mem[s + _30921 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30924, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30924, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28952, 0, address(arg4), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30928 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_28695)
                                    _30929 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30931 = sha3(mem[_30929 + 32 len mem[_30929]])
                                    mem[_30928 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30928 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30928 + 125] = _30931
                                    mem[_30928 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30928 + 72] = 85
                                    mem[_30928 + 189] = 0
                                    mem[64] = _30928 + 221
                                    mem[_30928 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30928 + 225] = _28952
                                    mem[_30928 + 257] = 0
                                    mem[_30928 + 289] = arg4
                                    mem[_30928 + 321] = 128
                                    mem[_30928 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30928 + 385] = mem[s + _30928 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _30931, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, _30931, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28952, 0, address(arg4), 128, 0
                            else:
                                require idx + 2 < mem[_9997 + 321]
                                _29130 = mem[(32 * idx + 2) + _9997 + 353]
                                if mem[(32 * idx + 1) + _9997 + 365 len 20] == mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _9997 + 365 len 20] < mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30907 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_29130)
                                    _30908 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30910 = sha3(mem[_30908 + 32 len mem[_30908]])
                                    mem[_30907 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30907 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30907 + 125] = _30910
                                    mem[_30907 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30907 + 72] = 85
                                    if address(_28695) == address(_28746):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30907 + 292 len 29]
                                    if address(_28695) < address(_28746):
                                        if not address(_28695):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30907 + 221] = address(_28695)
                                        mem[_30907 + 241] = address(_28746)
                                        mem[_30907 + 189] = 40
                                        mem[_30907 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30907 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30907 + 314] = sha3(address(_28695), address(_28746))
                                        mem[_30907 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30907 + 261] = 85
                                        mem[_30907 + 378] = 0
                                        mem[64] = _30907 + 410
                                        mem[_30907 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30907 + 414] = _28952
                                        mem[_30907 + 446] = 0
                                        mem[_30907 + 478] = address(sha3(0, factoryAddress, _30910, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30907 + 510] = 128
                                        mem[_30907 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30907 + 574] = mem[s + _30907 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28952, 0, address(sha3(0, factoryAddress, _30910, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28746):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30907 + 221] = address(_28746)
                                        mem[_30907 + 241] = address(_28695)
                                        mem[_30907 + 189] = 40
                                        mem[_30907 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30907 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30907 + 314] = sha3(address(_28746), address(_28695))
                                        mem[_30907 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30907 + 261] = 85
                                        mem[_30907 + 378] = 0
                                        mem[64] = _30907 + 410
                                        mem[_30907 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30907 + 414] = _28952
                                        mem[_30907 + 446] = 0
                                        mem[_30907 + 478] = address(sha3(0, factoryAddress, _30910, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30907 + 510] = 128
                                        mem[_30907 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30907 + 574] = mem[s + _30907 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28952, 0, address(sha3(0, factoryAddress, _30910, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _30914 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + 353])
                                    mem[mem[64] + 52] = address(_28746)
                                    _30915 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _30917 = sha3(mem[_30915 + 32 len mem[_30915]])
                                    mem[_30914 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30914 + 105] = Mask(160, 96, factoryAddress)
                                    mem[_30914 + 125] = _30917
                                    mem[_30914 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30914 + 72] = 85
                                    if address(_28695) == address(_28746):
                                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30914 + 292 len 29]
                                    if address(_28695) < address(_28746):
                                        if not address(_28695):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30914 + 221] = address(_28695)
                                        mem[_30914 + 241] = address(_28746)
                                        mem[_30914 + 189] = 40
                                        mem[_30914 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30914 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30914 + 314] = sha3(address(_28695), address(_28746))
                                        mem[_30914 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30914 + 261] = 85
                                        mem[_30914 + 378] = 0
                                        mem[64] = _30914 + 410
                                        mem[_30914 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30914 + 414] = _28952
                                        mem[_30914 + 446] = 0
                                        mem[_30914 + 478] = address(sha3(0, factoryAddress, _30917, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30914 + 510] = 128
                                        mem[_30914 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30914 + 574] = mem[s + _30914 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28695), address(_28746)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28952, 0, address(sha3(0, factoryAddress, _30917, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                    else:
                                        if not address(_28746):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_30914 + 221] = address(_28746)
                                        mem[_30914 + 241] = address(_28695)
                                        mem[_30914 + 189] = 40
                                        mem[_30914 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_30914 + 294] = Mask(160, 96, factoryAddress)
                                        mem[_30914 + 314] = sha3(address(_28746), address(_28695))
                                        mem[_30914 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                        mem[_30914 + 261] = 85
                                        mem[_30914 + 378] = 0
                                        mem[64] = _30914 + 410
                                        mem[_30914 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_30914 + 414] = _28952
                                        mem[_30914 + 446] = 0
                                        mem[_30914 + 478] = address(sha3(0, factoryAddress, _30917, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                        mem[_30914 + 510] = 128
                                        mem[_30914 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _30914 + 574] = mem[s + _30914 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                        call address(sha3(0, factoryAddress, sha3(address(_28746), address(_28695)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _28952, 0, address(sha3(0, factoryAddress, _30917, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
                _28745 = mem[(32 * arg3.length) + 128]
                mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
                return 32, mem[mem[64] + 32 len (32 * _28745) + 32]
            require mem[96] >= 32
            if not mem[128]:
                revert with 0, 
                            32,
                            49,
                            0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                            mem[_9997 + 438 len 7],
                            Mask(32, 64, _10025) >> 64,
                            mem[_9997 + 449 len 4]
            mem[64] = _9997 + (32 * arg3.length) + 353
            mem[_9997 + 321] = arg3.length
            mem[_9997 + 353 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
            mem[_9997 + (32 * arg3.length) + 353] = 0
            idx = 0
            while idx < arg3.length - 1:
                require idx < mem[_9997 + 321]
                _28697 = mem[(32 * idx) + _9997 + 353]
                require idx + 1 < mem[_9997 + 321]
                _28750 = mem[(32 * idx + 1) + _9997 + 353]
                if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx + 1) + _9997 + 365 len 20]:
                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + _9997 + 365 len 20] < mem[(32 * idx + 1) + _9997 + 365 len 20]:
                    if not mem[(32 * idx) + _9997 + 365 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * arg3.length) + 128]
                    _28953 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                    if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx) + _9997 + 365 len 20]:
                        if idx >= mem[_9997 + 321] - 2:
                            if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9997 + 365 len 20] < mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                if not mem[(32 * idx) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30949 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + 353])
                                mem[mem[64] + 52] = address(_28750)
                                _30950 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30952 = sha3(mem[_30950 + 32 len mem[_30950]])
                                mem[_30949 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30949 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30949 + 125] = _30952
                                mem[_30949 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30949 + 72] = 85
                                mem[_30949 + 189] = 0
                                mem[64] = _30949 + 221
                                mem[_30949 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30949 + 225] = 0
                                mem[_30949 + 257] = _28953
                                mem[_30949 + 289] = arg4
                                mem[_30949 + 321] = 128
                                mem[_30949 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30949 + 385] = mem[s + _30949 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30952, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30952, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28953, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30956 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                mem[mem[64] + 52] = address(_28697)
                                _30957 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30959 = sha3(mem[_30957 + 32 len mem[_30957]])
                                mem[_30956 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30956 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30956 + 125] = _30959
                                mem[_30956 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30956 + 72] = 85
                                mem[_30956 + 189] = 0
                                mem[64] = _30956 + 221
                                mem[_30956 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30956 + 225] = 0
                                mem[_30956 + 257] = _28953
                                mem[_30956 + 289] = arg4
                                mem[_30956 + 321] = 128
                                mem[_30956 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30956 + 385] = mem[s + _30956 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30959, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30959, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28953, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9997 + 321]
                            _29131 = mem[(32 * idx + 2) + _9997 + 353]
                            if mem[(32 * idx + 1) + _9997 + 365 len 20] == mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9997 + 365 len 20] < mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30935 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                mem[mem[64] + 52] = address(_29131)
                                _30936 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30938 = sha3(mem[_30936 + 32 len mem[_30936]])
                                mem[_30935 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30935 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30935 + 125] = _30938
                                mem[_30935 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30935 + 72] = 85
                                if address(_28697) == address(_28750):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30935 + 292 len 29]
                                if address(_28697) < address(_28750):
                                    if not address(_28697):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30935 + 221] = address(_28697)
                                    mem[_30935 + 241] = address(_28750)
                                    mem[_30935 + 189] = 40
                                    mem[_30935 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30935 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30935 + 314] = sha3(address(_28697), address(_28750))
                                    mem[_30935 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30935 + 261] = 85
                                    mem[_30935 + 378] = 0
                                    mem[64] = _30935 + 410
                                    mem[_30935 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30935 + 414] = 0
                                    mem[_30935 + 446] = _28953
                                    mem[_30935 + 478] = address(sha3(0, factoryAddress, _30938, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30935 + 510] = 128
                                    mem[_30935 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30935 + 574] = mem[s + _30935 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28953, address(sha3(0, factoryAddress, _30938, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28750):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30935 + 221] = address(_28750)
                                    mem[_30935 + 241] = address(_28697)
                                    mem[_30935 + 189] = 40
                                    mem[_30935 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30935 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30935 + 314] = sha3(address(_28750), address(_28697))
                                    mem[_30935 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30935 + 261] = 85
                                    mem[_30935 + 378] = 0
                                    mem[64] = _30935 + 410
                                    mem[_30935 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30935 + 414] = 0
                                    mem[_30935 + 446] = _28953
                                    mem[_30935 + 478] = address(sha3(0, factoryAddress, _30938, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30935 + 510] = 128
                                    mem[_30935 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30935 + 574] = mem[s + _30935 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28953, address(sha3(0, factoryAddress, _30938, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30942 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + 353])
                                mem[mem[64] + 52] = address(_28750)
                                _30943 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30945 = sha3(mem[_30943 + 32 len mem[_30943]])
                                mem[_30942 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30942 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30942 + 125] = _30945
                                mem[_30942 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30942 + 72] = 85
                                if address(_28697) == address(_28750):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30942 + 292 len 29]
                                if address(_28697) < address(_28750):
                                    if not address(_28697):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30942 + 221] = address(_28697)
                                    mem[_30942 + 241] = address(_28750)
                                    mem[_30942 + 189] = 40
                                    mem[_30942 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30942 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30942 + 314] = sha3(address(_28697), address(_28750))
                                    mem[_30942 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30942 + 261] = 85
                                    mem[_30942 + 378] = 0
                                    mem[64] = _30942 + 410
                                    mem[_30942 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30942 + 414] = 0
                                    mem[_30942 + 446] = _28953
                                    mem[_30942 + 478] = address(sha3(0, factoryAddress, _30945, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30942 + 510] = 128
                                    mem[_30942 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30942 + 574] = mem[s + _30942 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28953, address(sha3(0, factoryAddress, _30945, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28750):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30942 + 221] = address(_28750)
                                    mem[_30942 + 241] = address(_28697)
                                    mem[_30942 + 189] = 40
                                    mem[_30942 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30942 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30942 + 314] = sha3(address(_28750), address(_28697))
                                    mem[_30942 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30942 + 261] = 85
                                    mem[_30942 + 378] = 0
                                    mem[64] = _30942 + 410
                                    mem[_30942 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30942 + 414] = 0
                                    mem[_30942 + 446] = _28953
                                    mem[_30942 + 478] = address(sha3(0, factoryAddress, _30945, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30942 + 510] = 128
                                    mem[_30942 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30942 + 574] = mem[s + _30942 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28953, address(sha3(0, factoryAddress, _30945, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if idx >= mem[_9997 + 321] - 2:
                            if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9997 + 365 len 20] < mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                if not mem[(32 * idx) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30977 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + 353])
                                mem[mem[64] + 52] = address(_28750)
                                _30978 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30980 = sha3(mem[_30978 + 32 len mem[_30978]])
                                mem[_30977 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30977 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30977 + 125] = _30980
                                mem[_30977 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30977 + 72] = 85
                                mem[_30977 + 189] = 0
                                mem[64] = _30977 + 221
                                mem[_30977 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30977 + 225] = _28953
                                mem[_30977 + 257] = 0
                                mem[_30977 + 289] = arg4
                                mem[_30977 + 321] = 128
                                mem[_30977 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30977 + 385] = mem[s + _30977 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30980, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30980, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28953, 0, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30984 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                mem[mem[64] + 52] = address(_28697)
                                _30985 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30987 = sha3(mem[_30985 + 32 len mem[_30985]])
                                mem[_30984 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30984 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30984 + 125] = _30987
                                mem[_30984 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30984 + 72] = 85
                                mem[_30984 + 189] = 0
                                mem[64] = _30984 + 221
                                mem[_30984 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_30984 + 225] = _28953
                                mem[_30984 + 257] = 0
                                mem[_30984 + 289] = arg4
                                mem[_30984 + 321] = 128
                                mem[_30984 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _30984 + 385] = mem[s + _30984 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _30987, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _30987, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28953, 0, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9997 + 321]
                            _29132 = mem[(32 * idx + 2) + _9997 + 353]
                            if mem[(32 * idx + 1) + _9997 + 365 len 20] == mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9997 + 365 len 20] < mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30963 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                mem[mem[64] + 52] = address(_29132)
                                _30964 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30966 = sha3(mem[_30964 + 32 len mem[_30964]])
                                mem[_30963 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30963 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30963 + 125] = _30966
                                mem[_30963 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30963 + 72] = 85
                                if address(_28697) == address(_28750):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30963 + 292 len 29]
                                if address(_28697) < address(_28750):
                                    if not address(_28697):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30963 + 221] = address(_28697)
                                    mem[_30963 + 241] = address(_28750)
                                    mem[_30963 + 189] = 40
                                    mem[_30963 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30963 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30963 + 314] = sha3(address(_28697), address(_28750))
                                    mem[_30963 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30963 + 261] = 85
                                    mem[_30963 + 378] = 0
                                    mem[64] = _30963 + 410
                                    mem[_30963 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30963 + 414] = _28953
                                    mem[_30963 + 446] = 0
                                    mem[_30963 + 478] = address(sha3(0, factoryAddress, _30966, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30963 + 510] = 128
                                    mem[_30963 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30963 + 574] = mem[s + _30963 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28953, 0, address(sha3(0, factoryAddress, _30966, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28750):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30963 + 221] = address(_28750)
                                    mem[_30963 + 241] = address(_28697)
                                    mem[_30963 + 189] = 40
                                    mem[_30963 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30963 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30963 + 314] = sha3(address(_28750), address(_28697))
                                    mem[_30963 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30963 + 261] = 85
                                    mem[_30963 + 378] = 0
                                    mem[64] = _30963 + 410
                                    mem[_30963 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30963 + 414] = _28953
                                    mem[_30963 + 446] = 0
                                    mem[_30963 + 478] = address(sha3(0, factoryAddress, _30966, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30963 + 510] = 128
                                    mem[_30963 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30963 + 574] = mem[s + _30963 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28953, 0, address(sha3(0, factoryAddress, _30966, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30970 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + 353])
                                mem[mem[64] + 52] = address(_28750)
                                _30971 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30973 = sha3(mem[_30971 + 32 len mem[_30971]])
                                mem[_30970 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30970 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30970 + 125] = _30973
                                mem[_30970 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30970 + 72] = 85
                                if address(_28697) == address(_28750):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30970 + 292 len 29]
                                if address(_28697) < address(_28750):
                                    if not address(_28697):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30970 + 221] = address(_28697)
                                    mem[_30970 + 241] = address(_28750)
                                    mem[_30970 + 189] = 40
                                    mem[_30970 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30970 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30970 + 314] = sha3(address(_28697), address(_28750))
                                    mem[_30970 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30970 + 261] = 85
                                    mem[_30970 + 378] = 0
                                    mem[64] = _30970 + 410
                                    mem[_30970 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30970 + 414] = _28953
                                    mem[_30970 + 446] = 0
                                    mem[_30970 + 478] = address(sha3(0, factoryAddress, _30973, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30970 + 510] = 128
                                    mem[_30970 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30970 + 574] = mem[s + _30970 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28953, 0, address(sha3(0, factoryAddress, _30973, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28750):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30970 + 221] = address(_28750)
                                    mem[_30970 + 241] = address(_28697)
                                    mem[_30970 + 189] = 40
                                    mem[_30970 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30970 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30970 + 314] = sha3(address(_28750), address(_28697))
                                    mem[_30970 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30970 + 261] = 85
                                    mem[_30970 + 378] = 0
                                    mem[64] = _30970 + 410
                                    mem[_30970 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30970 + 414] = _28953
                                    mem[_30970 + 446] = 0
                                    mem[_30970 + 478] = address(sha3(0, factoryAddress, _30973, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30970 + 510] = 128
                                    mem[_30970 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30970 + 574] = mem[s + _30970 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28953, 0, address(sha3(0, factoryAddress, _30973, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * arg3.length) + 128]
                    _28954 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                    if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx + 1) + _9997 + 365 len 20]:
                        if idx >= mem[_9997 + 321] - 2:
                            if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9997 + 365 len 20] < mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                if not mem[(32 * idx) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31005 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + 353])
                                mem[mem[64] + 52] = address(_28750)
                                _31006 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31008 = sha3(mem[_31006 + 32 len mem[_31006]])
                                mem[_31005 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31005 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31005 + 125] = _31008
                                mem[_31005 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31005 + 72] = 85
                                mem[_31005 + 189] = 0
                                mem[64] = _31005 + 221
                                mem[_31005 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31005 + 225] = 0
                                mem[_31005 + 257] = _28954
                                mem[_31005 + 289] = arg4
                                mem[_31005 + 321] = 128
                                mem[_31005 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31005 + 385] = mem[s + _31005 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31008, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31008, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28954, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31012 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                mem[mem[64] + 52] = address(_28697)
                                _31013 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31015 = sha3(mem[_31013 + 32 len mem[_31013]])
                                mem[_31012 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31012 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31012 + 125] = _31015
                                mem[_31012 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31012 + 72] = 85
                                mem[_31012 + 189] = 0
                                mem[64] = _31012 + 221
                                mem[_31012 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31012 + 225] = 0
                                mem[_31012 + 257] = _28954
                                mem[_31012 + 289] = arg4
                                mem[_31012 + 321] = 128
                                mem[_31012 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31012 + 385] = mem[s + _31012 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31015, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31015, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28954, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9997 + 321]
                            _29133 = mem[(32 * idx + 2) + _9997 + 353]
                            if mem[(32 * idx + 1) + _9997 + 365 len 20] == mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9997 + 365 len 20] < mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30991 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                mem[mem[64] + 52] = address(_29133)
                                _30992 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _30994 = sha3(mem[_30992 + 32 len mem[_30992]])
                                mem[_30991 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30991 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30991 + 125] = _30994
                                mem[_30991 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30991 + 72] = 85
                                if address(_28697) == address(_28750):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30991 + 292 len 29]
                                if address(_28697) < address(_28750):
                                    if not address(_28697):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30991 + 221] = address(_28697)
                                    mem[_30991 + 241] = address(_28750)
                                    mem[_30991 + 189] = 40
                                    mem[_30991 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30991 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30991 + 314] = sha3(address(_28697), address(_28750))
                                    mem[_30991 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30991 + 261] = 85
                                    mem[_30991 + 378] = 0
                                    mem[64] = _30991 + 410
                                    mem[_30991 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30991 + 414] = 0
                                    mem[_30991 + 446] = _28954
                                    mem[_30991 + 478] = address(sha3(0, factoryAddress, _30994, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30991 + 510] = 128
                                    mem[_30991 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30991 + 574] = mem[s + _30991 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28954, address(sha3(0, factoryAddress, _30994, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28750):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30991 + 221] = address(_28750)
                                    mem[_30991 + 241] = address(_28697)
                                    mem[_30991 + 189] = 40
                                    mem[_30991 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30991 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30991 + 314] = sha3(address(_28750), address(_28697))
                                    mem[_30991 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30991 + 261] = 85
                                    mem[_30991 + 378] = 0
                                    mem[64] = _30991 + 410
                                    mem[_30991 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30991 + 414] = 0
                                    mem[_30991 + 446] = _28954
                                    mem[_30991 + 478] = address(sha3(0, factoryAddress, _30994, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30991 + 510] = 128
                                    mem[_30991 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30991 + 574] = mem[s + _30991 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28954, address(sha3(0, factoryAddress, _30994, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _30998 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + 353])
                                mem[mem[64] + 52] = address(_28750)
                                _30999 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31001 = sha3(mem[_30999 + 32 len mem[_30999]])
                                mem[_30998 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_30998 + 105] = Mask(160, 96, factoryAddress)
                                mem[_30998 + 125] = _31001
                                mem[_30998 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_30998 + 72] = 85
                                if address(_28697) == address(_28750):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30998 + 292 len 29]
                                if address(_28697) < address(_28750):
                                    if not address(_28697):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30998 + 221] = address(_28697)
                                    mem[_30998 + 241] = address(_28750)
                                    mem[_30998 + 189] = 40
                                    mem[_30998 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30998 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30998 + 314] = sha3(address(_28697), address(_28750))
                                    mem[_30998 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30998 + 261] = 85
                                    mem[_30998 + 378] = 0
                                    mem[64] = _30998 + 410
                                    mem[_30998 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30998 + 414] = 0
                                    mem[_30998 + 446] = _28954
                                    mem[_30998 + 478] = address(sha3(0, factoryAddress, _31001, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30998 + 510] = 128
                                    mem[_30998 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30998 + 574] = mem[s + _30998 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28954, address(sha3(0, factoryAddress, _31001, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28750):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_30998 + 221] = address(_28750)
                                    mem[_30998 + 241] = address(_28697)
                                    mem[_30998 + 189] = 40
                                    mem[_30998 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_30998 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_30998 + 314] = sha3(address(_28750), address(_28697))
                                    mem[_30998 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_30998 + 261] = 85
                                    mem[_30998 + 378] = 0
                                    mem[64] = _30998 + 410
                                    mem[_30998 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_30998 + 414] = 0
                                    mem[_30998 + 446] = _28954
                                    mem[_30998 + 478] = address(sha3(0, factoryAddress, _31001, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_30998 + 510] = 128
                                    mem[_30998 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _30998 + 574] = mem[s + _30998 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28954, address(sha3(0, factoryAddress, _31001, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if idx >= mem[_9997 + 321] - 2:
                            if mem[(32 * idx) + _9997 + 365 len 20] == mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9997 + 365 len 20] < mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                if not mem[(32 * idx) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31033 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + 353])
                                mem[mem[64] + 52] = address(_28750)
                                _31034 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31036 = sha3(mem[_31034 + 32 len mem[_31034]])
                                mem[_31033 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31033 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31033 + 125] = _31036
                                mem[_31033 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31033 + 72] = 85
                                mem[_31033 + 189] = 0
                                mem[64] = _31033 + 221
                                mem[_31033 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31033 + 225] = _28954
                                mem[_31033 + 257] = 0
                                mem[_31033 + 289] = arg4
                                mem[_31033 + 321] = 128
                                mem[_31033 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31033 + 385] = mem[s + _31033 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31036, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31036, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28954, 0, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31040 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                mem[mem[64] + 52] = address(_28697)
                                _31041 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31043 = sha3(mem[_31041 + 32 len mem[_31041]])
                                mem[_31040 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31040 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31040 + 125] = _31043
                                mem[_31040 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31040 + 72] = 85
                                mem[_31040 + 189] = 0
                                mem[64] = _31040 + 221
                                mem[_31040 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31040 + 225] = _28954
                                mem[_31040 + 257] = 0
                                mem[_31040 + 289] = arg4
                                mem[_31040 + 321] = 128
                                mem[_31040 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31040 + 385] = mem[s + _31040 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31043, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31043, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28954, 0, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9997 + 321]
                            _29134 = mem[(32 * idx + 2) + _9997 + 353]
                            if mem[(32 * idx + 1) + _9997 + 365 len 20] == mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9997 + 365 len 20] < mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31019 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + 353])
                                mem[mem[64] + 52] = address(_29134)
                                _31020 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31022 = sha3(mem[_31020 + 32 len mem[_31020]])
                                mem[_31019 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31019 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31019 + 125] = _31022
                                mem[_31019 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31019 + 72] = 85
                                if address(_28697) == address(_28750):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31019 + 292 len 29]
                                if address(_28697) < address(_28750):
                                    if not address(_28697):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31019 + 221] = address(_28697)
                                    mem[_31019 + 241] = address(_28750)
                                    mem[_31019 + 189] = 40
                                    mem[_31019 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31019 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31019 + 314] = sha3(address(_28697), address(_28750))
                                    mem[_31019 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31019 + 261] = 85
                                    mem[_31019 + 378] = 0
                                    mem[64] = _31019 + 410
                                    mem[_31019 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31019 + 414] = _28954
                                    mem[_31019 + 446] = 0
                                    mem[_31019 + 478] = address(sha3(0, factoryAddress, _31022, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31019 + 510] = 128
                                    mem[_31019 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31019 + 574] = mem[s + _31019 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28954, 0, address(sha3(0, factoryAddress, _31022, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28750):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31019 + 221] = address(_28750)
                                    mem[_31019 + 241] = address(_28697)
                                    mem[_31019 + 189] = 40
                                    mem[_31019 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31019 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31019 + 314] = sha3(address(_28750), address(_28697))
                                    mem[_31019 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31019 + 261] = 85
                                    mem[_31019 + 378] = 0
                                    mem[64] = _31019 + 410
                                    mem[_31019 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31019 + 414] = _28954
                                    mem[_31019 + 446] = 0
                                    mem[_31019 + 478] = address(sha3(0, factoryAddress, _31022, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31019 + 510] = 128
                                    mem[_31019 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31019 + 574] = mem[s + _31019 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28954, 0, address(sha3(0, factoryAddress, _31022, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9997 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31026 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + 353])
                                mem[mem[64] + 52] = address(_28750)
                                _31027 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31029 = sha3(mem[_31027 + 32 len mem[_31027]])
                                mem[_31026 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31026 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31026 + 125] = _31029
                                mem[_31026 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31026 + 72] = 85
                                if address(_28697) == address(_28750):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31026 + 292 len 29]
                                if address(_28697) < address(_28750):
                                    if not address(_28697):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31026 + 221] = address(_28697)
                                    mem[_31026 + 241] = address(_28750)
                                    mem[_31026 + 189] = 40
                                    mem[_31026 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31026 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31026 + 314] = sha3(address(_28697), address(_28750))
                                    mem[_31026 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31026 + 261] = 85
                                    mem[_31026 + 378] = 0
                                    mem[64] = _31026 + 410
                                    mem[_31026 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31026 + 414] = _28954
                                    mem[_31026 + 446] = 0
                                    mem[_31026 + 478] = address(sha3(0, factoryAddress, _31029, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31026 + 510] = 128
                                    mem[_31026 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31026 + 574] = mem[s + _31026 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28697), address(_28750)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28954, 0, address(sha3(0, factoryAddress, _31029, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28750):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31026 + 221] = address(_28750)
                                    mem[_31026 + 241] = address(_28697)
                                    mem[_31026 + 189] = 40
                                    mem[_31026 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31026 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31026 + 314] = sha3(address(_28750), address(_28697))
                                    mem[_31026 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31026 + 261] = 85
                                    mem[_31026 + 378] = 0
                                    mem[64] = _31026 + 410
                                    mem[_31026 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31026 + 414] = _28954
                                    mem[_31026 + 446] = 0
                                    mem[_31026 + 478] = address(sha3(0, factoryAddress, _31029, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31026 + 510] = 128
                                    mem[_31026 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31026 + 574] = mem[s + _31026 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28750), address(_28697)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28954, 0, address(sha3(0, factoryAddress, _31029, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
            _28749 = mem[(32 * arg3.length) + 128]
            mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _28749) + 32]
        mem[_9997 + 321] = return_data.size
        mem[_9997 + 353 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 
                        32,
                        49,
                        0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                        mem[_9997 + ceil32(return_data.size) + 439 len 15]
        if not return_data.size:
            mem[64] = _9997 + ceil32(return_data.size) + (32 * arg3.length) + 354
            mem[_9997 + ceil32(return_data.size) + 322] = arg3.length
            mem[_9997 + ceil32(return_data.size) + 354 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
            mem[_9997 + ceil32(return_data.size) + (32 * arg3.length) + 354] = 0
            idx = 0
            while idx < arg3.length - 1:
                require idx < mem[_9997 + ceil32(return_data.size) + 322]
                _28699 = mem[(32 * idx) + _9997 + ceil32(return_data.size) + 354]
                require idx + 1 < mem[_9997 + ceil32(return_data.size) + 322]
                _28754 = mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354]
                if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                    if not mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * arg3.length) + 128]
                    _28955 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                    if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20]:
                        if idx >= mem[_9997 + ceil32(return_data.size) + 322] - 2:
                            if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31061 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28754)
                                _31062 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31064 = sha3(mem[_31062 + 32 len mem[_31062]])
                                mem[_31061 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31061 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31061 + 125] = _31064
                                mem[_31061 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31061 + 72] = 85
                                mem[_31061 + 189] = 0
                                mem[64] = _31061 + 221
                                mem[_31061 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31061 + 225] = 0
                                mem[_31061 + 257] = _28955
                                mem[_31061 + 289] = arg4
                                mem[_31061 + 321] = 128
                                mem[_31061 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31061 + 385] = mem[s + _31061 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31064, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31064, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28955, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31068 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28699)
                                _31069 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31071 = sha3(mem[_31069 + 32 len mem[_31069]])
                                mem[_31068 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31068 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31068 + 125] = _31071
                                mem[_31068 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31068 + 72] = 85
                                mem[_31068 + 189] = 0
                                mem[64] = _31068 + 221
                                mem[_31068 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31068 + 225] = 0
                                mem[_31068 + 257] = _28955
                                mem[_31068 + 289] = arg4
                                mem[_31068 + 321] = 128
                                mem[_31068 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31068 + 385] = mem[s + _31068 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31071, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31071, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28955, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9997 + ceil32(return_data.size) + 322]
                            _29135 = mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354]
                            if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31047 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_29135)
                                _31048 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31050 = sha3(mem[_31048 + 32 len mem[_31048]])
                                mem[_31047 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31047 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31047 + 125] = _31050
                                mem[_31047 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31047 + 72] = 85
                                if address(_28699) == address(_28754):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31047 + 292 len 29]
                                if address(_28699) < address(_28754):
                                    if not address(_28699):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31047 + 221] = address(_28699)
                                    mem[_31047 + 241] = address(_28754)
                                    mem[_31047 + 189] = 40
                                    mem[_31047 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31047 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31047 + 314] = sha3(address(_28699), address(_28754))
                                    mem[_31047 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31047 + 261] = 85
                                    mem[_31047 + 378] = 0
                                    mem[64] = _31047 + 410
                                    mem[_31047 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31047 + 414] = 0
                                    mem[_31047 + 446] = _28955
                                    mem[_31047 + 478] = address(sha3(0, factoryAddress, _31050, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31047 + 510] = 128
                                    mem[_31047 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31047 + 574] = mem[s + _31047 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28955, address(sha3(0, factoryAddress, _31050, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28754):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31047 + 221] = address(_28754)
                                    mem[_31047 + 241] = address(_28699)
                                    mem[_31047 + 189] = 40
                                    mem[_31047 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31047 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31047 + 314] = sha3(address(_28754), address(_28699))
                                    mem[_31047 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31047 + 261] = 85
                                    mem[_31047 + 378] = 0
                                    mem[64] = _31047 + 410
                                    mem[_31047 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31047 + 414] = 0
                                    mem[_31047 + 446] = _28955
                                    mem[_31047 + 478] = address(sha3(0, factoryAddress, _31050, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31047 + 510] = 128
                                    mem[_31047 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31047 + 574] = mem[s + _31047 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28955, address(sha3(0, factoryAddress, _31050, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31054 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28754)
                                _31055 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31057 = sha3(mem[_31055 + 32 len mem[_31055]])
                                mem[_31054 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31054 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31054 + 125] = _31057
                                mem[_31054 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31054 + 72] = 85
                                if address(_28699) == address(_28754):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31054 + 292 len 29]
                                if address(_28699) < address(_28754):
                                    if not address(_28699):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31054 + 221] = address(_28699)
                                    mem[_31054 + 241] = address(_28754)
                                    mem[_31054 + 189] = 40
                                    mem[_31054 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31054 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31054 + 314] = sha3(address(_28699), address(_28754))
                                    mem[_31054 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31054 + 261] = 85
                                    mem[_31054 + 378] = 0
                                    mem[64] = _31054 + 410
                                    mem[_31054 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31054 + 414] = 0
                                    mem[_31054 + 446] = _28955
                                    mem[_31054 + 478] = address(sha3(0, factoryAddress, _31057, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31054 + 510] = 128
                                    mem[_31054 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31054 + 574] = mem[s + _31054 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28955, address(sha3(0, factoryAddress, _31057, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28754):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31054 + 221] = address(_28754)
                                    mem[_31054 + 241] = address(_28699)
                                    mem[_31054 + 189] = 40
                                    mem[_31054 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31054 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31054 + 314] = sha3(address(_28754), address(_28699))
                                    mem[_31054 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31054 + 261] = 85
                                    mem[_31054 + 378] = 0
                                    mem[64] = _31054 + 410
                                    mem[_31054 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31054 + 414] = 0
                                    mem[_31054 + 446] = _28955
                                    mem[_31054 + 478] = address(sha3(0, factoryAddress, _31057, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31054 + 510] = 128
                                    mem[_31054 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31054 + 574] = mem[s + _31054 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28955, address(sha3(0, factoryAddress, _31057, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if idx >= mem[_9997 + ceil32(return_data.size) + 322] - 2:
                            if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31089 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28754)
                                _31090 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31092 = sha3(mem[_31090 + 32 len mem[_31090]])
                                mem[_31089 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31089 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31089 + 125] = _31092
                                mem[_31089 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31089 + 72] = 85
                                mem[_31089 + 189] = 0
                                mem[64] = _31089 + 221
                                mem[_31089 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31089 + 225] = _28955
                                mem[_31089 + 257] = 0
                                mem[_31089 + 289] = arg4
                                mem[_31089 + 321] = 128
                                mem[_31089 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31089 + 385] = mem[s + _31089 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31092, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31092, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28955, 0, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31096 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28699)
                                _31097 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31099 = sha3(mem[_31097 + 32 len mem[_31097]])
                                mem[_31096 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31096 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31096 + 125] = _31099
                                mem[_31096 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31096 + 72] = 85
                                mem[_31096 + 189] = 0
                                mem[64] = _31096 + 221
                                mem[_31096 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31096 + 225] = _28955
                                mem[_31096 + 257] = 0
                                mem[_31096 + 289] = arg4
                                mem[_31096 + 321] = 128
                                mem[_31096 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31096 + 385] = mem[s + _31096 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31099, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31099, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28955, 0, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9997 + ceil32(return_data.size) + 322]
                            _29136 = mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354]
                            if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31075 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_29136)
                                _31076 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31078 = sha3(mem[_31076 + 32 len mem[_31076]])
                                mem[_31075 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31075 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31075 + 125] = _31078
                                mem[_31075 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31075 + 72] = 85
                                if address(_28699) == address(_28754):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31075 + 292 len 29]
                                if address(_28699) < address(_28754):
                                    if not address(_28699):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31075 + 221] = address(_28699)
                                    mem[_31075 + 241] = address(_28754)
                                    mem[_31075 + 189] = 40
                                    mem[_31075 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31075 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31075 + 314] = sha3(address(_28699), address(_28754))
                                    mem[_31075 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31075 + 261] = 85
                                    mem[_31075 + 378] = 0
                                    mem[64] = _31075 + 410
                                    mem[_31075 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31075 + 414] = _28955
                                    mem[_31075 + 446] = 0
                                    mem[_31075 + 478] = address(sha3(0, factoryAddress, _31078, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31075 + 510] = 128
                                    mem[_31075 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31075 + 574] = mem[s + _31075 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28955, 0, address(sha3(0, factoryAddress, _31078, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28754):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31075 + 221] = address(_28754)
                                    mem[_31075 + 241] = address(_28699)
                                    mem[_31075 + 189] = 40
                                    mem[_31075 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31075 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31075 + 314] = sha3(address(_28754), address(_28699))
                                    mem[_31075 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31075 + 261] = 85
                                    mem[_31075 + 378] = 0
                                    mem[64] = _31075 + 410
                                    mem[_31075 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31075 + 414] = _28955
                                    mem[_31075 + 446] = 0
                                    mem[_31075 + 478] = address(sha3(0, factoryAddress, _31078, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31075 + 510] = 128
                                    mem[_31075 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31075 + 574] = mem[s + _31075 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28955, 0, address(sha3(0, factoryAddress, _31078, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31082 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28754)
                                _31083 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31085 = sha3(mem[_31083 + 32 len mem[_31083]])
                                mem[_31082 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31082 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31082 + 125] = _31085
                                mem[_31082 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31082 + 72] = 85
                                if address(_28699) == address(_28754):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31082 + 292 len 29]
                                if address(_28699) < address(_28754):
                                    if not address(_28699):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31082 + 221] = address(_28699)
                                    mem[_31082 + 241] = address(_28754)
                                    mem[_31082 + 189] = 40
                                    mem[_31082 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31082 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31082 + 314] = sha3(address(_28699), address(_28754))
                                    mem[_31082 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31082 + 261] = 85
                                    mem[_31082 + 378] = 0
                                    mem[64] = _31082 + 410
                                    mem[_31082 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31082 + 414] = _28955
                                    mem[_31082 + 446] = 0
                                    mem[_31082 + 478] = address(sha3(0, factoryAddress, _31085, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31082 + 510] = 128
                                    mem[_31082 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31082 + 574] = mem[s + _31082 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28955, 0, address(sha3(0, factoryAddress, _31085, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28754):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31082 + 221] = address(_28754)
                                    mem[_31082 + 241] = address(_28699)
                                    mem[_31082 + 189] = 40
                                    mem[_31082 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31082 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31082 + 314] = sha3(address(_28754), address(_28699))
                                    mem[_31082 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31082 + 261] = 85
                                    mem[_31082 + 378] = 0
                                    mem[64] = _31082 + 410
                                    mem[_31082 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31082 + 414] = _28955
                                    mem[_31082 + 446] = 0
                                    mem[_31082 + 478] = address(sha3(0, factoryAddress, _31085, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31082 + 510] = 128
                                    mem[_31082 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31082 + 574] = mem[s + _31082 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28955, 0, address(sha3(0, factoryAddress, _31085, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * arg3.length) + 128]
                    _28956 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                    if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                        if idx >= mem[_9997 + ceil32(return_data.size) + 322] - 2:
                            if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31117 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28754)
                                _31118 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31120 = sha3(mem[_31118 + 32 len mem[_31118]])
                                mem[_31117 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31117 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31117 + 125] = _31120
                                mem[_31117 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31117 + 72] = 85
                                mem[_31117 + 189] = 0
                                mem[64] = _31117 + 221
                                mem[_31117 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31117 + 225] = 0
                                mem[_31117 + 257] = _28956
                                mem[_31117 + 289] = arg4
                                mem[_31117 + 321] = 128
                                mem[_31117 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31117 + 385] = mem[s + _31117 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31120, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31120, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28956, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31124 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28699)
                                _31125 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31127 = sha3(mem[_31125 + 32 len mem[_31125]])
                                mem[_31124 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31124 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31124 + 125] = _31127
                                mem[_31124 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31124 + 72] = 85
                                mem[_31124 + 189] = 0
                                mem[64] = _31124 + 221
                                mem[_31124 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31124 + 225] = 0
                                mem[_31124 + 257] = _28956
                                mem[_31124 + 289] = arg4
                                mem[_31124 + 321] = 128
                                mem[_31124 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31124 + 385] = mem[s + _31124 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31127, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31127, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28956, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9997 + ceil32(return_data.size) + 322]
                            _29137 = mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354]
                            if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31103 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_29137)
                                _31104 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31106 = sha3(mem[_31104 + 32 len mem[_31104]])
                                mem[_31103 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31103 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31103 + 125] = _31106
                                mem[_31103 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31103 + 72] = 85
                                if address(_28699) == address(_28754):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31103 + 292 len 29]
                                if address(_28699) < address(_28754):
                                    if not address(_28699):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31103 + 221] = address(_28699)
                                    mem[_31103 + 241] = address(_28754)
                                    mem[_31103 + 189] = 40
                                    mem[_31103 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31103 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31103 + 314] = sha3(address(_28699), address(_28754))
                                    mem[_31103 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31103 + 261] = 85
                                    mem[_31103 + 378] = 0
                                    mem[64] = _31103 + 410
                                    mem[_31103 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31103 + 414] = 0
                                    mem[_31103 + 446] = _28956
                                    mem[_31103 + 478] = address(sha3(0, factoryAddress, _31106, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31103 + 510] = 128
                                    mem[_31103 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31103 + 574] = mem[s + _31103 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28956, address(sha3(0, factoryAddress, _31106, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28754):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31103 + 221] = address(_28754)
                                    mem[_31103 + 241] = address(_28699)
                                    mem[_31103 + 189] = 40
                                    mem[_31103 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31103 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31103 + 314] = sha3(address(_28754), address(_28699))
                                    mem[_31103 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31103 + 261] = 85
                                    mem[_31103 + 378] = 0
                                    mem[64] = _31103 + 410
                                    mem[_31103 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31103 + 414] = 0
                                    mem[_31103 + 446] = _28956
                                    mem[_31103 + 478] = address(sha3(0, factoryAddress, _31106, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31103 + 510] = 128
                                    mem[_31103 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31103 + 574] = mem[s + _31103 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28956, address(sha3(0, factoryAddress, _31106, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31110 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28754)
                                _31111 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31113 = sha3(mem[_31111 + 32 len mem[_31111]])
                                mem[_31110 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31110 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31110 + 125] = _31113
                                mem[_31110 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31110 + 72] = 85
                                if address(_28699) == address(_28754):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31110 + 292 len 29]
                                if address(_28699) < address(_28754):
                                    if not address(_28699):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31110 + 221] = address(_28699)
                                    mem[_31110 + 241] = address(_28754)
                                    mem[_31110 + 189] = 40
                                    mem[_31110 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31110 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31110 + 314] = sha3(address(_28699), address(_28754))
                                    mem[_31110 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31110 + 261] = 85
                                    mem[_31110 + 378] = 0
                                    mem[64] = _31110 + 410
                                    mem[_31110 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31110 + 414] = 0
                                    mem[_31110 + 446] = _28956
                                    mem[_31110 + 478] = address(sha3(0, factoryAddress, _31113, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31110 + 510] = 128
                                    mem[_31110 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31110 + 574] = mem[s + _31110 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28956, address(sha3(0, factoryAddress, _31113, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28754):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31110 + 221] = address(_28754)
                                    mem[_31110 + 241] = address(_28699)
                                    mem[_31110 + 189] = 40
                                    mem[_31110 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31110 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31110 + 314] = sha3(address(_28754), address(_28699))
                                    mem[_31110 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31110 + 261] = 85
                                    mem[_31110 + 378] = 0
                                    mem[64] = _31110 + 410
                                    mem[_31110 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31110 + 414] = 0
                                    mem[_31110 + 446] = _28956
                                    mem[_31110 + 478] = address(sha3(0, factoryAddress, _31113, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31110 + 510] = 128
                                    mem[_31110 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31110 + 574] = mem[s + _31110 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28956, address(sha3(0, factoryAddress, _31113, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if idx >= mem[_9997 + ceil32(return_data.size) + 322] - 2:
                            if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31145 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28754)
                                _31146 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31148 = sha3(mem[_31146 + 32 len mem[_31146]])
                                mem[_31145 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31145 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31145 + 125] = _31148
                                mem[_31145 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31145 + 72] = 85
                                mem[_31145 + 189] = 0
                                mem[64] = _31145 + 221
                                mem[_31145 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31145 + 225] = _28956
                                mem[_31145 + 257] = 0
                                mem[_31145 + 289] = arg4
                                mem[_31145 + 321] = 128
                                mem[_31145 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31145 + 385] = mem[s + _31145 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31148, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31148, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28956, 0, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31152 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28699)
                                _31153 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31155 = sha3(mem[_31153 + 32 len mem[_31153]])
                                mem[_31152 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31152 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31152 + 125] = _31155
                                mem[_31152 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31152 + 72] = 85
                                mem[_31152 + 189] = 0
                                mem[64] = _31152 + 221
                                mem[_31152 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31152 + 225] = _28956
                                mem[_31152 + 257] = 0
                                mem[_31152 + 289] = arg4
                                mem[_31152 + 321] = 128
                                mem[_31152 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31152 + 385] = mem[s + _31152 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31155, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31155, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28956, 0, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_9997 + ceil32(return_data.size) + 322]
                            _29138 = mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354]
                            if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31131 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_29138)
                                _31132 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31134 = sha3(mem[_31132 + 32 len mem[_31132]])
                                mem[_31131 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31131 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31131 + 125] = _31134
                                mem[_31131 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31131 + 72] = 85
                                if address(_28699) == address(_28754):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31131 + 292 len 29]
                                if address(_28699) < address(_28754):
                                    if not address(_28699):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31131 + 221] = address(_28699)
                                    mem[_31131 + 241] = address(_28754)
                                    mem[_31131 + 189] = 40
                                    mem[_31131 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31131 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31131 + 314] = sha3(address(_28699), address(_28754))
                                    mem[_31131 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31131 + 261] = 85
                                    mem[_31131 + 378] = 0
                                    mem[64] = _31131 + 410
                                    mem[_31131 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31131 + 414] = _28956
                                    mem[_31131 + 446] = 0
                                    mem[_31131 + 478] = address(sha3(0, factoryAddress, _31134, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31131 + 510] = 128
                                    mem[_31131 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31131 + 574] = mem[s + _31131 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28956, 0, address(sha3(0, factoryAddress, _31134, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28754):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31131 + 221] = address(_28754)
                                    mem[_31131 + 241] = address(_28699)
                                    mem[_31131 + 189] = 40
                                    mem[_31131 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31131 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31131 + 314] = sha3(address(_28754), address(_28699))
                                    mem[_31131 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31131 + 261] = 85
                                    mem[_31131 + 378] = 0
                                    mem[64] = _31131 + 410
                                    mem[_31131 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31131 + 414] = _28956
                                    mem[_31131 + 446] = 0
                                    mem[_31131 + 478] = address(sha3(0, factoryAddress, _31134, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31131 + 510] = 128
                                    mem[_31131 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31131 + 574] = mem[s + _31131 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28956, 0, address(sha3(0, factoryAddress, _31134, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31138 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_28754)
                                _31139 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31141 = sha3(mem[_31139 + 32 len mem[_31139]])
                                mem[_31138 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31138 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31138 + 125] = _31141
                                mem[_31138 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31138 + 72] = 85
                                if address(_28699) == address(_28754):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31138 + 292 len 29]
                                if address(_28699) < address(_28754):
                                    if not address(_28699):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31138 + 221] = address(_28699)
                                    mem[_31138 + 241] = address(_28754)
                                    mem[_31138 + 189] = 40
                                    mem[_31138 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31138 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31138 + 314] = sha3(address(_28699), address(_28754))
                                    mem[_31138 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31138 + 261] = 85
                                    mem[_31138 + 378] = 0
                                    mem[64] = _31138 + 410
                                    mem[_31138 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31138 + 414] = _28956
                                    mem[_31138 + 446] = 0
                                    mem[_31138 + 478] = address(sha3(0, factoryAddress, _31141, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31138 + 510] = 128
                                    mem[_31138 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31138 + 574] = mem[s + _31138 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28699), address(_28754)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28956, 0, address(sha3(0, factoryAddress, _31141, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28754):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31138 + 221] = address(_28754)
                                    mem[_31138 + 241] = address(_28699)
                                    mem[_31138 + 189] = 40
                                    mem[_31138 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31138 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31138 + 314] = sha3(address(_28754), address(_28699))
                                    mem[_31138 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31138 + 261] = 85
                                    mem[_31138 + 378] = 0
                                    mem[64] = _31138 + 410
                                    mem[_31138 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31138 + 414] = _28956
                                    mem[_31138 + 446] = 0
                                    mem[_31138 + 478] = address(sha3(0, factoryAddress, _31141, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31138 + 510] = 128
                                    mem[_31138 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31138 + 574] = mem[s + _31138 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28754), address(_28699)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28956, 0, address(sha3(0, factoryAddress, _31141, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
            _28753 = mem[(32 * arg3.length) + 128]
            mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _28753) + 32]
        require return_data.size >= 32
        if not mem[_9997 + 353]:
            revert with 0, 
                        32,
                        49,
                        0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                        mem[_9997 + ceil32(return_data.size) + 439 len 15]
        mem[64] = _9997 + ceil32(return_data.size) + (32 * arg3.length) + 354
        mem[_9997 + ceil32(return_data.size) + 322] = arg3.length
        mem[_9997 + ceil32(return_data.size) + 354 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
        mem[_9997 + ceil32(return_data.size) + (32 * arg3.length) + 354] = 0
        idx = 0
        while idx < arg3.length - 1:
            require idx < mem[_9997 + ceil32(return_data.size) + 322]
            _28701 = mem[(32 * idx) + _9997 + ceil32(return_data.size) + 354]
            require idx + 1 < mem[_9997 + ceil32(return_data.size) + 322]
            _28758 = mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354]
            if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                if not mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * arg3.length) + 128]
                _28957 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20]:
                    if idx >= mem[_9997 + ceil32(return_data.size) + 322] - 2:
                        if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31173 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28758)
                            _31174 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31176 = sha3(mem[_31174 + 32 len mem[_31174]])
                            mem[_31173 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31173 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31173 + 125] = _31176
                            mem[_31173 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31173 + 72] = 85
                            mem[_31173 + 189] = 0
                            mem[64] = _31173 + 221
                            mem[_31173 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31173 + 225] = 0
                            mem[_31173 + 257] = _28957
                            mem[_31173 + 289] = arg4
                            mem[_31173 + 321] = 128
                            mem[_31173 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31173 + 385] = mem[s + _31173 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31176, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31176, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28957, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31180 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28701)
                            _31181 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31183 = sha3(mem[_31181 + 32 len mem[_31181]])
                            mem[_31180 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31180 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31180 + 125] = _31183
                            mem[_31180 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31180 + 72] = 85
                            mem[_31180 + 189] = 0
                            mem[64] = _31180 + 221
                            mem[_31180 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31180 + 225] = 0
                            mem[_31180 + 257] = _28957
                            mem[_31180 + 289] = arg4
                            mem[_31180 + 321] = 128
                            mem[_31180 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31180 + 385] = mem[s + _31180 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31183, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31183, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28957, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_9997 + ceil32(return_data.size) + 322]
                        _29139 = mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354]
                        if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31159 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_29139)
                            _31160 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31162 = sha3(mem[_31160 + 32 len mem[_31160]])
                            mem[_31159 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31159 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31159 + 125] = _31162
                            mem[_31159 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31159 + 72] = 85
                            if address(_28701) == address(_28758):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31159 + 292 len 29]
                            if address(_28701) < address(_28758):
                                if not address(_28701):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31159 + 221] = address(_28701)
                                mem[_31159 + 241] = address(_28758)
                                mem[_31159 + 189] = 40
                                mem[_31159 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31159 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31159 + 314] = sha3(address(_28701), address(_28758))
                                mem[_31159 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31159 + 261] = 85
                                mem[_31159 + 378] = 0
                                mem[64] = _31159 + 410
                                mem[_31159 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31159 + 414] = 0
                                mem[_31159 + 446] = _28957
                                mem[_31159 + 478] = address(sha3(0, factoryAddress, _31162, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31159 + 510] = 128
                                mem[_31159 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31159 + 574] = mem[s + _31159 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28957, address(sha3(0, factoryAddress, _31162, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28758):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31159 + 221] = address(_28758)
                                mem[_31159 + 241] = address(_28701)
                                mem[_31159 + 189] = 40
                                mem[_31159 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31159 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31159 + 314] = sha3(address(_28758), address(_28701))
                                mem[_31159 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31159 + 261] = 85
                                mem[_31159 + 378] = 0
                                mem[64] = _31159 + 410
                                mem[_31159 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31159 + 414] = 0
                                mem[_31159 + 446] = _28957
                                mem[_31159 + 478] = address(sha3(0, factoryAddress, _31162, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31159 + 510] = 128
                                mem[_31159 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31159 + 574] = mem[s + _31159 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28957, address(sha3(0, factoryAddress, _31162, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31166 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28758)
                            _31167 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31169 = sha3(mem[_31167 + 32 len mem[_31167]])
                            mem[_31166 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31166 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31166 + 125] = _31169
                            mem[_31166 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31166 + 72] = 85
                            if address(_28701) == address(_28758):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31166 + 292 len 29]
                            if address(_28701) < address(_28758):
                                if not address(_28701):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31166 + 221] = address(_28701)
                                mem[_31166 + 241] = address(_28758)
                                mem[_31166 + 189] = 40
                                mem[_31166 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31166 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31166 + 314] = sha3(address(_28701), address(_28758))
                                mem[_31166 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31166 + 261] = 85
                                mem[_31166 + 378] = 0
                                mem[64] = _31166 + 410
                                mem[_31166 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31166 + 414] = 0
                                mem[_31166 + 446] = _28957
                                mem[_31166 + 478] = address(sha3(0, factoryAddress, _31169, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31166 + 510] = 128
                                mem[_31166 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31166 + 574] = mem[s + _31166 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28957, address(sha3(0, factoryAddress, _31169, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28758):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31166 + 221] = address(_28758)
                                mem[_31166 + 241] = address(_28701)
                                mem[_31166 + 189] = 40
                                mem[_31166 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31166 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31166 + 314] = sha3(address(_28758), address(_28701))
                                mem[_31166 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31166 + 261] = 85
                                mem[_31166 + 378] = 0
                                mem[64] = _31166 + 410
                                mem[_31166 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31166 + 414] = 0
                                mem[_31166 + 446] = _28957
                                mem[_31166 + 478] = address(sha3(0, factoryAddress, _31169, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31166 + 510] = 128
                                mem[_31166 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31166 + 574] = mem[s + _31166 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28957, address(sha3(0, factoryAddress, _31169, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if idx >= mem[_9997 + ceil32(return_data.size) + 322] - 2:
                        if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31201 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28758)
                            _31202 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31204 = sha3(mem[_31202 + 32 len mem[_31202]])
                            mem[_31201 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31201 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31201 + 125] = _31204
                            mem[_31201 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31201 + 72] = 85
                            mem[_31201 + 189] = 0
                            mem[64] = _31201 + 221
                            mem[_31201 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31201 + 225] = _28957
                            mem[_31201 + 257] = 0
                            mem[_31201 + 289] = arg4
                            mem[_31201 + 321] = 128
                            mem[_31201 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31201 + 385] = mem[s + _31201 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31204, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31204, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28957, 0, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31208 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28701)
                            _31209 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31211 = sha3(mem[_31209 + 32 len mem[_31209]])
                            mem[_31208 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31208 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31208 + 125] = _31211
                            mem[_31208 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31208 + 72] = 85
                            mem[_31208 + 189] = 0
                            mem[64] = _31208 + 221
                            mem[_31208 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31208 + 225] = _28957
                            mem[_31208 + 257] = 0
                            mem[_31208 + 289] = arg4
                            mem[_31208 + 321] = 128
                            mem[_31208 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31208 + 385] = mem[s + _31208 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31211, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31211, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28957, 0, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_9997 + ceil32(return_data.size) + 322]
                        _29140 = mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354]
                        if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31187 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_29140)
                            _31188 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31190 = sha3(mem[_31188 + 32 len mem[_31188]])
                            mem[_31187 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31187 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31187 + 125] = _31190
                            mem[_31187 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31187 + 72] = 85
                            if address(_28701) == address(_28758):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31187 + 292 len 29]
                            if address(_28701) < address(_28758):
                                if not address(_28701):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31187 + 221] = address(_28701)
                                mem[_31187 + 241] = address(_28758)
                                mem[_31187 + 189] = 40
                                mem[_31187 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31187 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31187 + 314] = sha3(address(_28701), address(_28758))
                                mem[_31187 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31187 + 261] = 85
                                mem[_31187 + 378] = 0
                                mem[64] = _31187 + 410
                                mem[_31187 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31187 + 414] = _28957
                                mem[_31187 + 446] = 0
                                mem[_31187 + 478] = address(sha3(0, factoryAddress, _31190, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31187 + 510] = 128
                                mem[_31187 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31187 + 574] = mem[s + _31187 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28957, 0, address(sha3(0, factoryAddress, _31190, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28758):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31187 + 221] = address(_28758)
                                mem[_31187 + 241] = address(_28701)
                                mem[_31187 + 189] = 40
                                mem[_31187 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31187 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31187 + 314] = sha3(address(_28758), address(_28701))
                                mem[_31187 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31187 + 261] = 85
                                mem[_31187 + 378] = 0
                                mem[64] = _31187 + 410
                                mem[_31187 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31187 + 414] = _28957
                                mem[_31187 + 446] = 0
                                mem[_31187 + 478] = address(sha3(0, factoryAddress, _31190, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31187 + 510] = 128
                                mem[_31187 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31187 + 574] = mem[s + _31187 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28957, 0, address(sha3(0, factoryAddress, _31190, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31194 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28758)
                            _31195 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31197 = sha3(mem[_31195 + 32 len mem[_31195]])
                            mem[_31194 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31194 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31194 + 125] = _31197
                            mem[_31194 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31194 + 72] = 85
                            if address(_28701) == address(_28758):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31194 + 292 len 29]
                            if address(_28701) < address(_28758):
                                if not address(_28701):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31194 + 221] = address(_28701)
                                mem[_31194 + 241] = address(_28758)
                                mem[_31194 + 189] = 40
                                mem[_31194 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31194 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31194 + 314] = sha3(address(_28701), address(_28758))
                                mem[_31194 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31194 + 261] = 85
                                mem[_31194 + 378] = 0
                                mem[64] = _31194 + 410
                                mem[_31194 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31194 + 414] = _28957
                                mem[_31194 + 446] = 0
                                mem[_31194 + 478] = address(sha3(0, factoryAddress, _31197, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31194 + 510] = 128
                                mem[_31194 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31194 + 574] = mem[s + _31194 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28957, 0, address(sha3(0, factoryAddress, _31197, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28758):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31194 + 221] = address(_28758)
                                mem[_31194 + 241] = address(_28701)
                                mem[_31194 + 189] = 40
                                mem[_31194 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31194 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31194 + 314] = sha3(address(_28758), address(_28701))
                                mem[_31194 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31194 + 261] = 85
                                mem[_31194 + 378] = 0
                                mem[64] = _31194 + 410
                                mem[_31194 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31194 + 414] = _28957
                                mem[_31194 + 446] = 0
                                mem[_31194 + 478] = address(sha3(0, factoryAddress, _31197, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31194 + 510] = 128
                                mem[_31194 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31194 + 574] = mem[s + _31194 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28957, 0, address(sha3(0, factoryAddress, _31197, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
            else:
                if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * arg3.length) + 128]
                _28958 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                    if idx >= mem[_9997 + ceil32(return_data.size) + 322] - 2:
                        if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31229 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28758)
                            _31230 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31232 = sha3(mem[_31230 + 32 len mem[_31230]])
                            mem[_31229 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31229 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31229 + 125] = _31232
                            mem[_31229 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31229 + 72] = 85
                            mem[_31229 + 189] = 0
                            mem[64] = _31229 + 221
                            mem[_31229 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31229 + 225] = 0
                            mem[_31229 + 257] = _28958
                            mem[_31229 + 289] = arg4
                            mem[_31229 + 321] = 128
                            mem[_31229 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31229 + 385] = mem[s + _31229 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31232, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31232, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28958, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31236 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28701)
                            _31237 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31239 = sha3(mem[_31237 + 32 len mem[_31237]])
                            mem[_31236 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31236 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31236 + 125] = _31239
                            mem[_31236 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31236 + 72] = 85
                            mem[_31236 + 189] = 0
                            mem[64] = _31236 + 221
                            mem[_31236 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31236 + 225] = 0
                            mem[_31236 + 257] = _28958
                            mem[_31236 + 289] = arg4
                            mem[_31236 + 321] = 128
                            mem[_31236 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31236 + 385] = mem[s + _31236 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31239, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31239, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28958, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_9997 + ceil32(return_data.size) + 322]
                        _29141 = mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354]
                        if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31215 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_29141)
                            _31216 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31218 = sha3(mem[_31216 + 32 len mem[_31216]])
                            mem[_31215 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31215 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31215 + 125] = _31218
                            mem[_31215 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31215 + 72] = 85
                            if address(_28701) == address(_28758):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31215 + 292 len 29]
                            if address(_28701) < address(_28758):
                                if not address(_28701):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31215 + 221] = address(_28701)
                                mem[_31215 + 241] = address(_28758)
                                mem[_31215 + 189] = 40
                                mem[_31215 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31215 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31215 + 314] = sha3(address(_28701), address(_28758))
                                mem[_31215 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31215 + 261] = 85
                                mem[_31215 + 378] = 0
                                mem[64] = _31215 + 410
                                mem[_31215 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31215 + 414] = 0
                                mem[_31215 + 446] = _28958
                                mem[_31215 + 478] = address(sha3(0, factoryAddress, _31218, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31215 + 510] = 128
                                mem[_31215 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31215 + 574] = mem[s + _31215 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28958, address(sha3(0, factoryAddress, _31218, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28758):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31215 + 221] = address(_28758)
                                mem[_31215 + 241] = address(_28701)
                                mem[_31215 + 189] = 40
                                mem[_31215 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31215 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31215 + 314] = sha3(address(_28758), address(_28701))
                                mem[_31215 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31215 + 261] = 85
                                mem[_31215 + 378] = 0
                                mem[64] = _31215 + 410
                                mem[_31215 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31215 + 414] = 0
                                mem[_31215 + 446] = _28958
                                mem[_31215 + 478] = address(sha3(0, factoryAddress, _31218, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31215 + 510] = 128
                                mem[_31215 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31215 + 574] = mem[s + _31215 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28958, address(sha3(0, factoryAddress, _31218, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31222 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28758)
                            _31223 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31225 = sha3(mem[_31223 + 32 len mem[_31223]])
                            mem[_31222 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31222 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31222 + 125] = _31225
                            mem[_31222 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31222 + 72] = 85
                            if address(_28701) == address(_28758):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31222 + 292 len 29]
                            if address(_28701) < address(_28758):
                                if not address(_28701):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31222 + 221] = address(_28701)
                                mem[_31222 + 241] = address(_28758)
                                mem[_31222 + 189] = 40
                                mem[_31222 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31222 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31222 + 314] = sha3(address(_28701), address(_28758))
                                mem[_31222 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31222 + 261] = 85
                                mem[_31222 + 378] = 0
                                mem[64] = _31222 + 410
                                mem[_31222 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31222 + 414] = 0
                                mem[_31222 + 446] = _28958
                                mem[_31222 + 478] = address(sha3(0, factoryAddress, _31225, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31222 + 510] = 128
                                mem[_31222 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31222 + 574] = mem[s + _31222 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28958, address(sha3(0, factoryAddress, _31225, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28758):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31222 + 221] = address(_28758)
                                mem[_31222 + 241] = address(_28701)
                                mem[_31222 + 189] = 40
                                mem[_31222 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31222 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31222 + 314] = sha3(address(_28758), address(_28701))
                                mem[_31222 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31222 + 261] = 85
                                mem[_31222 + 378] = 0
                                mem[64] = _31222 + 410
                                mem[_31222 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31222 + 414] = 0
                                mem[_31222 + 446] = _28958
                                mem[_31222 + 478] = address(sha3(0, factoryAddress, _31225, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31222 + 510] = 128
                                mem[_31222 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31222 + 574] = mem[s + _31222 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28958, address(sha3(0, factoryAddress, _31225, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if idx >= mem[_9997 + ceil32(return_data.size) + 322] - 2:
                        if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31257 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28758)
                            _31258 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31260 = sha3(mem[_31258 + 32 len mem[_31258]])
                            mem[_31257 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31257 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31257 + 125] = _31260
                            mem[_31257 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31257 + 72] = 85
                            mem[_31257 + 189] = 0
                            mem[64] = _31257 + 221
                            mem[_31257 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31257 + 225] = _28958
                            mem[_31257 + 257] = 0
                            mem[_31257 + 289] = arg4
                            mem[_31257 + 321] = 128
                            mem[_31257 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31257 + 385] = mem[s + _31257 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31260, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31260, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28958, 0, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31264 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28701)
                            _31265 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31267 = sha3(mem[_31265 + 32 len mem[_31265]])
                            mem[_31264 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31264 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31264 + 125] = _31267
                            mem[_31264 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31264 + 72] = 85
                            mem[_31264 + 189] = 0
                            mem[64] = _31264 + 221
                            mem[_31264 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31264 + 225] = _28958
                            mem[_31264 + 257] = 0
                            mem[_31264 + 289] = arg4
                            mem[_31264 + 321] = 128
                            mem[_31264 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31264 + 385] = mem[s + _31264 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31267, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31267, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28958, 0, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_9997 + ceil32(return_data.size) + 322]
                        _29142 = mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354]
                        if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31243 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_29142)
                            _31244 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31246 = sha3(mem[_31244 + 32 len mem[_31244]])
                            mem[_31243 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31243 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31243 + 125] = _31246
                            mem[_31243 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31243 + 72] = 85
                            if address(_28701) == address(_28758):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31243 + 292 len 29]
                            if address(_28701) < address(_28758):
                                if not address(_28701):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31243 + 221] = address(_28701)
                                mem[_31243 + 241] = address(_28758)
                                mem[_31243 + 189] = 40
                                mem[_31243 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31243 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31243 + 314] = sha3(address(_28701), address(_28758))
                                mem[_31243 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31243 + 261] = 85
                                mem[_31243 + 378] = 0
                                mem[64] = _31243 + 410
                                mem[_31243 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31243 + 414] = _28958
                                mem[_31243 + 446] = 0
                                mem[_31243 + 478] = address(sha3(0, factoryAddress, _31246, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31243 + 510] = 128
                                mem[_31243 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31243 + 574] = mem[s + _31243 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28958, 0, address(sha3(0, factoryAddress, _31246, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28758):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31243 + 221] = address(_28758)
                                mem[_31243 + 241] = address(_28701)
                                mem[_31243 + 189] = 40
                                mem[_31243 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31243 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31243 + 314] = sha3(address(_28758), address(_28701))
                                mem[_31243 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31243 + 261] = 85
                                mem[_31243 + 378] = 0
                                mem[64] = _31243 + 410
                                mem[_31243 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31243 + 414] = _28958
                                mem[_31243 + 446] = 0
                                mem[_31243 + 478] = address(sha3(0, factoryAddress, _31246, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31243 + 510] = 128
                                mem[_31243 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31243 + 574] = mem[s + _31243 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28958, 0, address(sha3(0, factoryAddress, _31246, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31250 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _9997 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28758)
                            _31251 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31253 = sha3(mem[_31251 + 32 len mem[_31251]])
                            mem[_31250 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31250 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31250 + 125] = _31253
                            mem[_31250 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31250 + 72] = 85
                            if address(_28701) == address(_28758):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31250 + 292 len 29]
                            if address(_28701) < address(_28758):
                                if not address(_28701):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31250 + 221] = address(_28701)
                                mem[_31250 + 241] = address(_28758)
                                mem[_31250 + 189] = 40
                                mem[_31250 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31250 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31250 + 314] = sha3(address(_28701), address(_28758))
                                mem[_31250 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31250 + 261] = 85
                                mem[_31250 + 378] = 0
                                mem[64] = _31250 + 410
                                mem[_31250 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31250 + 414] = _28958
                                mem[_31250 + 446] = 0
                                mem[_31250 + 478] = address(sha3(0, factoryAddress, _31253, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31250 + 510] = 128
                                mem[_31250 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31250 + 574] = mem[s + _31250 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28701), address(_28758)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28958, 0, address(sha3(0, factoryAddress, _31253, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28758):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31250 + 221] = address(_28758)
                                mem[_31250 + 241] = address(_28701)
                                mem[_31250 + 189] = 40
                                mem[_31250 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31250 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31250 + 314] = sha3(address(_28758), address(_28701))
                                mem[_31250 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31250 + 261] = 85
                                mem[_31250 + 378] = 0
                                mem[64] = _31250 + 410
                                mem[_31250 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31250 + 414] = _28958
                                mem[_31250 + 446] = 0
                                mem[_31250 + 478] = address(sha3(0, factoryAddress, _31253, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31250 + 510] = 128
                                mem[_31250 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31250 + 574] = mem[s + _31250 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28758), address(_28701)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28958, 0, address(sha3(0, factoryAddress, _31253, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
        _28757 = mem[(32 * arg3.length) + 128]
        mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _28757) + 32]
    if not address(cd[(arg3 + 68)]):
        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
    _10004 = mem[64]
    mem[mem[64] + 32] = address(cd[(arg3 + 68)])
    mem[mem[64] + 52] = address(cd[(arg3 + 36)])
    _10005 = mem[64]
    mem[mem[64]] = 40
    mem[64] = mem[64] + 72
    _10007 = sha3(mem[_10005 + 32 len mem[_10005]])
    mem[_10004 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
    mem[_10004 + 105] = Mask(160, 96, factoryAddress)
    mem[_10004 + 125] = _10007
    mem[_10004 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
    mem[_10004 + 72] = 85
    require 0 < mem[(32 * arg3.length) + 128]
    _10026 = mem[(32 * arg3.length) + 160]
    mem[_10004 + 225] = address(WETHAddress)
    mem[_10004 + 257] = address(sha3(0, factoryAddress, _10007, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
    mem[_10004 + 289] = _10026
    mem[_10004 + 189] = 100
    mem[_10004 + 225 len 28] = Mask(224, 0, stor1)
    mem[_10004 + 221 len 4] = unknown_0x23b872dd(?????)
    mem[_10004 + 321 len 96] = unknown_0x23b872dd(?????), Mask(224, 0, stor1), uint32(stor1), address(sha3(0, factoryAddress, _10007, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), Mask(224, 32, _10026) >> 32
    mem[_10004 + 445 len 4] = Mask(32, 64, _10026) >> 64
    call address(cd[(arg3 + 36)]) with:
         gas gas_remaining wei
        args Mask(224, 32, _10026) << 480, mem[_10004 + 417 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 
                        32,
                        49,
                        0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                        mem[_10004 + 438 len 7],
                        Mask(32, 64, _10026) >> 64,
                        mem[_10004 + 449 len 4]
        if not mem[96]:
            mem[64] = _10004 + (32 * arg3.length) + 353
            mem[_10004 + 321] = arg3.length
            mem[_10004 + 353 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
            mem[_10004 + (32 * arg3.length) + 353] = 0
            idx = 0
            while idx < arg3.length - 1:
                require idx < mem[_10004 + 321]
                _28703 = mem[(32 * idx) + _10004 + 353]
                require idx + 1 < mem[_10004 + 321]
                _28762 = mem[(32 * idx + 1) + _10004 + 353]
                if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx + 1) + _10004 + 365 len 20]:
                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + _10004 + 365 len 20] < mem[(32 * idx + 1) + _10004 + 365 len 20]:
                    if not mem[(32 * idx) + _10004 + 365 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * arg3.length) + 128]
                    _28959 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                    if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx) + _10004 + 365 len 20]:
                        if idx >= mem[_10004 + 321] - 2:
                            if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _10004 + 365 len 20] < mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                if not mem[(32 * idx) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31285 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + 353])
                                mem[mem[64] + 52] = address(_28762)
                                _31286 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31288 = sha3(mem[_31286 + 32 len mem[_31286]])
                                mem[_31285 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31285 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31285 + 125] = _31288
                                mem[_31285 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31285 + 72] = 85
                                mem[_31285 + 189] = 0
                                mem[64] = _31285 + 221
                                mem[_31285 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31285 + 225] = 0
                                mem[_31285 + 257] = _28959
                                mem[_31285 + 289] = arg4
                                mem[_31285 + 321] = 128
                                mem[_31285 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31285 + 385] = mem[s + _31285 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31288, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31288, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28959, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31292 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                                mem[mem[64] + 52] = address(_28703)
                                _31293 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31295 = sha3(mem[_31293 + 32 len mem[_31293]])
                                mem[_31292 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31292 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31292 + 125] = _31295
                                mem[_31292 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31292 + 72] = 85
                                mem[_31292 + 189] = 0
                                mem[64] = _31292 + 221
                                mem[_31292 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31292 + 225] = 0
                                mem[_31292 + 257] = _28959
                                mem[_31292 + 289] = arg4
                                mem[_31292 + 321] = 128
                                mem[_31292 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31292 + 385] = mem[s + _31292 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31295, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31295, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28959, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_10004 + 321]
                            _29143 = mem[(32 * idx + 2) + _10004 + 353]
                            if mem[(32 * idx + 1) + _10004 + 365 len 20] == mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _10004 + 365 len 20] < mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31271 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                                mem[mem[64] + 52] = address(_29143)
                                _31272 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31274 = sha3(mem[_31272 + 32 len mem[_31272]])
                                mem[_31271 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31271 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31271 + 125] = _31274
                                mem[_31271 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31271 + 72] = 85
                                if address(_28703) == address(_28762):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31271 + 292 len 29]
                                if address(_28703) < address(_28762):
                                    if not address(_28703):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31271 + 221] = address(_28703)
                                    mem[_31271 + 241] = address(_28762)
                                    mem[_31271 + 189] = 40
                                    mem[_31271 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31271 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31271 + 314] = sha3(address(_28703), address(_28762))
                                    mem[_31271 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31271 + 261] = 85
                                    mem[_31271 + 378] = 0
                                    mem[64] = _31271 + 410
                                    mem[_31271 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31271 + 414] = 0
                                    mem[_31271 + 446] = _28959
                                    mem[_31271 + 478] = address(sha3(0, factoryAddress, _31274, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31271 + 510] = 128
                                    mem[_31271 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31271 + 574] = mem[s + _31271 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28959, address(sha3(0, factoryAddress, _31274, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28762):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31271 + 221] = address(_28762)
                                    mem[_31271 + 241] = address(_28703)
                                    mem[_31271 + 189] = 40
                                    mem[_31271 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31271 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31271 + 314] = sha3(address(_28762), address(_28703))
                                    mem[_31271 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31271 + 261] = 85
                                    mem[_31271 + 378] = 0
                                    mem[64] = _31271 + 410
                                    mem[_31271 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31271 + 414] = 0
                                    mem[_31271 + 446] = _28959
                                    mem[_31271 + 478] = address(sha3(0, factoryAddress, _31274, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31271 + 510] = 128
                                    mem[_31271 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31271 + 574] = mem[s + _31271 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28959, address(sha3(0, factoryAddress, _31274, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31278 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + 353])
                                mem[mem[64] + 52] = address(_28762)
                                _31279 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31281 = sha3(mem[_31279 + 32 len mem[_31279]])
                                mem[_31278 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31278 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31278 + 125] = _31281
                                mem[_31278 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31278 + 72] = 85
                                if address(_28703) == address(_28762):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31278 + 292 len 29]
                                if address(_28703) < address(_28762):
                                    if not address(_28703):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31278 + 221] = address(_28703)
                                    mem[_31278 + 241] = address(_28762)
                                    mem[_31278 + 189] = 40
                                    mem[_31278 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31278 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31278 + 314] = sha3(address(_28703), address(_28762))
                                    mem[_31278 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31278 + 261] = 85
                                    mem[_31278 + 378] = 0
                                    mem[64] = _31278 + 410
                                    mem[_31278 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31278 + 414] = 0
                                    mem[_31278 + 446] = _28959
                                    mem[_31278 + 478] = address(sha3(0, factoryAddress, _31281, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31278 + 510] = 128
                                    mem[_31278 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31278 + 574] = mem[s + _31278 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28959, address(sha3(0, factoryAddress, _31281, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28762):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31278 + 221] = address(_28762)
                                    mem[_31278 + 241] = address(_28703)
                                    mem[_31278 + 189] = 40
                                    mem[_31278 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31278 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31278 + 314] = sha3(address(_28762), address(_28703))
                                    mem[_31278 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31278 + 261] = 85
                                    mem[_31278 + 378] = 0
                                    mem[64] = _31278 + 410
                                    mem[_31278 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31278 + 414] = 0
                                    mem[_31278 + 446] = _28959
                                    mem[_31278 + 478] = address(sha3(0, factoryAddress, _31281, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31278 + 510] = 128
                                    mem[_31278 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31278 + 574] = mem[s + _31278 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28959, address(sha3(0, factoryAddress, _31281, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if idx >= mem[_10004 + 321] - 2:
                            if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _10004 + 365 len 20] < mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                if not mem[(32 * idx) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31313 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + 353])
                                mem[mem[64] + 52] = address(_28762)
                                _31314 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31316 = sha3(mem[_31314 + 32 len mem[_31314]])
                                mem[_31313 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31313 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31313 + 125] = _31316
                                mem[_31313 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31313 + 72] = 85
                                mem[_31313 + 189] = 0
                                mem[64] = _31313 + 221
                                mem[_31313 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31313 + 225] = _28959
                                mem[_31313 + 257] = 0
                                mem[_31313 + 289] = arg4
                                mem[_31313 + 321] = 128
                                mem[_31313 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31313 + 385] = mem[s + _31313 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31316, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31316, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28959, 0, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31320 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                                mem[mem[64] + 52] = address(_28703)
                                _31321 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31323 = sha3(mem[_31321 + 32 len mem[_31321]])
                                mem[_31320 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31320 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31320 + 125] = _31323
                                mem[_31320 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31320 + 72] = 85
                                mem[_31320 + 189] = 0
                                mem[64] = _31320 + 221
                                mem[_31320 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31320 + 225] = _28959
                                mem[_31320 + 257] = 0
                                mem[_31320 + 289] = arg4
                                mem[_31320 + 321] = 128
                                mem[_31320 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31320 + 385] = mem[s + _31320 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31323, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31323, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28959, 0, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_10004 + 321]
                            _29144 = mem[(32 * idx + 2) + _10004 + 353]
                            if mem[(32 * idx + 1) + _10004 + 365 len 20] == mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _10004 + 365 len 20] < mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31299 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                                mem[mem[64] + 52] = address(_29144)
                                _31300 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31302 = sha3(mem[_31300 + 32 len mem[_31300]])
                                mem[_31299 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31299 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31299 + 125] = _31302
                                mem[_31299 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31299 + 72] = 85
                                if address(_28703) == address(_28762):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31299 + 292 len 29]
                                if address(_28703) < address(_28762):
                                    if not address(_28703):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31299 + 221] = address(_28703)
                                    mem[_31299 + 241] = address(_28762)
                                    mem[_31299 + 189] = 40
                                    mem[_31299 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31299 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31299 + 314] = sha3(address(_28703), address(_28762))
                                    mem[_31299 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31299 + 261] = 85
                                    mem[_31299 + 378] = 0
                                    mem[64] = _31299 + 410
                                    mem[_31299 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31299 + 414] = _28959
                                    mem[_31299 + 446] = 0
                                    mem[_31299 + 478] = address(sha3(0, factoryAddress, _31302, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31299 + 510] = 128
                                    mem[_31299 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31299 + 574] = mem[s + _31299 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28959, 0, address(sha3(0, factoryAddress, _31302, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28762):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31299 + 221] = address(_28762)
                                    mem[_31299 + 241] = address(_28703)
                                    mem[_31299 + 189] = 40
                                    mem[_31299 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31299 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31299 + 314] = sha3(address(_28762), address(_28703))
                                    mem[_31299 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31299 + 261] = 85
                                    mem[_31299 + 378] = 0
                                    mem[64] = _31299 + 410
                                    mem[_31299 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31299 + 414] = _28959
                                    mem[_31299 + 446] = 0
                                    mem[_31299 + 478] = address(sha3(0, factoryAddress, _31302, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31299 + 510] = 128
                                    mem[_31299 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31299 + 574] = mem[s + _31299 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28959, 0, address(sha3(0, factoryAddress, _31302, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31306 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + 353])
                                mem[mem[64] + 52] = address(_28762)
                                _31307 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31309 = sha3(mem[_31307 + 32 len mem[_31307]])
                                mem[_31306 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31306 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31306 + 125] = _31309
                                mem[_31306 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31306 + 72] = 85
                                if address(_28703) == address(_28762):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31306 + 292 len 29]
                                if address(_28703) < address(_28762):
                                    if not address(_28703):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31306 + 221] = address(_28703)
                                    mem[_31306 + 241] = address(_28762)
                                    mem[_31306 + 189] = 40
                                    mem[_31306 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31306 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31306 + 314] = sha3(address(_28703), address(_28762))
                                    mem[_31306 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31306 + 261] = 85
                                    mem[_31306 + 378] = 0
                                    mem[64] = _31306 + 410
                                    mem[_31306 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31306 + 414] = _28959
                                    mem[_31306 + 446] = 0
                                    mem[_31306 + 478] = address(sha3(0, factoryAddress, _31309, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31306 + 510] = 128
                                    mem[_31306 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31306 + 574] = mem[s + _31306 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28959, 0, address(sha3(0, factoryAddress, _31309, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28762):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31306 + 221] = address(_28762)
                                    mem[_31306 + 241] = address(_28703)
                                    mem[_31306 + 189] = 40
                                    mem[_31306 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31306 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31306 + 314] = sha3(address(_28762), address(_28703))
                                    mem[_31306 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31306 + 261] = 85
                                    mem[_31306 + 378] = 0
                                    mem[64] = _31306 + 410
                                    mem[_31306 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31306 + 414] = _28959
                                    mem[_31306 + 446] = 0
                                    mem[_31306 + 478] = address(sha3(0, factoryAddress, _31309, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31306 + 510] = 128
                                    mem[_31306 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31306 + 574] = mem[s + _31306 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28959, 0, address(sha3(0, factoryAddress, _31309, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * arg3.length) + 128]
                    _28960 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                    if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx + 1) + _10004 + 365 len 20]:
                        if idx >= mem[_10004 + 321] - 2:
                            if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _10004 + 365 len 20] < mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                if not mem[(32 * idx) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31341 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + 353])
                                mem[mem[64] + 52] = address(_28762)
                                _31342 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31344 = sha3(mem[_31342 + 32 len mem[_31342]])
                                mem[_31341 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31341 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31341 + 125] = _31344
                                mem[_31341 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31341 + 72] = 85
                                mem[_31341 + 189] = 0
                                mem[64] = _31341 + 221
                                mem[_31341 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31341 + 225] = 0
                                mem[_31341 + 257] = _28960
                                mem[_31341 + 289] = arg4
                                mem[_31341 + 321] = 128
                                mem[_31341 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31341 + 385] = mem[s + _31341 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31344, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31344, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28960, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31348 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                                mem[mem[64] + 52] = address(_28703)
                                _31349 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31351 = sha3(mem[_31349 + 32 len mem[_31349]])
                                mem[_31348 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31348 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31348 + 125] = _31351
                                mem[_31348 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31348 + 72] = 85
                                mem[_31348 + 189] = 0
                                mem[64] = _31348 + 221
                                mem[_31348 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31348 + 225] = 0
                                mem[_31348 + 257] = _28960
                                mem[_31348 + 289] = arg4
                                mem[_31348 + 321] = 128
                                mem[_31348 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31348 + 385] = mem[s + _31348 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31351, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31351, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28960, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_10004 + 321]
                            _29145 = mem[(32 * idx + 2) + _10004 + 353]
                            if mem[(32 * idx + 1) + _10004 + 365 len 20] == mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _10004 + 365 len 20] < mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31327 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                                mem[mem[64] + 52] = address(_29145)
                                _31328 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31330 = sha3(mem[_31328 + 32 len mem[_31328]])
                                mem[_31327 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31327 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31327 + 125] = _31330
                                mem[_31327 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31327 + 72] = 85
                                if address(_28703) == address(_28762):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31327 + 292 len 29]
                                if address(_28703) < address(_28762):
                                    if not address(_28703):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31327 + 221] = address(_28703)
                                    mem[_31327 + 241] = address(_28762)
                                    mem[_31327 + 189] = 40
                                    mem[_31327 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31327 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31327 + 314] = sha3(address(_28703), address(_28762))
                                    mem[_31327 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31327 + 261] = 85
                                    mem[_31327 + 378] = 0
                                    mem[64] = _31327 + 410
                                    mem[_31327 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31327 + 414] = 0
                                    mem[_31327 + 446] = _28960
                                    mem[_31327 + 478] = address(sha3(0, factoryAddress, _31330, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31327 + 510] = 128
                                    mem[_31327 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31327 + 574] = mem[s + _31327 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28960, address(sha3(0, factoryAddress, _31330, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28762):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31327 + 221] = address(_28762)
                                    mem[_31327 + 241] = address(_28703)
                                    mem[_31327 + 189] = 40
                                    mem[_31327 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31327 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31327 + 314] = sha3(address(_28762), address(_28703))
                                    mem[_31327 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31327 + 261] = 85
                                    mem[_31327 + 378] = 0
                                    mem[64] = _31327 + 410
                                    mem[_31327 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31327 + 414] = 0
                                    mem[_31327 + 446] = _28960
                                    mem[_31327 + 478] = address(sha3(0, factoryAddress, _31330, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31327 + 510] = 128
                                    mem[_31327 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31327 + 574] = mem[s + _31327 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28960, address(sha3(0, factoryAddress, _31330, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31334 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + 353])
                                mem[mem[64] + 52] = address(_28762)
                                _31335 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31337 = sha3(mem[_31335 + 32 len mem[_31335]])
                                mem[_31334 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31334 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31334 + 125] = _31337
                                mem[_31334 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31334 + 72] = 85
                                if address(_28703) == address(_28762):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31334 + 292 len 29]
                                if address(_28703) < address(_28762):
                                    if not address(_28703):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31334 + 221] = address(_28703)
                                    mem[_31334 + 241] = address(_28762)
                                    mem[_31334 + 189] = 40
                                    mem[_31334 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31334 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31334 + 314] = sha3(address(_28703), address(_28762))
                                    mem[_31334 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31334 + 261] = 85
                                    mem[_31334 + 378] = 0
                                    mem[64] = _31334 + 410
                                    mem[_31334 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31334 + 414] = 0
                                    mem[_31334 + 446] = _28960
                                    mem[_31334 + 478] = address(sha3(0, factoryAddress, _31337, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31334 + 510] = 128
                                    mem[_31334 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31334 + 574] = mem[s + _31334 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28960, address(sha3(0, factoryAddress, _31337, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28762):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31334 + 221] = address(_28762)
                                    mem[_31334 + 241] = address(_28703)
                                    mem[_31334 + 189] = 40
                                    mem[_31334 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31334 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31334 + 314] = sha3(address(_28762), address(_28703))
                                    mem[_31334 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31334 + 261] = 85
                                    mem[_31334 + 378] = 0
                                    mem[64] = _31334 + 410
                                    mem[_31334 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31334 + 414] = 0
                                    mem[_31334 + 446] = _28960
                                    mem[_31334 + 478] = address(sha3(0, factoryAddress, _31337, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31334 + 510] = 128
                                    mem[_31334 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31334 + 574] = mem[s + _31334 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _28960, address(sha3(0, factoryAddress, _31337, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if idx >= mem[_10004 + 321] - 2:
                            if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _10004 + 365 len 20] < mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                if not mem[(32 * idx) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31369 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + 353])
                                mem[mem[64] + 52] = address(_28762)
                                _31370 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31372 = sha3(mem[_31370 + 32 len mem[_31370]])
                                mem[_31369 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31369 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31369 + 125] = _31372
                                mem[_31369 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31369 + 72] = 85
                                mem[_31369 + 189] = 0
                                mem[64] = _31369 + 221
                                mem[_31369 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31369 + 225] = _28960
                                mem[_31369 + 257] = 0
                                mem[_31369 + 289] = arg4
                                mem[_31369 + 321] = 128
                                mem[_31369 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31369 + 385] = mem[s + _31369 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31372, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31372, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28960, 0, address(arg4), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31376 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                                mem[mem[64] + 52] = address(_28703)
                                _31377 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31379 = sha3(mem[_31377 + 32 len mem[_31377]])
                                mem[_31376 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31376 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31376 + 125] = _31379
                                mem[_31376 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31376 + 72] = 85
                                mem[_31376 + 189] = 0
                                mem[64] = _31376 + 221
                                mem[_31376 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31376 + 225] = _28960
                                mem[_31376 + 257] = 0
                                mem[_31376 + 289] = arg4
                                mem[_31376 + 321] = 128
                                mem[_31376 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31376 + 385] = mem[s + _31376 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _31379, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, _31379, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28960, 0, address(arg4), 128, 0
                        else:
                            require idx + 2 < mem[_10004 + 321]
                            _29146 = mem[(32 * idx + 2) + _10004 + 353]
                            if mem[(32 * idx + 1) + _10004 + 365 len 20] == mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _10004 + 365 len 20] < mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31355 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                                mem[mem[64] + 52] = address(_29146)
                                _31356 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31358 = sha3(mem[_31356 + 32 len mem[_31356]])
                                mem[_31355 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31355 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31355 + 125] = _31358
                                mem[_31355 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31355 + 72] = 85
                                if address(_28703) == address(_28762):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31355 + 292 len 29]
                                if address(_28703) < address(_28762):
                                    if not address(_28703):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31355 + 221] = address(_28703)
                                    mem[_31355 + 241] = address(_28762)
                                    mem[_31355 + 189] = 40
                                    mem[_31355 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31355 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31355 + 314] = sha3(address(_28703), address(_28762))
                                    mem[_31355 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31355 + 261] = 85
                                    mem[_31355 + 378] = 0
                                    mem[64] = _31355 + 410
                                    mem[_31355 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31355 + 414] = _28960
                                    mem[_31355 + 446] = 0
                                    mem[_31355 + 478] = address(sha3(0, factoryAddress, _31358, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31355 + 510] = 128
                                    mem[_31355 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31355 + 574] = mem[s + _31355 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28960, 0, address(sha3(0, factoryAddress, _31358, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28762):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31355 + 221] = address(_28762)
                                    mem[_31355 + 241] = address(_28703)
                                    mem[_31355 + 189] = 40
                                    mem[_31355 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31355 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31355 + 314] = sha3(address(_28762), address(_28703))
                                    mem[_31355 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31355 + 261] = 85
                                    mem[_31355 + 378] = 0
                                    mem[64] = _31355 + 410
                                    mem[_31355 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31355 + 414] = _28960
                                    mem[_31355 + 446] = 0
                                    mem[_31355 + 478] = address(sha3(0, factoryAddress, _31358, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31355 + 510] = 128
                                    mem[_31355 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31355 + 574] = mem[s + _31355 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28960, 0, address(sha3(0, factoryAddress, _31358, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _31362 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + 353])
                                mem[mem[64] + 52] = address(_28762)
                                _31363 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _31365 = sha3(mem[_31363 + 32 len mem[_31363]])
                                mem[_31362 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31362 + 105] = Mask(160, 96, factoryAddress)
                                mem[_31362 + 125] = _31365
                                mem[_31362 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31362 + 72] = 85
                                if address(_28703) == address(_28762):
                                    revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31362 + 292 len 29]
                                if address(_28703) < address(_28762):
                                    if not address(_28703):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31362 + 221] = address(_28703)
                                    mem[_31362 + 241] = address(_28762)
                                    mem[_31362 + 189] = 40
                                    mem[_31362 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31362 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31362 + 314] = sha3(address(_28703), address(_28762))
                                    mem[_31362 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31362 + 261] = 85
                                    mem[_31362 + 378] = 0
                                    mem[64] = _31362 + 410
                                    mem[_31362 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31362 + 414] = _28960
                                    mem[_31362 + 446] = 0
                                    mem[_31362 + 478] = address(sha3(0, factoryAddress, _31365, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31362 + 510] = 128
                                    mem[_31362 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31362 + 574] = mem[s + _31362 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28703), address(_28762)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28960, 0, address(sha3(0, factoryAddress, _31365, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                                else:
                                    if not address(_28762):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_31362 + 221] = address(_28762)
                                    mem[_31362 + 241] = address(_28703)
                                    mem[_31362 + 189] = 40
                                    mem[_31362 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_31362 + 294] = Mask(160, 96, factoryAddress)
                                    mem[_31362 + 314] = sha3(address(_28762), address(_28703))
                                    mem[_31362 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                    mem[_31362 + 261] = 85
                                    mem[_31362 + 378] = 0
                                    mem[64] = _31362 + 410
                                    mem[_31362 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_31362 + 414] = _28960
                                    mem[_31362 + 446] = 0
                                    mem[_31362 + 478] = address(sha3(0, factoryAddress, _31365, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                    mem[_31362 + 510] = 128
                                    mem[_31362 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _31362 + 574] = mem[s + _31362 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                    call address(sha3(0, factoryAddress, sha3(address(_28762), address(_28703)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _28960, 0, address(sha3(0, factoryAddress, _31365, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
            _28761 = mem[(32 * arg3.length) + 128]
            mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _28761) + 32]
        require mem[96] >= 32
        if not mem[128]:
            revert with 0, 
                        32,
                        49,
                        0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                        mem[_10004 + 438 len 7],
                        Mask(32, 64, _10026) >> 64,
                        mem[_10004 + 449 len 4]
        mem[64] = _10004 + (32 * arg3.length) + 353
        mem[_10004 + 321] = arg3.length
        mem[_10004 + 353 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
        mem[_10004 + (32 * arg3.length) + 353] = 0
        idx = 0
        while idx < arg3.length - 1:
            require idx < mem[_10004 + 321]
            _28705 = mem[(32 * idx) + _10004 + 353]
            require idx + 1 < mem[_10004 + 321]
            _28766 = mem[(32 * idx + 1) + _10004 + 353]
            if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx + 1) + _10004 + 365 len 20]:
                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + _10004 + 365 len 20] < mem[(32 * idx + 1) + _10004 + 365 len 20]:
                if not mem[(32 * idx) + _10004 + 365 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * arg3.length) + 128]
                _28961 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx) + _10004 + 365 len 20]:
                    if idx >= mem[_10004 + 321] - 2:
                        if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx + 1) + _10004 + 365 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _10004 + 365 len 20] < mem[(32 * idx + 1) + _10004 + 365 len 20]:
                            if not mem[(32 * idx) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31397 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + 353])
                            mem[mem[64] + 52] = address(_28766)
                            _31398 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31400 = sha3(mem[_31398 + 32 len mem[_31398]])
                            mem[_31397 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31397 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31397 + 125] = _31400
                            mem[_31397 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31397 + 72] = 85
                            mem[_31397 + 189] = 0
                            mem[64] = _31397 + 221
                            mem[_31397 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31397 + 225] = 0
                            mem[_31397 + 257] = _28961
                            mem[_31397 + 289] = arg4
                            mem[_31397 + 321] = 128
                            mem[_31397 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31397 + 385] = mem[s + _31397 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31400, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31400, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28961, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31404 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                            mem[mem[64] + 52] = address(_28705)
                            _31405 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31407 = sha3(mem[_31405 + 32 len mem[_31405]])
                            mem[_31404 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31404 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31404 + 125] = _31407
                            mem[_31404 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31404 + 72] = 85
                            mem[_31404 + 189] = 0
                            mem[64] = _31404 + 221
                            mem[_31404 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31404 + 225] = 0
                            mem[_31404 + 257] = _28961
                            mem[_31404 + 289] = arg4
                            mem[_31404 + 321] = 128
                            mem[_31404 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31404 + 385] = mem[s + _31404 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31407, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31407, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28961, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_10004 + 321]
                        _29147 = mem[(32 * idx + 2) + _10004 + 353]
                        if mem[(32 * idx + 1) + _10004 + 365 len 20] == mem[(32 * idx + 2) + _10004 + 365 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _10004 + 365 len 20] < mem[(32 * idx + 2) + _10004 + 365 len 20]:
                            if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31383 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                            mem[mem[64] + 52] = address(_29147)
                            _31384 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31386 = sha3(mem[_31384 + 32 len mem[_31384]])
                            mem[_31383 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31383 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31383 + 125] = _31386
                            mem[_31383 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31383 + 72] = 85
                            if address(_28705) == address(_28766):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31383 + 292 len 29]
                            if address(_28705) < address(_28766):
                                if not address(_28705):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31383 + 221] = address(_28705)
                                mem[_31383 + 241] = address(_28766)
                                mem[_31383 + 189] = 40
                                mem[_31383 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31383 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31383 + 314] = sha3(address(_28705), address(_28766))
                                mem[_31383 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31383 + 261] = 85
                                mem[_31383 + 378] = 0
                                mem[64] = _31383 + 410
                                mem[_31383 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31383 + 414] = 0
                                mem[_31383 + 446] = _28961
                                mem[_31383 + 478] = address(sha3(0, factoryAddress, _31386, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31383 + 510] = 128
                                mem[_31383 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31383 + 574] = mem[s + _31383 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28961, address(sha3(0, factoryAddress, _31386, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28766):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31383 + 221] = address(_28766)
                                mem[_31383 + 241] = address(_28705)
                                mem[_31383 + 189] = 40
                                mem[_31383 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31383 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31383 + 314] = sha3(address(_28766), address(_28705))
                                mem[_31383 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31383 + 261] = 85
                                mem[_31383 + 378] = 0
                                mem[64] = _31383 + 410
                                mem[_31383 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31383 + 414] = 0
                                mem[_31383 + 446] = _28961
                                mem[_31383 + 478] = address(sha3(0, factoryAddress, _31386, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31383 + 510] = 128
                                mem[_31383 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31383 + 574] = mem[s + _31383 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28961, address(sha3(0, factoryAddress, _31386, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31390 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + 353])
                            mem[mem[64] + 52] = address(_28766)
                            _31391 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31393 = sha3(mem[_31391 + 32 len mem[_31391]])
                            mem[_31390 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31390 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31390 + 125] = _31393
                            mem[_31390 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31390 + 72] = 85
                            if address(_28705) == address(_28766):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31390 + 292 len 29]
                            if address(_28705) < address(_28766):
                                if not address(_28705):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31390 + 221] = address(_28705)
                                mem[_31390 + 241] = address(_28766)
                                mem[_31390 + 189] = 40
                                mem[_31390 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31390 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31390 + 314] = sha3(address(_28705), address(_28766))
                                mem[_31390 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31390 + 261] = 85
                                mem[_31390 + 378] = 0
                                mem[64] = _31390 + 410
                                mem[_31390 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31390 + 414] = 0
                                mem[_31390 + 446] = _28961
                                mem[_31390 + 478] = address(sha3(0, factoryAddress, _31393, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31390 + 510] = 128
                                mem[_31390 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31390 + 574] = mem[s + _31390 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28961, address(sha3(0, factoryAddress, _31393, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28766):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31390 + 221] = address(_28766)
                                mem[_31390 + 241] = address(_28705)
                                mem[_31390 + 189] = 40
                                mem[_31390 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31390 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31390 + 314] = sha3(address(_28766), address(_28705))
                                mem[_31390 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31390 + 261] = 85
                                mem[_31390 + 378] = 0
                                mem[64] = _31390 + 410
                                mem[_31390 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31390 + 414] = 0
                                mem[_31390 + 446] = _28961
                                mem[_31390 + 478] = address(sha3(0, factoryAddress, _31393, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31390 + 510] = 128
                                mem[_31390 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31390 + 574] = mem[s + _31390 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28961, address(sha3(0, factoryAddress, _31393, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if idx >= mem[_10004 + 321] - 2:
                        if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx + 1) + _10004 + 365 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _10004 + 365 len 20] < mem[(32 * idx + 1) + _10004 + 365 len 20]:
                            if not mem[(32 * idx) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31425 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + 353])
                            mem[mem[64] + 52] = address(_28766)
                            _31426 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31428 = sha3(mem[_31426 + 32 len mem[_31426]])
                            mem[_31425 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31425 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31425 + 125] = _31428
                            mem[_31425 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31425 + 72] = 85
                            mem[_31425 + 189] = 0
                            mem[64] = _31425 + 221
                            mem[_31425 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31425 + 225] = _28961
                            mem[_31425 + 257] = 0
                            mem[_31425 + 289] = arg4
                            mem[_31425 + 321] = 128
                            mem[_31425 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31425 + 385] = mem[s + _31425 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31428, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31428, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28961, 0, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31432 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                            mem[mem[64] + 52] = address(_28705)
                            _31433 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31435 = sha3(mem[_31433 + 32 len mem[_31433]])
                            mem[_31432 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31432 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31432 + 125] = _31435
                            mem[_31432 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31432 + 72] = 85
                            mem[_31432 + 189] = 0
                            mem[64] = _31432 + 221
                            mem[_31432 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31432 + 225] = _28961
                            mem[_31432 + 257] = 0
                            mem[_31432 + 289] = arg4
                            mem[_31432 + 321] = 128
                            mem[_31432 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31432 + 385] = mem[s + _31432 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31435, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31435, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28961, 0, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_10004 + 321]
                        _29148 = mem[(32 * idx + 2) + _10004 + 353]
                        if mem[(32 * idx + 1) + _10004 + 365 len 20] == mem[(32 * idx + 2) + _10004 + 365 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _10004 + 365 len 20] < mem[(32 * idx + 2) + _10004 + 365 len 20]:
                            if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31411 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                            mem[mem[64] + 52] = address(_29148)
                            _31412 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31414 = sha3(mem[_31412 + 32 len mem[_31412]])
                            mem[_31411 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31411 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31411 + 125] = _31414
                            mem[_31411 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31411 + 72] = 85
                            if address(_28705) == address(_28766):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31411 + 292 len 29]
                            if address(_28705) < address(_28766):
                                if not address(_28705):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31411 + 221] = address(_28705)
                                mem[_31411 + 241] = address(_28766)
                                mem[_31411 + 189] = 40
                                mem[_31411 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31411 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31411 + 314] = sha3(address(_28705), address(_28766))
                                mem[_31411 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31411 + 261] = 85
                                mem[_31411 + 378] = 0
                                mem[64] = _31411 + 410
                                mem[_31411 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31411 + 414] = _28961
                                mem[_31411 + 446] = 0
                                mem[_31411 + 478] = address(sha3(0, factoryAddress, _31414, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31411 + 510] = 128
                                mem[_31411 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31411 + 574] = mem[s + _31411 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28961, 0, address(sha3(0, factoryAddress, _31414, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28766):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31411 + 221] = address(_28766)
                                mem[_31411 + 241] = address(_28705)
                                mem[_31411 + 189] = 40
                                mem[_31411 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31411 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31411 + 314] = sha3(address(_28766), address(_28705))
                                mem[_31411 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31411 + 261] = 85
                                mem[_31411 + 378] = 0
                                mem[64] = _31411 + 410
                                mem[_31411 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31411 + 414] = _28961
                                mem[_31411 + 446] = 0
                                mem[_31411 + 478] = address(sha3(0, factoryAddress, _31414, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31411 + 510] = 128
                                mem[_31411 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31411 + 574] = mem[s + _31411 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28961, 0, address(sha3(0, factoryAddress, _31414, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31418 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + 353])
                            mem[mem[64] + 52] = address(_28766)
                            _31419 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31421 = sha3(mem[_31419 + 32 len mem[_31419]])
                            mem[_31418 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31418 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31418 + 125] = _31421
                            mem[_31418 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31418 + 72] = 85
                            if address(_28705) == address(_28766):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31418 + 292 len 29]
                            if address(_28705) < address(_28766):
                                if not address(_28705):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31418 + 221] = address(_28705)
                                mem[_31418 + 241] = address(_28766)
                                mem[_31418 + 189] = 40
                                mem[_31418 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31418 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31418 + 314] = sha3(address(_28705), address(_28766))
                                mem[_31418 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31418 + 261] = 85
                                mem[_31418 + 378] = 0
                                mem[64] = _31418 + 410
                                mem[_31418 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31418 + 414] = _28961
                                mem[_31418 + 446] = 0
                                mem[_31418 + 478] = address(sha3(0, factoryAddress, _31421, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31418 + 510] = 128
                                mem[_31418 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31418 + 574] = mem[s + _31418 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28961, 0, address(sha3(0, factoryAddress, _31421, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28766):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31418 + 221] = address(_28766)
                                mem[_31418 + 241] = address(_28705)
                                mem[_31418 + 189] = 40
                                mem[_31418 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31418 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31418 + 314] = sha3(address(_28766), address(_28705))
                                mem[_31418 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31418 + 261] = 85
                                mem[_31418 + 378] = 0
                                mem[64] = _31418 + 410
                                mem[_31418 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31418 + 414] = _28961
                                mem[_31418 + 446] = 0
                                mem[_31418 + 478] = address(sha3(0, factoryAddress, _31421, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31418 + 510] = 128
                                mem[_31418 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31418 + 574] = mem[s + _31418 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28961, 0, address(sha3(0, factoryAddress, _31421, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
            else:
                if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * arg3.length) + 128]
                _28962 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx + 1) + _10004 + 365 len 20]:
                    if idx >= mem[_10004 + 321] - 2:
                        if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx + 1) + _10004 + 365 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _10004 + 365 len 20] < mem[(32 * idx + 1) + _10004 + 365 len 20]:
                            if not mem[(32 * idx) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31453 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + 353])
                            mem[mem[64] + 52] = address(_28766)
                            _31454 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31456 = sha3(mem[_31454 + 32 len mem[_31454]])
                            mem[_31453 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31453 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31453 + 125] = _31456
                            mem[_31453 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31453 + 72] = 85
                            mem[_31453 + 189] = 0
                            mem[64] = _31453 + 221
                            mem[_31453 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31453 + 225] = 0
                            mem[_31453 + 257] = _28962
                            mem[_31453 + 289] = arg4
                            mem[_31453 + 321] = 128
                            mem[_31453 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31453 + 385] = mem[s + _31453 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31456, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31456, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28962, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31460 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                            mem[mem[64] + 52] = address(_28705)
                            _31461 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31463 = sha3(mem[_31461 + 32 len mem[_31461]])
                            mem[_31460 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31460 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31460 + 125] = _31463
                            mem[_31460 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31460 + 72] = 85
                            mem[_31460 + 189] = 0
                            mem[64] = _31460 + 221
                            mem[_31460 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31460 + 225] = 0
                            mem[_31460 + 257] = _28962
                            mem[_31460 + 289] = arg4
                            mem[_31460 + 321] = 128
                            mem[_31460 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31460 + 385] = mem[s + _31460 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31463, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31463, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28962, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_10004 + 321]
                        _29149 = mem[(32 * idx + 2) + _10004 + 353]
                        if mem[(32 * idx + 1) + _10004 + 365 len 20] == mem[(32 * idx + 2) + _10004 + 365 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _10004 + 365 len 20] < mem[(32 * idx + 2) + _10004 + 365 len 20]:
                            if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31439 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                            mem[mem[64] + 52] = address(_29149)
                            _31440 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31442 = sha3(mem[_31440 + 32 len mem[_31440]])
                            mem[_31439 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31439 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31439 + 125] = _31442
                            mem[_31439 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31439 + 72] = 85
                            if address(_28705) == address(_28766):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31439 + 292 len 29]
                            if address(_28705) < address(_28766):
                                if not address(_28705):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31439 + 221] = address(_28705)
                                mem[_31439 + 241] = address(_28766)
                                mem[_31439 + 189] = 40
                                mem[_31439 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31439 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31439 + 314] = sha3(address(_28705), address(_28766))
                                mem[_31439 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31439 + 261] = 85
                                mem[_31439 + 378] = 0
                                mem[64] = _31439 + 410
                                mem[_31439 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31439 + 414] = 0
                                mem[_31439 + 446] = _28962
                                mem[_31439 + 478] = address(sha3(0, factoryAddress, _31442, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31439 + 510] = 128
                                mem[_31439 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31439 + 574] = mem[s + _31439 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28962, address(sha3(0, factoryAddress, _31442, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28766):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31439 + 221] = address(_28766)
                                mem[_31439 + 241] = address(_28705)
                                mem[_31439 + 189] = 40
                                mem[_31439 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31439 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31439 + 314] = sha3(address(_28766), address(_28705))
                                mem[_31439 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31439 + 261] = 85
                                mem[_31439 + 378] = 0
                                mem[64] = _31439 + 410
                                mem[_31439 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31439 + 414] = 0
                                mem[_31439 + 446] = _28962
                                mem[_31439 + 478] = address(sha3(0, factoryAddress, _31442, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31439 + 510] = 128
                                mem[_31439 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31439 + 574] = mem[s + _31439 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28962, address(sha3(0, factoryAddress, _31442, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31446 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + 353])
                            mem[mem[64] + 52] = address(_28766)
                            _31447 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31449 = sha3(mem[_31447 + 32 len mem[_31447]])
                            mem[_31446 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31446 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31446 + 125] = _31449
                            mem[_31446 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31446 + 72] = 85
                            if address(_28705) == address(_28766):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31446 + 292 len 29]
                            if address(_28705) < address(_28766):
                                if not address(_28705):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31446 + 221] = address(_28705)
                                mem[_31446 + 241] = address(_28766)
                                mem[_31446 + 189] = 40
                                mem[_31446 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31446 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31446 + 314] = sha3(address(_28705), address(_28766))
                                mem[_31446 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31446 + 261] = 85
                                mem[_31446 + 378] = 0
                                mem[64] = _31446 + 410
                                mem[_31446 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31446 + 414] = 0
                                mem[_31446 + 446] = _28962
                                mem[_31446 + 478] = address(sha3(0, factoryAddress, _31449, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31446 + 510] = 128
                                mem[_31446 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31446 + 574] = mem[s + _31446 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28962, address(sha3(0, factoryAddress, _31449, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28766):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31446 + 221] = address(_28766)
                                mem[_31446 + 241] = address(_28705)
                                mem[_31446 + 189] = 40
                                mem[_31446 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31446 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31446 + 314] = sha3(address(_28766), address(_28705))
                                mem[_31446 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31446 + 261] = 85
                                mem[_31446 + 378] = 0
                                mem[64] = _31446 + 410
                                mem[_31446 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31446 + 414] = 0
                                mem[_31446 + 446] = _28962
                                mem[_31446 + 478] = address(sha3(0, factoryAddress, _31449, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31446 + 510] = 128
                                mem[_31446 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31446 + 574] = mem[s + _31446 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28962, address(sha3(0, factoryAddress, _31449, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if idx >= mem[_10004 + 321] - 2:
                        if mem[(32 * idx) + _10004 + 365 len 20] == mem[(32 * idx + 1) + _10004 + 365 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _10004 + 365 len 20] < mem[(32 * idx + 1) + _10004 + 365 len 20]:
                            if not mem[(32 * idx) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31481 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + 353])
                            mem[mem[64] + 52] = address(_28766)
                            _31482 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31484 = sha3(mem[_31482 + 32 len mem[_31482]])
                            mem[_31481 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31481 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31481 + 125] = _31484
                            mem[_31481 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31481 + 72] = 85
                            mem[_31481 + 189] = 0
                            mem[64] = _31481 + 221
                            mem[_31481 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31481 + 225] = _28962
                            mem[_31481 + 257] = 0
                            mem[_31481 + 289] = arg4
                            mem[_31481 + 321] = 128
                            mem[_31481 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31481 + 385] = mem[s + _31481 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31484, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31484, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28962, 0, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31488 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                            mem[mem[64] + 52] = address(_28705)
                            _31489 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31491 = sha3(mem[_31489 + 32 len mem[_31489]])
                            mem[_31488 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31488 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31488 + 125] = _31491
                            mem[_31488 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31488 + 72] = 85
                            mem[_31488 + 189] = 0
                            mem[64] = _31488 + 221
                            mem[_31488 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31488 + 225] = _28962
                            mem[_31488 + 257] = 0
                            mem[_31488 + 289] = arg4
                            mem[_31488 + 321] = 128
                            mem[_31488 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31488 + 385] = mem[s + _31488 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31491, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31491, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28962, 0, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_10004 + 321]
                        _29150 = mem[(32 * idx + 2) + _10004 + 353]
                        if mem[(32 * idx + 1) + _10004 + 365 len 20] == mem[(32 * idx + 2) + _10004 + 365 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _10004 + 365 len 20] < mem[(32 * idx + 2) + _10004 + 365 len 20]:
                            if not mem[(32 * idx + 1) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31467 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + 353])
                            mem[mem[64] + 52] = address(_29150)
                            _31468 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31470 = sha3(mem[_31468 + 32 len mem[_31468]])
                            mem[_31467 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31467 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31467 + 125] = _31470
                            mem[_31467 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31467 + 72] = 85
                            if address(_28705) == address(_28766):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31467 + 292 len 29]
                            if address(_28705) < address(_28766):
                                if not address(_28705):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31467 + 221] = address(_28705)
                                mem[_31467 + 241] = address(_28766)
                                mem[_31467 + 189] = 40
                                mem[_31467 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31467 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31467 + 314] = sha3(address(_28705), address(_28766))
                                mem[_31467 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31467 + 261] = 85
                                mem[_31467 + 378] = 0
                                mem[64] = _31467 + 410
                                mem[_31467 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31467 + 414] = _28962
                                mem[_31467 + 446] = 0
                                mem[_31467 + 478] = address(sha3(0, factoryAddress, _31470, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31467 + 510] = 128
                                mem[_31467 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31467 + 574] = mem[s + _31467 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28962, 0, address(sha3(0, factoryAddress, _31470, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28766):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31467 + 221] = address(_28766)
                                mem[_31467 + 241] = address(_28705)
                                mem[_31467 + 189] = 40
                                mem[_31467 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31467 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31467 + 314] = sha3(address(_28766), address(_28705))
                                mem[_31467 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31467 + 261] = 85
                                mem[_31467 + 378] = 0
                                mem[64] = _31467 + 410
                                mem[_31467 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31467 + 414] = _28962
                                mem[_31467 + 446] = 0
                                mem[_31467 + 478] = address(sha3(0, factoryAddress, _31470, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31467 + 510] = 128
                                mem[_31467 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31467 + 574] = mem[s + _31467 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28962, 0, address(sha3(0, factoryAddress, _31470, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _10004 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31474 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + 353])
                            mem[mem[64] + 52] = address(_28766)
                            _31475 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31477 = sha3(mem[_31475 + 32 len mem[_31475]])
                            mem[_31474 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31474 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31474 + 125] = _31477
                            mem[_31474 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31474 + 72] = 85
                            if address(_28705) == address(_28766):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31474 + 292 len 29]
                            if address(_28705) < address(_28766):
                                if not address(_28705):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31474 + 221] = address(_28705)
                                mem[_31474 + 241] = address(_28766)
                                mem[_31474 + 189] = 40
                                mem[_31474 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31474 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31474 + 314] = sha3(address(_28705), address(_28766))
                                mem[_31474 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31474 + 261] = 85
                                mem[_31474 + 378] = 0
                                mem[64] = _31474 + 410
                                mem[_31474 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31474 + 414] = _28962
                                mem[_31474 + 446] = 0
                                mem[_31474 + 478] = address(sha3(0, factoryAddress, _31477, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31474 + 510] = 128
                                mem[_31474 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31474 + 574] = mem[s + _31474 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28705), address(_28766)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28962, 0, address(sha3(0, factoryAddress, _31477, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28766):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31474 + 221] = address(_28766)
                                mem[_31474 + 241] = address(_28705)
                                mem[_31474 + 189] = 40
                                mem[_31474 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31474 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31474 + 314] = sha3(address(_28766), address(_28705))
                                mem[_31474 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31474 + 261] = 85
                                mem[_31474 + 378] = 0
                                mem[64] = _31474 + 410
                                mem[_31474 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31474 + 414] = _28962
                                mem[_31474 + 446] = 0
                                mem[_31474 + 478] = address(sha3(0, factoryAddress, _31477, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31474 + 510] = 128
                                mem[_31474 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31474 + 574] = mem[s + _31474 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28766), address(_28705)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28962, 0, address(sha3(0, factoryAddress, _31477, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
        _28765 = mem[(32 * arg3.length) + 128]
        mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _28765) + 32]
    mem[_10004 + 321] = return_data.size
    mem[_10004 + 353 len return_data.size] = ext_call.return_data[0 len return_data.size]
    if not ext_call.success:
        revert with 0, 
                    32,
                    49,
                    0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                    mem[_10004 + ceil32(return_data.size) + 439 len 15]
    if not return_data.size:
        mem[64] = _10004 + ceil32(return_data.size) + (32 * arg3.length) + 354
        mem[_10004 + ceil32(return_data.size) + 322] = arg3.length
        mem[_10004 + ceil32(return_data.size) + 354 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
        mem[_10004 + ceil32(return_data.size) + (32 * arg3.length) + 354] = 0
        idx = 0
        while idx < arg3.length - 1:
            require idx < mem[_10004 + ceil32(return_data.size) + 322]
            _28707 = mem[(32 * idx) + _10004 + ceil32(return_data.size) + 354]
            require idx + 1 < mem[_10004 + ceil32(return_data.size) + 322]
            _28770 = mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354]
            if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                if not mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * arg3.length) + 128]
                _28963 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20]:
                    if idx >= mem[_10004 + ceil32(return_data.size) + 322] - 2:
                        if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31509 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28770)
                            _31510 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31512 = sha3(mem[_31510 + 32 len mem[_31510]])
                            mem[_31509 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31509 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31509 + 125] = _31512
                            mem[_31509 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31509 + 72] = 85
                            mem[_31509 + 189] = 0
                            mem[64] = _31509 + 221
                            mem[_31509 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31509 + 225] = 0
                            mem[_31509 + 257] = _28963
                            mem[_31509 + 289] = arg4
                            mem[_31509 + 321] = 128
                            mem[_31509 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31509 + 385] = mem[s + _31509 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31512, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31512, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28963, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31516 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28707)
                            _31517 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31519 = sha3(mem[_31517 + 32 len mem[_31517]])
                            mem[_31516 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31516 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31516 + 125] = _31519
                            mem[_31516 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31516 + 72] = 85
                            mem[_31516 + 189] = 0
                            mem[64] = _31516 + 221
                            mem[_31516 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31516 + 225] = 0
                            mem[_31516 + 257] = _28963
                            mem[_31516 + 289] = arg4
                            mem[_31516 + 321] = 128
                            mem[_31516 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31516 + 385] = mem[s + _31516 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31519, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31519, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28963, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_10004 + ceil32(return_data.size) + 322]
                        _29151 = mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354]
                        if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31495 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_29151)
                            _31496 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31498 = sha3(mem[_31496 + 32 len mem[_31496]])
                            mem[_31495 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31495 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31495 + 125] = _31498
                            mem[_31495 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31495 + 72] = 85
                            if address(_28707) == address(_28770):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31495 + 292 len 29]
                            if address(_28707) < address(_28770):
                                if not address(_28707):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31495 + 221] = address(_28707)
                                mem[_31495 + 241] = address(_28770)
                                mem[_31495 + 189] = 40
                                mem[_31495 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31495 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31495 + 314] = sha3(address(_28707), address(_28770))
                                mem[_31495 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31495 + 261] = 85
                                mem[_31495 + 378] = 0
                                mem[64] = _31495 + 410
                                mem[_31495 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31495 + 414] = 0
                                mem[_31495 + 446] = _28963
                                mem[_31495 + 478] = address(sha3(0, factoryAddress, _31498, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31495 + 510] = 128
                                mem[_31495 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31495 + 574] = mem[s + _31495 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28963, address(sha3(0, factoryAddress, _31498, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28770):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31495 + 221] = address(_28770)
                                mem[_31495 + 241] = address(_28707)
                                mem[_31495 + 189] = 40
                                mem[_31495 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31495 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31495 + 314] = sha3(address(_28770), address(_28707))
                                mem[_31495 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31495 + 261] = 85
                                mem[_31495 + 378] = 0
                                mem[64] = _31495 + 410
                                mem[_31495 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31495 + 414] = 0
                                mem[_31495 + 446] = _28963
                                mem[_31495 + 478] = address(sha3(0, factoryAddress, _31498, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31495 + 510] = 128
                                mem[_31495 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31495 + 574] = mem[s + _31495 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28963, address(sha3(0, factoryAddress, _31498, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31502 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28770)
                            _31503 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31505 = sha3(mem[_31503 + 32 len mem[_31503]])
                            mem[_31502 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31502 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31502 + 125] = _31505
                            mem[_31502 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31502 + 72] = 85
                            if address(_28707) == address(_28770):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31502 + 292 len 29]
                            if address(_28707) < address(_28770):
                                if not address(_28707):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31502 + 221] = address(_28707)
                                mem[_31502 + 241] = address(_28770)
                                mem[_31502 + 189] = 40
                                mem[_31502 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31502 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31502 + 314] = sha3(address(_28707), address(_28770))
                                mem[_31502 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31502 + 261] = 85
                                mem[_31502 + 378] = 0
                                mem[64] = _31502 + 410
                                mem[_31502 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31502 + 414] = 0
                                mem[_31502 + 446] = _28963
                                mem[_31502 + 478] = address(sha3(0, factoryAddress, _31505, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31502 + 510] = 128
                                mem[_31502 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31502 + 574] = mem[s + _31502 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28963, address(sha3(0, factoryAddress, _31505, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28770):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31502 + 221] = address(_28770)
                                mem[_31502 + 241] = address(_28707)
                                mem[_31502 + 189] = 40
                                mem[_31502 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31502 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31502 + 314] = sha3(address(_28770), address(_28707))
                                mem[_31502 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31502 + 261] = 85
                                mem[_31502 + 378] = 0
                                mem[64] = _31502 + 410
                                mem[_31502 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31502 + 414] = 0
                                mem[_31502 + 446] = _28963
                                mem[_31502 + 478] = address(sha3(0, factoryAddress, _31505, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31502 + 510] = 128
                                mem[_31502 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31502 + 574] = mem[s + _31502 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28963, address(sha3(0, factoryAddress, _31505, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if idx >= mem[_10004 + ceil32(return_data.size) + 322] - 2:
                        if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31537 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28770)
                            _31538 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31540 = sha3(mem[_31538 + 32 len mem[_31538]])
                            mem[_31537 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31537 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31537 + 125] = _31540
                            mem[_31537 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31537 + 72] = 85
                            mem[_31537 + 189] = 0
                            mem[64] = _31537 + 221
                            mem[_31537 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31537 + 225] = _28963
                            mem[_31537 + 257] = 0
                            mem[_31537 + 289] = arg4
                            mem[_31537 + 321] = 128
                            mem[_31537 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31537 + 385] = mem[s + _31537 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31540, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31540, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28963, 0, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31544 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28707)
                            _31545 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31547 = sha3(mem[_31545 + 32 len mem[_31545]])
                            mem[_31544 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31544 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31544 + 125] = _31547
                            mem[_31544 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31544 + 72] = 85
                            mem[_31544 + 189] = 0
                            mem[64] = _31544 + 221
                            mem[_31544 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31544 + 225] = _28963
                            mem[_31544 + 257] = 0
                            mem[_31544 + 289] = arg4
                            mem[_31544 + 321] = 128
                            mem[_31544 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31544 + 385] = mem[s + _31544 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31547, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31547, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28963, 0, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_10004 + ceil32(return_data.size) + 322]
                        _29152 = mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354]
                        if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31523 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_29152)
                            _31524 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31526 = sha3(mem[_31524 + 32 len mem[_31524]])
                            mem[_31523 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31523 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31523 + 125] = _31526
                            mem[_31523 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31523 + 72] = 85
                            if address(_28707) == address(_28770):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31523 + 292 len 29]
                            if address(_28707) < address(_28770):
                                if not address(_28707):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31523 + 221] = address(_28707)
                                mem[_31523 + 241] = address(_28770)
                                mem[_31523 + 189] = 40
                                mem[_31523 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31523 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31523 + 314] = sha3(address(_28707), address(_28770))
                                mem[_31523 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31523 + 261] = 85
                                mem[_31523 + 378] = 0
                                mem[64] = _31523 + 410
                                mem[_31523 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31523 + 414] = _28963
                                mem[_31523 + 446] = 0
                                mem[_31523 + 478] = address(sha3(0, factoryAddress, _31526, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31523 + 510] = 128
                                mem[_31523 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31523 + 574] = mem[s + _31523 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28963, 0, address(sha3(0, factoryAddress, _31526, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28770):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31523 + 221] = address(_28770)
                                mem[_31523 + 241] = address(_28707)
                                mem[_31523 + 189] = 40
                                mem[_31523 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31523 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31523 + 314] = sha3(address(_28770), address(_28707))
                                mem[_31523 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31523 + 261] = 85
                                mem[_31523 + 378] = 0
                                mem[64] = _31523 + 410
                                mem[_31523 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31523 + 414] = _28963
                                mem[_31523 + 446] = 0
                                mem[_31523 + 478] = address(sha3(0, factoryAddress, _31526, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31523 + 510] = 128
                                mem[_31523 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31523 + 574] = mem[s + _31523 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28963, 0, address(sha3(0, factoryAddress, _31526, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31530 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28770)
                            _31531 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31533 = sha3(mem[_31531 + 32 len mem[_31531]])
                            mem[_31530 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31530 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31530 + 125] = _31533
                            mem[_31530 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31530 + 72] = 85
                            if address(_28707) == address(_28770):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31530 + 292 len 29]
                            if address(_28707) < address(_28770):
                                if not address(_28707):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31530 + 221] = address(_28707)
                                mem[_31530 + 241] = address(_28770)
                                mem[_31530 + 189] = 40
                                mem[_31530 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31530 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31530 + 314] = sha3(address(_28707), address(_28770))
                                mem[_31530 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31530 + 261] = 85
                                mem[_31530 + 378] = 0
                                mem[64] = _31530 + 410
                                mem[_31530 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31530 + 414] = _28963
                                mem[_31530 + 446] = 0
                                mem[_31530 + 478] = address(sha3(0, factoryAddress, _31533, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31530 + 510] = 128
                                mem[_31530 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31530 + 574] = mem[s + _31530 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28963, 0, address(sha3(0, factoryAddress, _31533, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28770):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31530 + 221] = address(_28770)
                                mem[_31530 + 241] = address(_28707)
                                mem[_31530 + 189] = 40
                                mem[_31530 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31530 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31530 + 314] = sha3(address(_28770), address(_28707))
                                mem[_31530 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31530 + 261] = 85
                                mem[_31530 + 378] = 0
                                mem[64] = _31530 + 410
                                mem[_31530 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31530 + 414] = _28963
                                mem[_31530 + 446] = 0
                                mem[_31530 + 478] = address(sha3(0, factoryAddress, _31533, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31530 + 510] = 128
                                mem[_31530 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31530 + 574] = mem[s + _31530 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28963, 0, address(sha3(0, factoryAddress, _31533, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
            else:
                if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * arg3.length) + 128]
                _28964 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
                if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                    if idx >= mem[_10004 + ceil32(return_data.size) + 322] - 2:
                        if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31565 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28770)
                            _31566 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31568 = sha3(mem[_31566 + 32 len mem[_31566]])
                            mem[_31565 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31565 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31565 + 125] = _31568
                            mem[_31565 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31565 + 72] = 85
                            mem[_31565 + 189] = 0
                            mem[64] = _31565 + 221
                            mem[_31565 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31565 + 225] = 0
                            mem[_31565 + 257] = _28964
                            mem[_31565 + 289] = arg4
                            mem[_31565 + 321] = 128
                            mem[_31565 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31565 + 385] = mem[s + _31565 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31568, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31568, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28964, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31572 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28707)
                            _31573 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31575 = sha3(mem[_31573 + 32 len mem[_31573]])
                            mem[_31572 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31572 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31572 + 125] = _31575
                            mem[_31572 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31572 + 72] = 85
                            mem[_31572 + 189] = 0
                            mem[64] = _31572 + 221
                            mem[_31572 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31572 + 225] = 0
                            mem[_31572 + 257] = _28964
                            mem[_31572 + 289] = arg4
                            mem[_31572 + 321] = 128
                            mem[_31572 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31572 + 385] = mem[s + _31572 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31575, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31575, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28964, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_10004 + ceil32(return_data.size) + 322]
                        _29153 = mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354]
                        if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31551 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_29153)
                            _31552 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31554 = sha3(mem[_31552 + 32 len mem[_31552]])
                            mem[_31551 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31551 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31551 + 125] = _31554
                            mem[_31551 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31551 + 72] = 85
                            if address(_28707) == address(_28770):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31551 + 292 len 29]
                            if address(_28707) < address(_28770):
                                if not address(_28707):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31551 + 221] = address(_28707)
                                mem[_31551 + 241] = address(_28770)
                                mem[_31551 + 189] = 40
                                mem[_31551 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31551 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31551 + 314] = sha3(address(_28707), address(_28770))
                                mem[_31551 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31551 + 261] = 85
                                mem[_31551 + 378] = 0
                                mem[64] = _31551 + 410
                                mem[_31551 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31551 + 414] = 0
                                mem[_31551 + 446] = _28964
                                mem[_31551 + 478] = address(sha3(0, factoryAddress, _31554, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31551 + 510] = 128
                                mem[_31551 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31551 + 574] = mem[s + _31551 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28964, address(sha3(0, factoryAddress, _31554, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28770):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31551 + 221] = address(_28770)
                                mem[_31551 + 241] = address(_28707)
                                mem[_31551 + 189] = 40
                                mem[_31551 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31551 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31551 + 314] = sha3(address(_28770), address(_28707))
                                mem[_31551 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31551 + 261] = 85
                                mem[_31551 + 378] = 0
                                mem[64] = _31551 + 410
                                mem[_31551 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31551 + 414] = 0
                                mem[_31551 + 446] = _28964
                                mem[_31551 + 478] = address(sha3(0, factoryAddress, _31554, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31551 + 510] = 128
                                mem[_31551 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31551 + 574] = mem[s + _31551 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28964, address(sha3(0, factoryAddress, _31554, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31558 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28770)
                            _31559 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31561 = sha3(mem[_31559 + 32 len mem[_31559]])
                            mem[_31558 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31558 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31558 + 125] = _31561
                            mem[_31558 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31558 + 72] = 85
                            if address(_28707) == address(_28770):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31558 + 292 len 29]
                            if address(_28707) < address(_28770):
                                if not address(_28707):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31558 + 221] = address(_28707)
                                mem[_31558 + 241] = address(_28770)
                                mem[_31558 + 189] = 40
                                mem[_31558 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31558 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31558 + 314] = sha3(address(_28707), address(_28770))
                                mem[_31558 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31558 + 261] = 85
                                mem[_31558 + 378] = 0
                                mem[64] = _31558 + 410
                                mem[_31558 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31558 + 414] = 0
                                mem[_31558 + 446] = _28964
                                mem[_31558 + 478] = address(sha3(0, factoryAddress, _31561, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31558 + 510] = 128
                                mem[_31558 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31558 + 574] = mem[s + _31558 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28964, address(sha3(0, factoryAddress, _31561, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28770):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31558 + 221] = address(_28770)
                                mem[_31558 + 241] = address(_28707)
                                mem[_31558 + 189] = 40
                                mem[_31558 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31558 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31558 + 314] = sha3(address(_28770), address(_28707))
                                mem[_31558 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31558 + 261] = 85
                                mem[_31558 + 378] = 0
                                mem[64] = _31558 + 410
                                mem[_31558 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31558 + 414] = 0
                                mem[_31558 + 446] = _28964
                                mem[_31558 + 478] = address(sha3(0, factoryAddress, _31561, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31558 + 510] = 128
                                mem[_31558 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31558 + 574] = mem[s + _31558 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _28964, address(sha3(0, factoryAddress, _31561, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                else:
                    if idx >= mem[_10004 + ceil32(return_data.size) + 322] - 2:
                        if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31593 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28770)
                            _31594 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31596 = sha3(mem[_31594 + 32 len mem[_31594]])
                            mem[_31593 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31593 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31593 + 125] = _31596
                            mem[_31593 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31593 + 72] = 85
                            mem[_31593 + 189] = 0
                            mem[64] = _31593 + 221
                            mem[_31593 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31593 + 225] = _28964
                            mem[_31593 + 257] = 0
                            mem[_31593 + 289] = arg4
                            mem[_31593 + 321] = 128
                            mem[_31593 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31593 + 385] = mem[s + _31593 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31596, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31596, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28964, 0, address(arg4), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31600 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28707)
                            _31601 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31603 = sha3(mem[_31601 + 32 len mem[_31601]])
                            mem[_31600 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31600 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31600 + 125] = _31603
                            mem[_31600 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31600 + 72] = 85
                            mem[_31600 + 189] = 0
                            mem[64] = _31600 + 221
                            mem[_31600 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31600 + 225] = _28964
                            mem[_31600 + 257] = 0
                            mem[_31600 + 289] = arg4
                            mem[_31600 + 321] = 128
                            mem[_31600 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31600 + 385] = mem[s + _31600 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _31603, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, _31603, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28964, 0, address(arg4), 128, 0
                    else:
                        require idx + 2 < mem[_10004 + ceil32(return_data.size) + 322]
                        _29154 = mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354]
                        if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31579 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_29154)
                            _31580 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31582 = sha3(mem[_31580 + 32 len mem[_31580]])
                            mem[_31579 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31579 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31579 + 125] = _31582
                            mem[_31579 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31579 + 72] = 85
                            if address(_28707) == address(_28770):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31579 + 292 len 29]
                            if address(_28707) < address(_28770):
                                if not address(_28707):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31579 + 221] = address(_28707)
                                mem[_31579 + 241] = address(_28770)
                                mem[_31579 + 189] = 40
                                mem[_31579 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31579 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31579 + 314] = sha3(address(_28707), address(_28770))
                                mem[_31579 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31579 + 261] = 85
                                mem[_31579 + 378] = 0
                                mem[64] = _31579 + 410
                                mem[_31579 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31579 + 414] = _28964
                                mem[_31579 + 446] = 0
                                mem[_31579 + 478] = address(sha3(0, factoryAddress, _31582, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31579 + 510] = 128
                                mem[_31579 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31579 + 574] = mem[s + _31579 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28964, 0, address(sha3(0, factoryAddress, _31582, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28770):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31579 + 221] = address(_28770)
                                mem[_31579 + 241] = address(_28707)
                                mem[_31579 + 189] = 40
                                mem[_31579 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31579 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31579 + 314] = sha3(address(_28770), address(_28707))
                                mem[_31579 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31579 + 261] = 85
                                mem[_31579 + 378] = 0
                                mem[64] = _31579 + 410
                                mem[_31579 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31579 + 414] = _28964
                                mem[_31579 + 446] = 0
                                mem[_31579 + 478] = address(sha3(0, factoryAddress, _31582, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31579 + 510] = 128
                                mem[_31579 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31579 + 574] = mem[s + _31579 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28964, 0, address(sha3(0, factoryAddress, _31582, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _31586 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_28770)
                            _31587 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _31589 = sha3(mem[_31587 + 32 len mem[_31587]])
                            mem[_31586 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31586 + 105] = Mask(160, 96, factoryAddress)
                            mem[_31586 + 125] = _31589
                            mem[_31586 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31586 + 72] = 85
                            if address(_28707) == address(_28770):
                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31586 + 292 len 29]
                            if address(_28707) < address(_28770):
                                if not address(_28707):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31586 + 221] = address(_28707)
                                mem[_31586 + 241] = address(_28770)
                                mem[_31586 + 189] = 40
                                mem[_31586 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31586 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31586 + 314] = sha3(address(_28707), address(_28770))
                                mem[_31586 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31586 + 261] = 85
                                mem[_31586 + 378] = 0
                                mem[64] = _31586 + 410
                                mem[_31586 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31586 + 414] = _28964
                                mem[_31586 + 446] = 0
                                mem[_31586 + 478] = address(sha3(0, factoryAddress, _31589, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31586 + 510] = 128
                                mem[_31586 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31586 + 574] = mem[s + _31586 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28707), address(_28770)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28964, 0, address(sha3(0, factoryAddress, _31589, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                            else:
                                if not address(_28770):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_31586 + 221] = address(_28770)
                                mem[_31586 + 241] = address(_28707)
                                mem[_31586 + 189] = 40
                                mem[_31586 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_31586 + 294] = Mask(160, 96, factoryAddress)
                                mem[_31586 + 314] = sha3(address(_28770), address(_28707))
                                mem[_31586 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                                mem[_31586 + 261] = 85
                                mem[_31586 + 378] = 0
                                mem[64] = _31586 + 410
                                mem[_31586 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_31586 + 414] = _28964
                                mem[_31586 + 446] = 0
                                mem[_31586 + 478] = address(sha3(0, factoryAddress, _31589, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                                mem[_31586 + 510] = 128
                                mem[_31586 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _31586 + 574] = mem[s + _31586 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                                call address(sha3(0, factoryAddress, sha3(address(_28770), address(_28707)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _28964, 0, address(sha3(0, factoryAddress, _31589, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
        _28769 = mem[(32 * arg3.length) + 128]
        mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _28769) + 32]
    require return_data.size >= 32
    if not mem[_10004 + 353]:
        revert with 0, 
                    32,
                    49,
                    0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                    mem[_10004 + ceil32(return_data.size) + 439 len 15]
    mem[64] = _10004 + ceil32(return_data.size) + (32 * arg3.length) + 354
    mem[_10004 + ceil32(return_data.size) + 322] = arg3.length
    mem[_10004 + ceil32(return_data.size) + 354 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
    mem[_10004 + ceil32(return_data.size) + (32 * arg3.length) + 354] = 0
    idx = 0
    while idx < arg3.length - 1:
        require idx < mem[_10004 + ceil32(return_data.size) + 322]
        _28709 = mem[(32 * idx) + _10004 + ceil32(return_data.size) + 354]
        require idx + 1 < mem[_10004 + ceil32(return_data.size) + 322]
        _28774 = mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354]
        if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
        if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
            if not mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            require idx + 1 < mem[(32 * arg3.length) + 128]
            _28965 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
            if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20]:
                if idx >= mem[_10004 + ceil32(return_data.size) + 322] - 2:
                    if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31621 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_28774)
                        _31622 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31624 = sha3(mem[_31622 + 32 len mem[_31622]])
                        mem[_31621 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31621 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31621 + 125] = _31624
                        mem[_31621 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31621 + 72] = 85
                        mem[_31621 + 189] = 0
                        mem[64] = _31621 + 221
                        mem[_31621 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_31621 + 225] = 0
                        mem[_31621 + 257] = _28965
                        mem[_31621 + 289] = arg4
                        mem[_31621 + 321] = 128
                        mem[_31621 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _31621 + 385] = mem[s + _31621 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _31624, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        call address(sha3(0, factoryAddress, _31624, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _28965, address(arg4), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31628 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_28709)
                        _31629 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31631 = sha3(mem[_31629 + 32 len mem[_31629]])
                        mem[_31628 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31628 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31628 + 125] = _31631
                        mem[_31628 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31628 + 72] = 85
                        mem[_31628 + 189] = 0
                        mem[64] = _31628 + 221
                        mem[_31628 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_31628 + 225] = 0
                        mem[_31628 + 257] = _28965
                        mem[_31628 + 289] = arg4
                        mem[_31628 + 321] = 128
                        mem[_31628 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _31628 + 385] = mem[s + _31628 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _31631, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        call address(sha3(0, factoryAddress, _31631, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _28965, address(arg4), 128, 0
                else:
                    require idx + 2 < mem[_10004 + ceil32(return_data.size) + 322]
                    _29155 = mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354]
                    if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31607 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_29155)
                        _31608 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31610 = sha3(mem[_31608 + 32 len mem[_31608]])
                        mem[_31607 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31607 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31607 + 125] = _31610
                        mem[_31607 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31607 + 72] = 85
                        if address(_28709) == address(_28774):
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31607 + 292 len 29]
                        if address(_28709) < address(_28774):
                            if not address(_28709):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31607 + 221] = address(_28709)
                            mem[_31607 + 241] = address(_28774)
                            mem[_31607 + 189] = 40
                            mem[_31607 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31607 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31607 + 314] = sha3(address(_28709), address(_28774))
                            mem[_31607 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31607 + 261] = 85
                            mem[_31607 + 378] = 0
                            mem[64] = _31607 + 410
                            mem[_31607 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31607 + 414] = 0
                            mem[_31607 + 446] = _28965
                            mem[_31607 + 478] = address(sha3(0, factoryAddress, _31610, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31607 + 510] = 128
                            mem[_31607 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31607 + 574] = mem[s + _31607 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28965, address(sha3(0, factoryAddress, _31610, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not address(_28774):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31607 + 221] = address(_28774)
                            mem[_31607 + 241] = address(_28709)
                            mem[_31607 + 189] = 40
                            mem[_31607 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31607 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31607 + 314] = sha3(address(_28774), address(_28709))
                            mem[_31607 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31607 + 261] = 85
                            mem[_31607 + 378] = 0
                            mem[64] = _31607 + 410
                            mem[_31607 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31607 + 414] = 0
                            mem[_31607 + 446] = _28965
                            mem[_31607 + 478] = address(sha3(0, factoryAddress, _31610, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31607 + 510] = 128
                            mem[_31607 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31607 + 574] = mem[s + _31607 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28965, address(sha3(0, factoryAddress, _31610, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if not mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31614 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_28774)
                        _31615 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31617 = sha3(mem[_31615 + 32 len mem[_31615]])
                        mem[_31614 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31614 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31614 + 125] = _31617
                        mem[_31614 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31614 + 72] = 85
                        if address(_28709) == address(_28774):
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31614 + 292 len 29]
                        if address(_28709) < address(_28774):
                            if not address(_28709):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31614 + 221] = address(_28709)
                            mem[_31614 + 241] = address(_28774)
                            mem[_31614 + 189] = 40
                            mem[_31614 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31614 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31614 + 314] = sha3(address(_28709), address(_28774))
                            mem[_31614 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31614 + 261] = 85
                            mem[_31614 + 378] = 0
                            mem[64] = _31614 + 410
                            mem[_31614 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31614 + 414] = 0
                            mem[_31614 + 446] = _28965
                            mem[_31614 + 478] = address(sha3(0, factoryAddress, _31617, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31614 + 510] = 128
                            mem[_31614 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31614 + 574] = mem[s + _31614 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28965, address(sha3(0, factoryAddress, _31617, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not address(_28774):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31614 + 221] = address(_28774)
                            mem[_31614 + 241] = address(_28709)
                            mem[_31614 + 189] = 40
                            mem[_31614 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31614 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31614 + 314] = sha3(address(_28774), address(_28709))
                            mem[_31614 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31614 + 261] = 85
                            mem[_31614 + 378] = 0
                            mem[64] = _31614 + 410
                            mem[_31614 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31614 + 414] = 0
                            mem[_31614 + 446] = _28965
                            mem[_31614 + 478] = address(sha3(0, factoryAddress, _31617, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31614 + 510] = 128
                            mem[_31614 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31614 + 574] = mem[s + _31614 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28965, address(sha3(0, factoryAddress, _31617, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
            else:
                if idx >= mem[_10004 + ceil32(return_data.size) + 322] - 2:
                    if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31649 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_28774)
                        _31650 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31652 = sha3(mem[_31650 + 32 len mem[_31650]])
                        mem[_31649 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31649 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31649 + 125] = _31652
                        mem[_31649 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31649 + 72] = 85
                        mem[_31649 + 189] = 0
                        mem[64] = _31649 + 221
                        mem[_31649 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_31649 + 225] = _28965
                        mem[_31649 + 257] = 0
                        mem[_31649 + 289] = arg4
                        mem[_31649 + 321] = 128
                        mem[_31649 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _31649 + 385] = mem[s + _31649 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _31652, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        call address(sha3(0, factoryAddress, _31652, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _28965, 0, address(arg4), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31656 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_28709)
                        _31657 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31659 = sha3(mem[_31657 + 32 len mem[_31657]])
                        mem[_31656 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31656 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31656 + 125] = _31659
                        mem[_31656 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31656 + 72] = 85
                        mem[_31656 + 189] = 0
                        mem[64] = _31656 + 221
                        mem[_31656 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_31656 + 225] = _28965
                        mem[_31656 + 257] = 0
                        mem[_31656 + 289] = arg4
                        mem[_31656 + 321] = 128
                        mem[_31656 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _31656 + 385] = mem[s + _31656 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _31659, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        call address(sha3(0, factoryAddress, _31659, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _28965, 0, address(arg4), 128, 0
                else:
                    require idx + 2 < mem[_10004 + ceil32(return_data.size) + 322]
                    _29156 = mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354]
                    if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31635 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_29156)
                        _31636 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31638 = sha3(mem[_31636 + 32 len mem[_31636]])
                        mem[_31635 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31635 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31635 + 125] = _31638
                        mem[_31635 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31635 + 72] = 85
                        if address(_28709) == address(_28774):
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31635 + 292 len 29]
                        if address(_28709) < address(_28774):
                            if not address(_28709):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31635 + 221] = address(_28709)
                            mem[_31635 + 241] = address(_28774)
                            mem[_31635 + 189] = 40
                            mem[_31635 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31635 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31635 + 314] = sha3(address(_28709), address(_28774))
                            mem[_31635 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31635 + 261] = 85
                            mem[_31635 + 378] = 0
                            mem[64] = _31635 + 410
                            mem[_31635 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31635 + 414] = _28965
                            mem[_31635 + 446] = 0
                            mem[_31635 + 478] = address(sha3(0, factoryAddress, _31638, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31635 + 510] = 128
                            mem[_31635 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31635 + 574] = mem[s + _31635 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28965, 0, address(sha3(0, factoryAddress, _31638, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not address(_28774):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31635 + 221] = address(_28774)
                            mem[_31635 + 241] = address(_28709)
                            mem[_31635 + 189] = 40
                            mem[_31635 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31635 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31635 + 314] = sha3(address(_28774), address(_28709))
                            mem[_31635 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31635 + 261] = 85
                            mem[_31635 + 378] = 0
                            mem[64] = _31635 + 410
                            mem[_31635 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31635 + 414] = _28965
                            mem[_31635 + 446] = 0
                            mem[_31635 + 478] = address(sha3(0, factoryAddress, _31638, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31635 + 510] = 128
                            mem[_31635 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31635 + 574] = mem[s + _31635 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28965, 0, address(sha3(0, factoryAddress, _31638, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if not mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31642 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_28774)
                        _31643 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31645 = sha3(mem[_31643 + 32 len mem[_31643]])
                        mem[_31642 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31642 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31642 + 125] = _31645
                        mem[_31642 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31642 + 72] = 85
                        if address(_28709) == address(_28774):
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31642 + 292 len 29]
                        if address(_28709) < address(_28774):
                            if not address(_28709):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31642 + 221] = address(_28709)
                            mem[_31642 + 241] = address(_28774)
                            mem[_31642 + 189] = 40
                            mem[_31642 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31642 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31642 + 314] = sha3(address(_28709), address(_28774))
                            mem[_31642 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31642 + 261] = 85
                            mem[_31642 + 378] = 0
                            mem[64] = _31642 + 410
                            mem[_31642 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31642 + 414] = _28965
                            mem[_31642 + 446] = 0
                            mem[_31642 + 478] = address(sha3(0, factoryAddress, _31645, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31642 + 510] = 128
                            mem[_31642 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31642 + 574] = mem[s + _31642 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28965, 0, address(sha3(0, factoryAddress, _31645, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not address(_28774):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31642 + 221] = address(_28774)
                            mem[_31642 + 241] = address(_28709)
                            mem[_31642 + 189] = 40
                            mem[_31642 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31642 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31642 + 314] = sha3(address(_28774), address(_28709))
                            mem[_31642 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31642 + 261] = 85
                            mem[_31642 + 378] = 0
                            mem[64] = _31642 + 410
                            mem[_31642 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31642 + 414] = _28965
                            mem[_31642 + 446] = 0
                            mem[_31642 + 478] = address(sha3(0, factoryAddress, _31645, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31642 + 510] = 128
                            mem[_31642 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31642 + 574] = mem[s + _31642 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28965, 0, address(sha3(0, factoryAddress, _31645, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
        else:
            if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            require idx + 1 < mem[(32 * arg3.length) + 128]
            _28966 = mem[(32 * idx + 1) + (32 * arg3.length) + 160]
            if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                if idx >= mem[_10004 + ceil32(return_data.size) + 322] - 2:
                    if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31677 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_28774)
                        _31678 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31680 = sha3(mem[_31678 + 32 len mem[_31678]])
                        mem[_31677 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31677 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31677 + 125] = _31680
                        mem[_31677 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31677 + 72] = 85
                        mem[_31677 + 189] = 0
                        mem[64] = _31677 + 221
                        mem[_31677 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_31677 + 225] = 0
                        mem[_31677 + 257] = _28966
                        mem[_31677 + 289] = arg4
                        mem[_31677 + 321] = 128
                        mem[_31677 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _31677 + 385] = mem[s + _31677 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _31680, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        call address(sha3(0, factoryAddress, _31680, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _28966, address(arg4), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31684 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_28709)
                        _31685 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31687 = sha3(mem[_31685 + 32 len mem[_31685]])
                        mem[_31684 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31684 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31684 + 125] = _31687
                        mem[_31684 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31684 + 72] = 85
                        mem[_31684 + 189] = 0
                        mem[64] = _31684 + 221
                        mem[_31684 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_31684 + 225] = 0
                        mem[_31684 + 257] = _28966
                        mem[_31684 + 289] = arg4
                        mem[_31684 + 321] = 128
                        mem[_31684 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _31684 + 385] = mem[s + _31684 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _31687, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        call address(sha3(0, factoryAddress, _31687, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _28966, address(arg4), 128, 0
                else:
                    require idx + 2 < mem[_10004 + ceil32(return_data.size) + 322]
                    _29157 = mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354]
                    if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31663 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_29157)
                        _31664 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31666 = sha3(mem[_31664 + 32 len mem[_31664]])
                        mem[_31663 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31663 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31663 + 125] = _31666
                        mem[_31663 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31663 + 72] = 85
                        if address(_28709) == address(_28774):
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31663 + 292 len 29]
                        if address(_28709) < address(_28774):
                            if not address(_28709):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31663 + 221] = address(_28709)
                            mem[_31663 + 241] = address(_28774)
                            mem[_31663 + 189] = 40
                            mem[_31663 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31663 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31663 + 314] = sha3(address(_28709), address(_28774))
                            mem[_31663 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31663 + 261] = 85
                            mem[_31663 + 378] = 0
                            mem[64] = _31663 + 410
                            mem[_31663 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31663 + 414] = 0
                            mem[_31663 + 446] = _28966
                            mem[_31663 + 478] = address(sha3(0, factoryAddress, _31666, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31663 + 510] = 128
                            mem[_31663 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31663 + 574] = mem[s + _31663 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28966, address(sha3(0, factoryAddress, _31666, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not address(_28774):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31663 + 221] = address(_28774)
                            mem[_31663 + 241] = address(_28709)
                            mem[_31663 + 189] = 40
                            mem[_31663 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31663 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31663 + 314] = sha3(address(_28774), address(_28709))
                            mem[_31663 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31663 + 261] = 85
                            mem[_31663 + 378] = 0
                            mem[64] = _31663 + 410
                            mem[_31663 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31663 + 414] = 0
                            mem[_31663 + 446] = _28966
                            mem[_31663 + 478] = address(sha3(0, factoryAddress, _31666, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31663 + 510] = 128
                            mem[_31663 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31663 + 574] = mem[s + _31663 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28966, address(sha3(0, factoryAddress, _31666, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if not mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31670 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_28774)
                        _31671 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31673 = sha3(mem[_31671 + 32 len mem[_31671]])
                        mem[_31670 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31670 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31670 + 125] = _31673
                        mem[_31670 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31670 + 72] = 85
                        if address(_28709) == address(_28774):
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31670 + 292 len 29]
                        if address(_28709) < address(_28774):
                            if not address(_28709):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31670 + 221] = address(_28709)
                            mem[_31670 + 241] = address(_28774)
                            mem[_31670 + 189] = 40
                            mem[_31670 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31670 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31670 + 314] = sha3(address(_28709), address(_28774))
                            mem[_31670 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31670 + 261] = 85
                            mem[_31670 + 378] = 0
                            mem[64] = _31670 + 410
                            mem[_31670 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31670 + 414] = 0
                            mem[_31670 + 446] = _28966
                            mem[_31670 + 478] = address(sha3(0, factoryAddress, _31673, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31670 + 510] = 128
                            mem[_31670 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31670 + 574] = mem[s + _31670 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28966, address(sha3(0, factoryAddress, _31673, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not address(_28774):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31670 + 221] = address(_28774)
                            mem[_31670 + 241] = address(_28709)
                            mem[_31670 + 189] = 40
                            mem[_31670 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31670 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31670 + 314] = sha3(address(_28774), address(_28709))
                            mem[_31670 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31670 + 261] = 85
                            mem[_31670 + 378] = 0
                            mem[64] = _31670 + 410
                            mem[_31670 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31670 + 414] = 0
                            mem[_31670 + 446] = _28966
                            mem[_31670 + 478] = address(sha3(0, factoryAddress, _31673, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31670 + 510] = 128
                            mem[_31670 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31670 + 574] = mem[s + _31670 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _28966, address(sha3(0, factoryAddress, _31673, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
            else:
                if idx >= mem[_10004 + ceil32(return_data.size) + 322] - 2:
                    if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31705 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_28774)
                        _31706 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31708 = sha3(mem[_31706 + 32 len mem[_31706]])
                        mem[_31705 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31705 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31705 + 125] = _31708
                        mem[_31705 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31705 + 72] = 85
                        mem[_31705 + 189] = 0
                        mem[64] = _31705 + 221
                        mem[_31705 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_31705 + 225] = _28966
                        mem[_31705 + 257] = 0
                        mem[_31705 + 289] = arg4
                        mem[_31705 + 321] = 128
                        mem[_31705 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _31705 + 385] = mem[s + _31705 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _31708, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        call address(sha3(0, factoryAddress, _31708, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _28966, 0, address(arg4), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31712 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_28709)
                        _31713 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31715 = sha3(mem[_31713 + 32 len mem[_31713]])
                        mem[_31712 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31712 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31712 + 125] = _31715
                        mem[_31712 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31712 + 72] = 85
                        mem[_31712 + 189] = 0
                        mem[64] = _31712 + 221
                        mem[_31712 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_31712 + 225] = _28966
                        mem[_31712 + 257] = 0
                        mem[_31712 + 289] = arg4
                        mem[_31712 + 321] = 128
                        mem[_31712 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _31712 + 385] = mem[s + _31712 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _31715, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                        call address(sha3(0, factoryAddress, _31715, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _28966, 0, address(arg4), 128, 0
                else:
                    require idx + 2 < mem[_10004 + ceil32(return_data.size) + 322]
                    _29158 = mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354]
                    if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31691 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_29158)
                        _31692 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31694 = sha3(mem[_31692 + 32 len mem[_31692]])
                        mem[_31691 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31691 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31691 + 125] = _31694
                        mem[_31691 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31691 + 72] = 85
                        if address(_28709) == address(_28774):
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31691 + 292 len 29]
                        if address(_28709) < address(_28774):
                            if not address(_28709):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31691 + 221] = address(_28709)
                            mem[_31691 + 241] = address(_28774)
                            mem[_31691 + 189] = 40
                            mem[_31691 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31691 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31691 + 314] = sha3(address(_28709), address(_28774))
                            mem[_31691 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31691 + 261] = 85
                            mem[_31691 + 378] = 0
                            mem[64] = _31691 + 410
                            mem[_31691 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31691 + 414] = _28966
                            mem[_31691 + 446] = 0
                            mem[_31691 + 478] = address(sha3(0, factoryAddress, _31694, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31691 + 510] = 128
                            mem[_31691 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31691 + 574] = mem[s + _31691 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28966, 0, address(sha3(0, factoryAddress, _31694, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not address(_28774):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31691 + 221] = address(_28774)
                            mem[_31691 + 241] = address(_28709)
                            mem[_31691 + 189] = 40
                            mem[_31691 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31691 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31691 + 314] = sha3(address(_28774), address(_28709))
                            mem[_31691 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31691 + 261] = 85
                            mem[_31691 + 378] = 0
                            mem[64] = _31691 + 410
                            mem[_31691 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31691 + 414] = _28966
                            mem[_31691 + 446] = 0
                            mem[_31691 + 478] = address(sha3(0, factoryAddress, _31694, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31691 + 510] = 128
                            mem[_31691 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31691 + 574] = mem[s + _31691 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28966, 0, address(sha3(0, factoryAddress, _31694, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                    else:
                        if not mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _31698 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _10004 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_28774)
                        _31699 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _31701 = sha3(mem[_31699 + 32 len mem[_31699]])
                        mem[_31698 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_31698 + 105] = Mask(160, 96, factoryAddress)
                        mem[_31698 + 125] = _31701
                        mem[_31698 + 157] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                        mem[_31698 + 72] = 85
                        if address(_28709) == address(_28774):
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_31698 + 292 len 29]
                        if address(_28709) < address(_28774):
                            if not address(_28709):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31698 + 221] = address(_28709)
                            mem[_31698 + 241] = address(_28774)
                            mem[_31698 + 189] = 40
                            mem[_31698 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31698 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31698 + 314] = sha3(address(_28709), address(_28774))
                            mem[_31698 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31698 + 261] = 85
                            mem[_31698 + 378] = 0
                            mem[64] = _31698 + 410
                            mem[_31698 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31698 + 414] = _28966
                            mem[_31698 + 446] = 0
                            mem[_31698 + 478] = address(sha3(0, factoryAddress, _31701, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31698 + 510] = 128
                            mem[_31698 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31698 + 574] = mem[s + _31698 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28709), address(_28774)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28966, 0, address(sha3(0, factoryAddress, _31701, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
                        else:
                            if not address(_28774):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_31698 + 221] = address(_28774)
                            mem[_31698 + 241] = address(_28709)
                            mem[_31698 + 189] = 40
                            mem[_31698 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_31698 + 294] = Mask(160, 96, factoryAddress)
                            mem[_31698 + 314] = sha3(address(_28774), address(_28709))
                            mem[_31698 + 346] = 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66
                            mem[_31698 + 261] = 85
                            mem[_31698 + 378] = 0
                            mem[64] = _31698 + 410
                            mem[_31698 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_31698 + 414] = _28966
                            mem[_31698 + 446] = 0
                            mem[_31698 + 478] = address(sha3(0, factoryAddress, _31701, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66))
                            mem[_31698 + 510] = 128
                            mem[_31698 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _31698 + 574] = mem[s + _31698 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)))
                            call address(sha3(0, factoryAddress, sha3(address(_28774), address(_28709)), 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _28966, 0, address(sha3(0, factoryAddress, _31701, 0xd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66)), 128, 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[(32 * arg3.length) + 128]
    _28773 = mem[(32 * arg3.length) + 128]
    mem[mem[64] + 64 len floor32(mem[(32 * arg3.length) + 128])] = mem[(32 * arg3.length) + 160 len floor32(mem[(32 * arg3.length) + 128])]
    return 32, mem[mem[64] + 32 len (32 * _28773) + 32]
}



}
