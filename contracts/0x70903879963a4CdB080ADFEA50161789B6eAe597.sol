contract main {




// =====================  Runtime code  =====================


#
#  - superApprove(address arg1, address arg2, uint256 arg3)
#  - transferFrom(address arg1, address arg2, uint256 arg3)
#  - superTransfer(address arg1, uint256 arg2)
#
const getBalanceBNB = eth.balance(this.address)


address owner;
uint256 stor0;
mapping of uint256 balanceOf;
mapping of uint256 allowance;
mapping of uint8 stor3;
mapping of uint8 stor4;
address callerAddress;
address minterAddress;
address sub_94329306Address;
uint256 _totalSupply;
array of struct stor9;
array of struct stor10;
uint8 _decimals;
address stor11; offset 8
address stor12;
address stor13;
address stor15;
uint256 sub_f8eeded7;
uint256 startBlock;
uint256 stor18;
uint256 liquidityFee;
uint256 marketingFee;
uint256 burnFee;
uint256 buybackFee;
uint256 totalFee;
uint256 feeDenominator;
uint256 sub_373115d7;
uint256 sub_a79b4412;
uint256 stor27;
uint256 stor28;
uint256 stor29;
uint8 stor30;
uint8 swapAndLiquifyEnabled; offset 8
uint8 buyBackEnabled; offset 16
uint256 stor30; offset 16
uint256 stor30; offset 8
mapping of uint8 stor33;
mapping of uint8 stor34;
address routerAddress;
address pairAddress;

function feeDenominator() {
    return feeDenominator
}

function totalSupply() {
    return _totalSupply
}

function totalFee() {
    return totalFee
}

function sub_2b5f8e58(?) {
    require msg.sender == address(owner)
    return sub_94329306Address
}

function decimals() {
    return _decimals
}

function _decimals() {
    return _decimals
}

function isBlacklist(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor3[address(arg1)])
}

function sub_373115d7(?) {
    return sub_373115d7
}

function buybackFee() {
    return buybackFee
}

function _totalSupply() {
    return _totalSupply
}

function startBlock() {
    return startBlock
}

function swapAndLiquifyEnabled() {
    return bool(swapAndLiquifyEnabled)
}

function isExcludedFromFee(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor33[arg1])
}

function _minter() {
    return minterAddress
}

function buyBackEnabled() {
    return bool(buyBackEnabled)
}

function marketingFee() {
    return marketingFee
}

function balanceOf(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return balanceOf[address(arg1)]
}

function owner() {
    return address(owner)
}

function sub_94329306(?) {
    return sub_94329306Address
}

function liquidityFee() {
    return liquidityFee
}

function sub_a149b2c0(?) {
    return callerAddress
}

function sub_a79b4412(?) {
    return sub_a79b4412
}

function pair() {
    return pairAddress
}

function getCaller() {
    return callerAddress
}

function isExcluded(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor34[arg1])
}

function allowance(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return allowance[address(arg1)][address(arg2)]
}

function getTotalFee(bool arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return totalFee
}

function getMinter() {
    require msg.sender == address(owner)
    return minterAddress
}

function router() {
    return routerAddress
}

function sub_f8eeded7(?) {
    return sub_f8eeded7
}

function isWhiteList(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor4[address(arg1)])
}

function burnFee() {
    return burnFee
}

function _fallback() payable {
    revert
}

function endSale() {
    require msg.sender == address(owner)
    stor18 = 0
    startBlock = 0
}

function startSale() {
    require msg.sender == address(owner)
    stor18 = 1
    startBlock = block.number
}

function Ownable() {
    require msg.sender == address(owner)
    uint256(stor0) = msg.sender or Mask(96, 160, uint256(stor0))
}

function isCaller(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return (callerAddress == arg1)
}

function isMinter(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return (minterAddress == arg1)
}

function setBuyFee(uint256 arg1) {
    require calldata.size - 4 >= 32
    require msg.sender == address(owner)
    sub_373115d7 = arg1
}

function setSellFee(uint256 arg1) {
    require calldata.size - 4 >= 32
    require msg.sender == address(owner)
    sub_a79b4412 = arg1
}

function isGameMinter(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return (sub_94329306Address == arg1)
}

function setMarketingDivisor(uint256 arg1) {
    require calldata.size - 4 >= 32
    require msg.sender == address(owner)
    stor27 = arg1
}

function sub_b4d68441(?) {
    if startBlock > !sub_f8eeded7:
        revert with 0, 17
    return block.number <= startBlock + sub_f8eeded7
}

function setNumTokensSellToAddToBuyBack(uint256 arg1) {
    require calldata.size - 4 >= 32
    require msg.sender == address(owner)
    stor29 = arg1
}

function addBlackList(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require msg.sender == address(owner)
    stor3[address(arg1)] = 1
}

function addWhiteList(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require msg.sender == address(owner)
    stor4[address(arg1)] = 1
}

function removeFromBlackList(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require msg.sender == address(owner)
    stor3[address(arg1)] = 0
}

function setLimitBlock(uint256 arg1) {
    require calldata.size - 4 >= 32
    require msg.sender == address(owner)
    if arg1 <= 0:
        revert with 0, 'limit time its zero'
    sub_f8eeded7 = arg1
}

function sub_f903225b(?) {
    require msg.sender == address(owner)
    Mask(240, 0, stor30.field_16) = Mask(240, 0, not buyBackEnabled)
    emit BuyBackEnabledUpdated(bool(0 or uint8(not buyBackEnabled)));
}

function sub_a0409101(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require msg.sender == address(owner)
    stor12 = address(arg1)
    stor11 = address(arg2)
}

function sub_dc38a03f(?) {
    require msg.sender == address(owner)
    Mask(248, 0, stor30.field_8) = Mask(248, 0, not swapAndLiquifyEnabled)
    emit SwapAndLiquifyEnabledUpdated(bool(0 or uint8(not swapAndLiquifyEnabled)));
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require msg.sender == address(owner)
    require arg1
    emit OwnershipTransferred(address(owner), arg1);
    address(owner) = arg1
}

function setIsExcluded(address arg1, bool arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    require msg.sender == address(owner)
    stor33[address(arg1)] = uint8(arg2)
    stor34[address(arg1)] = uint8(arg2)
}

function transferBNB() {
    require msg.sender == address(owner)
    call stor12 with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function transferAsset(uint256 arg1) {
    require calldata.size - 4 >= 32
    require msg.sender == address(owner)
    call address(owner) with:
       value arg1 wei
         gas gas_remaining wei
    if not ext_call.success:
        revert with 0, 'TransferHelper: ETH_TRANSFER_FAILED'
}

function setCaller(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require msg.sender == address(owner)
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'PSG: _addMinter is the zero address'
    callerAddress = arg1
    return 1
}

function setMinter(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require msg.sender == address(owner)
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'PSG: _addMinter is the zero address'
    minterAddress = arg1
    return 1
}

function sub_6ce6cf1e(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    require msg.sender == address(owner)
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'PSG: _addMinter is the zero address'
    sub_94329306Address = address(arg1)
    return 1
}

function sub_22a49be8(?) {
    require calldata.size - 4 >= 64
    require arg2 == address(arg2)
    require msg.sender == address(owner)
    if eth.balance(this.address) <= arg1:
        revert with 0, 'Not Enough bnbs'
    call address(arg2) with:
       value arg1 wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function approve(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = arg2
    emit Approval(arg2, msg.sender, arg1);
    return 1
}

function approveMax(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = _totalSupply
    emit Approval(_totalSupply, msg.sender, arg1);
    return 1
}

function sub_1d33edee(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require msg.sender == address(owner)
    if _totalSupply > !arg2:
        revert with 0, 17
    if _totalSupply + arg2 < _totalSupply:
        revert with 0, 'SafeMath: addition overflow'
    _totalSupply += arg2
    if balanceOf[address(arg1)] > !arg2:
        revert with 0, 17
    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
        revert with 0, 'SafeMath: addition overflow'
    balanceOf[address(arg1)] += arg2
}

function sub_8b398548(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require msg.sender == address(owner)
    if arg2 > balanceOf[address(arg1)]:
        revert with 0, 'balance not enough'
    if arg2 > _totalSupply:
        revert with 0, 'SafeMath: subtraction overflow', 0
    if _totalSupply < arg2:
        revert with 0, 17
    _totalSupply -= arg2
    if arg2 > balanceOf[address(arg1)]:
        revert with 0, 'SafeMath: subtraction overflow', 0
    if balanceOf[address(arg1)] < arg2:
        revert with 0, 17
    balanceOf[address(arg1)] -= arg2
}

function ownerMint(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require msg.sender == address(owner)
    if not arg1:
        revert with 0, 'ERC20: mint to the zero address'
    if _totalSupply > !arg2:
        revert with 0, 17
    if _totalSupply + arg2 < _totalSupply:
        revert with 0, 'SafeMath: addition overflow'
    _totalSupply += arg2
    if balanceOf[address(arg1)] > !arg2:
        revert with 0, 17
    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
        revert with 0, 'SafeMath: addition overflow'
    balanceOf[address(arg1)] += arg2
    emit Transfer(arg2, 0, arg1);
    return 1
}

function mint(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if minterAddress != msg.sender:
        revert with 0, 'caller is not the minter'
    if not arg1:
        revert with 0, 'ERC20: mint to the zero address'
    if _totalSupply > !arg2:
        revert with 0, 17
    if _totalSupply + arg2 < _totalSupply:
        revert with 0, 'SafeMath: addition overflow'
    _totalSupply += arg2
    if balanceOf[address(arg1)] > !arg2:
        revert with 0, 17
    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
        revert with 0, 'SafeMath: addition overflow'
    balanceOf[address(arg1)] += arg2
    emit Transfer(arg2, 0, arg1);
    return 1
}

function gameMint(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if sub_94329306Address != msg.sender:
        revert with 0, 'caller is not the game minter'
    if not arg1:
        revert with 0, 'ERC20: mint to the zero address'
    if _totalSupply > !arg2:
        revert with 0, 17
    if _totalSupply + arg2 < _totalSupply:
        revert with 0, 'SafeMath: addition overflow'
    _totalSupply += arg2
    if balanceOf[address(arg1)] > !arg2:
        revert with 0, 17
    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
        revert with 0, 'SafeMath: addition overflow'
    balanceOf[address(arg1)] += arg2
    emit Transfer(arg2, 0, arg1);
    return 1
}

function decreaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if arg2 > allowance[msg.sender][address(arg1)]:
        revert with 0, 32, 37, 0x6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a6572, mem[165 len 27] >> 40, 0
    if allowance[msg.sender][address(arg1)] < arg2:
        revert with 0, 17
    if not msg.sender:
        revert with 0, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = allowance[msg.sender][address(arg1)] - arg2
    emit Approval((allowance[msg.sender][address(arg1)] - arg2), msg.sender, arg1);
    return 1
}

function burn(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if callerAddress != msg.sender:
        revert with 0, 'caller is not the Caller'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: burn from the zero address'
    if arg2 > balanceOf[address(arg1)]:
        revert with 0, 32, 34, 0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[162 len 30] >> 16, 0
    if balanceOf[address(arg1)] < arg2:
        revert with 0, 17
    balanceOf[address(arg1)] -= arg2
    if arg2 > _totalSupply:
        revert with 0, 'SafeMath: subtraction overflow', 0
    if _totalSupply < arg2:
        revert with 0, 17
    _totalSupply -= arg2
    emit Transfer(arg2, arg1, 0);
}

function increaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if allowance[msg.sender][address(arg1)] > !arg2:
        revert with 0, 17
    if allowance[msg.sender][address(arg1)] + arg2 < allowance[msg.sender][address(arg1)]:
        revert with 0, 'SafeMath: addition overflow'
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = allowance[msg.sender][address(arg1)] + arg2
    emit Approval((allowance[msg.sender][address(arg1)] + arg2), msg.sender, arg1);
    return 1
}

function setFee(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) {
    require calldata.size - 4 >= 128
    require msg.sender == address(owner)
    if arg2 <= 0:
        revert with 0, 'marketing must grater than 0'
    if arg3 <= 0:
        revert with 0, 'burn must grater than 0'
    if arg4 <= 0:
        revert with 0, 'buyback must grater than 0'
    marketingFee = arg2
    burnFee = arg3
    buybackFee = arg4
    if arg1 > !arg2:
        revert with 0, 17
    if arg1 + arg2 < arg1:
        revert with 0, 'SafeMath: addition overflow'
    if arg1 + arg2 > !arg3:
        revert with 0, 17
    if arg3 < 0:
        revert with 0, 'SafeMath: addition overflow'
    if arg1 + arg2 + arg3 > !arg4:
        revert with 0, 17
    if arg4 < 0:
        revert with 0, 'SafeMath: addition overflow'
    totalFee = arg1 + arg2 + arg3 + arg4
}

function name() {
    if bool(stor9.length):
        if bool(stor9.length) == stor9.length.field_1 < 32:
            revert with 0, 34
        if bool(stor9.length):
            if bool(stor9.length) == stor9.length.field_1 < 32:
                revert with 0, 34
            if stor9.length.field_1:
                if 31 < stor9.length.field_1:
                    mem[128] = uint256(stor9.field_0)
                    idx = 128
                    s = 0
                    while stor9.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor9[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor9.length.field_1), data=mem[128 len ceil32(stor9.length.field_1)])
                mem[128] = 256 * stor9.length.field_8
        else:
            if bool(stor9.length) == stor9.length.field_1 < 32:
                revert with 0, 34
            if stor9.length.field_1:
                if 31 < stor9.length.field_1:
                    mem[128] = uint256(stor9.field_0)
                    idx = 128
                    s = 0
                    while stor9.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor9[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor9.length.field_1), data=mem[128 len ceil32(stor9.length.field_1)])
                mem[128] = 256 * stor9.length.field_8
        mem[ceil32(stor9.length.field_1) + 192 len ceil32(stor9.length.field_1)] = mem[128 len ceil32(stor9.length.field_1)]
        if ceil32(stor9.length.field_1) > stor9.length.field_1:
            mem[stor9.length.field_1 + ceil32(stor9.length.field_1) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor9.length.field_1), data=mem[128 len ceil32(stor9.length.field_1)], mem[(2 * ceil32(stor9.length.field_1)) + 192 len 2 * ceil32(stor9.length.field_1)]), 
    if bool(stor9.length) == stor9.length.field_1 < 32:
        revert with 0, 34
    if bool(stor9.length):
        if bool(stor9.length) == stor9.length.field_1 < 32:
            revert with 0, 34
        if stor9.length.field_1:
            if 31 < stor9.length.field_1:
                mem[128] = uint256(stor9.field_0)
                idx = 128
                s = 0
                while stor9.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor9[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor9.length % 128, data=mem[128 len ceil32(stor9.length.field_1)])
            mem[128] = 256 * stor9.length.field_8
    else:
        if bool(stor9.length) == stor9.length.field_1 < 32:
            revert with 0, 34
        if stor9.length.field_1:
            if 31 < stor9.length.field_1:
                mem[128] = uint256(stor9.field_0)
                idx = 128
                s = 0
                while stor9.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor9[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor9.length % 128, data=mem[128 len ceil32(stor9.length.field_1)])
            mem[128] = 256 * stor9.length.field_8
    mem[ceil32(stor9.length.field_1) + 192 len ceil32(stor9.length.field_1)] = mem[128 len ceil32(stor9.length.field_1)]
    if ceil32(stor9.length.field_1) > stor9.length.field_1:
        mem[stor9.length.field_1 + ceil32(stor9.length.field_1) + 192] = 0
    return Array(len=stor9.length % 128, data=mem[128 len ceil32(stor9.length.field_1)], mem[(2 * ceil32(stor9.length.field_1)) + 192 len 2 * ceil32(stor9.length.field_1)]), 
}

function _name() {
    if bool(stor9.length):
        if bool(stor9.length) == stor9.length.field_1 < 32:
            revert with 0, 34
        if bool(stor9.length):
            if bool(stor9.length) == stor9.length.field_1 < 32:
                revert with 0, 34
            if stor9.length.field_1:
                if 31 < stor9.length.field_1:
                    mem[128] = uint256(stor9.field_0)
                    idx = 128
                    s = 0
                    while stor9.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor9[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor9.length.field_1), data=mem[128 len ceil32(stor9.length.field_1)])
                mem[128] = 256 * stor9.length.field_8
        else:
            if bool(stor9.length) == stor9.length.field_1 < 32:
                revert with 0, 34
            if stor9.length.field_1:
                if 31 < stor9.length.field_1:
                    mem[128] = uint256(stor9.field_0)
                    idx = 128
                    s = 0
                    while stor9.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor9[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor9.length.field_1), data=mem[128 len ceil32(stor9.length.field_1)])
                mem[128] = 256 * stor9.length.field_8
        mem[ceil32(stor9.length.field_1) + 192 len ceil32(stor9.length.field_1)] = mem[128 len ceil32(stor9.length.field_1)]
        if ceil32(stor9.length.field_1) > stor9.length.field_1:
            mem[stor9.length.field_1 + ceil32(stor9.length.field_1) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor9.length.field_1), data=mem[128 len ceil32(stor9.length.field_1)], mem[(2 * ceil32(stor9.length.field_1)) + 192 len 2 * ceil32(stor9.length.field_1)]), 
    if bool(stor9.length) == stor9.length.field_1 < 32:
        revert with 0, 34
    if bool(stor9.length):
        if bool(stor9.length) == stor9.length.field_1 < 32:
            revert with 0, 34
        if stor9.length.field_1:
            if 31 < stor9.length.field_1:
                mem[128] = uint256(stor9.field_0)
                idx = 128
                s = 0
                while stor9.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor9[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor9.length % 128, data=mem[128 len ceil32(stor9.length.field_1)])
            mem[128] = 256 * stor9.length.field_8
    else:
        if bool(stor9.length) == stor9.length.field_1 < 32:
            revert with 0, 34
        if stor9.length.field_1:
            if 31 < stor9.length.field_1:
                mem[128] = uint256(stor9.field_0)
                idx = 128
                s = 0
                while stor9.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor9[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor9.length % 128, data=mem[128 len ceil32(stor9.length.field_1)])
            mem[128] = 256 * stor9.length.field_8
    mem[ceil32(stor9.length.field_1) + 192 len ceil32(stor9.length.field_1)] = mem[128 len ceil32(stor9.length.field_1)]
    if ceil32(stor9.length.field_1) > stor9.length.field_1:
        mem[stor9.length.field_1 + ceil32(stor9.length.field_1) + 192] = 0
    return Array(len=stor9.length % 128, data=mem[128 len ceil32(stor9.length.field_1)], mem[(2 * ceil32(stor9.length.field_1)) + 192 len 2 * ceil32(stor9.length.field_1)]), 
}

function symbol() {
    if bool(stor10.length):
        if bool(stor10.length) == stor10.length.field_1 < 32:
            revert with 0, 34
        if bool(stor10.length):
            if bool(stor10.length) == stor10.length.field_1 < 32:
                revert with 0, 34
            if stor10.length.field_1:
                if 31 < stor10.length.field_1:
                    mem[128] = uint256(stor10.field_0)
                    idx = 128
                    s = 0
                    while stor10.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor10[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor10.length.field_1), data=mem[128 len ceil32(stor10.length.field_1)])
                mem[128] = 256 * stor10.length.field_8
        else:
            if bool(stor10.length) == stor10.length.field_1 < 32:
                revert with 0, 34
            if stor10.length.field_1:
                if 31 < stor10.length.field_1:
                    mem[128] = uint256(stor10.field_0)
                    idx = 128
                    s = 0
                    while stor10.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor10[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor10.length.field_1), data=mem[128 len ceil32(stor10.length.field_1)])
                mem[128] = 256 * stor10.length.field_8
        mem[ceil32(stor10.length.field_1) + 192 len ceil32(stor10.length.field_1)] = mem[128 len ceil32(stor10.length.field_1)]
        if ceil32(stor10.length.field_1) > stor10.length.field_1:
            mem[stor10.length.field_1 + ceil32(stor10.length.field_1) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor10.length.field_1), data=mem[128 len ceil32(stor10.length.field_1)], mem[(2 * ceil32(stor10.length.field_1)) + 192 len 2 * ceil32(stor10.length.field_1)]), 
    if bool(stor10.length) == stor10.length.field_1 < 32:
        revert with 0, 34
    if bool(stor10.length):
        if bool(stor10.length) == stor10.length.field_1 < 32:
            revert with 0, 34
        if stor10.length.field_1:
            if 31 < stor10.length.field_1:
                mem[128] = uint256(stor10.field_0)
                idx = 128
                s = 0
                while stor10.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor10[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor10.length % 128, data=mem[128 len ceil32(stor10.length.field_1)])
            mem[128] = 256 * stor10.length.field_8
    else:
        if bool(stor10.length) == stor10.length.field_1 < 32:
            revert with 0, 34
        if stor10.length.field_1:
            if 31 < stor10.length.field_1:
                mem[128] = uint256(stor10.field_0)
                idx = 128
                s = 0
                while stor10.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor10[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor10.length % 128, data=mem[128 len ceil32(stor10.length.field_1)])
            mem[128] = 256 * stor10.length.field_8
    mem[ceil32(stor10.length.field_1) + 192 len ceil32(stor10.length.field_1)] = mem[128 len ceil32(stor10.length.field_1)]
    if ceil32(stor10.length.field_1) > stor10.length.field_1:
        mem[stor10.length.field_1 + ceil32(stor10.length.field_1) + 192] = 0
    return Array(len=stor10.length % 128, data=mem[128 len ceil32(stor10.length.field_1)], mem[(2 * ceil32(stor10.length.field_1)) + 192 len 2 * ceil32(stor10.length.field_1)]), 
}

function _symbol() {
    if bool(stor10.length):
        if bool(stor10.length) == stor10.length.field_1 < 32:
            revert with 0, 34
        if bool(stor10.length):
            if bool(stor10.length) == stor10.length.field_1 < 32:
                revert with 0, 34
            if stor10.length.field_1:
                if 31 < stor10.length.field_1:
                    mem[128] = uint256(stor10.field_0)
                    idx = 128
                    s = 0
                    while stor10.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor10[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor10.length.field_1), data=mem[128 len ceil32(stor10.length.field_1)])
                mem[128] = 256 * stor10.length.field_8
        else:
            if bool(stor10.length) == stor10.length.field_1 < 32:
                revert with 0, 34
            if stor10.length.field_1:
                if 31 < stor10.length.field_1:
                    mem[128] = uint256(stor10.field_0)
                    idx = 128
                    s = 0
                    while stor10.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor10[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor10.length.field_1), data=mem[128 len ceil32(stor10.length.field_1)])
                mem[128] = 256 * stor10.length.field_8
        mem[ceil32(stor10.length.field_1) + 192 len ceil32(stor10.length.field_1)] = mem[128 len ceil32(stor10.length.field_1)]
        if ceil32(stor10.length.field_1) > stor10.length.field_1:
            mem[stor10.length.field_1 + ceil32(stor10.length.field_1) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor10.length.field_1), data=mem[128 len ceil32(stor10.length.field_1)], mem[(2 * ceil32(stor10.length.field_1)) + 192 len 2 * ceil32(stor10.length.field_1)]), 
    if bool(stor10.length) == stor10.length.field_1 < 32:
        revert with 0, 34
    if bool(stor10.length):
        if bool(stor10.length) == stor10.length.field_1 < 32:
            revert with 0, 34
        if stor10.length.field_1:
            if 31 < stor10.length.field_1:
                mem[128] = uint256(stor10.field_0)
                idx = 128
                s = 0
                while stor10.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor10[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor10.length % 128, data=mem[128 len ceil32(stor10.length.field_1)])
            mem[128] = 256 * stor10.length.field_8
    else:
        if bool(stor10.length) == stor10.length.field_1 < 32:
            revert with 0, 34
        if stor10.length.field_1:
            if 31 < stor10.length.field_1:
                mem[128] = uint256(stor10.field_0)
                idx = 128
                s = 0
                while stor10.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor10[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor10.length % 128, data=mem[128 len ceil32(stor10.length.field_1)])
            mem[128] = 256 * stor10.length.field_8
    mem[ceil32(stor10.length.field_1) + 192 len ceil32(stor10.length.field_1)] = mem[128 len ceil32(stor10.length.field_1)]
    if ceil32(stor10.length.field_1) > stor10.length.field_1:
        mem[stor10.length.field_1 + ceil32(stor10.length.field_1) + 192] = 0
    return Array(len=stor10.length % 128, data=mem[128 len ceil32(stor10.length.field_1)], mem[(2 * ceil32(stor10.length.field_1)) + 192 len 2 * ceil32(stor10.length.field_1)]), 
}

function burnToken(uint256 arg1) {
    require calldata.size - 4 >= 32
    require msg.sender == address(owner)
    if balanceOf[this.address] <= arg1:
        revert with 0, 'Not Enough tokens to burn'
    if uint8(stor30.field_0):
        if arg1 > balanceOf[address(this.address)]:
            revert with 0, 'Insufficient Balance', 0
        if balanceOf[address(this.address)] < arg1:
            revert with 0, 17
        balanceOf[address(this.address)] -= arg1
        if balanceOf[stor13] > !arg1:
            revert with 0, 17
        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
            revert with 0, 'SafeMath: addition overflow'
        balanceOf[stor13] += arg1
        emit Transfer(arg1, this.address, stor13);
    else:
        if stor3[address(this.address)]:
            revert with 0, 'account'
        if stor3[stor13]:
            revert with 0, 'account'
        if stor34[address(this.address)]:
            if uint8(stor30.field_0):
                if arg1 > balanceOf[address(this.address)]:
                    revert with 0, 'Insufficient Balance', 0
                if balanceOf[address(this.address)] < arg1:
                    revert with 0, 17
                balanceOf[address(this.address)] -= arg1
                if stor33[address(this.address)]:
                    if balanceOf[stor13] > !arg1:
                        revert with 0, 17
                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[stor13] += arg1
                else:
                    if pairAddress != stor13:
                        if pairAddress != this.address:
                            if balanceOf[this.address] > -1:
                                revert with 0, 17
                            if balanceOf[this.address] < balanceOf[this.address]:
                                revert with 0, 'SafeMath: addition overflow'
                            emit Transfer(0, this.address, this.address);
                            if 0 > arg1:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if arg1 < 0:
                                revert with 0, 17
                            if balanceOf[stor13] > !arg1:
                                revert with 0, 17
                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                revert with 0, 'SafeMath: addition overflow'
                            balanceOf[stor13] += arg1
                        else:
                            if not arg1:
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if balanceOf[this.address] > !(0 / feeDenominator):
                                    revert with 0, 17
                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[this.address] += 0 / feeDenominator
                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                if 0 / feeDenominator > arg1:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg1 < 0 / feeDenominator:
                                    revert with 0, 17
                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                    revert with 0, 17
                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                            else:
                                if arg1 and sub_a79b4412 > -1 / arg1:
                                    revert with 0, 17
                                if not arg1:
                                    revert with 0, 18
                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                    revert with 0, 17
                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                    revert with 0, 17
                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                    revert with 0, 17
                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                    else:
                        if not arg1:
                            if not feeDenominator:
                                revert with 0, 'SafeMath: division by zero', 0
                            if pairAddress != this.address:
                                if balanceOf[this.address] > !(0 / feeDenominator):
                                    revert with 0, 17
                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[this.address] += 0 / feeDenominator
                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                if 0 / feeDenominator > arg1:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg1 < 0 / feeDenominator:
                                    revert with 0, 17
                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                    revert with 0, 17
                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                            else:
                                if not arg1:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                    if 0 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                else:
                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                        revert with 0, 17
                                    if not arg1:
                                        revert with 0, 18
                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                        else:
                            if arg1 and sub_373115d7 > -1 / arg1:
                                revert with 0, 17
                            if not arg1:
                                revert with 0, 18
                            if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if not feeDenominator:
                                revert with 0, 'SafeMath: division by zero', 0
                            if pairAddress != this.address:
                                if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                    revert with 0, 17
                                if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                if arg1 * sub_373115d7 / feeDenominator > arg1:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                    revert with 0, 17
                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                    revert with 0, 17
                                if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                            else:
                                if not arg1:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                    if 0 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                else:
                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                        revert with 0, 17
                                    if not arg1:
                                        revert with 0, 18
                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
            else:
                if not swapAndLiquifyEnabled:
                    if arg1 > balanceOf[address(this.address)]:
                        revert with 0, 'Insufficient Balance', 0
                    if balanceOf[address(this.address)] < arg1:
                        revert with 0, 17
                    balanceOf[address(this.address)] -= arg1
                    if stor33[address(this.address)]:
                        if balanceOf[stor13] > !arg1:
                            revert with 0, 17
                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[stor13] += arg1
                    else:
                        if pairAddress != stor13:
                            if pairAddress != this.address:
                                if balanceOf[this.address] > -1:
                                    revert with 0, 17
                                if balanceOf[this.address] < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, this.address, this.address);
                                if 0 > arg1:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg1 < 0:
                                    revert with 0, 17
                                if balanceOf[stor13] > !arg1:
                                    revert with 0, 17
                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[stor13] += arg1
                            else:
                                if not arg1:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                    if 0 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                else:
                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                        revert with 0, 17
                                    if not arg1:
                                        revert with 0, 18
                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                        else:
                            if not arg1:
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if pairAddress != this.address:
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                    if 0 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                else:
                                    if not arg1:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                        if 0 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                    else:
                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                            revert with 0, 17
                                        if not arg1:
                                            revert with 0, 18
                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                            else:
                                if arg1 and sub_373115d7 > -1 / arg1:
                                    revert with 0, 17
                                if not arg1:
                                    revert with 0, 18
                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if pairAddress != this.address:
                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                else:
                                    if not arg1:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                        if 0 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                    else:
                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                            revert with 0, 17
                                        if not arg1:
                                            revert with 0, 18
                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                else:
                    if pairAddress != stor13:
                        if arg1 > balanceOf[address(this.address)]:
                            revert with 0, 'Insufficient Balance', 0
                        if balanceOf[address(this.address)] < arg1:
                            revert with 0, 17
                        balanceOf[address(this.address)] -= arg1
                        if stor33[address(this.address)]:
                            if balanceOf[stor13] > !arg1:
                                revert with 0, 17
                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                revert with 0, 'SafeMath: addition overflow'
                            balanceOf[stor13] += arg1
                        else:
                            if pairAddress != stor13:
                                if pairAddress != this.address:
                                    if balanceOf[this.address] > -1:
                                        revert with 0, 17
                                    if balanceOf[this.address] < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, this.address, this.address);
                                    if 0 > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < 0:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !arg1:
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] += arg1
                                else:
                                    if not arg1:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                        if 0 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                    else:
                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                            revert with 0, 17
                                        if not arg1:
                                            revert with 0, 18
                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                            else:
                                if not arg1:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if pairAddress != this.address:
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                        if 0 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                    else:
                                        if not arg1:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                            if 0 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                        else:
                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                revert with 0, 17
                                            if not arg1:
                                                revert with 0, 18
                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                else:
                                    if arg1 and sub_373115d7 > -1 / arg1:
                                        revert with 0, 17
                                    if not arg1:
                                        revert with 0, 18
                                    if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if pairAddress != this.address:
                                        if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                        emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                        if arg1 * sub_373115d7 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                    else:
                                        if not arg1:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                            if 0 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                        else:
                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                revert with 0, 17
                                            if not arg1:
                                                revert with 0, 18
                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                    else:
                        if balanceOf[address(this.address)] < stor29:
                            if buyBackEnabled:
                                if eth.balance(this.address) > 10^15:
                                    uint8(stor30.field_0) = 1
                                    if eth.balance(this.address) <= stor28:
                                        if eth.balance(this.address) / 100:
                                            require ext_code.size(routerAddress)
                                            staticcall routerAddress.WETH() with:
                                                    gas gas_remaining wei
                                            mem[256] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[192] = ext_call.return_data[12 len 20]
                                            mem[224] = this.address
                                            if block.timestamp > -301:
                                                revert with 0, 17
                                            if block.timestamp + 300 < block.timestamp:
                                                revert with 0, 'SafeMath: addition overflow'
                                            mem[ceil32(return_data.size) + 256] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(return_data.size) + 260] = 0
                                            mem[ceil32(return_data.size) + 388] = 2
                                            idx = 0
                                            s = 192
                                            t = ceil32(return_data.size) + 420
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[ceil32(return_data.size) + 324] = stor13
                                            mem[ceil32(return_data.size) + 356] = block.timestamp + 300
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                               value eth.balance(this.address) / 100 wei
                                                 gas gas_remaining wei
                                                args 0, 128, stor13, block.timestamp + 300, 2, mem[ceil32(return_data.size) + 420 len 64]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[ceil32(return_data.size) + 256] = eth.balance(this.address) / 100
                                            idx = 0
                                            s = 192
                                            t = ceil32(return_data.size) + 352
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            emit SwapETHForTokens(eth.balance(this.address) / 100, Array(len=2, data=mem[ceil32(return_data.size) + 352 len 64]));
                                    else:
                                        if stor28 / 100:
                                            require ext_code.size(routerAddress)
                                            staticcall routerAddress.WETH() with:
                                                    gas gas_remaining wei
                                            mem[256] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[192] = ext_call.return_data[12 len 20]
                                            mem[224] = this.address
                                            if block.timestamp > -301:
                                                revert with 0, 17
                                            if block.timestamp + 300 < block.timestamp:
                                                revert with 0, 'SafeMath: addition overflow'
                                            mem[ceil32(return_data.size) + 256] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(return_data.size) + 260] = 0
                                            mem[ceil32(return_data.size) + 388] = 2
                                            idx = 0
                                            s = 192
                                            t = ceil32(return_data.size) + 420
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[ceil32(return_data.size) + 324] = stor13
                                            mem[ceil32(return_data.size) + 356] = block.timestamp + 300
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                               value stor28 / 100 wei
                                                 gas gas_remaining wei
                                                args 0, 128, stor13, block.timestamp + 300, 2, mem[ceil32(return_data.size) + 420 len 64]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[ceil32(return_data.size) + 256] = stor28 / 100
                                            idx = 0
                                            s = 192
                                            t = ceil32(return_data.size) + 352
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            emit SwapETHForTokens(stor28 / 100, Array(len=2, data=mem[ceil32(return_data.size) + 352 len 64]));
                                    uint8(stor30.field_0) = 0
                            if arg1 > balanceOf[address(this.address)]:
                                revert with 0, 'Insufficient Balance', 0
                            if balanceOf[address(this.address)] < arg1:
                                revert with 0, 17
                            balanceOf[address(this.address)] -= arg1
                            if stor33[address(this.address)]:
                                if balanceOf[stor13] > !arg1:
                                    revert with 0, 17
                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[stor13] += arg1
                            else:
                                if pairAddress != stor13:
                                    if pairAddress != this.address:
                                        if balanceOf[this.address] > -1:
                                            revert with 0, 17
                                        if balanceOf[this.address] < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer(0, this.address, this.address);
                                        if 0 > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !arg1:
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] += arg1
                                    else:
                                        if not arg1:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                            if 0 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                        else:
                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                revert with 0, 17
                                            if not arg1:
                                                revert with 0, 18
                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                else:
                                    if not arg1:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if pairAddress != this.address:
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                            if 0 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                        else:
                                            if not arg1:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                if 0 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                            else:
                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                    revert with 0, 17
                                                if not arg1:
                                                    revert with 0, 18
                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if arg1 and sub_373115d7 > -1 / arg1:
                                            revert with 0, 17
                                        if not arg1:
                                            revert with 0, 18
                                        if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if pairAddress != this.address:
                                            if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                            emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                            if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                        else:
                                            if not arg1:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                if 0 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                            else:
                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                    revert with 0, 17
                                                if not arg1:
                                                    revert with 0, 18
                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                        else:
                            uint8(stor30.field_0) = 1
                            mem[96] = 2
                            mem[128] = this.address
                            require ext_code.size(routerAddress)
                            staticcall routerAddress.WETH() with:
                                    gas gas_remaining wei
                            mem[192] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[160] = ext_call.return_data[12 len 20]
                            if not this.address:
                                revert with 0, 'ERC20: approve from the zero address'
                            if not routerAddress:
                                revert with 0, 'ERC20: approve to the zero address'
                            allowance[address(this.address)][stor35] = stor29
                            emit Approval(stor29, this.address, routerAddress);
                            mem[ceil32(return_data.size) + 192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                            mem[ceil32(return_data.size) + 196] = stor29
                            mem[ceil32(return_data.size) + 260] = 160
                            mem[ceil32(return_data.size) + 356] = 2
                            idx = 0
                            s = 128
                            t = ceil32(return_data.size) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[ceil32(return_data.size) + 292] = this.address
                            mem[ceil32(return_data.size) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args stor29, 0, 160, address(this.address), block.timestamp, 2, mem[ceil32(return_data.size) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[ceil32(return_data.size) + 192] = stor29
                            idx = 0
                            s = 128
                            t = ceil32(return_data.size) + 288
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            emit SwapTokensForETH(stor29, Array(len=2, data=mem[ceil32(return_data.size) + 288 len 64]));
                            mem[ceil32(return_data.size) + 192] = 30
                            mem[ceil32(return_data.size) + 224] = 'SafeMath: subtraction overflow'
                            if eth.balance(this.address) > eth.balance(this.address):
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if eth.balance(this.address) < eth.balance(this.address):
                                revert with 0, 17
                            mem[ceil32(return_data.size) + 256] = 26
                            mem[ceil32(return_data.size) + 288] = 'SafeMath: division by zero'
                            if not liquidityFee:
                                revert with 0, 'SafeMath: division by zero', 0
                            if not 0 / liquidityFee:
                                call stor15 with:
                                     gas 2300 wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                uint8(stor30.field_0) = 0
                                if not buyBackEnabled:
                                    if arg1 > balanceOf[address(this.address)]:
                                        revert with 0, 'Insufficient Balance', 0
                                    if balanceOf[address(this.address)] < arg1:
                                        revert with 0, 17
                                    balanceOf[address(this.address)] -= arg1
                                    if stor33[address(this.address)]:
                                        if balanceOf[stor13] > !arg1:
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] += arg1
                                    else:
                                        if pairAddress != stor13:
                                            if pairAddress != this.address:
                                                if balanceOf[this.address] > -1:
                                                    revert with 0, 17
                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                emit Transfer(0, this.address, this.address);
                                                if 0 > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < 0:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !arg1:
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] += arg1
                                            else:
                                                if not arg1:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                    if 0 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                else:
                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                        revert with 0, 17
                                                    if not arg1:
                                                        revert with 0, 18
                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if not arg1:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if pairAddress != this.address:
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                    if 0 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            var128001 = 32
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                    revert with 0, 17
                                                if not arg1:
                                                    revert with 0, 18
                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if pairAddress != this.address:
                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            var128001 = 32
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            var134001 = 32
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                else:
                                    if eth.balance(this.address) <= 10^15:
                                        if arg1 > balanceOf[address(this.address)]:
                                            revert with 0, 'Insufficient Balance', 0
                                        if balanceOf[address(this.address)] < arg1:
                                            revert with 0, 17
                                        balanceOf[address(this.address)] -= arg1
                                        if stor33[address(this.address)]:
                                            if balanceOf[stor13] > !arg1:
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] += arg1
                                        else:
                                            if pairAddress != stor13:
                                                if pairAddress != this.address:
                                                    if balanceOf[this.address] > -1:
                                                        revert with 0, 17
                                                    if balanceOf[this.address] < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    emit Transfer(0, this.address, this.address);
                                                    if 0 > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            var127001 = 32
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                            var133001 = 32
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not arg1:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            var127001 = 32
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if arg1 and sub_373115d7 > -1 / arg1:
                                                        revert with 0, 17
                                                    if not arg1:
                                                        revert with 0, 18
                                                    if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                        emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                            var133001 = 32
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if eth.balance(this.address) <= stor28:
                                            uint8(stor30.field_0) = 1
                                            if not eth.balance(this.address) / 100:
                                                uint8(stor30.field_0) = 0
                                                if arg1 > balanceOf[address(this.address)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(this.address)] < arg1:
                                                    revert with 0, 17
                                                balanceOf[address(this.address)] -= arg1
                                                if stor33[address(this.address)]:
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if pairAddress != stor13:
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, this.address, this.address);
                                                            if 0 > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !arg1:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] += arg1
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var128001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_373115d7 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var127001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                if 0 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                if 1 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 448] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = (2 * ceil32(return_data.size)) + 644
                                                while idx < mem[ceil32(return_data.size) + 384]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value eth.balance(this.address) / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(2 * ceil32(return_data.size)) + 480] = eth.balance(this.address) / 100
                                                mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = (2 * ceil32(return_data.size)) + 576
                                                while idx < mem[ceil32(return_data.size) + 384]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                      mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                uint8(stor30.field_0) = 0
                                                if arg1 > balanceOf[address(this.address)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(this.address)] < arg1:
                                                    revert with 0, 17
                                                balanceOf[address(this.address)] -= arg1
                                                if stor33[address(this.address)]:
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if pairAddress != stor13:
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, this.address, this.address);
                                                            if 0 > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !arg1:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] += arg1
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_373115d7 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                        else:
                                            mem[ceil32(return_data.size) + 320] = 26
                                            mem[ceil32(return_data.size) + 352] = 'SafeMath: division by zero'
                                            uint8(stor30.field_0) = 1
                                            if not stor28 / 100:
                                                uint8(stor30.field_0) = 0
                                                if arg1 > balanceOf[address(this.address)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(this.address)] < arg1:
                                                    revert with 0, 17
                                                balanceOf[address(this.address)] -= arg1
                                                if stor33[address(this.address)]:
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if pairAddress != stor13:
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, this.address, this.address);
                                                            if 0 > arg1:
                                                                var127001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !arg1:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] += arg1
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_373115d7 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var128001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = (2 * ceil32(return_data.size)) + 480
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                if 0 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                if 1 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 448] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = (2 * ceil32(return_data.size)) + 644
                                                while idx < mem[ceil32(return_data.size) + 384]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value stor28 / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(2 * ceil32(return_data.size)) + 480] = stor28 / 100
                                                mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                _35107 = mem[ceil32(return_data.size) + 384]
                                                mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = mem[64] + 96
                                                while idx < _35107:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                      mem[mem[64] len (2 * ceil32(return_data.size)) + (32 * _35107) + -mem[64] + 576],
                                                uint8(stor30.field_0) = 0
                                                if arg1 > balanceOf[address(this.address)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(this.address)] < arg1:
                                                    revert with 0, 17
                                                balanceOf[address(this.address)] -= arg1
                                                if stor33[address(this.address)]:
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if pairAddress != stor13:
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, this.address, this.address);
                                                            if 0 > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !arg1:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] += arg1
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_373115d7 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                            else:
                                if 0 / liquidityFee and stor27 > -1 / 0 / liquidityFee:
                                    revert with 0, 17
                                if not 0 / liquidityFee:
                                    revert with 0, 18
                                if 0 / liquidityFee * stor27 / 0 / liquidityFee != stor27:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                call stor15 with:
                                   value 0 / liquidityFee * stor27 wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                uint8(stor30.field_0) = 0
                                if not buyBackEnabled:
                                    if arg1 > balanceOf[address(this.address)]:
                                        revert with 0, 'Insufficient Balance', 0
                                    if balanceOf[address(this.address)] < arg1:
                                        revert with 0, 17
                                    balanceOf[address(this.address)] -= arg1
                                    if stor33[address(this.address)]:
                                        if balanceOf[stor13] > !arg1:
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] += arg1
                                    else:
                                        if pairAddress != stor13:
                                            if pairAddress != this.address:
                                                if balanceOf[this.address] > -1:
                                                    revert with 0, 17
                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                emit Transfer(0, this.address, this.address);
                                                if 0 > arg1:
                                                    var119001 = 32
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < 0:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !arg1:
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] += arg1
                                            else:
                                                if not arg1:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                    if 0 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                else:
                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                        revert with 0, 17
                                                    if not arg1:
                                                        revert with 0, 18
                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if not arg1:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if pairAddress != this.address:
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                    if 0 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            var128001 = 32
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            var134001 = 32
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                    revert with 0, 17
                                                if not arg1:
                                                    revert with 0, 18
                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if pairAddress != this.address:
                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            var134001 = 32
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                else:
                                    if eth.balance(this.address) <= 10^15:
                                        if arg1 > balanceOf[address(this.address)]:
                                            revert with 0, 'Insufficient Balance', 0
                                        if balanceOf[address(this.address)] < arg1:
                                            revert with 0, 17
                                        balanceOf[address(this.address)] -= arg1
                                        if stor33[address(this.address)]:
                                            if balanceOf[stor13] > !arg1:
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] += arg1
                                        else:
                                            if pairAddress != stor13:
                                                if pairAddress != this.address:
                                                    if balanceOf[this.address] > -1:
                                                        revert with 0, 17
                                                    if balanceOf[this.address] < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    emit Transfer(0, this.address, this.address);
                                                    if 0 > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            var133001 = 32
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not arg1:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            var133001 = 32
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if arg1 and sub_373115d7 > -1 / arg1:
                                                        revert with 0, 17
                                                    if not arg1:
                                                        revert with 0, 18
                                                    if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                        emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if eth.balance(this.address) <= stor28:
                                            uint8(stor30.field_0) = 1
                                            if not eth.balance(this.address) / 100:
                                                uint8(stor30.field_0) = 0
                                                if arg1 > balanceOf[address(this.address)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(this.address)] < arg1:
                                                    revert with 0, 17
                                                balanceOf[address(this.address)] -= arg1
                                                if stor33[address(this.address)]:
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if pairAddress != stor13:
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, this.address, this.address);
                                                            if 0 > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !arg1:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] += arg1
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    var128001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var134001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                var127001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_373115d7 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var133001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                if 0 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                if 1 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 448] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = (2 * ceil32(return_data.size)) + 644
                                                while idx < mem[ceil32(return_data.size) + 384]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value eth.balance(this.address) / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(2 * ceil32(return_data.size)) + 480] = eth.balance(this.address) / 100
                                                mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = (2 * ceil32(return_data.size)) + 576
                                                while idx < mem[ceil32(return_data.size) + 384]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                      mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                uint8(stor30.field_0) = 0
                                                if arg1 > balanceOf[address(this.address)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(this.address)] < arg1:
                                                    revert with 0, 17
                                                balanceOf[address(this.address)] -= arg1
                                                if stor33[address(this.address)]:
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if pairAddress != stor13:
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, this.address, this.address);
                                                            if 0 > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !arg1:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] += arg1
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_373115d7 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                        else:
                                            mem[ceil32(return_data.size) + 320] = 26
                                            mem[ceil32(return_data.size) + 352] = 'SafeMath: division by zero'
                                            uint8(stor30.field_0) = 1
                                            if not stor28 / 100:
                                                uint8(stor30.field_0) = 0
                                                if arg1 > balanceOf[address(this.address)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(this.address)] < arg1:
                                                    revert with 0, 17
                                                balanceOf[address(this.address)] -= arg1
                                                if stor33[address(this.address)]:
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if pairAddress != stor13:
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, this.address, this.address);
                                                            if 0 > arg1:
                                                                var133001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !arg1:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] += arg1
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                var128001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_373115d7 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var134001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = (2 * ceil32(return_data.size)) + 480
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                if 0 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                if 1 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 448] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = (2 * ceil32(return_data.size)) + 644
                                                while idx < mem[ceil32(return_data.size) + 384]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value stor28 / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(2 * ceil32(return_data.size)) + 480] = stor28 / 100
                                                mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                _35105 = mem[ceil32(return_data.size) + 384]
                                                mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = mem[64] + 96
                                                while idx < _35105:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                      mem[mem[64] len (2 * ceil32(return_data.size)) + (32 * _35105) + -mem[64] + 576],
                                                uint8(stor30.field_0) = 0
                                                if arg1 > balanceOf[address(this.address)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(this.address)] < arg1:
                                                    revert with 0, 17
                                                balanceOf[address(this.address)] -= arg1
                                                if stor33[address(this.address)]:
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if pairAddress != stor13:
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, this.address, this.address);
                                                            if 0 > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !arg1:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] += arg1
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_373115d7 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
        else:
            if stor34[stor13]:
                if uint8(stor30.field_0):
                    if arg1 > balanceOf[address(this.address)]:
                        revert with 0, 'Insufficient Balance', 0
                    if balanceOf[address(this.address)] < arg1:
                        revert with 0, 17
                    balanceOf[address(this.address)] -= arg1
                    if stor33[address(this.address)]:
                        if balanceOf[stor13] > !arg1:
                            revert with 0, 17
                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[stor13] += arg1
                    else:
                        if pairAddress != stor13:
                            if pairAddress != this.address:
                                if balanceOf[this.address] > -1:
                                    revert with 0, 17
                                if balanceOf[this.address] < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, this.address, this.address);
                                if 0 > arg1:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg1 < 0:
                                    revert with 0, 17
                                if balanceOf[stor13] > !arg1:
                                    revert with 0, 17
                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[stor13] += arg1
                            else:
                                if not arg1:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                    if 0 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                else:
                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                        revert with 0, 17
                                    if not arg1:
                                        revert with 0, 18
                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                        else:
                            if not arg1:
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if pairAddress != this.address:
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                    if 0 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                else:
                                    if not arg1:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                        if 0 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                    else:
                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                            revert with 0, 17
                                        if not arg1:
                                            revert with 0, 18
                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                            else:
                                if arg1 and sub_373115d7 > -1 / arg1:
                                    revert with 0, 17
                                if not arg1:
                                    revert with 0, 18
                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if pairAddress != this.address:
                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                else:
                                    if not arg1:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                        if 0 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                    else:
                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                            revert with 0, 17
                                        if not arg1:
                                            revert with 0, 18
                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                else:
                    if not swapAndLiquifyEnabled:
                        if arg1 > balanceOf[address(this.address)]:
                            revert with 0, 'Insufficient Balance', 0
                        if balanceOf[address(this.address)] < arg1:
                            revert with 0, 17
                        balanceOf[address(this.address)] -= arg1
                        if stor33[address(this.address)]:
                            if balanceOf[stor13] > !arg1:
                                revert with 0, 17
                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                revert with 0, 'SafeMath: addition overflow'
                            balanceOf[stor13] += arg1
                        else:
                            if pairAddress != stor13:
                                if pairAddress != this.address:
                                    if balanceOf[this.address] > -1:
                                        revert with 0, 17
                                    if balanceOf[this.address] < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, this.address, this.address);
                                    if 0 > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < 0:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !arg1:
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] += arg1
                                else:
                                    if not arg1:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                        if 0 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                    else:
                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                            revert with 0, 17
                                        if not arg1:
                                            revert with 0, 18
                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                            else:
                                if not arg1:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if pairAddress != this.address:
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                        if 0 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                    else:
                                        if not arg1:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                            if 0 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                        else:
                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                revert with 0, 17
                                            if not arg1:
                                                revert with 0, 18
                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                else:
                                    if arg1 and sub_373115d7 > -1 / arg1:
                                        revert with 0, 17
                                    if not arg1:
                                        revert with 0, 18
                                    if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if pairAddress != this.address:
                                        if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                        emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                        if arg1 * sub_373115d7 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                    else:
                                        if not arg1:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                            if 0 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                        else:
                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                revert with 0, 17
                                            if not arg1:
                                                revert with 0, 18
                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                    else:
                        if pairAddress != stor13:
                            if arg1 > balanceOf[address(this.address)]:
                                revert with 0, 'Insufficient Balance', 0
                            if balanceOf[address(this.address)] < arg1:
                                revert with 0, 17
                            balanceOf[address(this.address)] -= arg1
                            if stor33[address(this.address)]:
                                if balanceOf[stor13] > !arg1:
                                    revert with 0, 17
                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[stor13] += arg1
                            else:
                                if pairAddress != stor13:
                                    if pairAddress != this.address:
                                        if balanceOf[this.address] > -1:
                                            revert with 0, 17
                                        if balanceOf[this.address] < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer(0, this.address, this.address);
                                        if 0 > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !arg1:
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] += arg1
                                    else:
                                        if not arg1:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                            if 0 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                        else:
                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                revert with 0, 17
                                            if not arg1:
                                                revert with 0, 18
                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                else:
                                    if not arg1:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if pairAddress != this.address:
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                            if 0 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                        else:
                                            if not arg1:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                if 0 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                            else:
                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                    revert with 0, 17
                                                if not arg1:
                                                    revert with 0, 18
                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if arg1 and sub_373115d7 > -1 / arg1:
                                            revert with 0, 17
                                        if not arg1:
                                            revert with 0, 18
                                        if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if pairAddress != this.address:
                                            if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                            emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                            if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                        else:
                                            if not arg1:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                if 0 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                            else:
                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                    revert with 0, 17
                                                if not arg1:
                                                    revert with 0, 18
                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                        else:
                            if balanceOf[address(this.address)] < stor29:
                                if buyBackEnabled:
                                    if eth.balance(this.address) > 10^15:
                                        uint8(stor30.field_0) = 1
                                        if eth.balance(this.address) <= stor28:
                                            if eth.balance(this.address) / 100:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[256] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[192] = ext_call.return_data[12 len 20]
                                                mem[224] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[ceil32(return_data.size) + 256] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(return_data.size) + 260] = 0
                                                mem[ceil32(return_data.size) + 388] = 2
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 420
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[ceil32(return_data.size) + 324] = stor13
                                                mem[ceil32(return_data.size) + 356] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value eth.balance(this.address) / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, 2, mem[ceil32(return_data.size) + 420 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[ceil32(return_data.size) + 256] = eth.balance(this.address) / 100
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 352
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(eth.balance(this.address) / 100, Array(len=2, data=mem[ceil32(return_data.size) + 352 len 64]));
                                        else:
                                            if stor28 / 100:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[256] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[192] = ext_call.return_data[12 len 20]
                                                mem[224] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[ceil32(return_data.size) + 256] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(return_data.size) + 260] = 0
                                                mem[ceil32(return_data.size) + 388] = 2
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 420
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[ceil32(return_data.size) + 324] = stor13
                                                mem[ceil32(return_data.size) + 356] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value stor28 / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, 2, mem[ceil32(return_data.size) + 420 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[ceil32(return_data.size) + 256] = stor28 / 100
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 352
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(stor28 / 100, Array(len=2, data=mem[ceil32(return_data.size) + 352 len 64]));
                                        uint8(stor30.field_0) = 0
                                if arg1 > balanceOf[address(this.address)]:
                                    revert with 0, 'Insufficient Balance', 0
                                if balanceOf[address(this.address)] < arg1:
                                    revert with 0, 17
                                balanceOf[address(this.address)] -= arg1
                                if stor33[address(this.address)]:
                                    if balanceOf[stor13] > !arg1:
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] += arg1
                                else:
                                    if pairAddress != stor13:
                                        if pairAddress != this.address:
                                            if balanceOf[this.address] > -1:
                                                revert with 0, 17
                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            emit Transfer(0, this.address, this.address);
                                            if 0 > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !arg1:
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] += arg1
                                        else:
                                            if not arg1:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                if 0 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                            else:
                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                    revert with 0, 17
                                                if not arg1:
                                                    revert with 0, 18
                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if not arg1:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if pairAddress != this.address:
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                if 0 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                            else:
                                                if not arg1:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                    if 0 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                else:
                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                        revert with 0, 17
                                                    if not arg1:
                                                        revert with 0, 18
                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if arg1 and sub_373115d7 > -1 / arg1:
                                                revert with 0, 17
                                            if not arg1:
                                                revert with 0, 18
                                            if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if pairAddress != this.address:
                                                if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                            else:
                                                if not arg1:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                    if 0 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                else:
                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                        revert with 0, 17
                                                    if not arg1:
                                                        revert with 0, 18
                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                            else:
                                uint8(stor30.field_0) = 1
                                mem[96] = 2
                                mem[128] = this.address
                                require ext_code.size(routerAddress)
                                staticcall routerAddress.WETH() with:
                                        gas gas_remaining wei
                                mem[192] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[160] = ext_call.return_data[12 len 20]
                                if not this.address:
                                    revert with 0, 'ERC20: approve from the zero address'
                                if not routerAddress:
                                    revert with 0, 'ERC20: approve to the zero address'
                                allowance[address(this.address)][stor35] = stor29
                                emit Approval(stor29, this.address, routerAddress);
                                mem[ceil32(return_data.size) + 192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                                mem[ceil32(return_data.size) + 196] = stor29
                                mem[ceil32(return_data.size) + 260] = 160
                                mem[ceil32(return_data.size) + 356] = 2
                                idx = 0
                                s = 128
                                t = ceil32(return_data.size) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[ceil32(return_data.size) + 292] = this.address
                                mem[ceil32(return_data.size) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args stor29, 0, 160, address(this.address), block.timestamp, 2, mem[ceil32(return_data.size) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[ceil32(return_data.size) + 192] = stor29
                                idx = 0
                                s = 128
                                t = ceil32(return_data.size) + 288
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                emit SwapTokensForETH(stor29, Array(len=2, data=mem[ceil32(return_data.size) + 288 len 64]));
                                mem[ceil32(return_data.size) + 192] = 30
                                mem[ceil32(return_data.size) + 224] = 'SafeMath: subtraction overflow'
                                if eth.balance(this.address) > eth.balance(this.address):
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if eth.balance(this.address) < eth.balance(this.address):
                                    revert with 0, 17
                                mem[ceil32(return_data.size) + 256] = 26
                                mem[ceil32(return_data.size) + 288] = 'SafeMath: division by zero'
                                if not liquidityFee:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if not 0 / liquidityFee:
                                    call stor15 with:
                                         gas 2300 wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    uint8(stor30.field_0) = 0
                                    if not buyBackEnabled:
                                        if arg1 > balanceOf[address(this.address)]:
                                            revert with 0, 'Insufficient Balance', 0
                                        if balanceOf[address(this.address)] < arg1:
                                            revert with 0, 17
                                        balanceOf[address(this.address)] -= arg1
                                        if stor33[address(this.address)]:
                                            if balanceOf[stor13] > !arg1:
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] += arg1
                                        else:
                                            if pairAddress != stor13:
                                                if pairAddress != this.address:
                                                    if balanceOf[this.address] > -1:
                                                        revert with 0, 17
                                                    if balanceOf[this.address] < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    emit Transfer(0, this.address, this.address);
                                                    if 0 > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not arg1:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var129001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if arg1 and sub_373115d7 > -1 / arg1:
                                                        revert with 0, 17
                                                    if not arg1:
                                                        revert with 0, 18
                                                    if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                        emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                var129001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var135001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if eth.balance(this.address) <= 10^15:
                                            if arg1 > balanceOf[address(this.address)]:
                                                revert with 0, 'Insufficient Balance', 0
                                            if balanceOf[address(this.address)] < arg1:
                                                revert with 0, 17
                                            balanceOf[address(this.address)] -= arg1
                                            if stor33[address(this.address)]:
                                                if balanceOf[stor13] > !arg1:
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] += arg1
                                            else:
                                                if pairAddress != stor13:
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > -1:
                                                            revert with 0, 17
                                                        if balanceOf[this.address] < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        emit Transfer(0, this.address, this.address);
                                                        if 0 > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                var128001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                var134001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                var128001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_373115d7 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                            emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                var134001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if eth.balance(this.address) > stor28:
                                                uint8(stor30.field_0) = 1
                                                if not stor28 / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    var128001 = 32
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var129001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value stor28 / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = stor28 / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 576
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                mem[ceil32(return_data.size) + 320] = 26
                                                mem[ceil32(return_data.size) + 352] = 'SafeMath: division by zero'
                                                uint8(stor30.field_0) = 1
                                                if not eth.balance(this.address) / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        var129001 = 32
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var128001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (2 * ceil32(return_data.size)) + 480
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value eth.balance(this.address) / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = eth.balance(this.address) / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    _35110 = mem[ceil32(return_data.size) + 384]
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = mem[64] + 96
                                                    while idx < _35110:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[mem[64] len (2 * ceil32(return_data.size)) + (32 * _35110) + -mem[64] + 576],
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                else:
                                    if 0 / liquidityFee and stor27 > -1 / 0 / liquidityFee:
                                        revert with 0, 17
                                    if not 0 / liquidityFee:
                                        revert with 0, 18
                                    if 0 / liquidityFee * stor27 / 0 / liquidityFee != stor27:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    call stor15 with:
                                       value 0 / liquidityFee * stor27 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    uint8(stor30.field_0) = 0
                                    if not buyBackEnabled:
                                        if arg1 > balanceOf[address(this.address)]:
                                            revert with 0, 'Insufficient Balance', 0
                                        if balanceOf[address(this.address)] < arg1:
                                            revert with 0, 17
                                        balanceOf[address(this.address)] -= arg1
                                        if stor33[address(this.address)]:
                                            if balanceOf[stor13] > !arg1:
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] += arg1
                                        else:
                                            if pairAddress != stor13:
                                                if pairAddress != this.address:
                                                    if balanceOf[this.address] > -1:
                                                        revert with 0, 17
                                                    if balanceOf[this.address] < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    emit Transfer(0, this.address, this.address);
                                                    if 0 > arg1:
                                                        var120001 = 32
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not arg1:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                var129001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var135001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if arg1 and sub_373115d7 > -1 / arg1:
                                                        revert with 0, 17
                                                    if not arg1:
                                                        revert with 0, 18
                                                    if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                        emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                var135001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if eth.balance(this.address) <= 10^15:
                                            if arg1 > balanceOf[address(this.address)]:
                                                revert with 0, 'Insufficient Balance', 0
                                            if balanceOf[address(this.address)] < arg1:
                                                revert with 0, 17
                                            balanceOf[address(this.address)] -= arg1
                                            if stor33[address(this.address)]:
                                                if balanceOf[stor13] > !arg1:
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] += arg1
                                            else:
                                                if pairAddress != stor13:
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > -1:
                                                            revert with 0, 17
                                                        if balanceOf[this.address] < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        emit Transfer(0, this.address, this.address);
                                                        if 0 > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                var134001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                var134001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_373115d7 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                            emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if eth.balance(this.address) <= stor28:
                                                uint8(stor30.field_0) = 1
                                                if not eth.balance(this.address) / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        var129001 = 32
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        var135001 = 32
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    var128001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var134001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value eth.balance(this.address) / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = eth.balance(this.address) / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 576
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                mem[ceil32(return_data.size) + 320] = 26
                                                mem[ceil32(return_data.size) + 352] = 'SafeMath: division by zero'
                                                uint8(stor30.field_0) = 1
                                                if not stor28 / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    var134001 = 32
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    var129001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var135001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (2 * ceil32(return_data.size)) + 480
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value stor28 / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = stor28 / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    _35109 = mem[ceil32(return_data.size) + 384]
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = mem[64] + 96
                                                    while idx < _35109:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[mem[64] len (2 * ceil32(return_data.size)) + (32 * _35109) + -mem[64] + 576],
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
            else:
                if stor18 != 1:
                    revert with 0, 'Trading not started yet'
                if uint8(stor30.field_0):
                    if arg1 > balanceOf[address(this.address)]:
                        revert with 0, 'Insufficient Balance', 0
                    if balanceOf[address(this.address)] < arg1:
                        revert with 0, 17
                    balanceOf[address(this.address)] -= arg1
                    if stor33[address(this.address)]:
                        if balanceOf[stor13] > !arg1:
                            revert with 0, 17
                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[stor13] += arg1
                    else:
                        if pairAddress != stor13:
                            if pairAddress != this.address:
                                if balanceOf[this.address] > -1:
                                    revert with 0, 17
                                if balanceOf[this.address] < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, this.address, this.address);
                                if 0 > arg1:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg1 < 0:
                                    revert with 0, 17
                                if balanceOf[stor13] > !arg1:
                                    revert with 0, 17
                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[stor13] += arg1
                            else:
                                if not arg1:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                    if 0 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                else:
                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                        revert with 0, 17
                                    if not arg1:
                                        revert with 0, 18
                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                        else:
                            if not arg1:
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if pairAddress != this.address:
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                    if 0 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                else:
                                    if not arg1:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                        if 0 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                    else:
                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                            revert with 0, 17
                                        if not arg1:
                                            revert with 0, 18
                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                            else:
                                if arg1 and sub_373115d7 > -1 / arg1:
                                    revert with 0, 17
                                if not arg1:
                                    revert with 0, 18
                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if pairAddress != this.address:
                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                else:
                                    if not arg1:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                        if 0 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                    else:
                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                            revert with 0, 17
                                        if not arg1:
                                            revert with 0, 18
                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                else:
                    if not swapAndLiquifyEnabled:
                        if arg1 > balanceOf[address(this.address)]:
                            revert with 0, 'Insufficient Balance', 0
                        if balanceOf[address(this.address)] < arg1:
                            revert with 0, 17
                        balanceOf[address(this.address)] -= arg1
                        if stor33[address(this.address)]:
                            if balanceOf[stor13] > !arg1:
                                revert with 0, 17
                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                revert with 0, 'SafeMath: addition overflow'
                            balanceOf[stor13] += arg1
                        else:
                            if pairAddress != stor13:
                                if pairAddress != this.address:
                                    if balanceOf[this.address] > -1:
                                        revert with 0, 17
                                    if balanceOf[this.address] < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, this.address, this.address);
                                    if 0 > arg1:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg1 < 0:
                                        revert with 0, 17
                                    if balanceOf[stor13] > !arg1:
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] += arg1
                                else:
                                    if not arg1:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                        if 0 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                    else:
                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                            revert with 0, 17
                                        if not arg1:
                                            revert with 0, 18
                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                            else:
                                if not arg1:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if pairAddress != this.address:
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                        if 0 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                    else:
                                        if not arg1:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                            if 0 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                        else:
                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                revert with 0, 17
                                            if not arg1:
                                                revert with 0, 18
                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                else:
                                    if arg1 and sub_373115d7 > -1 / arg1:
                                        revert with 0, 17
                                    if not arg1:
                                        revert with 0, 18
                                    if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if pairAddress != this.address:
                                        if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                        emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                        if arg1 * sub_373115d7 / feeDenominator > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                    else:
                                        if not arg1:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                            if 0 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                        else:
                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                revert with 0, 17
                                            if not arg1:
                                                revert with 0, 18
                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                    else:
                        if pairAddress != stor13:
                            if arg1 > balanceOf[address(this.address)]:
                                revert with 0, 'Insufficient Balance', 0
                            if balanceOf[address(this.address)] < arg1:
                                revert with 0, 17
                            balanceOf[address(this.address)] -= arg1
                            if stor33[address(this.address)]:
                                if balanceOf[stor13] > !arg1:
                                    revert with 0, 17
                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[stor13] += arg1
                            else:
                                if pairAddress != stor13:
                                    if pairAddress != this.address:
                                        if balanceOf[this.address] > -1:
                                            revert with 0, 17
                                        if balanceOf[this.address] < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer(0, this.address, this.address);
                                        if 0 > arg1:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg1 < 0:
                                            revert with 0, 17
                                        if balanceOf[stor13] > !arg1:
                                            revert with 0, 17
                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[stor13] += arg1
                                    else:
                                        if not arg1:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                            if 0 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                        else:
                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                revert with 0, 17
                                            if not arg1:
                                                revert with 0, 18
                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                else:
                                    if not arg1:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if pairAddress != this.address:
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                            if 0 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                        else:
                                            if not arg1:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                if 0 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                            else:
                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                    revert with 0, 17
                                                if not arg1:
                                                    revert with 0, 18
                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if arg1 and sub_373115d7 > -1 / arg1:
                                            revert with 0, 17
                                        if not arg1:
                                            revert with 0, 18
                                        if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if pairAddress != this.address:
                                            if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                            emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                            if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                        else:
                                            if not arg1:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                if 0 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                            else:
                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                    revert with 0, 17
                                                if not arg1:
                                                    revert with 0, 18
                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                        else:
                            if balanceOf[address(this.address)] < stor29:
                                if buyBackEnabled:
                                    if eth.balance(this.address) > 10^15:
                                        uint8(stor30.field_0) = 1
                                        if eth.balance(this.address) <= stor28:
                                            if eth.balance(this.address) / 100:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[256] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[192] = ext_call.return_data[12 len 20]
                                                mem[224] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[ceil32(return_data.size) + 256] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(return_data.size) + 260] = 0
                                                mem[ceil32(return_data.size) + 388] = 2
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 420
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[ceil32(return_data.size) + 324] = stor13
                                                mem[ceil32(return_data.size) + 356] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value eth.balance(this.address) / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, 2, mem[ceil32(return_data.size) + 420 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[ceil32(return_data.size) + 256] = eth.balance(this.address) / 100
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 352
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(eth.balance(this.address) / 100, Array(len=2, data=mem[ceil32(return_data.size) + 352 len 64]));
                                        else:
                                            if stor28 / 100:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[256] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[192] = ext_call.return_data[12 len 20]
                                                mem[224] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[ceil32(return_data.size) + 256] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(return_data.size) + 260] = 0
                                                mem[ceil32(return_data.size) + 388] = 2
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 420
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[ceil32(return_data.size) + 324] = stor13
                                                mem[ceil32(return_data.size) + 356] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value stor28 / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, 2, mem[ceil32(return_data.size) + 420 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[ceil32(return_data.size) + 256] = stor28 / 100
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 352
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(stor28 / 100, Array(len=2, data=mem[ceil32(return_data.size) + 352 len 64]));
                                        uint8(stor30.field_0) = 0
                                if arg1 > balanceOf[address(this.address)]:
                                    revert with 0, 'Insufficient Balance', 0
                                if balanceOf[address(this.address)] < arg1:
                                    revert with 0, 17
                                balanceOf[address(this.address)] -= arg1
                                if stor33[address(this.address)]:
                                    if balanceOf[stor13] > !arg1:
                                        revert with 0, 17
                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[stor13] += arg1
                                else:
                                    if pairAddress != stor13:
                                        if pairAddress != this.address:
                                            if balanceOf[this.address] > -1:
                                                revert with 0, 17
                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            emit Transfer(0, this.address, this.address);
                                            if 0 > arg1:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg1 < 0:
                                                revert with 0, 17
                                            if balanceOf[stor13] > !arg1:
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] += arg1
                                        else:
                                            if not arg1:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                if 0 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                            else:
                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                    revert with 0, 17
                                                if not arg1:
                                                    revert with 0, 18
                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if not arg1:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if pairAddress != this.address:
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                if 0 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                            else:
                                                if not arg1:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                    if 0 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                else:
                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                        revert with 0, 17
                                                    if not arg1:
                                                        revert with 0, 18
                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if arg1 and sub_373115d7 > -1 / arg1:
                                                revert with 0, 17
                                            if not arg1:
                                                revert with 0, 18
                                            if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if pairAddress != this.address:
                                                if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                            else:
                                                if not arg1:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                    if 0 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                else:
                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                        revert with 0, 17
                                                    if not arg1:
                                                        revert with 0, 18
                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                            else:
                                uint8(stor30.field_0) = 1
                                mem[96] = 2
                                mem[128] = this.address
                                require ext_code.size(routerAddress)
                                staticcall routerAddress.WETH() with:
                                        gas gas_remaining wei
                                mem[192] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[160] = ext_call.return_data[12 len 20]
                                if not this.address:
                                    revert with 0, 'ERC20: approve from the zero address'
                                if not routerAddress:
                                    revert with 0, 'ERC20: approve to the zero address'
                                allowance[address(this.address)][stor35] = stor29
                                emit Approval(stor29, this.address, routerAddress);
                                mem[ceil32(return_data.size) + 192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                                mem[ceil32(return_data.size) + 196] = stor29
                                mem[ceil32(return_data.size) + 260] = 160
                                mem[ceil32(return_data.size) + 356] = 2
                                idx = 0
                                s = 128
                                t = ceil32(return_data.size) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[ceil32(return_data.size) + 292] = this.address
                                mem[ceil32(return_data.size) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args stor29, 0, 160, address(this.address), block.timestamp, 2, mem[ceil32(return_data.size) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[ceil32(return_data.size) + 192] = stor29
                                idx = 0
                                s = 128
                                t = ceil32(return_data.size) + 288
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                emit SwapTokensForETH(stor29, Array(len=2, data=mem[ceil32(return_data.size) + 288 len 64]));
                                mem[ceil32(return_data.size) + 192] = 30
                                mem[ceil32(return_data.size) + 224] = 'SafeMath: subtraction overflow'
                                if eth.balance(this.address) > eth.balance(this.address):
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if eth.balance(this.address) < eth.balance(this.address):
                                    revert with 0, 17
                                mem[ceil32(return_data.size) + 256] = 26
                                mem[ceil32(return_data.size) + 288] = 'SafeMath: division by zero'
                                if not liquidityFee:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if not 0 / liquidityFee:
                                    call stor15 with:
                                         gas 2300 wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    uint8(stor30.field_0) = 0
                                    if not buyBackEnabled:
                                        if arg1 > balanceOf[address(this.address)]:
                                            revert with 0, 'Insufficient Balance', 0
                                        if balanceOf[address(this.address)] < arg1:
                                            revert with 0, 17
                                        balanceOf[address(this.address)] -= arg1
                                        if stor33[address(this.address)]:
                                            if balanceOf[stor13] > !arg1:
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] += arg1
                                        else:
                                            if pairAddress != stor13:
                                                if pairAddress != this.address:
                                                    if balanceOf[this.address] > -1:
                                                        revert with 0, 17
                                                    if balanceOf[this.address] < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    emit Transfer(0, this.address, this.address);
                                                    if 0 > arg1:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not arg1:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var130001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if arg1 and sub_373115d7 > -1 / arg1:
                                                        revert with 0, 17
                                                    if not arg1:
                                                        revert with 0, 18
                                                    if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                        emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                var130001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var136001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if eth.balance(this.address) <= 10^15:
                                            if arg1 > balanceOf[address(this.address)]:
                                                revert with 0, 'Insufficient Balance', 0
                                            if balanceOf[address(this.address)] < arg1:
                                                revert with 0, 17
                                            balanceOf[address(this.address)] -= arg1
                                            if stor33[address(this.address)]:
                                                if balanceOf[stor13] > !arg1:
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] += arg1
                                            else:
                                                if pairAddress != stor13:
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > -1:
                                                            revert with 0, 17
                                                        if balanceOf[this.address] < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        emit Transfer(0, this.address, this.address);
                                                        if 0 > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                var129001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                var135001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                var129001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_373115d7 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                            emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                var135001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                        else:
                                            uint8(stor30.field_0) = 1
                                            if eth.balance(this.address) <= stor28:
                                                if not eth.balance(this.address) / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        var130001 = 32
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var129001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value eth.balance(this.address) / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = eth.balance(this.address) / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 576
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not stor28 / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    var129001 = 32
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var130001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value stor28 / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = stor28 / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 576
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                else:
                                    if 0 / liquidityFee and stor27 > -1 / 0 / liquidityFee:
                                        revert with 0, 17
                                    if not 0 / liquidityFee:
                                        revert with 0, 18
                                    if 0 / liquidityFee * stor27 / 0 / liquidityFee != stor27:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    call stor15 with:
                                       value 0 / liquidityFee * stor27 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    uint8(stor30.field_0) = 0
                                    if not buyBackEnabled:
                                        if arg1 > balanceOf[address(this.address)]:
                                            revert with 0, 'Insufficient Balance', 0
                                        if balanceOf[address(this.address)] < arg1:
                                            revert with 0, 17
                                        balanceOf[address(this.address)] -= arg1
                                        if stor33[address(this.address)]:
                                            if balanceOf[stor13] > !arg1:
                                                revert with 0, 17
                                            if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[stor13] += arg1
                                        else:
                                            if pairAddress != stor13:
                                                if pairAddress != this.address:
                                                    if balanceOf[this.address] > -1:
                                                        revert with 0, 17
                                                    if balanceOf[this.address] < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    emit Transfer(0, this.address, this.address);
                                                    if 0 > arg1:
                                                        var121001 = 32
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg1 < 0:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] > !arg1:
                                                        revert with 0, 17
                                                    if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[stor13] += arg1
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not arg1:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                        if 0 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                var130001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var136001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if arg1 and sub_373115d7 > -1 / arg1:
                                                        revert with 0, 17
                                                    if not arg1:
                                                        revert with 0, 18
                                                    if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                        emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                        if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                var136001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if eth.balance(this.address) <= 10^15:
                                            if arg1 > balanceOf[address(this.address)]:
                                                revert with 0, 'Insufficient Balance', 0
                                            if balanceOf[address(this.address)] < arg1:
                                                revert with 0, 17
                                            balanceOf[address(this.address)] -= arg1
                                            if stor33[address(this.address)]:
                                                if balanceOf[stor13] > !arg1:
                                                    revert with 0, 17
                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[stor13] += arg1
                                            else:
                                                if pairAddress != stor13:
                                                    if pairAddress != this.address:
                                                        if balanceOf[this.address] > -1:
                                                            revert with 0, 17
                                                        if balanceOf[this.address] < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        emit Transfer(0, this.address, this.address);
                                                        if 0 > arg1:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg1 < 0:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if not arg1:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                var135001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if arg1 and sub_a79b4412 > -1 / arg1:
                                                                revert with 0, 17
                                                            if not arg1:
                                                                revert with 0, 18
                                                            if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if not arg1:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), this.address, this.address);
                                                            if 0 / feeDenominator > arg1:
                                                                var135001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if arg1 and sub_373115d7 > -1 / arg1:
                                                            revert with 0, 17
                                                        if not arg1:
                                                            revert with 0, 18
                                                        if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != this.address:
                                                            if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                            emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                            if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                if 0 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_a79b4412 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                        else:
                                            mem[ceil32(return_data.size) + 320] = 26
                                            mem[ceil32(return_data.size) + 352] = 'SafeMath: division by zero'
                                            uint8(stor30.field_0) = 1
                                            if eth.balance(this.address) <= stor28:
                                                if not eth.balance(this.address) / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        var130001 = 32
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        var136001 = 32
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    var129001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var135001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (2 * ceil32(return_data.size)) + 480
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value eth.balance(this.address) / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = eth.balance(this.address) / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    _35112 = mem[ceil32(return_data.size) + 384]
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = mem[64] + 96
                                                    while idx < _35112:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[mem[64] len (2 * ceil32(return_data.size)) + (32 * _35112) + -mem[64] + 576],
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not stor28 / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    var135001 = 32
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    var130001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var136001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (2 * ceil32(return_data.size)) + 480
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value stor28 / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = stor28 / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    _35113 = mem[ceil32(return_data.size) + 384]
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = mem[64] + 96
                                                    while idx < _35113:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[mem[64] len (2 * ceil32(return_data.size)) + (32 * _35113) + -mem[64] + 576],
                                                    uint8(stor30.field_0) = 0
                                                    if arg1 > balanceOf[address(this.address)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(this.address)] < arg1:
                                                        revert with 0, 17
                                                    balanceOf[address(this.address)] -= arg1
                                                    if stor33[address(this.address)]:
                                                        if balanceOf[stor13] > !arg1:
                                                            revert with 0, 17
                                                        if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[stor13] += arg1
                                                    else:
                                                        if pairAddress != stor13:
                                                            if pairAddress != this.address:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, this.address, this.address);
                                                                if 0 > arg1:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg1 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] > !arg1:
                                                                    revert with 0, 17
                                                                if balanceOf[stor13] + arg1 < balanceOf[stor13]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[stor13] += arg1
                                                            else:
                                                                if not arg1:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if arg1 and sub_a79b4412 > -1 / arg1:
                                                                        revert with 0, 17
                                                                    if not arg1:
                                                                        revert with 0, 18
                                                                    if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg1:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                    if 0 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg1 and sub_373115d7 > -1 / arg1:
                                                                    revert with 0, 17
                                                                if not arg1:
                                                                    revert with 0, 18
                                                                if arg1 * sub_373115d7 / arg1 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != this.address:
                                                                    if balanceOf[this.address] > !(arg1 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg1 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg1 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg1 * sub_373115d7 / feeDenominator), this.address, this.address);
                                                                    if arg1 * sub_373115d7 / feeDenominator > arg1:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg1 < arg1 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] > !(arg1 - (arg1 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator) < balanceOf[stor13]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg1:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), this.address, this.address);
                                                                        if 0 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (0 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg1 and sub_a79b4412 > -1 / arg1:
                                                                            revert with 0, 17
                                                                        if not arg1:
                                                                            revert with 0, 18
                                                                        if arg1 * sub_a79b4412 / arg1 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg1 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg1 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg1 * sub_a79b4412 / feeDenominator), this.address, this.address);
                                                                        if arg1 * sub_a79b4412 / feeDenominator > arg1:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg1 < arg1 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] > !(arg1 - (arg1 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator) < balanceOf[stor13]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[stor13] = balanceOf[stor13] + arg1 - (arg1 * sub_a79b4412 / feeDenominator)
}

function transfer(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if uint8(stor30.field_0):
        if arg2 > balanceOf[address(msg.sender)]:
            revert with 0, 'Insufficient Balance', 0
        if balanceOf[address(msg.sender)] < arg2:
            revert with 0, 17
        balanceOf[address(msg.sender)] -= arg2
        if balanceOf[arg1] > !arg2:
            revert with 0, 17
        if balanceOf[arg1] + arg2 < balanceOf[arg1]:
            revert with 0, 'SafeMath: addition overflow'
        balanceOf[address(arg1)] = balanceOf[arg1] + arg2
        emit Transfer(arg2, msg.sender, arg1);
    else:
        if stor3[address(msg.sender)]:
            revert with 0, 'account'
        if stor3[address(arg1)]:
            revert with 0, 'account'
        if stor34[address(msg.sender)]:
            if uint8(stor30.field_0):
                if arg2 > balanceOf[address(msg.sender)]:
                    revert with 0, 'Insufficient Balance', 0
                if balanceOf[address(msg.sender)] < arg2:
                    revert with 0, 17
                balanceOf[address(msg.sender)] -= arg2
                if stor33[address(msg.sender)]:
                    if balanceOf[address(arg1)] > !arg2:
                        revert with 0, 17
                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(arg1)] += arg2
                else:
                    if pairAddress != arg1:
                        if pairAddress != msg.sender:
                            if balanceOf[this.address] > -1:
                                revert with 0, 17
                            if balanceOf[this.address] < balanceOf[this.address]:
                                revert with 0, 'SafeMath: addition overflow'
                            emit Transfer(0, msg.sender, this.address);
                            if 0 > arg2:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if arg2 < 0:
                                revert with 0, 17
                            if balanceOf[address(arg1)] > !arg2:
                                revert with 0, 17
                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                revert with 0, 'SafeMath: addition overflow'
                            balanceOf[address(arg1)] += arg2
                        else:
                            if not arg2:
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if balanceOf[this.address] > !(0 / feeDenominator):
                                    revert with 0, 17
                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[this.address] += 0 / feeDenominator
                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                if 0 / feeDenominator > arg2:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg2 < 0 / feeDenominator:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                    revert with 0, 17
                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                            else:
                                if arg2 and sub_a79b4412 > -1 / arg2:
                                    revert with 0, 17
                                if not arg2:
                                    revert with 0, 18
                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                    revert with 0, 17
                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                    revert with 0, 17
                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                    else:
                        if not arg2:
                            if not feeDenominator:
                                revert with 0, 'SafeMath: division by zero', 0
                            if pairAddress != msg.sender:
                                if balanceOf[this.address] > !(0 / feeDenominator):
                                    revert with 0, 17
                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[this.address] += 0 / feeDenominator
                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                if 0 / feeDenominator > arg2:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg2 < 0 / feeDenominator:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                    revert with 0, 17
                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                            else:
                                if not arg2:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                    if 0 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                else:
                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                        revert with 0, 17
                                    if not arg2:
                                        revert with 0, 18
                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                        else:
                            if arg2 and sub_373115d7 > -1 / arg2:
                                revert with 0, 17
                            if not arg2:
                                revert with 0, 18
                            if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if not feeDenominator:
                                revert with 0, 'SafeMath: division by zero', 0
                            if pairAddress != msg.sender:
                                if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                    revert with 0, 17
                                if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                if arg2 * sub_373115d7 / feeDenominator > arg2:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                    revert with 0, 17
                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                            else:
                                if not arg2:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                    if 0 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                else:
                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                        revert with 0, 17
                                    if not arg2:
                                        revert with 0, 18
                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
            else:
                if not swapAndLiquifyEnabled:
                    if arg2 > balanceOf[address(msg.sender)]:
                        revert with 0, 'Insufficient Balance', 0
                    if balanceOf[address(msg.sender)] < arg2:
                        revert with 0, 17
                    balanceOf[address(msg.sender)] -= arg2
                    if stor33[address(msg.sender)]:
                        if balanceOf[address(arg1)] > !arg2:
                            revert with 0, 17
                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(arg1)] += arg2
                    else:
                        if pairAddress != arg1:
                            if pairAddress != msg.sender:
                                if balanceOf[this.address] > -1:
                                    revert with 0, 17
                                if balanceOf[this.address] < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, msg.sender, this.address);
                                if 0 > arg2:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg2 < 0:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] > !arg2:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[address(arg1)] += arg2
                            else:
                                if not arg2:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                    if 0 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                else:
                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                        revert with 0, 17
                                    if not arg2:
                                        revert with 0, 18
                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                        else:
                            if not arg2:
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if pairAddress != msg.sender:
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                    if 0 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                else:
                                    if not arg2:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                        if 0 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                    else:
                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                            revert with 0, 17
                                        if not arg2:
                                            revert with 0, 18
                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                            else:
                                if arg2 and sub_373115d7 > -1 / arg2:
                                    revert with 0, 17
                                if not arg2:
                                    revert with 0, 18
                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if pairAddress != msg.sender:
                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                else:
                                    if not arg2:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                        if 0 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                    else:
                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                            revert with 0, 17
                                        if not arg2:
                                            revert with 0, 18
                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                else:
                    if pairAddress != arg1:
                        if arg2 > balanceOf[address(msg.sender)]:
                            revert with 0, 'Insufficient Balance', 0
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 0, 17
                        balanceOf[address(msg.sender)] -= arg2
                        if stor33[address(msg.sender)]:
                            if balanceOf[address(arg1)] > !arg2:
                                revert with 0, 17
                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                revert with 0, 'SafeMath: addition overflow'
                            balanceOf[address(arg1)] += arg2
                        else:
                            if pairAddress != arg1:
                                if pairAddress != msg.sender:
                                    if balanceOf[this.address] > -1:
                                        revert with 0, 17
                                    if balanceOf[this.address] < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, this.address);
                                    if 0 > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < 0:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !arg2:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] += arg2
                                else:
                                    if not arg2:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                        if 0 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                    else:
                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                            revert with 0, 17
                                        if not arg2:
                                            revert with 0, 18
                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                            else:
                                if not arg2:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if pairAddress != msg.sender:
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                        if 0 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                    else:
                                        if not arg2:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                            if 0 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                        else:
                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                revert with 0, 17
                                            if not arg2:
                                                revert with 0, 18
                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                else:
                                    if arg2 and sub_373115d7 > -1 / arg2:
                                        revert with 0, 17
                                    if not arg2:
                                        revert with 0, 18
                                    if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if pairAddress != msg.sender:
                                        if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                        emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                        if arg2 * sub_373115d7 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                    else:
                                        if not arg2:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                            if 0 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                        else:
                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                revert with 0, 17
                                            if not arg2:
                                                revert with 0, 18
                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                    else:
                        if balanceOf[address(this.address)] < stor29:
                            if buyBackEnabled:
                                if eth.balance(this.address) > 10^15:
                                    uint8(stor30.field_0) = 1
                                    if eth.balance(this.address) <= stor28:
                                        if eth.balance(this.address) / 100:
                                            require ext_code.size(routerAddress)
                                            staticcall routerAddress.WETH() with:
                                                    gas gas_remaining wei
                                            mem[256] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[192] = ext_call.return_data[12 len 20]
                                            mem[224] = this.address
                                            if block.timestamp > -301:
                                                revert with 0, 17
                                            if block.timestamp + 300 < block.timestamp:
                                                revert with 0, 'SafeMath: addition overflow'
                                            mem[ceil32(return_data.size) + 256] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(return_data.size) + 260] = 0
                                            mem[ceil32(return_data.size) + 388] = 2
                                            idx = 0
                                            s = 192
                                            t = ceil32(return_data.size) + 420
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[ceil32(return_data.size) + 324] = stor13
                                            mem[ceil32(return_data.size) + 356] = block.timestamp + 300
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                               value eth.balance(this.address) / 100 wei
                                                 gas gas_remaining wei
                                                args 0, 128, stor13, block.timestamp + 300, 2, mem[ceil32(return_data.size) + 420 len 64]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[ceil32(return_data.size) + 256] = eth.balance(this.address) / 100
                                            idx = 0
                                            s = 192
                                            t = ceil32(return_data.size) + 352
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            emit SwapETHForTokens(eth.balance(this.address) / 100, Array(len=2, data=mem[ceil32(return_data.size) + 352 len 64]));
                                    else:
                                        if stor28 / 100:
                                            require ext_code.size(routerAddress)
                                            staticcall routerAddress.WETH() with:
                                                    gas gas_remaining wei
                                            mem[256] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[192] = ext_call.return_data[12 len 20]
                                            mem[224] = this.address
                                            if block.timestamp > -301:
                                                revert with 0, 17
                                            if block.timestamp + 300 < block.timestamp:
                                                revert with 0, 'SafeMath: addition overflow'
                                            mem[ceil32(return_data.size) + 256] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(return_data.size) + 260] = 0
                                            mem[ceil32(return_data.size) + 388] = 2
                                            idx = 0
                                            s = 192
                                            t = ceil32(return_data.size) + 420
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[ceil32(return_data.size) + 324] = stor13
                                            mem[ceil32(return_data.size) + 356] = block.timestamp + 300
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                               value stor28 / 100 wei
                                                 gas gas_remaining wei
                                                args 0, 128, stor13, block.timestamp + 300, 2, mem[ceil32(return_data.size) + 420 len 64]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[ceil32(return_data.size) + 256] = stor28 / 100
                                            idx = 0
                                            s = 192
                                            t = ceil32(return_data.size) + 352
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            emit SwapETHForTokens(stor28 / 100, Array(len=2, data=mem[ceil32(return_data.size) + 352 len 64]));
                                    uint8(stor30.field_0) = 0
                            if arg2 > balanceOf[address(msg.sender)]:
                                revert with 0, 'Insufficient Balance', 0
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)] -= arg2
                            if stor33[address(msg.sender)]:
                                if balanceOf[address(arg1)] > !arg2:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[address(arg1)] += arg2
                            else:
                                if pairAddress != arg1:
                                    if pairAddress != msg.sender:
                                        if balanceOf[this.address] > -1:
                                            revert with 0, 17
                                        if balanceOf[this.address] < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer(0, msg.sender, this.address);
                                        if 0 > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !arg2:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] += arg2
                                    else:
                                        if not arg2:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                            if 0 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                        else:
                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                revert with 0, 17
                                            if not arg2:
                                                revert with 0, 18
                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                else:
                                    if not arg2:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if pairAddress != msg.sender:
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                            if 0 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                        else:
                                            if not arg2:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                if 0 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                            else:
                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                    revert with 0, 17
                                                if not arg2:
                                                    revert with 0, 18
                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if arg2 and sub_373115d7 > -1 / arg2:
                                            revert with 0, 17
                                        if not arg2:
                                            revert with 0, 18
                                        if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if pairAddress != msg.sender:
                                            if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                            emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                            if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                        else:
                                            if not arg2:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                if 0 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                            else:
                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                    revert with 0, 17
                                                if not arg2:
                                                    revert with 0, 18
                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                        else:
                            uint8(stor30.field_0) = 1
                            mem[96] = 2
                            mem[128] = this.address
                            require ext_code.size(routerAddress)
                            staticcall routerAddress.WETH() with:
                                    gas gas_remaining wei
                            mem[192] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[160] = ext_call.return_data[12 len 20]
                            if not this.address:
                                revert with 0, 'ERC20: approve from the zero address'
                            if not routerAddress:
                                revert with 0, 'ERC20: approve to the zero address'
                            allowance[address(this.address)][stor35] = stor29
                            emit Approval(stor29, this.address, routerAddress);
                            mem[ceil32(return_data.size) + 192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                            mem[ceil32(return_data.size) + 196] = stor29
                            mem[ceil32(return_data.size) + 260] = 160
                            mem[ceil32(return_data.size) + 356] = 2
                            idx = 0
                            s = 128
                            t = ceil32(return_data.size) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[ceil32(return_data.size) + 292] = this.address
                            mem[ceil32(return_data.size) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args stor29, 0, 160, address(this.address), block.timestamp, 2, mem[ceil32(return_data.size) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[ceil32(return_data.size) + 192] = stor29
                            idx = 0
                            s = 128
                            t = ceil32(return_data.size) + 288
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            emit SwapTokensForETH(stor29, Array(len=2, data=mem[ceil32(return_data.size) + 288 len 64]));
                            mem[ceil32(return_data.size) + 192] = 30
                            mem[ceil32(return_data.size) + 224] = 'SafeMath: subtraction overflow'
                            if eth.balance(this.address) > eth.balance(this.address):
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if eth.balance(this.address) < eth.balance(this.address):
                                revert with 0, 17
                            mem[ceil32(return_data.size) + 256] = 26
                            mem[ceil32(return_data.size) + 288] = 'SafeMath: division by zero'
                            if not liquidityFee:
                                revert with 0, 'SafeMath: division by zero', 0
                            if not 0 / liquidityFee:
                                call stor15 with:
                                     gas 2300 wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                uint8(stor30.field_0) = 0
                                if not buyBackEnabled:
                                    if arg2 > balanceOf[address(msg.sender)]:
                                        revert with 0, 'Insufficient Balance', 0
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if stor33[address(msg.sender)]:
                                        if balanceOf[address(arg1)] > !arg2:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] += arg2
                                    else:
                                        if pairAddress != arg1:
                                            if pairAddress != msg.sender:
                                                if balanceOf[this.address] > -1:
                                                    revert with 0, 17
                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                emit Transfer(0, msg.sender, this.address);
                                                if 0 > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < 0:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !arg2:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] += arg2
                                            else:
                                                if not arg2:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                    if 0 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                else:
                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                        revert with 0, 17
                                                    if not arg2:
                                                        revert with 0, 18
                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if not arg2:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if pairAddress != msg.sender:
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                    if 0 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            var130001 = 32
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                    revert with 0, 17
                                                if not arg2:
                                                    revert with 0, 18
                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if pairAddress != msg.sender:
                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            var130001 = 32
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            var136001 = 32
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                else:
                                    if eth.balance(this.address) <= 10^15:
                                        if arg2 > balanceOf[address(msg.sender)]:
                                            revert with 0, 'Insufficient Balance', 0
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0, 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor33[address(msg.sender)]:
                                            if balanceOf[address(arg1)] > !arg2:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] += arg2
                                        else:
                                            if pairAddress != arg1:
                                                if pairAddress != msg.sender:
                                                    if balanceOf[this.address] > -1:
                                                        revert with 0, 17
                                                    if balanceOf[this.address] < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    emit Transfer(0, msg.sender, this.address);
                                                    if 0 > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            var129001 = 32
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                            var135001 = 32
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not arg2:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            var129001 = 32
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if arg2 and sub_373115d7 > -1 / arg2:
                                                        revert with 0, 17
                                                    if not arg2:
                                                        revert with 0, 18
                                                    if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                        emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                            var135001 = 32
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                    else:
                                        mem[ceil32(return_data.size) + 320] = 26
                                        mem[ceil32(return_data.size) + 352] = 'SafeMath: division by zero'
                                        uint8(stor30.field_0) = 1
                                        if eth.balance(this.address) <= stor28:
                                            if not eth.balance(this.address) / 100:
                                                uint8(stor30.field_0) = 0
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0, 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor33[address(msg.sender)]:
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if pairAddress != arg1:
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, msg.sender, this.address);
                                                            if 0 > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !arg2:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] += arg2
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var130001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_373115d7 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var129001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = (2 * ceil32(return_data.size)) + 480
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                if 0 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                if 1 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 448] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = (2 * ceil32(return_data.size)) + 644
                                                while idx < mem[ceil32(return_data.size) + 384]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value eth.balance(this.address) / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(2 * ceil32(return_data.size)) + 480] = eth.balance(this.address) / 100
                                                mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                _40800 = mem[ceil32(return_data.size) + 384]
                                                mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = mem[64] + 96
                                                while idx < _40800:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                      mem[mem[64] len (2 * ceil32(return_data.size)) + (32 * _40800) + -mem[64] + 576],
                                                uint8(stor30.field_0) = 0
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0, 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor33[address(msg.sender)]:
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if pairAddress != arg1:
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, msg.sender, this.address);
                                                            if 0 > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !arg2:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] += arg2
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_373115d7 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if not stor28 / 100:
                                                uint8(stor30.field_0) = 0
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0, 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor33[address(msg.sender)]:
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if pairAddress != arg1:
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, msg.sender, this.address);
                                                            if 0 > arg2:
                                                                var129001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !arg2:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] += arg2
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_373115d7 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var130001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = (2 * ceil32(return_data.size)) + 480
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                if 0 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                if 1 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 448] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = (2 * ceil32(return_data.size)) + 644
                                                while idx < mem[ceil32(return_data.size) + 384]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value stor28 / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(2 * ceil32(return_data.size)) + 480] = stor28 / 100
                                                mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                _40801 = mem[ceil32(return_data.size) + 384]
                                                mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = mem[64] + 96
                                                while idx < _40801:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                      mem[mem[64] len (2 * ceil32(return_data.size)) + (32 * _40801) + -mem[64] + 576],
                                                uint8(stor30.field_0) = 0
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0, 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor33[address(msg.sender)]:
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if pairAddress != arg1:
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, msg.sender, this.address);
                                                            if 0 > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !arg2:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] += arg2
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_373115d7 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                            else:
                                if 0 / liquidityFee and stor27 > -1 / 0 / liquidityFee:
                                    revert with 0, 17
                                if not 0 / liquidityFee:
                                    revert with 0, 18
                                if 0 / liquidityFee * stor27 / 0 / liquidityFee != stor27:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                call stor15 with:
                                   value 0 / liquidityFee * stor27 wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                uint8(stor30.field_0) = 0
                                if not buyBackEnabled:
                                    if arg2 > balanceOf[address(msg.sender)]:
                                        revert with 0, 'Insufficient Balance', 0
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if stor33[address(msg.sender)]:
                                        if balanceOf[address(arg1)] > !arg2:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] += arg2
                                    else:
                                        if pairAddress != arg1:
                                            if pairAddress != msg.sender:
                                                if balanceOf[this.address] > -1:
                                                    revert with 0, 17
                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                emit Transfer(0, msg.sender, this.address);
                                                if 0 > arg2:
                                                    var121001 = 32
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < 0:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !arg2:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] += arg2
                                            else:
                                                if not arg2:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                    if 0 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                else:
                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                        revert with 0, 17
                                                    if not arg2:
                                                        revert with 0, 18
                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if not arg2:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if pairAddress != msg.sender:
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                    if 0 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            var130001 = 32
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            var136001 = 32
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                    revert with 0, 17
                                                if not arg2:
                                                    revert with 0, 18
                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if pairAddress != msg.sender:
                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            var136001 = 32
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                else:
                                    if eth.balance(this.address) <= 10^15:
                                        if arg2 > balanceOf[address(msg.sender)]:
                                            revert with 0, 'Insufficient Balance', 0
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0, 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor33[address(msg.sender)]:
                                            if balanceOf[address(arg1)] > !arg2:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] += arg2
                                        else:
                                            if pairAddress != arg1:
                                                if pairAddress != msg.sender:
                                                    if balanceOf[this.address] > -1:
                                                        revert with 0, 17
                                                    if balanceOf[this.address] < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    emit Transfer(0, msg.sender, this.address);
                                                    if 0 > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            var135001 = 32
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not arg2:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            var135001 = 32
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if arg2 and sub_373115d7 > -1 / arg2:
                                                        revert with 0, 17
                                                    if not arg2:
                                                        revert with 0, 18
                                                    if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                        emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if eth.balance(this.address) > stor28:
                                            uint8(stor30.field_0) = 1
                                            if not stor28 / 100:
                                                uint8(stor30.field_0) = 0
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0, 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor33[address(msg.sender)]:
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if pairAddress != arg1:
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, msg.sender, this.address);
                                                            if 0 > arg2:
                                                                var135001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !arg2:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] += arg2
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                var130001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_373115d7 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var136001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                if 0 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                if 1 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 448] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = (2 * ceil32(return_data.size)) + 644
                                                while idx < mem[ceil32(return_data.size) + 384]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value stor28 / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(2 * ceil32(return_data.size)) + 480] = stor28 / 100
                                                mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = (2 * ceil32(return_data.size)) + 576
                                                while idx < mem[ceil32(return_data.size) + 384]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                      mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                uint8(stor30.field_0) = 0
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0, 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor33[address(msg.sender)]:
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if pairAddress != arg1:
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, msg.sender, this.address);
                                                            if 0 > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !arg2:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] += arg2
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_373115d7 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                        else:
                                            mem[ceil32(return_data.size) + 320] = 26
                                            mem[ceil32(return_data.size) + 352] = 'SafeMath: division by zero'
                                            uint8(stor30.field_0) = 1
                                            if not eth.balance(this.address) / 100:
                                                uint8(stor30.field_0) = 0
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0, 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor33[address(msg.sender)]:
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if pairAddress != arg1:
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, msg.sender, this.address);
                                                            if 0 > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !arg2:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] += arg2
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    var130001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var136001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                var129001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_373115d7 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var135001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = (2 * ceil32(return_data.size)) + 480
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                if 0 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                if 1 >= mem[ceil32(return_data.size) + 384]:
                                                    revert with 0, 50
                                                mem[ceil32(return_data.size) + 448] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = (2 * ceil32(return_data.size)) + 644
                                                while idx < mem[ceil32(return_data.size) + 384]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value eth.balance(this.address) / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(2 * ceil32(return_data.size)) + 480] = eth.balance(this.address) / 100
                                                mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                _40798 = mem[ceil32(return_data.size) + 384]
                                                mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                idx = 0
                                                s = ceil32(return_data.size) + 416
                                                t = mem[64] + 96
                                                while idx < _40798:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                      mem[mem[64] len (2 * ceil32(return_data.size)) + (32 * _40798) + -mem[64] + 576],
                                                uint8(stor30.field_0) = 0
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 'Insufficient Balance', 0
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0, 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor33[address(msg.sender)]:
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if pairAddress != arg1:
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > -1:
                                                                revert with 0, 17
                                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            emit Transfer(0, msg.sender, this.address);
                                                            if 0 > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !arg2:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] += arg2
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_373115d7 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
        else:
            if stor34[address(arg1)]:
                if uint8(stor30.field_0):
                    if arg2 > balanceOf[address(msg.sender)]:
                        revert with 0, 'Insufficient Balance', 0
                    if balanceOf[address(msg.sender)] < arg2:
                        revert with 0, 17
                    balanceOf[address(msg.sender)] -= arg2
                    if stor33[address(msg.sender)]:
                        if balanceOf[address(arg1)] > !arg2:
                            revert with 0, 17
                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(arg1)] += arg2
                    else:
                        if pairAddress != arg1:
                            if pairAddress != msg.sender:
                                if balanceOf[this.address] > -1:
                                    revert with 0, 17
                                if balanceOf[this.address] < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, msg.sender, this.address);
                                if 0 > arg2:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg2 < 0:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] > !arg2:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[address(arg1)] += arg2
                            else:
                                if not arg2:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                    if 0 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                else:
                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                        revert with 0, 17
                                    if not arg2:
                                        revert with 0, 18
                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                        else:
                            if not arg2:
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if pairAddress != msg.sender:
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                    if 0 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                else:
                                    if not arg2:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                        if 0 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                    else:
                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                            revert with 0, 17
                                        if not arg2:
                                            revert with 0, 18
                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                            else:
                                if arg2 and sub_373115d7 > -1 / arg2:
                                    revert with 0, 17
                                if not arg2:
                                    revert with 0, 18
                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if pairAddress != msg.sender:
                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                else:
                                    if not arg2:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                        if 0 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                    else:
                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                            revert with 0, 17
                                        if not arg2:
                                            revert with 0, 18
                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                else:
                    if not swapAndLiquifyEnabled:
                        if arg2 > balanceOf[address(msg.sender)]:
                            revert with 0, 'Insufficient Balance', 0
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 0, 17
                        balanceOf[address(msg.sender)] -= arg2
                        if stor33[address(msg.sender)]:
                            if balanceOf[address(arg1)] > !arg2:
                                revert with 0, 17
                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                revert with 0, 'SafeMath: addition overflow'
                            balanceOf[address(arg1)] += arg2
                        else:
                            if pairAddress != arg1:
                                if pairAddress != msg.sender:
                                    if balanceOf[this.address] > -1:
                                        revert with 0, 17
                                    if balanceOf[this.address] < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, this.address);
                                    if 0 > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < 0:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !arg2:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] += arg2
                                else:
                                    if not arg2:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                        if 0 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                    else:
                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                            revert with 0, 17
                                        if not arg2:
                                            revert with 0, 18
                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                            else:
                                if not arg2:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if pairAddress != msg.sender:
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                        if 0 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                    else:
                                        if not arg2:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                            if 0 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                        else:
                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                revert with 0, 17
                                            if not arg2:
                                                revert with 0, 18
                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                else:
                                    if arg2 and sub_373115d7 > -1 / arg2:
                                        revert with 0, 17
                                    if not arg2:
                                        revert with 0, 18
                                    if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if pairAddress != msg.sender:
                                        if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                        emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                        if arg2 * sub_373115d7 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                    else:
                                        if not arg2:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                            if 0 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                        else:
                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                revert with 0, 17
                                            if not arg2:
                                                revert with 0, 18
                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                    else:
                        if pairAddress != arg1:
                            if arg2 > balanceOf[address(msg.sender)]:
                                revert with 0, 'Insufficient Balance', 0
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)] -= arg2
                            if stor33[address(msg.sender)]:
                                if balanceOf[address(arg1)] > !arg2:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[address(arg1)] += arg2
                            else:
                                if pairAddress != arg1:
                                    if pairAddress != msg.sender:
                                        if balanceOf[this.address] > -1:
                                            revert with 0, 17
                                        if balanceOf[this.address] < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer(0, msg.sender, this.address);
                                        if 0 > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !arg2:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] += arg2
                                    else:
                                        if not arg2:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                            if 0 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                        else:
                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                revert with 0, 17
                                            if not arg2:
                                                revert with 0, 18
                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                else:
                                    if not arg2:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if pairAddress != msg.sender:
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                            if 0 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                        else:
                                            if not arg2:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                if 0 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                            else:
                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                    revert with 0, 17
                                                if not arg2:
                                                    revert with 0, 18
                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if arg2 and sub_373115d7 > -1 / arg2:
                                            revert with 0, 17
                                        if not arg2:
                                            revert with 0, 18
                                        if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if pairAddress != msg.sender:
                                            if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                            emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                            if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                        else:
                                            if not arg2:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                if 0 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                            else:
                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                    revert with 0, 17
                                                if not arg2:
                                                    revert with 0, 18
                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                        else:
                            if balanceOf[address(this.address)] < stor29:
                                if buyBackEnabled:
                                    if eth.balance(this.address) > 10^15:
                                        uint8(stor30.field_0) = 1
                                        if eth.balance(this.address) <= stor28:
                                            if eth.balance(this.address) / 100:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[256] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[192] = ext_call.return_data[12 len 20]
                                                mem[224] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[ceil32(return_data.size) + 256] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(return_data.size) + 260] = 0
                                                mem[ceil32(return_data.size) + 388] = 2
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 420
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[ceil32(return_data.size) + 324] = stor13
                                                mem[ceil32(return_data.size) + 356] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value eth.balance(this.address) / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, 2, mem[ceil32(return_data.size) + 420 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[ceil32(return_data.size) + 256] = eth.balance(this.address) / 100
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 352
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(eth.balance(this.address) / 100, Array(len=2, data=mem[ceil32(return_data.size) + 352 len 64]));
                                        else:
                                            if stor28 / 100:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[256] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[192] = ext_call.return_data[12 len 20]
                                                mem[224] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[ceil32(return_data.size) + 256] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(return_data.size) + 260] = 0
                                                mem[ceil32(return_data.size) + 388] = 2
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 420
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[ceil32(return_data.size) + 324] = stor13
                                                mem[ceil32(return_data.size) + 356] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value stor28 / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, 2, mem[ceil32(return_data.size) + 420 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[ceil32(return_data.size) + 256] = stor28 / 100
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 352
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(stor28 / 100, Array(len=2, data=mem[ceil32(return_data.size) + 352 len 64]));
                                        uint8(stor30.field_0) = 0
                                if arg2 > balanceOf[address(msg.sender)]:
                                    revert with 0, 'Insufficient Balance', 0
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)] -= arg2
                                if stor33[address(msg.sender)]:
                                    if balanceOf[address(arg1)] > !arg2:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] += arg2
                                else:
                                    if pairAddress != arg1:
                                        if pairAddress != msg.sender:
                                            if balanceOf[this.address] > -1:
                                                revert with 0, 17
                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            emit Transfer(0, msg.sender, this.address);
                                            if 0 > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !arg2:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] += arg2
                                        else:
                                            if not arg2:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                if 0 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                            else:
                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                    revert with 0, 17
                                                if not arg2:
                                                    revert with 0, 18
                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if not arg2:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if pairAddress != msg.sender:
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                if 0 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                            else:
                                                if not arg2:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                    if 0 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                else:
                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                        revert with 0, 17
                                                    if not arg2:
                                                        revert with 0, 18
                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if arg2 and sub_373115d7 > -1 / arg2:
                                                revert with 0, 17
                                            if not arg2:
                                                revert with 0, 18
                                            if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if pairAddress != msg.sender:
                                                if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                            else:
                                                if not arg2:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                    if 0 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                else:
                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                        revert with 0, 17
                                                    if not arg2:
                                                        revert with 0, 18
                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                            else:
                                uint8(stor30.field_0) = 1
                                mem[96] = 2
                                mem[128] = this.address
                                require ext_code.size(routerAddress)
                                staticcall routerAddress.WETH() with:
                                        gas gas_remaining wei
                                mem[192] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[160] = ext_call.return_data[12 len 20]
                                if not this.address:
                                    revert with 0, 'ERC20: approve from the zero address'
                                if not routerAddress:
                                    revert with 0, 'ERC20: approve to the zero address'
                                allowance[address(this.address)][stor35] = stor29
                                emit Approval(stor29, this.address, routerAddress);
                                mem[ceil32(return_data.size) + 192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                                mem[ceil32(return_data.size) + 196] = stor29
                                mem[ceil32(return_data.size) + 260] = 160
                                mem[ceil32(return_data.size) + 356] = 2
                                idx = 0
                                s = 128
                                t = ceil32(return_data.size) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[ceil32(return_data.size) + 292] = this.address
                                mem[ceil32(return_data.size) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args stor29, 0, 160, address(this.address), block.timestamp, 2, mem[ceil32(return_data.size) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[ceil32(return_data.size) + 192] = stor29
                                idx = 0
                                s = 128
                                t = ceil32(return_data.size) + 288
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                emit SwapTokensForETH(stor29, Array(len=2, data=mem[ceil32(return_data.size) + 288 len 64]));
                                mem[ceil32(return_data.size) + 192] = 30
                                mem[ceil32(return_data.size) + 224] = 'SafeMath: subtraction overflow'
                                if eth.balance(this.address) > eth.balance(this.address):
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if eth.balance(this.address) < eth.balance(this.address):
                                    revert with 0, 17
                                mem[ceil32(return_data.size) + 256] = 26
                                mem[ceil32(return_data.size) + 288] = 'SafeMath: division by zero'
                                if not liquidityFee:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if 0 / liquidityFee:
                                    if 0 / liquidityFee and stor27 > -1 / 0 / liquidityFee:
                                        revert with 0, 17
                                    if not 0 / liquidityFee:
                                        revert with 0, 18
                                    if 0 / liquidityFee * stor27 / 0 / liquidityFee != stor27:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    call stor15 with:
                                       value 0 / liquidityFee * stor27 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    uint8(stor30.field_0) = 0
                                    if not buyBackEnabled:
                                        if arg2 > balanceOf[address(msg.sender)]:
                                            revert with 0, 'Insufficient Balance', 0
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0, 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor33[address(msg.sender)]:
                                            if balanceOf[address(arg1)] > !arg2:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] += arg2
                                        else:
                                            if pairAddress != arg1:
                                                if pairAddress != msg.sender:
                                                    if balanceOf[this.address] > -1:
                                                        revert with 0, 17
                                                    if balanceOf[this.address] < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    emit Transfer(0, msg.sender, this.address);
                                                    if 0 > arg2:
                                                        var122001 = 32
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not arg2:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                var131001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var137001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if arg2 and sub_373115d7 > -1 / arg2:
                                                        revert with 0, 17
                                                    if not arg2:
                                                        revert with 0, 18
                                                    if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                        emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                var137001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if eth.balance(this.address) <= 10^15:
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 'Insufficient Balance', 0
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0, 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor33[address(msg.sender)]:
                                                if balanceOf[address(arg1)] > !arg2:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] += arg2
                                            else:
                                                if pairAddress != arg1:
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > -1:
                                                            revert with 0, 17
                                                        if balanceOf[this.address] < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        emit Transfer(0, msg.sender, this.address);
                                                        if 0 > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                var136001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                var136001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_373115d7 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                            emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                        else:
                                            uint8(stor30.field_0) = 1
                                            if eth.balance(this.address) <= stor28:
                                                if not eth.balance(this.address) / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        var131001 = 32
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        var137001 = 32
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    var130001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var136001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value eth.balance(this.address) / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = eth.balance(this.address) / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 576
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not stor28 / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    var136001 = 32
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    var131001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var137001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value stor28 / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = stor28 / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 576
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                else:
                                    call stor15 with:
                                         gas 2300 wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    uint8(stor30.field_0) = 0
                                    if not buyBackEnabled:
                                        if arg2 > balanceOf[address(msg.sender)]:
                                            revert with 0, 'Insufficient Balance', 0
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0, 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor33[address(msg.sender)]:
                                            if balanceOf[address(arg1)] > !arg2:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] += arg2
                                        else:
                                            if pairAddress != arg1:
                                                if pairAddress != msg.sender:
                                                    if balanceOf[this.address] > -1:
                                                        revert with 0, 17
                                                    if balanceOf[this.address] < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    emit Transfer(0, msg.sender, this.address);
                                                    if 0 > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not arg2:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var131001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if arg2 and sub_373115d7 > -1 / arg2:
                                                        revert with 0, 17
                                                    if not arg2:
                                                        revert with 0, 18
                                                    if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                        emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                var131001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var137001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if eth.balance(this.address) <= 10^15:
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 'Insufficient Balance', 0
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0, 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor33[address(msg.sender)]:
                                                if balanceOf[address(arg1)] > !arg2:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] += arg2
                                            else:
                                                if pairAddress != arg1:
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > -1:
                                                            revert with 0, 17
                                                        if balanceOf[this.address] < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        emit Transfer(0, msg.sender, this.address);
                                                        if 0 > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                var130001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                var136001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                var130001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_373115d7 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                            emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                var136001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if eth.balance(this.address) <= stor28:
                                                uint8(stor30.field_0) = 1
                                                if not eth.balance(this.address) / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        var131001 = 32
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var130001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value eth.balance(this.address) / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = eth.balance(this.address) / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 576
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                mem[ceil32(return_data.size) + 320] = 26
                                                mem[ceil32(return_data.size) + 352] = 'SafeMath: division by zero'
                                                uint8(stor30.field_0) = 1
                                                if not stor28 / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    var130001 = 32
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var131001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (2 * ceil32(return_data.size)) + 480
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value stor28 / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = stor28 / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    _40805 = mem[ceil32(return_data.size) + 384]
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = mem[64] + 96
                                                    while idx < _40805:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[mem[64] len (2 * ceil32(return_data.size)) + (32 * _40805) + -mem[64] + 576],
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
            else:
                if stor18 != 1:
                    revert with 0, 'Trading not started yet'
                if uint8(stor30.field_0):
                    if arg2 > balanceOf[address(msg.sender)]:
                        revert with 0, 'Insufficient Balance', 0
                    if balanceOf[address(msg.sender)] < arg2:
                        revert with 0, 17
                    balanceOf[address(msg.sender)] -= arg2
                    if stor33[address(msg.sender)]:
                        if balanceOf[address(arg1)] > !arg2:
                            revert with 0, 17
                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(arg1)] += arg2
                    else:
                        if pairAddress != arg1:
                            if pairAddress != msg.sender:
                                if balanceOf[this.address] > -1:
                                    revert with 0, 17
                                if balanceOf[this.address] < balanceOf[this.address]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, msg.sender, this.address);
                                if 0 > arg2:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if arg2 < 0:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] > !arg2:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[address(arg1)] += arg2
                            else:
                                if not arg2:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                    if 0 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                else:
                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                        revert with 0, 17
                                    if not arg2:
                                        revert with 0, 18
                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                        else:
                            if not arg2:
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if pairAddress != msg.sender:
                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += 0 / feeDenominator
                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                    if 0 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < 0 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                else:
                                    if not arg2:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                        if 0 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                    else:
                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                            revert with 0, 17
                                        if not arg2:
                                            revert with 0, 18
                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                            else:
                                if arg2 and sub_373115d7 > -1 / arg2:
                                    revert with 0, 17
                                if not arg2:
                                    revert with 0, 18
                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not feeDenominator:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if pairAddress != msg.sender:
                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                        revert with 0, 17
                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                else:
                                    if not arg2:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                        if 0 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                    else:
                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                            revert with 0, 17
                                        if not arg2:
                                            revert with 0, 18
                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                else:
                    if not swapAndLiquifyEnabled:
                        if arg2 > balanceOf[address(msg.sender)]:
                            revert with 0, 'Insufficient Balance', 0
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 0, 17
                        balanceOf[address(msg.sender)] -= arg2
                        if stor33[address(msg.sender)]:
                            if balanceOf[address(arg1)] > !arg2:
                                revert with 0, 17
                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                revert with 0, 'SafeMath: addition overflow'
                            balanceOf[address(arg1)] += arg2
                        else:
                            if pairAddress != arg1:
                                if pairAddress != msg.sender:
                                    if balanceOf[this.address] > -1:
                                        revert with 0, 17
                                    if balanceOf[this.address] < balanceOf[this.address]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, this.address);
                                    if 0 > arg2:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if arg2 < 0:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] > !arg2:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] += arg2
                                else:
                                    if not arg2:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                        if 0 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                    else:
                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                            revert with 0, 17
                                        if not arg2:
                                            revert with 0, 18
                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                            else:
                                if not arg2:
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if pairAddress != msg.sender:
                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += 0 / feeDenominator
                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                        if 0 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                    else:
                                        if not arg2:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                            if 0 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                        else:
                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                revert with 0, 17
                                            if not arg2:
                                                revert with 0, 18
                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                else:
                                    if arg2 and sub_373115d7 > -1 / arg2:
                                        revert with 0, 17
                                    if not arg2:
                                        revert with 0, 18
                                    if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not feeDenominator:
                                        revert with 0, 'SafeMath: division by zero', 0
                                    if pairAddress != msg.sender:
                                        if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                            revert with 0, 17
                                        if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                        emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                        if arg2 * sub_373115d7 / feeDenominator > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                    else:
                                        if not arg2:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                            if 0 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                        else:
                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                revert with 0, 17
                                            if not arg2:
                                                revert with 0, 18
                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                    else:
                        if pairAddress != arg1:
                            if arg2 > balanceOf[address(msg.sender)]:
                                revert with 0, 'Insufficient Balance', 0
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 0, 17
                            balanceOf[address(msg.sender)] -= arg2
                            if stor33[address(msg.sender)]:
                                if balanceOf[address(arg1)] > !arg2:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                balanceOf[address(arg1)] += arg2
                            else:
                                if pairAddress != arg1:
                                    if pairAddress != msg.sender:
                                        if balanceOf[this.address] > -1:
                                            revert with 0, 17
                                        if balanceOf[this.address] < balanceOf[this.address]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer(0, msg.sender, this.address);
                                        if 0 > arg2:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if arg2 < 0:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] > !arg2:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        balanceOf[address(arg1)] += arg2
                                    else:
                                        if not arg2:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                            if 0 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                        else:
                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                revert with 0, 17
                                            if not arg2:
                                                revert with 0, 18
                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                else:
                                    if not arg2:
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if pairAddress != msg.sender:
                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += 0 / feeDenominator
                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                            if 0 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                        else:
                                            if not arg2:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                if 0 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                            else:
                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                    revert with 0, 17
                                                if not arg2:
                                                    revert with 0, 18
                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if arg2 and sub_373115d7 > -1 / arg2:
                                            revert with 0, 17
                                        if not arg2:
                                            revert with 0, 18
                                        if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not feeDenominator:
                                            revert with 0, 'SafeMath: division by zero', 0
                                        if pairAddress != msg.sender:
                                            if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                revert with 0, 17
                                            if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                            emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                            if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                        else:
                                            if not arg2:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                if 0 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                            else:
                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                    revert with 0, 17
                                                if not arg2:
                                                    revert with 0, 18
                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                        else:
                            if balanceOf[address(this.address)] < stor29:
                                if buyBackEnabled:
                                    if eth.balance(this.address) > 10^15:
                                        uint8(stor30.field_0) = 1
                                        if eth.balance(this.address) <= stor28:
                                            if eth.balance(this.address) / 100:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[256] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[192] = ext_call.return_data[12 len 20]
                                                mem[224] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[ceil32(return_data.size) + 256] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(return_data.size) + 260] = 0
                                                mem[ceil32(return_data.size) + 388] = 2
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 420
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[ceil32(return_data.size) + 324] = stor13
                                                mem[ceil32(return_data.size) + 356] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value eth.balance(this.address) / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, 2, mem[ceil32(return_data.size) + 420 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[ceil32(return_data.size) + 256] = eth.balance(this.address) / 100
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 352
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(eth.balance(this.address) / 100, Array(len=2, data=mem[ceil32(return_data.size) + 352 len 64]));
                                        else:
                                            if stor28 / 100:
                                                require ext_code.size(routerAddress)
                                                staticcall routerAddress.WETH() with:
                                                        gas gas_remaining wei
                                                mem[256] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[192] = ext_call.return_data[12 len 20]
                                                mem[224] = this.address
                                                if block.timestamp > -301:
                                                    revert with 0, 17
                                                if block.timestamp + 300 < block.timestamp:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[ceil32(return_data.size) + 256] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(return_data.size) + 260] = 0
                                                mem[ceil32(return_data.size) + 388] = 2
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 420
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[ceil32(return_data.size) + 324] = stor13
                                                mem[ceil32(return_data.size) + 356] = block.timestamp + 300
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                   value stor28 / 100 wei
                                                     gas gas_remaining wei
                                                    args 0, 128, stor13, block.timestamp + 300, 2, mem[ceil32(return_data.size) + 420 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[ceil32(return_data.size) + 256] = stor28 / 100
                                                idx = 0
                                                s = 192
                                                t = ceil32(return_data.size) + 352
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                emit SwapETHForTokens(stor28 / 100, Array(len=2, data=mem[ceil32(return_data.size) + 352 len 64]));
                                        uint8(stor30.field_0) = 0
                                if arg2 > balanceOf[address(msg.sender)]:
                                    revert with 0, 'Insufficient Balance', 0
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)] -= arg2
                                if stor33[address(msg.sender)]:
                                    if balanceOf[address(arg1)] > !arg2:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    balanceOf[address(arg1)] += arg2
                                else:
                                    if pairAddress != arg1:
                                        if pairAddress != msg.sender:
                                            if balanceOf[this.address] > -1:
                                                revert with 0, 17
                                            if balanceOf[this.address] < balanceOf[this.address]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            emit Transfer(0, msg.sender, this.address);
                                            if 0 > arg2:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if arg2 < 0:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] > !arg2:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] += arg2
                                        else:
                                            if not arg2:
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                if 0 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                            else:
                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                    revert with 0, 17
                                                if not arg2:
                                                    revert with 0, 18
                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not feeDenominator:
                                                    revert with 0, 'SafeMath: division by zero', 0
                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if not arg2:
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if pairAddress != msg.sender:
                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += 0 / feeDenominator
                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                if 0 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < 0 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                            else:
                                                if not arg2:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                    if 0 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                else:
                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                        revert with 0, 17
                                                    if not arg2:
                                                        revert with 0, 18
                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if arg2 and sub_373115d7 > -1 / arg2:
                                                revert with 0, 17
                                            if not arg2:
                                                revert with 0, 18
                                            if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not feeDenominator:
                                                revert with 0, 'SafeMath: division by zero', 0
                                            if pairAddress != msg.sender:
                                                if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                    revert with 0, 17
                                                if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                            else:
                                                if not arg2:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += 0 / feeDenominator
                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                    if 0 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                else:
                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                        revert with 0, 17
                                                    if not arg2:
                                                        revert with 0, 18
                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                        revert with 0, 17
                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                            else:
                                uint8(stor30.field_0) = 1
                                mem[96] = 2
                                mem[128] = this.address
                                require ext_code.size(routerAddress)
                                staticcall routerAddress.WETH() with:
                                        gas gas_remaining wei
                                mem[192] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[160] = ext_call.return_data[12 len 20]
                                if not this.address:
                                    revert with 0, 'ERC20: approve from the zero address'
                                if not routerAddress:
                                    revert with 0, 'ERC20: approve to the zero address'
                                allowance[address(this.address)][stor35] = stor29
                                emit Approval(stor29, this.address, routerAddress);
                                mem[ceil32(return_data.size) + 192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                                mem[ceil32(return_data.size) + 196] = stor29
                                mem[ceil32(return_data.size) + 260] = 160
                                mem[ceil32(return_data.size) + 356] = 2
                                idx = 0
                                s = 128
                                t = ceil32(return_data.size) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[ceil32(return_data.size) + 292] = this.address
                                mem[ceil32(return_data.size) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args stor29, 0, 160, address(this.address), block.timestamp, 2, mem[ceil32(return_data.size) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[ceil32(return_data.size) + 192] = stor29
                                idx = 0
                                s = 128
                                t = ceil32(return_data.size) + 288
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                emit SwapTokensForETH(stor29, Array(len=2, data=mem[ceil32(return_data.size) + 288 len 64]));
                                mem[ceil32(return_data.size) + 192] = 30
                                mem[ceil32(return_data.size) + 224] = 'SafeMath: subtraction overflow'
                                if eth.balance(this.address) > eth.balance(this.address):
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if eth.balance(this.address) < eth.balance(this.address):
                                    revert with 0, 17
                                mem[ceil32(return_data.size) + 256] = 26
                                mem[ceil32(return_data.size) + 288] = 'SafeMath: division by zero'
                                if not liquidityFee:
                                    revert with 0, 'SafeMath: division by zero', 0
                                if not 0 / liquidityFee:
                                    call stor15 with:
                                         gas 2300 wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    uint8(stor30.field_0) = 0
                                    if not buyBackEnabled:
                                        if arg2 > balanceOf[address(msg.sender)]:
                                            revert with 0, 'Insufficient Balance', 0
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0, 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor33[address(msg.sender)]:
                                            if balanceOf[address(arg1)] > !arg2:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] += arg2
                                        else:
                                            if pairAddress != arg1:
                                                if pairAddress != msg.sender:
                                                    if balanceOf[this.address] > -1:
                                                        revert with 0, 17
                                                    if balanceOf[this.address] < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    emit Transfer(0, msg.sender, this.address);
                                                    if 0 > arg2:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not arg2:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var132001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if arg2 and sub_373115d7 > -1 / arg2:
                                                        revert with 0, 17
                                                    if not arg2:
                                                        revert with 0, 18
                                                    if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                        emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                var132001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var138001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if eth.balance(this.address) <= 10^15:
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 'Insufficient Balance', 0
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0, 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor33[address(msg.sender)]:
                                                if balanceOf[address(arg1)] > !arg2:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] += arg2
                                            else:
                                                if pairAddress != arg1:
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > -1:
                                                            revert with 0, 17
                                                        if balanceOf[this.address] < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        emit Transfer(0, msg.sender, this.address);
                                                        if 0 > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                var131001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                var137001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                var131001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_373115d7 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                            emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                var137001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                        else:
                                            uint8(stor30.field_0) = 1
                                            if eth.balance(this.address) <= stor28:
                                                if not eth.balance(this.address) / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        var132001 = 32
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var131001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value eth.balance(this.address) / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = eth.balance(this.address) / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 576
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not stor28 / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    var131001 = 32
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var132001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value stor28 / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = stor28 / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 576
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                else:
                                    if 0 / liquidityFee and stor27 > -1 / 0 / liquidityFee:
                                        revert with 0, 17
                                    if not 0 / liquidityFee:
                                        revert with 0, 18
                                    if 0 / liquidityFee * stor27 / 0 / liquidityFee != stor27:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    call stor15 with:
                                       value 0 / liquidityFee * stor27 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    uint8(stor30.field_0) = 0
                                    if not buyBackEnabled:
                                        if arg2 > balanceOf[address(msg.sender)]:
                                            revert with 0, 'Insufficient Balance', 0
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0, 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor33[address(msg.sender)]:
                                            if balanceOf[address(arg1)] > !arg2:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            balanceOf[address(arg1)] += arg2
                                        else:
                                            if pairAddress != arg1:
                                                if pairAddress != msg.sender:
                                                    if balanceOf[this.address] > -1:
                                                        revert with 0, 17
                                                    if balanceOf[this.address] < balanceOf[this.address]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    emit Transfer(0, msg.sender, this.address);
                                                    if 0 > arg2:
                                                        var123001 = 32
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if arg2 < 0:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] > !arg2:
                                                        revert with 0, 17
                                                    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    balanceOf[address(arg1)] += arg2
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                if not arg2:
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += 0 / feeDenominator
                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                        if 0 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                var132001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                var138001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if arg2 and sub_373115d7 > -1 / arg2:
                                                        revert with 0, 17
                                                    if not arg2:
                                                        revert with 0, 18
                                                    if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not feeDenominator:
                                                        revert with 0, 'SafeMath: division by zero', 0
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                            revert with 0, 17
                                                        if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                        emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                        if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                var138001 = 32
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                    else:
                                        if eth.balance(this.address) <= 10^15:
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 'Insufficient Balance', 0
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0, 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor33[address(msg.sender)]:
                                                if balanceOf[address(arg1)] > !arg2:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                balanceOf[address(arg1)] += arg2
                                            else:
                                                if pairAddress != arg1:
                                                    if pairAddress != msg.sender:
                                                        if balanceOf[this.address] > -1:
                                                            revert with 0, 17
                                                        if balanceOf[this.address] < balanceOf[this.address]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        emit Transfer(0, msg.sender, this.address);
                                                        if 0 > arg2:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if arg2 < 0:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if not arg2:
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                var137001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if arg2 and sub_a79b4412 > -1 / arg2:
                                                                revert with 0, 17
                                                            if not arg2:
                                                                revert with 0, 18
                                                            if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if not feeDenominator:
                                                                revert with 0, 'SafeMath: division by zero', 0
                                                            if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                            emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    if not arg2:
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > !(0 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += 0 / feeDenominator
                                                            emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                            if 0 / feeDenominator > arg2:
                                                                var137001 = 32
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < 0 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                    else:
                                                        if arg2 and sub_373115d7 > -1 / arg2:
                                                            revert with 0, 17
                                                        if not arg2:
                                                            revert with 0, 18
                                                        if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not feeDenominator:
                                                            revert with 0, 'SafeMath: division by zero', 0
                                                        if pairAddress != msg.sender:
                                                            if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                revert with 0, 17
                                                            if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                            emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                            if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                revert with 0, 17
                                                            if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(0 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += 0 / feeDenominator
                                                                emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                if 0 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_a79b4412 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                        else:
                                            if eth.balance(this.address) <= stor28:
                                                uint8(stor30.field_0) = 1
                                                if not eth.balance(this.address) / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        var132001 = 32
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        var138001 = 32
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    var131001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var137001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value eth.balance(this.address) / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = eth.balance(this.address) / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 576
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[(2 * ceil32(return_data.size)) + 480 len (4 * ceil32(return_data.size)) + (32 * mem[ceil32(return_data.size) + 384]) + 96],
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                            else:
                                                mem[ceil32(return_data.size) + 320] = 26
                                                mem[ceil32(return_data.size) + 352] = 'SafeMath: division by zero'
                                                uint8(stor30.field_0) = 1
                                                if not stor28 / 100:
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    var137001 = 32
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    var132001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    var138001 = 32
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                else:
                                                    require ext_code.size(routerAddress)
                                                    staticcall routerAddress.WETH() with:
                                                            gas gas_remaining wei
                                                    mem[ceil32(return_data.size) + 480] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (2 * ceil32(return_data.size)) + 480
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if 0 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 416] = ext_call.return_data[12 len 20]
                                                    if 1 >= mem[ceil32(return_data.size) + 384]:
                                                        revert with 0, 50
                                                    mem[ceil32(return_data.size) + 448] = this.address
                                                    if block.timestamp > -301:
                                                        revert with 0, 17
                                                    if block.timestamp + 300 < block.timestamp:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[(2 * ceil32(return_data.size)) + 480] = 0xb6f9de9500000000000000000000000000000000000000000000000000000000
                                                    mem[(2 * ceil32(return_data.size)) + 484] = 0
                                                    mem[(2 * ceil32(return_data.size)) + 516] = 128
                                                    mem[(2 * ceil32(return_data.size)) + 612] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = (2 * ceil32(return_data.size)) + 644
                                                    while idx < mem[ceil32(return_data.size) + 384]:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(2 * ceil32(return_data.size)) + 548] = stor13
                                                    mem[(2 * ceil32(return_data.size)) + 580] = block.timestamp + 300
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                                       value stor28 / 100 wei
                                                         gas gas_remaining wei
                                                        args 0, 128, stor13, block.timestamp + 300, mem[(2 * ceil32(return_data.size)) + 612 len (32 * mem[ceil32(return_data.size) + 384]) + 32]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(2 * ceil32(return_data.size)) + 480] = stor28 / 100
                                                    mem[(2 * ceil32(return_data.size)) + 512] = 64
                                                    _40807 = mem[ceil32(return_data.size) + 384]
                                                    mem[(2 * ceil32(return_data.size)) + 544] = mem[ceil32(return_data.size) + 384]
                                                    idx = 0
                                                    s = ceil32(return_data.size) + 416
                                                    t = mem[64] + 96
                                                    while idx < _40807:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    emit SwapETHForTokens(uint256 arg1, address[] arg2):
                                                                          mem[mem[64] len (2 * ceil32(return_data.size)) + (32 * _40807) + -mem[64] + 576],
                                                    uint8(stor30.field_0) = 0
                                                    if arg2 > balanceOf[address(msg.sender)]:
                                                        revert with 0, 'Insufficient Balance', 0
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if stor33[address(msg.sender)]:
                                                        if balanceOf[address(arg1)] > !arg2:
                                                            revert with 0, 17
                                                        if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        balanceOf[address(arg1)] += arg2
                                                    else:
                                                        if pairAddress != arg1:
                                                            if pairAddress != msg.sender:
                                                                if balanceOf[this.address] > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[this.address] < balanceOf[this.address]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                emit Transfer(0, msg.sender, this.address);
                                                                if 0 > arg2:
                                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] > !arg2:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                balanceOf[address(arg1)] += arg2
                                                            else:
                                                                if not arg2:
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if arg2 and sub_a79b4412 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if not arg2:
                                                                        revert with 0, 18
                                                                    if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    if not feeDenominator:
                                                                        revert with 0, 'SafeMath: division by zero', 0
                                                                    if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                    emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                        else:
                                                            if not arg2:
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(0 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += 0 / feeDenominator
                                                                    emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                    if 0 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < 0 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
                                                            else:
                                                                if arg2 and sub_373115d7 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if not arg2:
                                                                    revert with 0, 18
                                                                if arg2 * sub_373115d7 / arg2 != sub_373115d7:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                if not feeDenominator:
                                                                    revert with 0, 'SafeMath: division by zero', 0
                                                                if pairAddress != msg.sender:
                                                                    if balanceOf[this.address] > !(arg2 * sub_373115d7 / feeDenominator):
                                                                        revert with 0, 17
                                                                    if balanceOf[this.address] + (arg2 * sub_373115d7 / feeDenominator) < balanceOf[this.address]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[this.address] += arg2 * sub_373115d7 / feeDenominator
                                                                    emit Transfer((arg2 * sub_373115d7 / feeDenominator), msg.sender, this.address);
                                                                    if arg2 * sub_373115d7 / feeDenominator > arg2:
                                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                                    if arg2 < arg2 * sub_373115d7 / feeDenominator:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_373115d7 / feeDenominator)):
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator) < balanceOf[address(arg1)]:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_373115d7 / feeDenominator)
                                                                else:
                                                                    if not arg2:
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(0 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (0 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += 0 / feeDenominator
                                                                        emit Transfer((0 / feeDenominator), msg.sender, this.address);
                                                                        if 0 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < 0 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (0 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (0 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (0 / feeDenominator)
                                                                    else:
                                                                        if arg2 and sub_a79b4412 > -1 / arg2:
                                                                            revert with 0, 17
                                                                        if not arg2:
                                                                            revert with 0, 18
                                                                        if arg2 * sub_a79b4412 / arg2 != sub_a79b4412:
                                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                                        if not feeDenominator:
                                                                            revert with 0, 'SafeMath: division by zero', 0
                                                                        if balanceOf[this.address] > !(arg2 * sub_a79b4412 / feeDenominator):
                                                                            revert with 0, 17
                                                                        if balanceOf[this.address] + (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[this.address]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[this.address] += arg2 * sub_a79b4412 / feeDenominator
                                                                        emit Transfer((arg2 * sub_a79b4412 / feeDenominator), msg.sender, this.address);
                                                                        if arg2 * sub_a79b4412 / feeDenominator > arg2:
                                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                                        if arg2 < arg2 * sub_a79b4412 / feeDenominator:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] > !(arg2 - (arg2 * sub_a79b4412 / feeDenominator)):
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator) < balanceOf[address(arg1)]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * sub_a79b4412 / feeDenominator)
    emit Transfer(arg2, msg.sender, arg1);
    return 1
}



}
