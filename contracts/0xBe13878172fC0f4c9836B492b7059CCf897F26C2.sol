contract main {




// =====================  Runtime code  =====================


address sub_ead88dbcAddress;
address WETHAddress;
address sub_d5bfbe4cAddress;
address stor3;
mapping of uint8 stor4;

function verifyUser(address arg1) {
    require calldata.size - 4 >= 32
    return bool(stor4[address(arg1)])
}

function WETH() {
    return WETHAddress
}

function sub_d5bfbe4c(?) {
    return sub_d5bfbe4cAddress
}

function sub_ead88dbc(?) {
    return sub_ead88dbcAddress
}

function _fallback() payable {
    revert
}

function isOwner() {
    return (msg.sender == stor3)
}

function addUser(address arg1) {
    require calldata.size - 4 >= 32
    if stor3 != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    40,
                    0x5446756e6374696f6e2061636365737369626c65206f6e6c7920627920746865206f776e65722021,
                    mem[204 len 24]
    stor4[address(arg1)] = 1
}

function sub_dc539161(?) {
    if stor3 != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    40,
                    0x5446756e6374696f6e2061636365737369626c65206f6e6c7920627920746865206f776e65722021,
                    mem[204 len 24]
    require ext_code.size(WETHAddress)
    staticcall WETHAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(WETHAddress)
    call WETHAddress.0x2e1a7d4d with:
         gas gas_remaining wei
        args ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    call msg.sender with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
}

function sub_301d953b(?) payable {
    require calldata.size - 4 >= 128
    require cd[36] <= 4294967296
    require cd[36] + 36 <= calldata.size
    require ('cd', 36).length <= 4294967296 and cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    mem[0] = msg.sender
    mem[32] = 4
    if not stor4[msg.sender]:
        revert with 0, 'Wey: Mau ngapain lo ?'
    require ('cd', 36).length
    if address(('cd', 36)[0]) != WETHAddress:
        revert with 0, 'PancakeRouter: INVALID_PATH'
    mem[96] = ('cd', 36).length
    mem[128 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
    if ('cd', 36).length < 2:
        revert with 0, 'PancakeLibrary: INVALID_PATH'
    require ('cd', 36).length <= test266151307()
    mem[(32 * ('cd', 36).length) + 128] = ('cd', 36).length
    if not ('cd', 36).length:
        require 0 < ('cd', 36).length
        mem[(32 * ('cd', 36).length) + 160] = msg.value
        idx = 0
        s = 0
        s = 0
        while idx < ('cd', 36).length - 1:
            require idx < ('cd', 36).length
            _7857 = mem[(32 * idx) + 128]
            require idx + 1 < ('cd', 36).length
            _7865 = mem[(32 * idx + 1) + 128]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 
                            32,
                            35,
                            0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345,
                            mem[(64 * ('cd', 36).length) + 263 len 29]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require ext_code.size(address(cd[4]))
                staticcall address(cd[4]).getReserves() with:
                        gas gas_remaining wei
                mem[(64 * ('cd', 36).length) + 160 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if address(_7857) == address(_7857):
                    require idx < mem[(32 * ('cd', 36).length) + 128]
                    if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(64 * ('cd', 36).length) + 269 len 23]
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    38,
                                    0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[(64 * ('cd', 36).length) + 266 len 26]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    38,
                                    0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[(64 * ('cd', 36).length) + 266 len 26]
                    if 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] / 9975 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                    else:
                        require Mask(112, 0, ext_call.return_data[32])
                        if 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                    idx = idx + 1
                    s = Mask(112, 0, ext_call.return_data[32])
                    s = Mask(112, 0, ext_call.return_data[0])
                    continue 
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require ext_code.size(address(cd[4]))
                staticcall address(cd[4]).getReserves() with:
                        gas gas_remaining wei
                mem[(64 * ('cd', 36).length) + 160 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if address(_7865) == address(_7857):
                    require idx < mem[(32 * ('cd', 36).length) + 128]
                    if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(64 * ('cd', 36).length) + 269 len 23]
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    38,
                                    0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[(64 * ('cd', 36).length) + 266 len 26]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    38,
                                    0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[(64 * ('cd', 36).length) + 266 len 26]
                    if 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] / 9975 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                    else:
                        require Mask(112, 0, ext_call.return_data[32])
                        if 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                    idx = idx + 1
                    s = Mask(112, 0, ext_call.return_data[32])
                    s = Mask(112, 0, ext_call.return_data[0])
                    continue 
            require idx < mem[(32 * ('cd', 36).length) + 128]
            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                revert with 0, 
                            32,
                            41,
                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                            mem[(64 * ('cd', 36).length) + 269 len 23]
            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                revert with 0, 
                            32,
                            38,
                            0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954,
                            mem[(64 * ('cd', 36).length) + 266 len 26]
            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                revert with 0, 
                            32,
                            38,
                            0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954,
                            mem[(64 * ('cd', 36).length) + 266 len 26]
            if 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] / 9975 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                revert with 0, 'ds-math-mul-overflow'
            if not Mask(112, 0, ext_call.return_data[0]):
                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'ds-math-mul-overflow'
                if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'ds-math-add-overflow'
                require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
            else:
                require Mask(112, 0, ext_call.return_data[0])
                if 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                    revert with 0, 'ds-math-mul-overflow'
                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'ds-math-mul-overflow'
                if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'ds-math-add-overflow'
                require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
            idx = idx + 1
            s = Mask(112, 0, ext_call.return_data[0])
            s = Mask(112, 0, ext_call.return_data[32])
            continue 
        require mem[(32 * ('cd', 36).length) + 128]
        _7862 = mem[(32 * ('cd', 36).length) + 160]
        mem[(64 * ('cd', 36).length) + 160] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
        require ext_code.size(WETHAddress)
        call WETHAddress.deposit() with:
           value _7862 wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require mem[(32 * ('cd', 36).length) + 128]
        _7872 = mem[(32 * ('cd', 36).length) + 160]
        mem[(64 * ('cd', 36).length) + 164] = address(cd[4])
        mem[(64 * ('cd', 36).length) + 196] = _7872
        require ext_code.size(WETHAddress)
        call WETHAddress.0xa9059cbb with:
             gas gas_remaining wei
            args address(cd[4]), _7872
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0]
        mem[64] = (98 * ('cd', 36).length) + 192
        mem[(64 * ('cd', 36).length) + 160] = ('cd', 36).length
        mem[(64 * ('cd', 36).length) + 192 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
        mem[(98 * ('cd', 36).length) + 192] = 0
        idx = 0
        while idx < ('cd', 36).length - 1:
            require idx < mem[(64 * ('cd', 36).length) + 160]
            require idx + 1 < mem[(64 * ('cd', 36).length) + 160]
            if mem[(32 * idx) + (64 * ('cd', 36).length) + 204 len 20] == mem[(32 * idx + 1) + (64 * ('cd', 36).length) + 204 len 20]:
                revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + (64 * ('cd', 36).length) + 204 len 20] < mem[(32 * idx + 1) + (64 * ('cd', 36).length) + 204 len 20]:
                if not mem[(32 * idx) + (64 * ('cd', 36).length) + 204 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _15731 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + (64 * ('cd', 36).length) + 204 len 20] == mem[(32 * idx) + (64 * ('cd', 36).length) + 204 len 20]:
                    if idx < mem[(64 * ('cd', 36).length) + 160] - 2:
                        _15753 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15753 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15753 + 36] = 0
                        mem[_15753 + 68] = _15731
                        mem[_15753 + 100] = address(cd[4])
                        mem[_15753 + 132] = 128
                        mem[_15753 + 164] = mem[_15753]
                        s = 0
                        while s < mem[_15753]:
                            mem[s + _15753 + 196] = mem[s + _15753 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15753] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15731, address(cd[4]), 128, mem[_15753 + 164 len mem[_15753] + 32]
                        else:
                            mem[floor32(mem[_15753]) + _15753 + 196] = mem[floor32(mem[_15753]) + _15753 + -(mem[_15753] % 32) + 228 len mem[_15753] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15731, address(cd[4]), 128, mem[_15753], mem[_15753 + 196 len floor32(mem[_15753]) + 32]
                    else:
                        _15757 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15757 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15757 + 36] = 0
                        mem[_15757 + 68] = _15731
                        mem[_15757 + 100] = this.address
                        mem[_15757 + 132] = 128
                        mem[_15757 + 164] = mem[_15757]
                        s = 0
                        while s < mem[_15757]:
                            mem[s + _15757 + 196] = mem[s + _15757 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15757] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15731, address(this.address), 128, mem[_15757 + 164 len mem[_15757] + 32]
                        else:
                            mem[floor32(mem[_15757]) + _15757 + 196] = mem[floor32(mem[_15757]) + _15757 + -(mem[_15757] % 32) + 228 len mem[_15757] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15731, address(this.address), 128, mem[_15757], mem[_15757 + 196 len floor32(mem[_15757]) + 32]
                else:
                    if idx < mem[(64 * ('cd', 36).length) + 160] - 2:
                        _15761 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15761 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15761 + 36] = _15731
                        mem[_15761 + 68] = 0
                        mem[_15761 + 100] = address(cd[4])
                        mem[_15761 + 132] = 128
                        mem[_15761 + 164] = mem[_15761]
                        s = 0
                        while s < mem[_15761]:
                            mem[s + _15761 + 196] = mem[s + _15761 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15761] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15731, 0, address(cd[4]), 128, mem[_15761 + 164 len mem[_15761] + 32]
                        else:
                            mem[floor32(mem[_15761]) + _15761 + 196] = mem[floor32(mem[_15761]) + _15761 + -(mem[_15761] % 32) + 228 len mem[_15761] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15731, 0, address(cd[4]), 128, mem[_15761], mem[_15761 + 196 len floor32(mem[_15761]) + 32]
                    else:
                        _15765 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15765 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15765 + 36] = _15731
                        mem[_15765 + 68] = 0
                        mem[_15765 + 100] = this.address
                        mem[_15765 + 132] = 128
                        mem[_15765 + 164] = mem[_15765]
                        s = 0
                        while s < mem[_15765]:
                            mem[s + _15765 + 196] = mem[s + _15765 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15765] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15731, 0, address(this.address), 128, mem[_15765 + 164 len mem[_15765] + 32]
                        else:
                            mem[floor32(mem[_15765]) + _15765 + 196] = mem[floor32(mem[_15765]) + _15765 + -(mem[_15765] % 32) + 228 len mem[_15765] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15731, 0, address(this.address), 128, mem[_15765], mem[_15765 + 196 len floor32(mem[_15765]) + 32]
            else:
                if not mem[(32 * idx + 1) + (64 * ('cd', 36).length) + 204 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _15732 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + (64 * ('cd', 36).length) + 204 len 20] == mem[(32 * idx + 1) + (64 * ('cd', 36).length) + 204 len 20]:
                    if idx < mem[(64 * ('cd', 36).length) + 160] - 2:
                        _15769 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15769 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15769 + 36] = 0
                        mem[_15769 + 68] = _15732
                        mem[_15769 + 100] = address(cd[4])
                        mem[_15769 + 132] = 128
                        mem[_15769 + 164] = mem[_15769]
                        s = 0
                        while s < mem[_15769]:
                            mem[s + _15769 + 196] = mem[s + _15769 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15769] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15732, address(cd[4]), 128, mem[_15769 + 164 len mem[_15769] + 32]
                        else:
                            mem[floor32(mem[_15769]) + _15769 + 196] = mem[floor32(mem[_15769]) + _15769 + -(mem[_15769] % 32) + 228 len mem[_15769] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15732, address(cd[4]), 128, mem[_15769], mem[_15769 + 196 len floor32(mem[_15769]) + 32]
                    else:
                        _15773 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15773 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15773 + 36] = 0
                        mem[_15773 + 68] = _15732
                        mem[_15773 + 100] = this.address
                        mem[_15773 + 132] = 128
                        mem[_15773 + 164] = mem[_15773]
                        s = 0
                        while s < mem[_15773]:
                            mem[s + _15773 + 196] = mem[s + _15773 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15773] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15732, address(this.address), 128, mem[_15773 + 164 len mem[_15773] + 32]
                        else:
                            mem[floor32(mem[_15773]) + _15773 + 196] = mem[floor32(mem[_15773]) + _15773 + -(mem[_15773] % 32) + 228 len mem[_15773] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15732, address(this.address), 128, mem[_15773], mem[_15773 + 196 len floor32(mem[_15773]) + 32]
                else:
                    if idx < mem[(64 * ('cd', 36).length) + 160] - 2:
                        _15777 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15777 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15777 + 36] = _15732
                        mem[_15777 + 68] = 0
                        mem[_15777 + 100] = address(cd[4])
                        mem[_15777 + 132] = 128
                        mem[_15777 + 164] = mem[_15777]
                        s = 0
                        while s < mem[_15777]:
                            mem[s + _15777 + 196] = mem[s + _15777 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15777] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15732, 0, address(cd[4]), 128, mem[_15777 + 164 len mem[_15777] + 32]
                        else:
                            mem[floor32(mem[_15777]) + _15777 + 196] = mem[floor32(mem[_15777]) + _15777 + -(mem[_15777] % 32) + 228 len mem[_15777] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15732, 0, address(cd[4]), 128, mem[_15777], mem[_15777 + 196 len floor32(mem[_15777]) + 32]
                    else:
                        _15781 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15781 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15781 + 36] = _15732
                        mem[_15781 + 68] = 0
                        mem[_15781 + 100] = this.address
                        mem[_15781 + 132] = 128
                        mem[_15781 + 164] = mem[_15781]
                        s = 0
                        while s < mem[_15781]:
                            mem[s + _15781 + 196] = mem[s + _15781 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15781] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15732, 0, address(this.address), 128, mem[_15781 + 164 len mem[_15781] + 32]
                        else:
                            mem[floor32(mem[_15781]) + _15781 + 196] = mem[floor32(mem[_15781]) + _15781 + -(mem[_15781] % 32) + 228 len mem[_15781] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15732, 0, address(this.address), 128, mem[_15781], mem[_15781 + 196 len floor32(mem[_15781]) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        require 1 < ('cd', 36).length
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(('cd', 36)[1]))
        staticcall address(('cd', 36)[1]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        _15711 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        require 1 < ('cd', 36).length
        require 0 < mem[_15711]
        mem[_15711 + 32] = address(('cd', 36)[1])
        require 0 < ('cd', 36).length
        require 1 < mem[_15711]
        mem[_15711 + 64] = address(('cd', 36)[0])
        require 0 < mem[(32 * ('cd', 36).length) + 128]
        _15736 = mem[(32 * ('cd', 36).length) + 160]
        require mem[_15711] - 1 < mem[_15711]
        if mem[(32 * mem[_15711] - 1) + _15711 + 44 len 20] != WETHAddress:
            revert with 0, 'PancakeRouter: INVALID_PATH'
        require 1 < mem[_15711]
        require ext_code.size(address(('cd', 36)[0]))
        call address(('cd', 36)[0]).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args this.address, -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require mem[_15711]
        mem[_15711 + 132] = address(cd[4])
        mem[_15711 + 164] = ext_call.return_data[0]
        mem[_15711 + 96] = 68
        mem[_15711 + 132 len 28] = address(cd[4]) << 64
        mem[_15711 + 128 len 4] = unknown_0xa9059cbb(?????)
        mem[_15711 + 196 len 64] = unknown_0xa9059cbb(?????), address(cd[4]) << 64, 0, ext_call.return_data[0 len 28]
        mem[_15711 + 288 len 4] = ext_call.return_data[20 len 4]
        call address(('cd', 36)[1]) with:
             gas gas_remaining wei
            args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_15711 + 260 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if not mem[96]:
                mem[64] = _15711 + 580
                mem[_15711 + 196] = 0
                mem[_15711 + 228] = 0
                mem[_15711 + 260] = 0
                mem[_15711 + 292] = 0
                mem[_15711 + 324] = 0
                mem[_15711 + 356] = 0
                mem[_15711 + 388] = 0
                mem[_15711 + 420] = 0
                mem[_15711 + 452] = 0
                mem[_15711 + 484] = 0
                mem[_15711 + 516] = 0
                mem[_15711 + 548] = 0
                _30734 = mem[_15711]
                idx = 0
                s = 0
                while idx < _30734 - 1:
                    require idx < mem[_15711]
                    _30750 = mem[(32 * idx) + _15711 + 32]
                    require idx + 1 < mem[_15711]
                    _30769 = mem[(32 * idx + 1) + _15711 + 32]
                    mem[_15711 + 260] = mem[(32 * idx + 1) + _15711 + 44 len 20]
                    mem[_15711 + 228] = address(_30750)
                    if address(_30750) == address(_30769):
                        revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if address(_30750) < address(_30769):
                        if not address(_30750):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15711 + 292] = address(_30750)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15711 + 420] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15711 + 388] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30750) << 96 == address(_30750):
                            mem[_15711 + 484] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15711 + 452] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30750))
                            staticcall address(_30750).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + 324] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30750) << 96 == address(_30750):
                                    mem[_15711 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35136 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35136 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35136 + 36] = 0
                                        mem[_35136 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35136 + 100] = this.address
                                        mem[_35136 + 132] = 128
                                        mem[_35136 + 164] = mem[_35136]
                                        s = 0
                                        while s < mem[_35136]:
                                            mem[s + _35136 + 196] = mem[s + _35136 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35136] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35136] + _35136 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35136]) + _35136 + 196] = mem[floor32(mem[_35136]) + _35136 + -(mem[_35136] % 32) + 228 len mem[_35136] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35136]) + _35136 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35140 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35140 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35140 + 36] = 0
                                        mem[_35140 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35140 + 100] = this.address
                                        mem[_35140 + 132] = 128
                                        mem[_35140 + 164] = mem[_35140]
                                        s = 0
                                        while s < mem[_35140]:
                                            mem[s + _35140 + 196] = mem[s + _35140 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35140] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35140 + 164 len mem[_35140] + 32]
                                        else:
                                            mem[floor32(mem[_35140]) + _35140 + 196] = mem[floor32(mem[_35140]) + _35140 + -(mem[_35140] % 32) + 228 len mem[_35140] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35140], mem[_35140 + 196 len floor32(mem[_35140]) + 32]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35144 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35144 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35144 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35144 + 68] = 0
                                        mem[_35144 + 100] = this.address
                                        mem[_35144 + 132] = 128
                                        mem[_35144 + 164] = mem[_35144]
                                        s = 0
                                        while s < mem[_35144]:
                                            mem[s + _35144 + 196] = mem[s + _35144 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35144] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35144 + 164 len mem[_35144] + 32]
                                        else:
                                            mem[floor32(mem[_35144]) + _35144 + 196] = mem[floor32(mem[_35144]) + _35144 + -(mem[_35144] % 32) + 228 len mem[_35144] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35144], mem[_35144 + 196 len floor32(mem[_35144]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35148 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35148 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35148 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35148 + 68] = 0
                                        mem[_35148 + 100] = this.address
                                        mem[_35148 + 132] = 128
                                        mem[_35148 + 164] = mem[_35148]
                                        s = 0
                                        while s < mem[_35148]:
                                            mem[s + _35148 + 196] = mem[s + _35148 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35148] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35148] + _35148 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35148]) + _35148 + 196] = mem[floor32(mem[_35148]) + _35148 + -(mem[_35148] % 32) + 228 len mem[_35148] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35148]) + _35148 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30750) << 96 == address(_30750):
                                    mem[_15711 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35848 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35848 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35848 + 36] = 0
                                        mem[_35848 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35848 + 100] = this.address
                                        mem[_35848 + 132] = 128
                                        mem[_35848 + 164] = mem[_35848]
                                        s = 0
                                        while s < mem[_35848]:
                                            mem[s + _35848 + 196] = mem[s + _35848 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35848] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35848] + _35848 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35848]) + _35848 + 196] = mem[floor32(mem[_35848]) + _35848 + -(mem[_35848] % 32) + 228 len mem[_35848] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35848]) + _35848 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35852 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35852 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35852 + 36] = 0
                                        mem[_35852 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35852 + 100] = this.address
                                        mem[_35852 + 132] = 128
                                        mem[_35852 + 164] = mem[_35852]
                                        s = 0
                                        while s < mem[_35852]:
                                            mem[s + _35852 + 196] = mem[s + _35852 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35852] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35852 + 164 len mem[_35852] + 32]
                                        else:
                                            mem[floor32(mem[_35852]) + _35852 + 196] = mem[floor32(mem[_35852]) + _35852 + -(mem[_35852] % 32) + 228 len mem[_35852] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35852], mem[_35852 + 196 len floor32(mem[_35852]) + 32]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35856 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35856 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35856 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35856 + 68] = 0
                                        mem[_35856 + 100] = this.address
                                        mem[_35856 + 132] = 128
                                        mem[_35856 + 164] = mem[_35856]
                                        s = 0
                                        while s < mem[_35856]:
                                            mem[s + _35856 + 196] = mem[s + _35856 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35856] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35856 + 164 len mem[_35856] + 32]
                                        else:
                                            mem[floor32(mem[_35856]) + _35856 + 196] = mem[floor32(mem[_35856]) + _35856 + -(mem[_35856] % 32) + 228 len mem[_35856] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35856], mem[_35856 + 196 len floor32(mem[_35856]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35860 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35860 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35860 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35860 + 68] = 0
                                        mem[_35860 + 100] = this.address
                                        mem[_35860 + 132] = 128
                                        mem[_35860 + 164] = mem[_35860]
                                        s = 0
                                        while s < mem[_35860]:
                                            mem[s + _35860 + 196] = mem[s + _35860 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35860] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35860 + 164 len mem[_35860] + 32]
                                        else:
                                            mem[floor32(mem[_35860]) + _35860 + 196] = mem[floor32(mem[_35860]) + _35860 + -(mem[_35860] % 32) + 228 len mem[_35860] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35860], mem[_35860 + 196 len floor32(mem[_35860]) + 32]
                        else:
                            mem[_15711 + 484] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15711 + 452] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30750))
                            staticcall address(_30750).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + 324] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30750) << 96 == address(_30750):
                                    mem[_15711 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35154 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35154 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35154 + 36] = 0
                                        mem[_35154 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35154 + 100] = this.address
                                        mem[_35154 + 132] = 128
                                        mem[_35154 + 164] = mem[_35154]
                                        s = 0
                                        while s < mem[_35154]:
                                            mem[s + _35154 + 196] = mem[s + _35154 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35154] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35154 + 164 len mem[_35154] + 32]
                                        else:
                                            mem[floor32(mem[_35154]) + _35154 + 196] = mem[floor32(mem[_35154]) + _35154 + -(mem[_35154] % 32) + 228 len mem[_35154] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35154], mem[_35154 + 196 len floor32(mem[_35154]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35158 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35158 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35158 + 36] = 0
                                        mem[_35158 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35158 + 100] = this.address
                                        mem[_35158 + 132] = 128
                                        mem[_35158 + 164] = mem[_35158]
                                        s = 0
                                        while s < mem[_35158]:
                                            mem[s + _35158 + 196] = mem[s + _35158 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35158] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35158] + _35158 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35158]) + _35158 + 196] = mem[floor32(mem[_35158]) + _35158 + -(mem[_35158] % 32) + 228 len mem[_35158] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35158]) + _35158 + -mem[64] + 224]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35162 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35162 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35162 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35162 + 68] = 0
                                        mem[_35162 + 100] = this.address
                                        mem[_35162 + 132] = 128
                                        mem[_35162 + 164] = mem[_35162]
                                        s = 0
                                        while s < mem[_35162]:
                                            mem[s + _35162 + 196] = mem[s + _35162 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35162] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35162] + _35162 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35162]) + _35162 + 196] = mem[floor32(mem[_35162]) + _35162 + -(mem[_35162] % 32) + 228 len mem[_35162] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35162]) + _35162 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35166 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35166 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35166 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35166 + 68] = 0
                                        mem[_35166 + 100] = this.address
                                        mem[_35166 + 132] = 128
                                        mem[_35166 + 164] = mem[_35166]
                                        s = 0
                                        while s < mem[_35166]:
                                            mem[s + _35166 + 196] = mem[s + _35166 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35166] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35166] + _35166 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35166]) + _35166 + 196] = mem[floor32(mem[_35166]) + _35166 + -(mem[_35166] % 32) + 228 len mem[_35166] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35166]) + _35166 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30750) << 96 == address(_30750):
                                    mem[_15711 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35868 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35868 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35868 + 36] = 0
                                        mem[_35868 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35868 + 100] = this.address
                                        mem[_35868 + 132] = 128
                                        mem[_35868 + 164] = mem[_35868]
                                        s = 0
                                        while s < mem[_35868]:
                                            mem[s + _35868 + 196] = mem[s + _35868 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35868] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35868 + 164 len mem[_35868] + 32]
                                        else:
                                            mem[floor32(mem[_35868]) + _35868 + 196] = mem[floor32(mem[_35868]) + _35868 + -(mem[_35868] % 32) + 228 len mem[_35868] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35868], mem[_35868 + 196 len floor32(mem[_35868]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35872 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35872 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35872 + 36] = 0
                                        mem[_35872 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35872 + 100] = this.address
                                        mem[_35872 + 132] = 128
                                        mem[_35872 + 164] = mem[_35872]
                                        s = 0
                                        while s < mem[_35872]:
                                            mem[s + _35872 + 196] = mem[s + _35872 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35872] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35872] + _35872 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35872]) + _35872 + 196] = mem[floor32(mem[_35872]) + _35872 + -(mem[_35872] % 32) + 228 len mem[_35872] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35872]) + _35872 + -mem[64] + 224]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35876 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35876 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35876 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35876 + 68] = 0
                                        mem[_35876 + 100] = this.address
                                        mem[_35876 + 132] = 128
                                        mem[_35876 + 164] = mem[_35876]
                                        s = 0
                                        while s < mem[_35876]:
                                            mem[s + _35876 + 196] = mem[s + _35876 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35876] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35876] + _35876 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35876]) + _35876 + 196] = mem[floor32(mem[_35876]) + _35876 + -(mem[_35876] % 32) + 228 len mem[_35876] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35876]) + _35876 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35880 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35880 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35880 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35880 + 68] = 0
                                        mem[_35880 + 100] = this.address
                                        mem[_35880 + 132] = 128
                                        mem[_35880 + 164] = mem[_35880]
                                        s = 0
                                        while s < mem[_35880]:
                                            mem[s + _35880 + 196] = mem[s + _35880 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35880] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35880 + 164 len mem[_35880] + 32]
                                        else:
                                            mem[floor32(mem[_35880]) + _35880 + 196] = mem[floor32(mem[_35880]) + _35880 + -(mem[_35880] % 32) + 228 len mem[_35880] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35880], mem[_35880 + 196 len floor32(mem[_35880]) + 32]
                    else:
                        if not address(_30769):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15711 + 292] = address(_30769)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15711 + 420] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15711 + 388] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30769) << 96 == address(_30750):
                            mem[_15711 + 484] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15711 + 452] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30750))
                            staticcall address(_30750).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + 324] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30769) << 96 == address(_30750):
                                    mem[_15711 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35172 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35172 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35172 + 36] = 0
                                        mem[_35172 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35172 + 100] = this.address
                                        mem[_35172 + 132] = 128
                                        mem[_35172 + 164] = mem[_35172]
                                        s = 0
                                        while s < mem[_35172]:
                                            mem[s + _35172 + 196] = mem[s + _35172 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35172] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35172 + 164 len mem[_35172] + 32]
                                        else:
                                            mem[floor32(mem[_35172]) + _35172 + 196] = mem[floor32(mem[_35172]) + _35172 + -(mem[_35172] % 32) + 228 len mem[_35172] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35172], mem[_35172 + 196 len floor32(mem[_35172]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35176 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35176 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35176 + 36] = 0
                                        mem[_35176 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35176 + 100] = this.address
                                        mem[_35176 + 132] = 128
                                        mem[_35176 + 164] = mem[_35176]
                                        s = 0
                                        while s < mem[_35176]:
                                            mem[s + _35176 + 196] = mem[s + _35176 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35176] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35176] + _35176 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35176]) + _35176 + 196] = mem[floor32(mem[_35176]) + _35176 + -(mem[_35176] % 32) + 228 len mem[_35176] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35176]) + _35176 + -mem[64] + 224]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35180 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35180 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35180 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35180 + 68] = 0
                                        mem[_35180 + 100] = this.address
                                        mem[_35180 + 132] = 128
                                        mem[_35180 + 164] = mem[_35180]
                                        s = 0
                                        while s < mem[_35180]:
                                            mem[s + _35180 + 196] = mem[s + _35180 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35180] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35180] + _35180 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35180]) + _35180 + 196] = mem[floor32(mem[_35180]) + _35180 + -(mem[_35180] % 32) + 228 len mem[_35180] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35180]) + _35180 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35184 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35184 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35184 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35184 + 68] = 0
                                        mem[_35184 + 100] = this.address
                                        mem[_35184 + 132] = 128
                                        mem[_35184 + 164] = mem[_35184]
                                        s = 0
                                        while s < mem[_35184]:
                                            mem[s + _35184 + 196] = mem[s + _35184 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35184] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35184 + 164 len mem[_35184] + 32]
                                        else:
                                            mem[floor32(mem[_35184]) + _35184 + 196] = mem[floor32(mem[_35184]) + _35184 + -(mem[_35184] % 32) + 228 len mem[_35184] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35184], mem[_35184 + 196 len floor32(mem[_35184]) + 32]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30769) << 96 == address(_30750):
                                    mem[_15711 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35888 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35888 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35888 + 36] = 0
                                        mem[_35888 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35888 + 100] = this.address
                                        mem[_35888 + 132] = 128
                                        mem[_35888 + 164] = mem[_35888]
                                        s = 0
                                        while s < mem[_35888]:
                                            mem[s + _35888 + 196] = mem[s + _35888 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35888] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35888 + 164 len mem[_35888] + 32]
                                        else:
                                            mem[floor32(mem[_35888]) + _35888 + 196] = mem[floor32(mem[_35888]) + _35888 + -(mem[_35888] % 32) + 228 len mem[_35888] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35888], mem[_35888 + 196 len floor32(mem[_35888]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35892 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35892 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35892 + 36] = 0
                                        mem[_35892 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35892 + 100] = this.address
                                        mem[_35892 + 132] = 128
                                        mem[_35892 + 164] = mem[_35892]
                                        s = 0
                                        while s < mem[_35892]:
                                            mem[s + _35892 + 196] = mem[s + _35892 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35892] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35892 + 164 len mem[_35892] + 32]
                                        else:
                                            mem[floor32(mem[_35892]) + _35892 + 196] = mem[floor32(mem[_35892]) + _35892 + -(mem[_35892] % 32) + 228 len mem[_35892] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35892], mem[_35892 + 196 len floor32(mem[_35892]) + 32]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35896 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35896 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35896 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35896 + 68] = 0
                                        mem[_35896 + 100] = this.address
                                        mem[_35896 + 132] = 128
                                        mem[_35896 + 164] = mem[_35896]
                                        s = 0
                                        while s < mem[_35896]:
                                            mem[s + _35896 + 196] = mem[s + _35896 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35896] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35896 + 164 len mem[_35896] + 32]
                                        else:
                                            mem[floor32(mem[_35896]) + _35896 + 196] = mem[floor32(mem[_35896]) + _35896 + -(mem[_35896] % 32) + 228 len mem[_35896] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35896], mem[_35896 + 196 len floor32(mem[_35896]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35900 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35900 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35900 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35900 + 68] = 0
                                        mem[_35900 + 100] = this.address
                                        mem[_35900 + 132] = 128
                                        mem[_35900 + 164] = mem[_35900]
                                        s = 0
                                        while s < mem[_35900]:
                                            mem[s + _35900 + 196] = mem[s + _35900 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35900] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35900 + 164 len mem[_35900] + 32]
                                        else:
                                            mem[floor32(mem[_35900]) + _35900 + 196] = mem[floor32(mem[_35900]) + _35900 + -(mem[_35900] % 32) + 228 len mem[_35900] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35900], mem[_35900 + 196 len floor32(mem[_35900]) + 32]
                        else:
                            mem[_15711 + 484] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15711 + 452] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30750))
                            staticcall address(_30750).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + 324] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30769) << 96 == address(_30750):
                                    mem[_15711 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35190 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35190 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35190 + 36] = 0
                                        mem[_35190 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35190 + 100] = this.address
                                        mem[_35190 + 132] = 128
                                        mem[_35190 + 164] = mem[_35190]
                                        s = 0
                                        while s < mem[_35190]:
                                            mem[s + _35190 + 196] = mem[s + _35190 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35190] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35190] + _35190 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35190]) + _35190 + 196] = mem[floor32(mem[_35190]) + _35190 + -(mem[_35190] % 32) + 228 len mem[_35190] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35190]) + _35190 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35194 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35194 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35194 + 36] = 0
                                        mem[_35194 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35194 + 100] = this.address
                                        mem[_35194 + 132] = 128
                                        mem[_35194 + 164] = mem[_35194]
                                        s = 0
                                        while s < mem[_35194]:
                                            mem[s + _35194 + 196] = mem[s + _35194 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35194] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35194] + _35194 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35194]) + _35194 + 196] = mem[floor32(mem[_35194]) + _35194 + -(mem[_35194] % 32) + 228 len mem[_35194] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35194]) + _35194 + -mem[64] + 224]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35198 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35198 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35198 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35198 + 68] = 0
                                        mem[_35198 + 100] = this.address
                                        mem[_35198 + 132] = 128
                                        mem[_35198 + 164] = mem[_35198]
                                        s = 0
                                        while s < mem[_35198]:
                                            mem[s + _35198 + 196] = mem[s + _35198 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35198] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35198] + _35198 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35198]) + _35198 + 196] = mem[floor32(mem[_35198]) + _35198 + -(mem[_35198] % 32) + 228 len mem[_35198] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35198]) + _35198 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35202 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35202 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35202 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35202 + 68] = 0
                                        mem[_35202 + 100] = this.address
                                        mem[_35202 + 132] = 128
                                        mem[_35202 + 164] = mem[_35202]
                                        s = 0
                                        while s < mem[_35202]:
                                            mem[s + _35202 + 196] = mem[s + _35202 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35202] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35202] + _35202 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35202]) + _35202 + 196] = mem[floor32(mem[_35202]) + _35202 + -(mem[_35202] % 32) + 228 len mem[_35202] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35202]) + _35202 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30769) << 96 == address(_30750):
                                    mem[_15711 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35908 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35908 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35908 + 36] = 0
                                        mem[_35908 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35908 + 100] = this.address
                                        mem[_35908 + 132] = 128
                                        mem[_35908 + 164] = mem[_35908]
                                        s = 0
                                        while s < mem[_35908]:
                                            mem[s + _35908 + 196] = mem[s + _35908 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35908] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35908 + 164 len mem[_35908] + 32]
                                        else:
                                            mem[floor32(mem[_35908]) + _35908 + 196] = mem[floor32(mem[_35908]) + _35908 + -(mem[_35908] % 32) + 228 len mem[_35908] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35908], mem[_35908 + 196 len floor32(mem[_35908]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35912 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35912 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35912 + 36] = 0
                                        mem[_35912 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35912 + 100] = this.address
                                        mem[_35912 + 132] = 128
                                        mem[_35912 + 164] = mem[_35912]
                                        s = 0
                                        while s < mem[_35912]:
                                            mem[s + _35912 + 196] = mem[s + _35912 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35912] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35912 + 164 len mem[_35912] + 32]
                                        else:
                                            mem[floor32(mem[_35912]) + _35912 + 196] = mem[floor32(mem[_35912]) + _35912 + -(mem[_35912] % 32) + 228 len mem[_35912] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35912], mem[_35912 + 196 len floor32(mem[_35912]) + 32]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35916 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35916 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35916 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35916 + 68] = 0
                                        mem[_35916 + 100] = this.address
                                        mem[_35916 + 132] = 128
                                        mem[_35916 + 164] = mem[_35916]
                                        s = 0
                                        while s < mem[_35916]:
                                            mem[s + _35916 + 196] = mem[s + _35916 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35916] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35916 + 164 len mem[_35916] + 32]
                                        else:
                                            mem[floor32(mem[_35916]) + _35916 + 196] = mem[floor32(mem[_35916]) + _35916 + -(mem[_35916] % 32) + 228 len mem[_35916] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35916], mem[_35916 + 196 len floor32(mem[_35916]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35920 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35920 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35920 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35920 + 68] = 0
                                        mem[_35920 + 100] = this.address
                                        mem[_35920 + 132] = 128
                                        mem[_35920 + 164] = mem[_35920]
                                        s = 0
                                        while s < mem[_35920]:
                                            mem[s + _35920 + 196] = mem[s + _35920 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35920] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35920] + _35920 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35920]) + _35920 + 196] = mem[floor32(mem[_35920]) + _35920 + -(mem[_35920] % 32) + 228 len mem[_35920] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35920]) + _35920 + -mem[64] + 224]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = mem[_15711 + 356]
                    continue 
                if s < _15736 * cd[100] / 100:
                    revert with 0, '-,'
                _30766 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                mem[_30766] = ('cd', 36).length
                mem[_30766 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_30766 + (32 * ('cd', 36).length) + 32] = 0
                if ('cd', 36).length < 2:
                    revert with 0, 'PancakeLibrary: INVALID_PATH'
                require ('cd', 36).length <= test266151307()
                _30846 = mem[64]
                mem[mem[64]] = ('cd', 36).length
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                if not ('cd', 36).length:
                    require 0 < mem[_30846]
                    mem[_30846 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30766]
                        _38359 = mem[(32 * idx) + _30766 + 32]
                        require idx + 1 < mem[_30766]
                        _38921 = mem[(32 * idx + 1) + _30766 + 32]
                        if mem[(32 * idx) + _30766 + 44 len 20] == mem[(32 * idx + 1) + _30766 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30766 + 44 len 20] < mem[(32 * idx + 1) + _30766 + 44 len 20]:
                            if not mem[(32 * idx) + _30766 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38359) == address(_38359):
                                require idx < mem[_30846]
                                if mem[(32 * idx) + _30846 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30846 + 32] / 9975 != mem[(32 * idx) + _30846 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                    require idx + 1 < mem[_30846]
                                    mem[(32 * idx + 1) + _30846 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30846 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30846 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                    require idx + 1 < mem[_30846]
                                    mem[(32 * idx + 1) + _30846 + 32] = 9975 * mem[(32 * idx) + _30846 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30766 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38921) == address(_38359):
                                require idx < mem[_30846]
                                if mem[(32 * idx) + _30846 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30846 + 32] / 9975 != mem[(32 * idx) + _30846 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                    require idx + 1 < mem[_30846]
                                    mem[(32 * idx + 1) + _30846 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30846 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30846 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                    require idx + 1 < mem[_30846]
                                    mem[(32 * idx + 1) + _30846 + 32] = 9975 * mem[(32 * idx) + _30846 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30846]
                        if mem[(32 * idx) + _30846 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30846 + 32] / 9975 != mem[(32 * idx) + _30846 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30846 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30846 + 32])
                            require idx + 1 < mem[_30846]
                            mem[(32 * idx + 1) + _30846 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30846 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30846 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30846 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30846 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30846 + 32])
                            require idx + 1 < mem[_30846]
                            mem[(32 * idx + 1) + _30846 + 32] = 9975 * mem[(32 * idx) + _30846 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30846 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30846]
                    _38918 = mem[_30846 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _38918
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _38918
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39814 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39814] = ('cd', 36).length
                    mem[_39814 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39814 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39814]
                        require idx + 1 < mem[_39814]
                        if mem[(32 * idx) + _39814 + 44 len 20] == mem[(32 * idx + 1) + _39814 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39814 + 44 len 20] < mem[(32 * idx + 1) + _39814 + 44 len 20]:
                            if not mem[(32 * idx) + _39814 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30846]
                            _42998 = mem[(32 * idx + 1) + _30846 + 32]
                            if mem[(32 * idx) + _39814 + 44 len 20] == mem[(32 * idx) + _39814 + 44 len 20]:
                                if idx < mem[_39814] - 2:
                                    _43094 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43094 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43094 + 36] = 0
                                    mem[_43094 + 68] = _42998
                                    mem[_43094 + 100] = address(cd[4])
                                    mem[_43094 + 132] = 128
                                    mem[_43094 + 164] = mem[_43094]
                                    s = 0
                                    while s < mem[_43094]:
                                        mem[s + _43094 + 196] = mem[s + _43094 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43094] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _42998, address(cd[4]), 128, mem[_43094 + 164 len mem[_43094] + 32]
                                    else:
                                        mem[floor32(mem[_43094]) + _43094 + 196] = mem[floor32(mem[_43094]) + _43094 + -(mem[_43094] % 32) + 228 len mem[_43094] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _42998, address(cd[4]), 128, mem[_43094], mem[_43094 + 196 len floor32(mem[_43094]) + 32]
                                else:
                                    _43098 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43098 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43098 + 36] = 0
                                    mem[_43098 + 68] = _42998
                                    mem[_43098 + 100] = address(cd[68])
                                    mem[_43098 + 132] = 128
                                    mem[_43098 + 164] = mem[_43098]
                                    s = 0
                                    while s < mem[_43098]:
                                        mem[s + _43098 + 196] = mem[s + _43098 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43098] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _42998, address(cd[68]), 128, mem[_43098 + 164 len mem[_43098] + 32]
                                    else:
                                        mem[floor32(mem[_43098]) + _43098 + 196] = mem[floor32(mem[_43098]) + _43098 + -(mem[_43098] % 32) + 228 len mem[_43098] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _42998, address(cd[68]), 128, mem[_43098], mem[_43098 + 196 len floor32(mem[_43098]) + 32]
                            else:
                                if idx < mem[_39814] - 2:
                                    _43102 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43102 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43102 + 36] = _42998
                                    mem[_43102 + 68] = 0
                                    mem[_43102 + 100] = address(cd[4])
                                    mem[_43102 + 132] = 128
                                    mem[_43102 + 164] = mem[_43102]
                                    s = 0
                                    while s < mem[_43102]:
                                        mem[s + _43102 + 196] = mem[s + _43102 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43102] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _42998, 0, address(cd[4]), 128, mem[_43102 + 164 len mem[_43102] + 32]
                                    else:
                                        mem[floor32(mem[_43102]) + _43102 + 196] = mem[floor32(mem[_43102]) + _43102 + -(mem[_43102] % 32) + 228 len mem[_43102] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _42998, 0, address(cd[4]), 128, mem[_43102], mem[_43102 + 196 len floor32(mem[_43102]) + 32]
                                else:
                                    _43106 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43106 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43106 + 36] = _42998
                                    mem[_43106 + 68] = 0
                                    mem[_43106 + 100] = address(cd[68])
                                    mem[_43106 + 132] = 128
                                    mem[_43106 + 164] = mem[_43106]
                                    s = 0
                                    while s < mem[_43106]:
                                        mem[s + _43106 + 196] = mem[s + _43106 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43106] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _42998, 0, address(cd[68]), 128, mem[_43106 + 164 len mem[_43106] + 32]
                                    else:
                                        mem[floor32(mem[_43106]) + _43106 + 196] = mem[floor32(mem[_43106]) + _43106 + -(mem[_43106] % 32) + 228 len mem[_43106] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _42998, 0, address(cd[68]), 128, mem[_43106], mem[_43106 + 196 len floor32(mem[_43106]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39814 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30846]
                            _42999 = mem[(32 * idx + 1) + _30846 + 32]
                            if mem[(32 * idx) + _39814 + 44 len 20] == mem[(32 * idx + 1) + _39814 + 44 len 20]:
                                if idx < mem[_39814] - 2:
                                    _43110 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43110 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43110 + 36] = 0
                                    mem[_43110 + 68] = _42999
                                    mem[_43110 + 100] = address(cd[4])
                                    mem[_43110 + 132] = 128
                                    mem[_43110 + 164] = mem[_43110]
                                    s = 0
                                    while s < mem[_43110]:
                                        mem[s + _43110 + 196] = mem[s + _43110 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43110] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _42999, address(cd[4]), 128, mem[_43110 + 164 len mem[_43110] + 32]
                                    else:
                                        mem[floor32(mem[_43110]) + _43110 + 196] = mem[floor32(mem[_43110]) + _43110 + -(mem[_43110] % 32) + 228 len mem[_43110] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _42999, address(cd[4]), 128, mem[_43110], mem[_43110 + 196 len floor32(mem[_43110]) + 32]
                                else:
                                    _43114 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43114 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43114 + 36] = 0
                                    mem[_43114 + 68] = _42999
                                    mem[_43114 + 100] = address(cd[68])
                                    mem[_43114 + 132] = 128
                                    mem[_43114 + 164] = mem[_43114]
                                    s = 0
                                    while s < mem[_43114]:
                                        mem[s + _43114 + 196] = mem[s + _43114 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43114] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _42999, address(cd[68]), 128, mem[_43114 + 164 len mem[_43114] + 32]
                                    else:
                                        mem[floor32(mem[_43114]) + _43114 + 196] = mem[floor32(mem[_43114]) + _43114 + -(mem[_43114] % 32) + 228 len mem[_43114] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _42999, address(cd[68]), 128, mem[_43114], mem[_43114 + 196 len floor32(mem[_43114]) + 32]
                            else:
                                if idx < mem[_39814] - 2:
                                    _43118 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43118 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43118 + 36] = _42999
                                    mem[_43118 + 68] = 0
                                    mem[_43118 + 100] = address(cd[4])
                                    mem[_43118 + 132] = 128
                                    mem[_43118 + 164] = mem[_43118]
                                    s = 0
                                    while s < mem[_43118]:
                                        mem[s + _43118 + 196] = mem[s + _43118 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43118] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _42999, 0, address(cd[4]), 128, mem[_43118 + 164 len mem[_43118] + 32]
                                    else:
                                        mem[floor32(mem[_43118]) + _43118 + 196] = mem[floor32(mem[_43118]) + _43118 + -(mem[_43118] % 32) + 228 len mem[_43118] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _42999, 0, address(cd[4]), 128, mem[_43118], mem[_43118 + 196 len floor32(mem[_43118]) + 32]
                                else:
                                    _43122 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43122 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43122 + 36] = _42999
                                    mem[_43122 + 68] = 0
                                    mem[_43122 + 100] = address(cd[68])
                                    mem[_43122 + 132] = 128
                                    mem[_43122 + 164] = mem[_43122]
                                    s = 0
                                    while s < mem[_43122]:
                                        mem[s + _43122 + 196] = mem[s + _43122 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43122] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _42999, 0, address(cd[68]), 128, mem[_43122 + 164 len mem[_43122] + 32]
                                    else:
                                        mem[floor32(mem[_43122]) + _43122 + 196] = mem[floor32(mem[_43122]) + _43122 + -(mem[_43122] % 32) + 228 len mem[_43122] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _42999, 0, address(cd[68]), 128, mem[_43122], mem[_43122 + 196 len floor32(mem[_43122]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                else:
                    mem[_30846 + 32 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
                    require 0 < mem[_30846]
                    mem[_30846 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30766]
                        _38362 = mem[(32 * idx) + _30766 + 32]
                        require idx + 1 < mem[_30766]
                        _38925 = mem[(32 * idx + 1) + _30766 + 32]
                        if mem[(32 * idx) + _30766 + 44 len 20] == mem[(32 * idx + 1) + _30766 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30766 + 44 len 20] < mem[(32 * idx + 1) + _30766 + 44 len 20]:
                            if not mem[(32 * idx) + _30766 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38362) == address(_38362):
                                require idx < mem[_30846]
                                if mem[(32 * idx) + _30846 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30846 + 32] / 9975 != mem[(32 * idx) + _30846 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                    require idx + 1 < mem[_30846]
                                    mem[(32 * idx + 1) + _30846 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30846 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30846 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                    require idx + 1 < mem[_30846]
                                    mem[(32 * idx + 1) + _30846 + 32] = 9975 * mem[(32 * idx) + _30846 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30766 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38925) == address(_38362):
                                require idx < mem[_30846]
                                if mem[(32 * idx) + _30846 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30846 + 32] / 9975 != mem[(32 * idx) + _30846 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                    require idx + 1 < mem[_30846]
                                    mem[(32 * idx + 1) + _30846 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30846 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30846 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                    require idx + 1 < mem[_30846]
                                    mem[(32 * idx + 1) + _30846 + 32] = 9975 * mem[(32 * idx) + _30846 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30846 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30846]
                        if mem[(32 * idx) + _30846 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30846 + 32] / 9975 != mem[(32 * idx) + _30846 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30846 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30846 + 32])
                            require idx + 1 < mem[_30846]
                            mem[(32 * idx + 1) + _30846 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30846 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30846 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30846 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30846 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30846 + 32])
                            require idx + 1 < mem[_30846]
                            mem[(32 * idx + 1) + _30846 + 32] = 9975 * mem[(32 * idx) + _30846 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30846 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30846]
                    _38922 = mem[_30846 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _38922
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _38922
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39815 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39815] = ('cd', 36).length
                    mem[_39815 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39815 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39815]
                        require idx + 1 < mem[_39815]
                        if mem[(32 * idx) + _39815 + 44 len 20] == mem[(32 * idx + 1) + _39815 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39815 + 44 len 20] < mem[(32 * idx + 1) + _39815 + 44 len 20]:
                            if not mem[(32 * idx) + _39815 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30846]
                            _43000 = mem[(32 * idx + 1) + _30846 + 32]
                            if mem[(32 * idx) + _39815 + 44 len 20] == mem[(32 * idx) + _39815 + 44 len 20]:
                                if idx < mem[_39815] - 2:
                                    _43126 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43126 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43126 + 36] = 0
                                    mem[_43126 + 68] = _43000
                                    mem[_43126 + 100] = address(cd[4])
                                    mem[_43126 + 132] = 128
                                    mem[_43126 + 164] = mem[_43126]
                                    s = 0
                                    while s < mem[_43126]:
                                        mem[s + _43126 + 196] = mem[s + _43126 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43126] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43000, address(cd[4]), 128, mem[_43126 + 164 len mem[_43126] + 32]
                                    else:
                                        mem[floor32(mem[_43126]) + _43126 + 196] = mem[floor32(mem[_43126]) + _43126 + -(mem[_43126] % 32) + 228 len mem[_43126] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43000, address(cd[4]), 128, mem[_43126], mem[_43126 + 196 len floor32(mem[_43126]) + 32]
                                else:
                                    _43130 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43130 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43130 + 36] = 0
                                    mem[_43130 + 68] = _43000
                                    mem[_43130 + 100] = address(cd[68])
                                    mem[_43130 + 132] = 128
                                    mem[_43130 + 164] = mem[_43130]
                                    s = 0
                                    while s < mem[_43130]:
                                        mem[s + _43130 + 196] = mem[s + _43130 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43130] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43000, address(cd[68]), 128, mem[_43130 + 164 len mem[_43130] + 32]
                                    else:
                                        mem[floor32(mem[_43130]) + _43130 + 196] = mem[floor32(mem[_43130]) + _43130 + -(mem[_43130] % 32) + 228 len mem[_43130] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43000, address(cd[68]), 128, mem[_43130], mem[_43130 + 196 len floor32(mem[_43130]) + 32]
                            else:
                                if idx < mem[_39815] - 2:
                                    _43134 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43134 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43134 + 36] = _43000
                                    mem[_43134 + 68] = 0
                                    mem[_43134 + 100] = address(cd[4])
                                    mem[_43134 + 132] = 128
                                    mem[_43134 + 164] = mem[_43134]
                                    s = 0
                                    while s < mem[_43134]:
                                        mem[s + _43134 + 196] = mem[s + _43134 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43134] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43000, 0, address(cd[4]), 128, mem[_43134 + 164 len mem[_43134] + 32]
                                    else:
                                        mem[floor32(mem[_43134]) + _43134 + 196] = mem[floor32(mem[_43134]) + _43134 + -(mem[_43134] % 32) + 228 len mem[_43134] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43000, 0, address(cd[4]), 128, mem[_43134], mem[_43134 + 196 len floor32(mem[_43134]) + 32]
                                else:
                                    _43138 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43138 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43138 + 36] = _43000
                                    mem[_43138 + 68] = 0
                                    mem[_43138 + 100] = address(cd[68])
                                    mem[_43138 + 132] = 128
                                    mem[_43138 + 164] = mem[_43138]
                                    s = 0
                                    while s < mem[_43138]:
                                        mem[s + _43138 + 196] = mem[s + _43138 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43138] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43000, 0, address(cd[68]), 128, mem[_43138 + 164 len mem[_43138] + 32]
                                    else:
                                        mem[floor32(mem[_43138]) + _43138 + 196] = mem[floor32(mem[_43138]) + _43138 + -(mem[_43138] % 32) + 228 len mem[_43138] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43000, 0, address(cd[68]), 128, mem[_43138], mem[_43138 + 196 len floor32(mem[_43138]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39815 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30846]
                            _43001 = mem[(32 * idx + 1) + _30846 + 32]
                            if mem[(32 * idx) + _39815 + 44 len 20] == mem[(32 * idx + 1) + _39815 + 44 len 20]:
                                if idx < mem[_39815] - 2:
                                    _43142 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43142 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43142 + 36] = 0
                                    mem[_43142 + 68] = _43001
                                    mem[_43142 + 100] = address(cd[4])
                                    mem[_43142 + 132] = 128
                                    mem[_43142 + 164] = mem[_43142]
                                    s = 0
                                    while s < mem[_43142]:
                                        mem[s + _43142 + 196] = mem[s + _43142 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43142] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43001, address(cd[4]), 128, mem[_43142 + 164 len mem[_43142] + 32]
                                    else:
                                        mem[floor32(mem[_43142]) + _43142 + 196] = mem[floor32(mem[_43142]) + _43142 + -(mem[_43142] % 32) + 228 len mem[_43142] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43001, address(cd[4]), 128, mem[_43142], mem[_43142 + 196 len floor32(mem[_43142]) + 32]
                                else:
                                    _43146 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43146 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43146 + 36] = 0
                                    mem[_43146 + 68] = _43001
                                    mem[_43146 + 100] = address(cd[68])
                                    mem[_43146 + 132] = 128
                                    mem[_43146 + 164] = mem[_43146]
                                    s = 0
                                    while s < mem[_43146]:
                                        mem[s + _43146 + 196] = mem[s + _43146 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43146] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43001, address(cd[68]), 128, mem[_43146 + 164 len mem[_43146] + 32]
                                    else:
                                        mem[floor32(mem[_43146]) + _43146 + 196] = mem[floor32(mem[_43146]) + _43146 + -(mem[_43146] % 32) + 228 len mem[_43146] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43001, address(cd[68]), 128, mem[_43146], mem[_43146 + 196 len floor32(mem[_43146]) + 32]
                            else:
                                if idx < mem[_39815] - 2:
                                    _43150 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43150 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43150 + 36] = _43001
                                    mem[_43150 + 68] = 0
                                    mem[_43150 + 100] = address(cd[4])
                                    mem[_43150 + 132] = 128
                                    mem[_43150 + 164] = mem[_43150]
                                    s = 0
                                    while s < mem[_43150]:
                                        mem[s + _43150 + 196] = mem[s + _43150 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43150] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43001, 0, address(cd[4]), 128, mem[_43150 + 164 len mem[_43150] + 32]
                                    else:
                                        mem[floor32(mem[_43150]) + _43150 + 196] = mem[floor32(mem[_43150]) + _43150 + -(mem[_43150] % 32) + 228 len mem[_43150] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43001, 0, address(cd[4]), 128, mem[_43150], mem[_43150 + 196 len floor32(mem[_43150]) + 32]
                                else:
                                    _43154 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43154 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43154 + 36] = _43001
                                    mem[_43154 + 68] = 0
                                    mem[_43154 + 100] = address(cd[68])
                                    mem[_43154 + 132] = 128
                                    mem[_43154 + 164] = mem[_43154]
                                    s = 0
                                    while s < mem[_43154]:
                                        mem[s + _43154 + 196] = mem[s + _43154 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43154] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43001, 0, address(cd[68]), 128, mem[_43154 + 164 len mem[_43154] + 32]
                                    else:
                                        mem[floor32(mem[_43154]) + _43154 + 196] = mem[floor32(mem[_43154]) + _43154 + -(mem[_43154] % 32) + 228 len mem[_43154] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43001, 0, address(cd[68]), 128, mem[_43154], mem[_43154 + 196 len floor32(mem[_43154]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
            else:
                require mem[96] >= 32
                if not mem[128]:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                mem[64] = _15711 + 580
                mem[_15711 + 196] = 0
                mem[_15711 + 228] = 0
                mem[_15711 + 260] = 0
                mem[_15711 + 292] = 0
                mem[_15711 + 324] = 0
                mem[_15711 + 356] = 0
                mem[_15711 + 388] = 0
                mem[_15711 + 420] = 0
                mem[_15711 + 452] = 0
                mem[_15711 + 484] = 0
                mem[_15711 + 516] = 0
                mem[_15711 + 548] = 0
                _30735 = mem[_15711]
                idx = 0
                s = 0
                while idx < _30735 - 1:
                    require idx < mem[_15711]
                    _30752 = mem[(32 * idx) + _15711 + 32]
                    require idx + 1 < mem[_15711]
                    _30773 = mem[(32 * idx + 1) + _15711 + 32]
                    mem[_15711 + 260] = mem[(32 * idx + 1) + _15711 + 44 len 20]
                    mem[_15711 + 228] = address(_30752)
                    if address(_30752) == address(_30773):
                        revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if address(_30752) < address(_30773):
                        if not address(_30752):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15711 + 292] = address(_30752)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15711 + 420] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15711 + 388] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30752) << 96 == address(_30752):
                            mem[_15711 + 484] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15711 + 452] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30752))
                            staticcall address(_30752).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + 324] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30752) << 96 == address(_30752):
                                    mem[_15711 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35216 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35216 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35216 + 36] = 0
                                        mem[_35216 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35216 + 100] = this.address
                                        mem[_35216 + 132] = 128
                                        mem[_35216 + 164] = mem[_35216]
                                        s = 0
                                        while s < mem[_35216]:
                                            mem[s + _35216 + 196] = mem[s + _35216 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35216] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35216] + _35216 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35216]) + _35216 + 196] = mem[floor32(mem[_35216]) + _35216 + -(mem[_35216] % 32) + 228 len mem[_35216] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35216]) + _35216 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35220 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35220 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35220 + 36] = 0
                                        mem[_35220 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35220 + 100] = this.address
                                        mem[_35220 + 132] = 128
                                        mem[_35220 + 164] = mem[_35220]
                                        s = 0
                                        while s < mem[_35220]:
                                            mem[s + _35220 + 196] = mem[s + _35220 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35220] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35220] + _35220 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35220]) + _35220 + 196] = mem[floor32(mem[_35220]) + _35220 + -(mem[_35220] % 32) + 228 len mem[_35220] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35220]) + _35220 + -mem[64] + 224]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35224 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35224 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35224 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35224 + 68] = 0
                                        mem[_35224 + 100] = this.address
                                        mem[_35224 + 132] = 128
                                        mem[_35224 + 164] = mem[_35224]
                                        s = 0
                                        while s < mem[_35224]:
                                            mem[s + _35224 + 196] = mem[s + _35224 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35224] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35224 + 164 len mem[_35224] + 32]
                                        else:
                                            mem[floor32(mem[_35224]) + _35224 + 196] = mem[floor32(mem[_35224]) + _35224 + -(mem[_35224] % 32) + 228 len mem[_35224] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35224], mem[_35224 + 196 len floor32(mem[_35224]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35228 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35228 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35228 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35228 + 68] = 0
                                        mem[_35228 + 100] = this.address
                                        mem[_35228 + 132] = 128
                                        mem[_35228 + 164] = mem[_35228]
                                        s = 0
                                        while s < mem[_35228]:
                                            mem[s + _35228 + 196] = mem[s + _35228 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35228] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35228] + _35228 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35228]) + _35228 + 196] = mem[floor32(mem[_35228]) + _35228 + -(mem[_35228] % 32) + 228 len mem[_35228] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35228]) + _35228 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30752) << 96 == address(_30752):
                                    mem[_15711 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35940 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35940 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35940 + 36] = 0
                                        mem[_35940 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35940 + 100] = this.address
                                        mem[_35940 + 132] = 128
                                        mem[_35940 + 164] = mem[_35940]
                                        s = 0
                                        while s < mem[_35940]:
                                            mem[s + _35940 + 196] = mem[s + _35940 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35940] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35940] + _35940 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35940]) + _35940 + 196] = mem[floor32(mem[_35940]) + _35940 + -(mem[_35940] % 32) + 228 len mem[_35940] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35940]) + _35940 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35944 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35944 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35944 + 36] = 0
                                        mem[_35944 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35944 + 100] = this.address
                                        mem[_35944 + 132] = 128
                                        mem[_35944 + 164] = mem[_35944]
                                        s = 0
                                        while s < mem[_35944]:
                                            mem[s + _35944 + 196] = mem[s + _35944 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35944] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35944 + 164 len mem[_35944] + 32]
                                        else:
                                            mem[floor32(mem[_35944]) + _35944 + 196] = mem[floor32(mem[_35944]) + _35944 + -(mem[_35944] % 32) + 228 len mem[_35944] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35944], mem[_35944 + 196 len floor32(mem[_35944]) + 32]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35948 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35948 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35948 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35948 + 68] = 0
                                        mem[_35948 + 100] = this.address
                                        mem[_35948 + 132] = 128
                                        mem[_35948 + 164] = mem[_35948]
                                        s = 0
                                        while s < mem[_35948]:
                                            mem[s + _35948 + 196] = mem[s + _35948 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35948] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35948 + 164 len mem[_35948] + 32]
                                        else:
                                            mem[floor32(mem[_35948]) + _35948 + 196] = mem[floor32(mem[_35948]) + _35948 + -(mem[_35948] % 32) + 228 len mem[_35948] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35948], mem[_35948 + 196 len floor32(mem[_35948]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35952 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35952 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35952 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35952 + 68] = 0
                                        mem[_35952 + 100] = this.address
                                        mem[_35952 + 132] = 128
                                        mem[_35952 + 164] = mem[_35952]
                                        s = 0
                                        while s < mem[_35952]:
                                            mem[s + _35952 + 196] = mem[s + _35952 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35952] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35952] + _35952 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35952]) + _35952 + 196] = mem[floor32(mem[_35952]) + _35952 + -(mem[_35952] % 32) + 228 len mem[_35952] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35952]) + _35952 + -mem[64] + 224]
                        else:
                            mem[_15711 + 484] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15711 + 452] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30752))
                            staticcall address(_30752).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + 324] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30752) << 96 == address(_30752):
                                    mem[_15711 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35234 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35234 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35234 + 36] = 0
                                        mem[_35234 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35234 + 100] = this.address
                                        mem[_35234 + 132] = 128
                                        mem[_35234 + 164] = mem[_35234]
                                        s = 0
                                        while s < mem[_35234]:
                                            mem[s + _35234 + 196] = mem[s + _35234 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35234] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35234 + 164 len mem[_35234] + 32]
                                        else:
                                            mem[floor32(mem[_35234]) + _35234 + 196] = mem[floor32(mem[_35234]) + _35234 + -(mem[_35234] % 32) + 228 len mem[_35234] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35234], mem[_35234 + 196 len floor32(mem[_35234]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35238 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35238 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35238 + 36] = 0
                                        mem[_35238 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35238 + 100] = this.address
                                        mem[_35238 + 132] = 128
                                        mem[_35238 + 164] = mem[_35238]
                                        s = 0
                                        while s < mem[_35238]:
                                            mem[s + _35238 + 196] = mem[s + _35238 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35238] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35238 + 164 len mem[_35238] + 32]
                                        else:
                                            mem[floor32(mem[_35238]) + _35238 + 196] = mem[floor32(mem[_35238]) + _35238 + -(mem[_35238] % 32) + 228 len mem[_35238] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35238], mem[_35238 + 196 len floor32(mem[_35238]) + 32]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35242 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35242 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35242 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35242 + 68] = 0
                                        mem[_35242 + 100] = this.address
                                        mem[_35242 + 132] = 128
                                        mem[_35242 + 164] = mem[_35242]
                                        s = 0
                                        while s < mem[_35242]:
                                            mem[s + _35242 + 196] = mem[s + _35242 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35242] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35242 + 164 len mem[_35242] + 32]
                                        else:
                                            mem[floor32(mem[_35242]) + _35242 + 196] = mem[floor32(mem[_35242]) + _35242 + -(mem[_35242] % 32) + 228 len mem[_35242] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35242], mem[_35242 + 196 len floor32(mem[_35242]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35246 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35246 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35246 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35246 + 68] = 0
                                        mem[_35246 + 100] = this.address
                                        mem[_35246 + 132] = 128
                                        mem[_35246 + 164] = mem[_35246]
                                        s = 0
                                        while s < mem[_35246]:
                                            mem[s + _35246 + 196] = mem[s + _35246 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35246] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35246] + _35246 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35246]) + _35246 + 196] = mem[floor32(mem[_35246]) + _35246 + -(mem[_35246] % 32) + 228 len mem[_35246] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35246]) + _35246 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30752) << 96 == address(_30752):
                                    mem[_15711 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35960 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35960 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35960 + 36] = 0
                                        mem[_35960 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35960 + 100] = this.address
                                        mem[_35960 + 132] = 128
                                        mem[_35960 + 164] = mem[_35960]
                                        s = 0
                                        while s < mem[_35960]:
                                            mem[s + _35960 + 196] = mem[s + _35960 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35960] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35960] + _35960 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35960]) + _35960 + 196] = mem[floor32(mem[_35960]) + _35960 + -(mem[_35960] % 32) + 228 len mem[_35960] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35960]) + _35960 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35964 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35964 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35964 + 36] = 0
                                        mem[_35964 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35964 + 100] = this.address
                                        mem[_35964 + 132] = 128
                                        mem[_35964 + 164] = mem[_35964]
                                        s = 0
                                        while s < mem[_35964]:
                                            mem[s + _35964 + 196] = mem[s + _35964 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35964] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35964] + _35964 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35964]) + _35964 + 196] = mem[floor32(mem[_35964]) + _35964 + -(mem[_35964] % 32) + 228 len mem[_35964] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35964]) + _35964 + -mem[64] + 224]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35968 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35968 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35968 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35968 + 68] = 0
                                        mem[_35968 + 100] = this.address
                                        mem[_35968 + 132] = 128
                                        mem[_35968 + 164] = mem[_35968]
                                        s = 0
                                        while s < mem[_35968]:
                                            mem[s + _35968 + 196] = mem[s + _35968 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35968] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35968 + 164 len mem[_35968] + 32]
                                        else:
                                            mem[floor32(mem[_35968]) + _35968 + 196] = mem[floor32(mem[_35968]) + _35968 + -(mem[_35968] % 32) + 228 len mem[_35968] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35968], mem[_35968 + 196 len floor32(mem[_35968]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35972 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35972 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35972 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35972 + 68] = 0
                                        mem[_35972 + 100] = this.address
                                        mem[_35972 + 132] = 128
                                        mem[_35972 + 164] = mem[_35972]
                                        s = 0
                                        while s < mem[_35972]:
                                            mem[s + _35972 + 196] = mem[s + _35972 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35972] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35972 + 164 len mem[_35972] + 32]
                                        else:
                                            mem[floor32(mem[_35972]) + _35972 + 196] = mem[floor32(mem[_35972]) + _35972 + -(mem[_35972] % 32) + 228 len mem[_35972] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35972], mem[_35972 + 196 len floor32(mem[_35972]) + 32]
                    else:
                        if not address(_30773):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15711 + 292] = address(_30773)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15711 + 420] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15711 + 388] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30773) << 96 == address(_30752):
                            mem[_15711 + 484] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15711 + 452] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30752))
                            staticcall address(_30752).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + 324] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30773) << 96 == address(_30752):
                                    mem[_15711 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35252 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35252 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35252 + 36] = 0
                                        mem[_35252 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35252 + 100] = this.address
                                        mem[_35252 + 132] = 128
                                        mem[_35252 + 164] = mem[_35252]
                                        s = 0
                                        while s < mem[_35252]:
                                            mem[s + _35252 + 196] = mem[s + _35252 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35252] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35252] + _35252 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35252]) + _35252 + 196] = mem[floor32(mem[_35252]) + _35252 + -(mem[_35252] % 32) + 228 len mem[_35252] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35252]) + _35252 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35256 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35256 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35256 + 36] = 0
                                        mem[_35256 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35256 + 100] = this.address
                                        mem[_35256 + 132] = 128
                                        mem[_35256 + 164] = mem[_35256]
                                        s = 0
                                        while s < mem[_35256]:
                                            mem[s + _35256 + 196] = mem[s + _35256 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35256] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35256 + 164 len mem[_35256] + 32]
                                        else:
                                            mem[floor32(mem[_35256]) + _35256 + 196] = mem[floor32(mem[_35256]) + _35256 + -(mem[_35256] % 32) + 228 len mem[_35256] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35256], mem[_35256 + 196 len floor32(mem[_35256]) + 32]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35260 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35260 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35260 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35260 + 68] = 0
                                        mem[_35260 + 100] = this.address
                                        mem[_35260 + 132] = 128
                                        mem[_35260 + 164] = mem[_35260]
                                        s = 0
                                        while s < mem[_35260]:
                                            mem[s + _35260 + 196] = mem[s + _35260 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35260] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35260 + 164 len mem[_35260] + 32]
                                        else:
                                            mem[floor32(mem[_35260]) + _35260 + 196] = mem[floor32(mem[_35260]) + _35260 + -(mem[_35260] % 32) + 228 len mem[_35260] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35260], mem[_35260 + 196 len floor32(mem[_35260]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35264 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35264 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35264 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35264 + 68] = 0
                                        mem[_35264 + 100] = this.address
                                        mem[_35264 + 132] = 128
                                        mem[_35264 + 164] = mem[_35264]
                                        s = 0
                                        while s < mem[_35264]:
                                            mem[s + _35264 + 196] = mem[s + _35264 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35264] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35264] + _35264 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35264]) + _35264 + 196] = mem[floor32(mem[_35264]) + _35264 + -(mem[_35264] % 32) + 228 len mem[_35264] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35264]) + _35264 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30773) << 96 == address(_30752):
                                    mem[_15711 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35980 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35980 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35980 + 36] = 0
                                        mem[_35980 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35980 + 100] = this.address
                                        mem[_35980 + 132] = 128
                                        mem[_35980 + 164] = mem[_35980]
                                        s = 0
                                        while s < mem[_35980]:
                                            mem[s + _35980 + 196] = mem[s + _35980 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35980] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35980 + 164 len mem[_35980] + 32]
                                        else:
                                            mem[floor32(mem[_35980]) + _35980 + 196] = mem[floor32(mem[_35980]) + _35980 + -(mem[_35980] % 32) + 228 len mem[_35980] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35980], mem[_35980 + 196 len floor32(mem[_35980]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35984 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35984 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35984 + 36] = 0
                                        mem[_35984 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35984 + 100] = this.address
                                        mem[_35984 + 132] = 128
                                        mem[_35984 + 164] = mem[_35984]
                                        s = 0
                                        while s < mem[_35984]:
                                            mem[s + _35984 + 196] = mem[s + _35984 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35984] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35984] + _35984 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35984]) + _35984 + 196] = mem[floor32(mem[_35984]) + _35984 + -(mem[_35984] % 32) + 228 len mem[_35984] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35984]) + _35984 + -mem[64] + 224]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35988 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35988 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35988 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35988 + 68] = 0
                                        mem[_35988 + 100] = this.address
                                        mem[_35988 + 132] = 128
                                        mem[_35988 + 164] = mem[_35988]
                                        s = 0
                                        while s < mem[_35988]:
                                            mem[s + _35988 + 196] = mem[s + _35988 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35988] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35988] + _35988 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35988]) + _35988 + 196] = mem[floor32(mem[_35988]) + _35988 + -(mem[_35988] % 32) + 228 len mem[_35988] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35988]) + _35988 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35992 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35992 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35992 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35992 + 68] = 0
                                        mem[_35992 + 100] = this.address
                                        mem[_35992 + 132] = 128
                                        mem[_35992 + 164] = mem[_35992]
                                        s = 0
                                        while s < mem[_35992]:
                                            mem[s + _35992 + 196] = mem[s + _35992 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35992] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35992] + _35992 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35992]) + _35992 + 196] = mem[floor32(mem[_35992]) + _35992 + -(mem[_35992] % 32) + 228 len mem[_35992] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35992]) + _35992 + -mem[64] + 224]
                        else:
                            mem[_15711 + 484] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15711 + 452] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30752))
                            staticcall address(_30752).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + 324] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30773) << 96 == address(_30752):
                                    mem[_15711 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35270 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35270 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35270 + 36] = 0
                                        mem[_35270 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35270 + 100] = this.address
                                        mem[_35270 + 132] = 128
                                        mem[_35270 + 164] = mem[_35270]
                                        s = 0
                                        while s < mem[_35270]:
                                            mem[s + _35270 + 196] = mem[s + _35270 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35270] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35270 + 164 len mem[_35270] + 32]
                                        else:
                                            mem[floor32(mem[_35270]) + _35270 + 196] = mem[floor32(mem[_35270]) + _35270 + -(mem[_35270] % 32) + 228 len mem[_35270] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35270], mem[_35270 + 196 len floor32(mem[_35270]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35274 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35274 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35274 + 36] = 0
                                        mem[_35274 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35274 + 100] = this.address
                                        mem[_35274 + 132] = 128
                                        mem[_35274 + 164] = mem[_35274]
                                        s = 0
                                        while s < mem[_35274]:
                                            mem[s + _35274 + 196] = mem[s + _35274 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35274] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35274] + _35274 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35274]) + _35274 + 196] = mem[floor32(mem[_35274]) + _35274 + -(mem[_35274] % 32) + 228 len mem[_35274] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35274]) + _35274 + -mem[64] + 224]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _35278 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35278 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35278 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35278 + 68] = 0
                                        mem[_35278 + 100] = this.address
                                        mem[_35278 + 132] = 128
                                        mem[_35278 + 164] = mem[_35278]
                                        s = 0
                                        while s < mem[_35278]:
                                            mem[s + _35278 + 196] = mem[s + _35278 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35278] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35278] + _35278 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35278]) + _35278 + 196] = mem[floor32(mem[_35278]) + _35278 + -(mem[_35278] % 32) + 228 len mem[_35278] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35278]) + _35278 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _35282 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35282 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35282 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35282 + 68] = 0
                                        mem[_35282 + 100] = this.address
                                        mem[_35282 + 132] = 128
                                        mem[_35282 + 164] = mem[_35282]
                                        s = 0
                                        while s < mem[_35282]:
                                            mem[s + _35282 + 196] = mem[s + _35282 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35282] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35282] + _35282 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35282]) + _35282 + 196] = mem[floor32(mem[_35282]) + _35282 + -(mem[_35282] % 32) + 228 len mem[_35282] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35282]) + _35282 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30773) << 96 == address(_30752):
                                    mem[_15711 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + 516] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _36000 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36000 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36000 + 36] = 0
                                        mem[_36000 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36000 + 100] = this.address
                                        mem[_36000 + 132] = 128
                                        mem[_36000 + 164] = mem[_36000]
                                        s = 0
                                        while s < mem[_36000]:
                                            mem[s + _36000 + 196] = mem[s + _36000 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36000] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36000] + _36000 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36000]) + _36000 + 196] = mem[floor32(mem[_36000]) + _36000 + -(mem[_36000] % 32) + 228 len mem[_36000] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36000]) + _36000 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _36004 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36004 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36004 + 36] = 0
                                        mem[_36004 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36004 + 100] = this.address
                                        mem[_36004 + 132] = 128
                                        mem[_36004 + 164] = mem[_36004]
                                        s = 0
                                        while s < mem[_36004]:
                                            mem[s + _36004 + 196] = mem[s + _36004 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36004] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36004] + _36004 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36004]) + _36004 + 196] = mem[floor32(mem[_36004]) + _36004 + -(mem[_36004] % 32) + 228 len mem[_36004] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36004]) + _36004 + -mem[64] + 224]
                                else:
                                    mem[_15711 + 548] = 0
                                    mem[_15711 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + 196] = address(cd[4])
                                        _36008 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36008 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36008 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36008 + 68] = 0
                                        mem[_36008 + 100] = this.address
                                        mem[_36008 + 132] = 128
                                        mem[_36008 + 164] = mem[_36008]
                                        s = 0
                                        while s < mem[_36008]:
                                            mem[s + _36008 + 196] = mem[s + _36008 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36008] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36008 + 164 len mem[_36008] + 32]
                                        else:
                                            mem[floor32(mem[_36008]) + _36008 + 196] = mem[floor32(mem[_36008]) + _36008 + -(mem[_36008] % 32) + 228 len mem[_36008] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36008], mem[_36008 + 196 len floor32(mem[_36008]) + 32]
                                    else:
                                        mem[_15711 + 196] = this.address
                                        _36012 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36012 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36012 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36012 + 68] = 0
                                        mem[_36012 + 100] = this.address
                                        mem[_36012 + 132] = 128
                                        mem[_36012 + 164] = mem[_36012]
                                        s = 0
                                        while s < mem[_36012]:
                                            mem[s + _36012 + 196] = mem[s + _36012 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36012] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36012] + _36012 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36012]) + _36012 + 196] = mem[floor32(mem[_36012]) + _36012 + -(mem[_36012] % 32) + 228 len mem[_36012] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36012]) + _36012 + -mem[64] + 224]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = mem[_15711 + 356]
                    continue 
                if s < _15736 * cd[100] / 100:
                    revert with 0, '-,'
                _30770 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                mem[_30770] = ('cd', 36).length
                mem[_30770 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_30770 + (32 * ('cd', 36).length) + 32] = 0
                if ('cd', 36).length < 2:
                    revert with 0, 'PancakeLibrary: INVALID_PATH'
                require ('cd', 36).length <= test266151307()
                _30847 = mem[64]
                mem[mem[64]] = ('cd', 36).length
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                if not ('cd', 36).length:
                    require 0 < mem[_30847]
                    mem[_30847 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30770]
                        _38429 = mem[(32 * idx) + _30770 + 32]
                        require idx + 1 < mem[_30770]
                        _38961 = mem[(32 * idx + 1) + _30770 + 32]
                        if mem[(32 * idx) + _30770 + 44 len 20] == mem[(32 * idx + 1) + _30770 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30770 + 44 len 20] < mem[(32 * idx + 1) + _30770 + 44 len 20]:
                            if not mem[(32 * idx) + _30770 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38429) == address(_38429):
                                require idx < mem[_30847]
                                if mem[(32 * idx) + _30847 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30847 + 32] / 9975 != mem[(32 * idx) + _30847 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                    require idx + 1 < mem[_30847]
                                    mem[(32 * idx + 1) + _30847 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30847 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30847 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                    require idx + 1 < mem[_30847]
                                    mem[(32 * idx + 1) + _30847 + 32] = 9975 * mem[(32 * idx) + _30847 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30770 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38961) == address(_38429):
                                require idx < mem[_30847]
                                if mem[(32 * idx) + _30847 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30847 + 32] / 9975 != mem[(32 * idx) + _30847 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                    require idx + 1 < mem[_30847]
                                    mem[(32 * idx + 1) + _30847 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30847 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30847 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                    require idx + 1 < mem[_30847]
                                    mem[(32 * idx + 1) + _30847 + 32] = 9975 * mem[(32 * idx) + _30847 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30847]
                        if mem[(32 * idx) + _30847 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30847 + 32] / 9975 != mem[(32 * idx) + _30847 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30847 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30847 + 32])
                            require idx + 1 < mem[_30847]
                            mem[(32 * idx + 1) + _30847 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30847 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30847 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30847 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30847 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30847 + 32])
                            require idx + 1 < mem[_30847]
                            mem[(32 * idx + 1) + _30847 + 32] = 9975 * mem[(32 * idx) + _30847 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30847 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30847]
                    _38958 = mem[_30847 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _38958
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _38958
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39816 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39816] = ('cd', 36).length
                    mem[_39816 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39816 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39816]
                        require idx + 1 < mem[_39816]
                        if mem[(32 * idx) + _39816 + 44 len 20] == mem[(32 * idx + 1) + _39816 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39816 + 44 len 20] < mem[(32 * idx + 1) + _39816 + 44 len 20]:
                            if not mem[(32 * idx) + _39816 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30847]
                            _43002 = mem[(32 * idx + 1) + _30847 + 32]
                            if mem[(32 * idx) + _39816 + 44 len 20] == mem[(32 * idx) + _39816 + 44 len 20]:
                                if idx < mem[_39816] - 2:
                                    _43158 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43158 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43158 + 36] = 0
                                    mem[_43158 + 68] = _43002
                                    mem[_43158 + 100] = address(cd[4])
                                    mem[_43158 + 132] = 128
                                    mem[_43158 + 164] = mem[_43158]
                                    s = 0
                                    while s < mem[_43158]:
                                        mem[s + _43158 + 196] = mem[s + _43158 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43158] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43002, address(cd[4]), 128, mem[_43158 + 164 len mem[_43158] + 32]
                                    else:
                                        mem[floor32(mem[_43158]) + _43158 + 196] = mem[floor32(mem[_43158]) + _43158 + -(mem[_43158] % 32) + 228 len mem[_43158] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43002, address(cd[4]), 128, mem[_43158], mem[_43158 + 196 len floor32(mem[_43158]) + 32]
                                else:
                                    _43162 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43162 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43162 + 36] = 0
                                    mem[_43162 + 68] = _43002
                                    mem[_43162 + 100] = address(cd[68])
                                    mem[_43162 + 132] = 128
                                    mem[_43162 + 164] = mem[_43162]
                                    s = 0
                                    while s < mem[_43162]:
                                        mem[s + _43162 + 196] = mem[s + _43162 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43162] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43002, address(cd[68]), 128, mem[_43162 + 164 len mem[_43162] + 32]
                                    else:
                                        mem[floor32(mem[_43162]) + _43162 + 196] = mem[floor32(mem[_43162]) + _43162 + -(mem[_43162] % 32) + 228 len mem[_43162] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43002, address(cd[68]), 128, mem[_43162], mem[_43162 + 196 len floor32(mem[_43162]) + 32]
                            else:
                                if idx < mem[_39816] - 2:
                                    _43166 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43166 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43166 + 36] = _43002
                                    mem[_43166 + 68] = 0
                                    mem[_43166 + 100] = address(cd[4])
                                    mem[_43166 + 132] = 128
                                    mem[_43166 + 164] = mem[_43166]
                                    s = 0
                                    while s < mem[_43166]:
                                        mem[s + _43166 + 196] = mem[s + _43166 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43166] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43002, 0, address(cd[4]), 128, mem[_43166 + 164 len mem[_43166] + 32]
                                    else:
                                        mem[floor32(mem[_43166]) + _43166 + 196] = mem[floor32(mem[_43166]) + _43166 + -(mem[_43166] % 32) + 228 len mem[_43166] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43002, 0, address(cd[4]), 128, mem[_43166], mem[_43166 + 196 len floor32(mem[_43166]) + 32]
                                else:
                                    _43170 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43170 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43170 + 36] = _43002
                                    mem[_43170 + 68] = 0
                                    mem[_43170 + 100] = address(cd[68])
                                    mem[_43170 + 132] = 128
                                    mem[_43170 + 164] = mem[_43170]
                                    s = 0
                                    while s < mem[_43170]:
                                        mem[s + _43170 + 196] = mem[s + _43170 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43170] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43002, 0, address(cd[68]), 128, mem[_43170 + 164 len mem[_43170] + 32]
                                    else:
                                        mem[floor32(mem[_43170]) + _43170 + 196] = mem[floor32(mem[_43170]) + _43170 + -(mem[_43170] % 32) + 228 len mem[_43170] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43002, 0, address(cd[68]), 128, mem[_43170], mem[_43170 + 196 len floor32(mem[_43170]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39816 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30847]
                            _43003 = mem[(32 * idx + 1) + _30847 + 32]
                            if mem[(32 * idx) + _39816 + 44 len 20] == mem[(32 * idx + 1) + _39816 + 44 len 20]:
                                if idx < mem[_39816] - 2:
                                    _43174 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43174 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43174 + 36] = 0
                                    mem[_43174 + 68] = _43003
                                    mem[_43174 + 100] = address(cd[4])
                                    mem[_43174 + 132] = 128
                                    mem[_43174 + 164] = mem[_43174]
                                    s = 0
                                    while s < mem[_43174]:
                                        mem[s + _43174 + 196] = mem[s + _43174 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43174] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43003, address(cd[4]), 128, mem[_43174 + 164 len mem[_43174] + 32]
                                    else:
                                        mem[floor32(mem[_43174]) + _43174 + 196] = mem[floor32(mem[_43174]) + _43174 + -(mem[_43174] % 32) + 228 len mem[_43174] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43003, address(cd[4]), 128, mem[_43174], mem[_43174 + 196 len floor32(mem[_43174]) + 32]
                                else:
                                    _43178 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43178 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43178 + 36] = 0
                                    mem[_43178 + 68] = _43003
                                    mem[_43178 + 100] = address(cd[68])
                                    mem[_43178 + 132] = 128
                                    mem[_43178 + 164] = mem[_43178]
                                    s = 0
                                    while s < mem[_43178]:
                                        mem[s + _43178 + 196] = mem[s + _43178 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43178] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43003, address(cd[68]), 128, mem[_43178 + 164 len mem[_43178] + 32]
                                    else:
                                        mem[floor32(mem[_43178]) + _43178 + 196] = mem[floor32(mem[_43178]) + _43178 + -(mem[_43178] % 32) + 228 len mem[_43178] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43003, address(cd[68]), 128, mem[_43178], mem[_43178 + 196 len floor32(mem[_43178]) + 32]
                            else:
                                if idx < mem[_39816] - 2:
                                    _43182 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43182 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43182 + 36] = _43003
                                    mem[_43182 + 68] = 0
                                    mem[_43182 + 100] = address(cd[4])
                                    mem[_43182 + 132] = 128
                                    mem[_43182 + 164] = mem[_43182]
                                    s = 0
                                    while s < mem[_43182]:
                                        mem[s + _43182 + 196] = mem[s + _43182 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43182] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43003, 0, address(cd[4]), 128, mem[_43182 + 164 len mem[_43182] + 32]
                                    else:
                                        mem[floor32(mem[_43182]) + _43182 + 196] = mem[floor32(mem[_43182]) + _43182 + -(mem[_43182] % 32) + 228 len mem[_43182] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43003, 0, address(cd[4]), 128, mem[_43182], mem[_43182 + 196 len floor32(mem[_43182]) + 32]
                                else:
                                    _43186 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43186 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43186 + 36] = _43003
                                    mem[_43186 + 68] = 0
                                    mem[_43186 + 100] = address(cd[68])
                                    mem[_43186 + 132] = 128
                                    mem[_43186 + 164] = mem[_43186]
                                    s = 0
                                    while s < mem[_43186]:
                                        mem[s + _43186 + 196] = mem[s + _43186 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43186] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43003, 0, address(cd[68]), 128, mem[_43186 + 164 len mem[_43186] + 32]
                                    else:
                                        mem[floor32(mem[_43186]) + _43186 + 196] = mem[floor32(mem[_43186]) + _43186 + -(mem[_43186] % 32) + 228 len mem[_43186] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43003, 0, address(cd[68]), 128, mem[_43186], mem[_43186 + 196 len floor32(mem[_43186]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                else:
                    mem[_30847 + 32 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
                    require 0 < mem[_30847]
                    mem[_30847 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30770]
                        _38432 = mem[(32 * idx) + _30770 + 32]
                        require idx + 1 < mem[_30770]
                        _38965 = mem[(32 * idx + 1) + _30770 + 32]
                        if mem[(32 * idx) + _30770 + 44 len 20] == mem[(32 * idx + 1) + _30770 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30770 + 44 len 20] < mem[(32 * idx + 1) + _30770 + 44 len 20]:
                            if not mem[(32 * idx) + _30770 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38432) == address(_38432):
                                require idx < mem[_30847]
                                if mem[(32 * idx) + _30847 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30847 + 32] / 9975 != mem[(32 * idx) + _30847 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                    require idx + 1 < mem[_30847]
                                    mem[(32 * idx + 1) + _30847 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30847 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30847 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                    require idx + 1 < mem[_30847]
                                    mem[(32 * idx + 1) + _30847 + 32] = 9975 * mem[(32 * idx) + _30847 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30770 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38965) == address(_38432):
                                require idx < mem[_30847]
                                if mem[(32 * idx) + _30847 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30847 + 32] / 9975 != mem[(32 * idx) + _30847 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                    require idx + 1 < mem[_30847]
                                    mem[(32 * idx + 1) + _30847 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30847 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30847 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                    require idx + 1 < mem[_30847]
                                    mem[(32 * idx + 1) + _30847 + 32] = 9975 * mem[(32 * idx) + _30847 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30847 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30847]
                        if mem[(32 * idx) + _30847 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30847 + 32] / 9975 != mem[(32 * idx) + _30847 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30847 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30847 + 32])
                            require idx + 1 < mem[_30847]
                            mem[(32 * idx + 1) + _30847 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30847 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30847 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30847 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30847 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30847 + 32])
                            require idx + 1 < mem[_30847]
                            mem[(32 * idx + 1) + _30847 + 32] = 9975 * mem[(32 * idx) + _30847 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30847 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30847]
                    _38962 = mem[_30847 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _38962
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _38962
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39817 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39817] = ('cd', 36).length
                    mem[_39817 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39817 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39817]
                        require idx + 1 < mem[_39817]
                        if mem[(32 * idx) + _39817 + 44 len 20] == mem[(32 * idx + 1) + _39817 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39817 + 44 len 20] < mem[(32 * idx + 1) + _39817 + 44 len 20]:
                            if not mem[(32 * idx) + _39817 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30847]
                            _43004 = mem[(32 * idx + 1) + _30847 + 32]
                            if mem[(32 * idx) + _39817 + 44 len 20] == mem[(32 * idx) + _39817 + 44 len 20]:
                                if idx < mem[_39817] - 2:
                                    _43190 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43190 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43190 + 36] = 0
                                    mem[_43190 + 68] = _43004
                                    mem[_43190 + 100] = address(cd[4])
                                    mem[_43190 + 132] = 128
                                    mem[_43190 + 164] = mem[_43190]
                                    s = 0
                                    while s < mem[_43190]:
                                        mem[s + _43190 + 196] = mem[s + _43190 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43190] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43004, address(cd[4]), 128, mem[_43190 + 164 len mem[_43190] + 32]
                                    else:
                                        mem[floor32(mem[_43190]) + _43190 + 196] = mem[floor32(mem[_43190]) + _43190 + -(mem[_43190] % 32) + 228 len mem[_43190] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43004, address(cd[4]), 128, mem[_43190], mem[_43190 + 196 len floor32(mem[_43190]) + 32]
                                else:
                                    _43194 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43194 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43194 + 36] = 0
                                    mem[_43194 + 68] = _43004
                                    mem[_43194 + 100] = address(cd[68])
                                    mem[_43194 + 132] = 128
                                    mem[_43194 + 164] = mem[_43194]
                                    s = 0
                                    while s < mem[_43194]:
                                        mem[s + _43194 + 196] = mem[s + _43194 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43194] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43004, address(cd[68]), 128, mem[_43194 + 164 len mem[_43194] + 32]
                                    else:
                                        mem[floor32(mem[_43194]) + _43194 + 196] = mem[floor32(mem[_43194]) + _43194 + -(mem[_43194] % 32) + 228 len mem[_43194] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43004, address(cd[68]), 128, mem[_43194], mem[_43194 + 196 len floor32(mem[_43194]) + 32]
                            else:
                                if idx < mem[_39817] - 2:
                                    _43198 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43198 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43198 + 36] = _43004
                                    mem[_43198 + 68] = 0
                                    mem[_43198 + 100] = address(cd[4])
                                    mem[_43198 + 132] = 128
                                    mem[_43198 + 164] = mem[_43198]
                                    s = 0
                                    while s < mem[_43198]:
                                        mem[s + _43198 + 196] = mem[s + _43198 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43198] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43004, 0, address(cd[4]), 128, mem[_43198 + 164 len mem[_43198] + 32]
                                    else:
                                        mem[floor32(mem[_43198]) + _43198 + 196] = mem[floor32(mem[_43198]) + _43198 + -(mem[_43198] % 32) + 228 len mem[_43198] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43004, 0, address(cd[4]), 128, mem[_43198], mem[_43198 + 196 len floor32(mem[_43198]) + 32]
                                else:
                                    _43202 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43202 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43202 + 36] = _43004
                                    mem[_43202 + 68] = 0
                                    mem[_43202 + 100] = address(cd[68])
                                    mem[_43202 + 132] = 128
                                    mem[_43202 + 164] = mem[_43202]
                                    s = 0
                                    while s < mem[_43202]:
                                        mem[s + _43202 + 196] = mem[s + _43202 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43202] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43004, 0, address(cd[68]), 128, mem[_43202 + 164 len mem[_43202] + 32]
                                    else:
                                        mem[floor32(mem[_43202]) + _43202 + 196] = mem[floor32(mem[_43202]) + _43202 + -(mem[_43202] % 32) + 228 len mem[_43202] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43004, 0, address(cd[68]), 128, mem[_43202], mem[_43202 + 196 len floor32(mem[_43202]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39817 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30847]
                            _43005 = mem[(32 * idx + 1) + _30847 + 32]
                            if mem[(32 * idx) + _39817 + 44 len 20] == mem[(32 * idx + 1) + _39817 + 44 len 20]:
                                if idx < mem[_39817] - 2:
                                    _43206 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43206 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43206 + 36] = 0
                                    mem[_43206 + 68] = _43005
                                    mem[_43206 + 100] = address(cd[4])
                                    mem[_43206 + 132] = 128
                                    mem[_43206 + 164] = mem[_43206]
                                    s = 0
                                    while s < mem[_43206]:
                                        mem[s + _43206 + 196] = mem[s + _43206 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43206] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43005, address(cd[4]), 128, mem[_43206 + 164 len mem[_43206] + 32]
                                    else:
                                        mem[floor32(mem[_43206]) + _43206 + 196] = mem[floor32(mem[_43206]) + _43206 + -(mem[_43206] % 32) + 228 len mem[_43206] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43005, address(cd[4]), 128, mem[_43206], mem[_43206 + 196 len floor32(mem[_43206]) + 32]
                                else:
                                    _43210 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43210 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43210 + 36] = 0
                                    mem[_43210 + 68] = _43005
                                    mem[_43210 + 100] = address(cd[68])
                                    mem[_43210 + 132] = 128
                                    mem[_43210 + 164] = mem[_43210]
                                    s = 0
                                    while s < mem[_43210]:
                                        mem[s + _43210 + 196] = mem[s + _43210 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43210] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43005, address(cd[68]), 128, mem[_43210 + 164 len mem[_43210] + 32]
                                    else:
                                        mem[floor32(mem[_43210]) + _43210 + 196] = mem[floor32(mem[_43210]) + _43210 + -(mem[_43210] % 32) + 228 len mem[_43210] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43005, address(cd[68]), 128, mem[_43210], mem[_43210 + 196 len floor32(mem[_43210]) + 32]
                            else:
                                if idx < mem[_39817] - 2:
                                    _43214 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43214 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43214 + 36] = _43005
                                    mem[_43214 + 68] = 0
                                    mem[_43214 + 100] = address(cd[4])
                                    mem[_43214 + 132] = 128
                                    mem[_43214 + 164] = mem[_43214]
                                    s = 0
                                    while s < mem[_43214]:
                                        mem[s + _43214 + 196] = mem[s + _43214 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43214] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43005, 0, address(cd[4]), 128, mem[_43214 + 164 len mem[_43214] + 32]
                                    else:
                                        mem[floor32(mem[_43214]) + _43214 + 196] = mem[floor32(mem[_43214]) + _43214 + -(mem[_43214] % 32) + 228 len mem[_43214] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43005, 0, address(cd[4]), 128, mem[_43214], mem[_43214 + 196 len floor32(mem[_43214]) + 32]
                                else:
                                    _43218 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43218 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43218 + 36] = _43005
                                    mem[_43218 + 68] = 0
                                    mem[_43218 + 100] = address(cd[68])
                                    mem[_43218 + 132] = 128
                                    mem[_43218 + 164] = mem[_43218]
                                    s = 0
                                    while s < mem[_43218]:
                                        mem[s + _43218 + 196] = mem[s + _43218 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43218] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43005, 0, address(cd[68]), 128, mem[_43218 + 164 len mem[_43218] + 32]
                                    else:
                                        mem[floor32(mem[_43218]) + _43218 + 196] = mem[floor32(mem[_43218]) + _43218 + -(mem[_43218] % 32) + 228 len mem[_43218] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43005, 0, address(cd[68]), 128, mem[_43218], mem[_43218 + 196 len floor32(mem[_43218]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
        else:
            mem[_15711 + 196] = return_data.size
            mem[_15711 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if not return_data.size:
                mem[64] = _15711 + ceil32(return_data.size) + 581
                mem[_15711 + ceil32(return_data.size) + 197] = 0
                mem[_15711 + ceil32(return_data.size) + 229] = 0
                mem[_15711 + ceil32(return_data.size) + 261] = 0
                mem[_15711 + ceil32(return_data.size) + 293] = 0
                mem[_15711 + ceil32(return_data.size) + 325] = 0
                mem[_15711 + ceil32(return_data.size) + 357] = 0
                mem[_15711 + ceil32(return_data.size) + 389] = 0
                mem[_15711 + ceil32(return_data.size) + 421] = 0
                mem[_15711 + ceil32(return_data.size) + 453] = 0
                mem[_15711 + ceil32(return_data.size) + 485] = 0
                mem[_15711 + ceil32(return_data.size) + 517] = 0
                mem[_15711 + ceil32(return_data.size) + 549] = 0
                _30736 = mem[_15711]
                idx = 0
                s = 0
                while idx < _30736 - 1:
                    require idx < mem[_15711]
                    _30754 = mem[(32 * idx) + _15711 + 32]
                    require idx + 1 < mem[_15711]
                    _30777 = mem[(32 * idx + 1) + _15711 + 32]
                    mem[_15711 + ceil32(return_data.size) + 261] = mem[(32 * idx + 1) + _15711 + 44 len 20]
                    mem[_15711 + ceil32(return_data.size) + 229] = address(_30754)
                    if address(_30754) == address(_30777):
                        revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if address(_30754) < address(_30777):
                        if not address(_30754):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15711 + ceil32(return_data.size) + 293] = address(_30754)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15711 + ceil32(return_data.size) + 421] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15711 + ceil32(return_data.size) + 389] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30754) << 96 == address(_30754):
                            mem[_15711 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15711 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30754))
                            staticcall address(_30754).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + ceil32(return_data.size) + 325] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30754) << 96 == address(_30754):
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35296 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35296 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35296 + 36] = 0
                                        mem[_35296 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35296 + 100] = this.address
                                        mem[_35296 + 132] = 128
                                        mem[_35296 + 164] = mem[_35296]
                                        s = 0
                                        while s < mem[_35296]:
                                            mem[s + _35296 + 196] = mem[s + _35296 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35296] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35296 + 164 len mem[_35296] + 32]
                                        else:
                                            mem[floor32(mem[_35296]) + _35296 + 196] = mem[floor32(mem[_35296]) + _35296 + -(mem[_35296] % 32) + 228 len mem[_35296] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35296], mem[_35296 + 196 len floor32(mem[_35296]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35300 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35300 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35300 + 36] = 0
                                        mem[_35300 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35300 + 100] = this.address
                                        mem[_35300 + 132] = 128
                                        mem[_35300 + 164] = mem[_35300]
                                        s = 0
                                        while s < mem[_35300]:
                                            mem[s + _35300 + 196] = mem[s + _35300 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35300] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35300 + 164 len mem[_35300] + 32]
                                        else:
                                            mem[floor32(mem[_35300]) + _35300 + 196] = mem[floor32(mem[_35300]) + _35300 + -(mem[_35300] % 32) + 228 len mem[_35300] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35300], mem[_35300 + 196 len floor32(mem[_35300]) + 32]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35304 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35304 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35304 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35304 + 68] = 0
                                        mem[_35304 + 100] = this.address
                                        mem[_35304 + 132] = 128
                                        mem[_35304 + 164] = mem[_35304]
                                        s = 0
                                        while s < mem[_35304]:
                                            mem[s + _35304 + 196] = mem[s + _35304 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35304] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35304] + _35304 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35304]) + _35304 + 196] = mem[floor32(mem[_35304]) + _35304 + -(mem[_35304] % 32) + 228 len mem[_35304] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35304]) + _35304 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35308 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35308 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35308 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35308 + 68] = 0
                                        mem[_35308 + 100] = this.address
                                        mem[_35308 + 132] = 128
                                        mem[_35308 + 164] = mem[_35308]
                                        s = 0
                                        while s < mem[_35308]:
                                            mem[s + _35308 + 196] = mem[s + _35308 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35308] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35308 + 164 len mem[_35308] + 32]
                                        else:
                                            mem[floor32(mem[_35308]) + _35308 + 196] = mem[floor32(mem[_35308]) + _35308 + -(mem[_35308] % 32) + 228 len mem[_35308] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35308], mem[_35308 + 196 len floor32(mem[_35308]) + 32]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30754) << 96 == address(_30754):
                                    mem[_15711 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36032 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36032 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36032 + 36] = 0
                                        mem[_36032 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36032 + 100] = this.address
                                        mem[_36032 + 132] = 128
                                        mem[_36032 + 164] = mem[_36032]
                                        s = 0
                                        while s < mem[_36032]:
                                            mem[s + _36032 + 196] = mem[s + _36032 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36032] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36032 + 164 len mem[_36032] + 32]
                                        else:
                                            mem[floor32(mem[_36032]) + _36032 + 196] = mem[floor32(mem[_36032]) + _36032 + -(mem[_36032] % 32) + 228 len mem[_36032] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36032], mem[_36032 + 196 len floor32(mem[_36032]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36036 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36036 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36036 + 36] = 0
                                        mem[_36036 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36036 + 100] = this.address
                                        mem[_36036 + 132] = 128
                                        mem[_36036 + 164] = mem[_36036]
                                        s = 0
                                        while s < mem[_36036]:
                                            mem[s + _36036 + 196] = mem[s + _36036 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36036] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36036] + _36036 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36036]) + _36036 + 196] = mem[floor32(mem[_36036]) + _36036 + -(mem[_36036] % 32) + 228 len mem[_36036] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36036]) + _36036 + -mem[64] + 224]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36040 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36040 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36040 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36040 + 68] = 0
                                        mem[_36040 + 100] = this.address
                                        mem[_36040 + 132] = 128
                                        mem[_36040 + 164] = mem[_36040]
                                        s = 0
                                        while s < mem[_36040]:
                                            mem[s + _36040 + 196] = mem[s + _36040 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36040] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36040] + _36040 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36040]) + _36040 + 196] = mem[floor32(mem[_36040]) + _36040 + -(mem[_36040] % 32) + 228 len mem[_36040] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36040]) + _36040 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36044 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36044 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36044 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36044 + 68] = 0
                                        mem[_36044 + 100] = this.address
                                        mem[_36044 + 132] = 128
                                        mem[_36044 + 164] = mem[_36044]
                                        s = 0
                                        while s < mem[_36044]:
                                            mem[s + _36044 + 196] = mem[s + _36044 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36044] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36044 + 164 len mem[_36044] + 32]
                                        else:
                                            mem[floor32(mem[_36044]) + _36044 + 196] = mem[floor32(mem[_36044]) + _36044 + -(mem[_36044] % 32) + 228 len mem[_36044] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36044], mem[_36044 + 196 len floor32(mem[_36044]) + 32]
                        else:
                            mem[_15711 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15711 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30754))
                            staticcall address(_30754).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + ceil32(return_data.size) + 325] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30754) << 96 == address(_30754):
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35314 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35314 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35314 + 36] = 0
                                        mem[_35314 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35314 + 100] = this.address
                                        mem[_35314 + 132] = 128
                                        mem[_35314 + 164] = mem[_35314]
                                        s = 0
                                        while s < mem[_35314]:
                                            mem[s + _35314 + 196] = mem[s + _35314 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35314] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35314] + _35314 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35314]) + _35314 + 196] = mem[floor32(mem[_35314]) + _35314 + -(mem[_35314] % 32) + 228 len mem[_35314] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35314]) + _35314 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35318 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35318 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35318 + 36] = 0
                                        mem[_35318 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35318 + 100] = this.address
                                        mem[_35318 + 132] = 128
                                        mem[_35318 + 164] = mem[_35318]
                                        s = 0
                                        while s < mem[_35318]:
                                            mem[s + _35318 + 196] = mem[s + _35318 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35318] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35318 + 164 len mem[_35318] + 32]
                                        else:
                                            mem[floor32(mem[_35318]) + _35318 + 196] = mem[floor32(mem[_35318]) + _35318 + -(mem[_35318] % 32) + 228 len mem[_35318] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35318], mem[_35318 + 196 len floor32(mem[_35318]) + 32]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35322 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35322 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35322 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35322 + 68] = 0
                                        mem[_35322 + 100] = this.address
                                        mem[_35322 + 132] = 128
                                        mem[_35322 + 164] = mem[_35322]
                                        s = 0
                                        while s < mem[_35322]:
                                            mem[s + _35322 + 196] = mem[s + _35322 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35322] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35322] + _35322 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35322]) + _35322 + 196] = mem[floor32(mem[_35322]) + _35322 + -(mem[_35322] % 32) + 228 len mem[_35322] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35322]) + _35322 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35326 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35326 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35326 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35326 + 68] = 0
                                        mem[_35326 + 100] = this.address
                                        mem[_35326 + 132] = 128
                                        mem[_35326 + 164] = mem[_35326]
                                        s = 0
                                        while s < mem[_35326]:
                                            mem[s + _35326 + 196] = mem[s + _35326 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35326] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35326 + 164 len mem[_35326] + 32]
                                        else:
                                            mem[floor32(mem[_35326]) + _35326 + 196] = mem[floor32(mem[_35326]) + _35326 + -(mem[_35326] % 32) + 228 len mem[_35326] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35326], mem[_35326 + 196 len floor32(mem[_35326]) + 32]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30754) << 96 == address(_30754):
                                    mem[_15711 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36052 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36052 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36052 + 36] = 0
                                        mem[_36052 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36052 + 100] = this.address
                                        mem[_36052 + 132] = 128
                                        mem[_36052 + 164] = mem[_36052]
                                        s = 0
                                        while s < mem[_36052]:
                                            mem[s + _36052 + 196] = mem[s + _36052 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36052] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36052] + _36052 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36052]) + _36052 + 196] = mem[floor32(mem[_36052]) + _36052 + -(mem[_36052] % 32) + 228 len mem[_36052] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36052]) + _36052 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36056 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36056 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36056 + 36] = 0
                                        mem[_36056 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36056 + 100] = this.address
                                        mem[_36056 + 132] = 128
                                        mem[_36056 + 164] = mem[_36056]
                                        s = 0
                                        while s < mem[_36056]:
                                            mem[s + _36056 + 196] = mem[s + _36056 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36056] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36056 + 164 len mem[_36056] + 32]
                                        else:
                                            mem[floor32(mem[_36056]) + _36056 + 196] = mem[floor32(mem[_36056]) + _36056 + -(mem[_36056] % 32) + 228 len mem[_36056] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36056], mem[_36056 + 196 len floor32(mem[_36056]) + 32]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36060 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36060 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36060 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36060 + 68] = 0
                                        mem[_36060 + 100] = this.address
                                        mem[_36060 + 132] = 128
                                        mem[_36060 + 164] = mem[_36060]
                                        s = 0
                                        while s < mem[_36060]:
                                            mem[s + _36060 + 196] = mem[s + _36060 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36060] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36060 + 164 len mem[_36060] + 32]
                                        else:
                                            mem[floor32(mem[_36060]) + _36060 + 196] = mem[floor32(mem[_36060]) + _36060 + -(mem[_36060] % 32) + 228 len mem[_36060] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36060], mem[_36060 + 196 len floor32(mem[_36060]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36064 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36064 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36064 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36064 + 68] = 0
                                        mem[_36064 + 100] = this.address
                                        mem[_36064 + 132] = 128
                                        mem[_36064 + 164] = mem[_36064]
                                        s = 0
                                        while s < mem[_36064]:
                                            mem[s + _36064 + 196] = mem[s + _36064 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36064] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36064] + _36064 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36064]) + _36064 + 196] = mem[floor32(mem[_36064]) + _36064 + -(mem[_36064] % 32) + 228 len mem[_36064] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36064]) + _36064 + -mem[64] + 224]
                    else:
                        if not address(_30777):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15711 + ceil32(return_data.size) + 293] = address(_30777)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15711 + ceil32(return_data.size) + 421] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15711 + ceil32(return_data.size) + 389] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30777) << 96 == address(_30754):
                            mem[_15711 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15711 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30754))
                            staticcall address(_30754).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + ceil32(return_data.size) + 325] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30777) << 96 == address(_30754):
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35332 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35332 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35332 + 36] = 0
                                        mem[_35332 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35332 + 100] = this.address
                                        mem[_35332 + 132] = 128
                                        mem[_35332 + 164] = mem[_35332]
                                        s = 0
                                        while s < mem[_35332]:
                                            mem[s + _35332 + 196] = mem[s + _35332 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35332] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35332] + _35332 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35332]) + _35332 + 196] = mem[floor32(mem[_35332]) + _35332 + -(mem[_35332] % 32) + 228 len mem[_35332] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35332]) + _35332 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35336 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35336 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35336 + 36] = 0
                                        mem[_35336 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35336 + 100] = this.address
                                        mem[_35336 + 132] = 128
                                        mem[_35336 + 164] = mem[_35336]
                                        s = 0
                                        while s < mem[_35336]:
                                            mem[s + _35336 + 196] = mem[s + _35336 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35336] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35336] + _35336 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35336]) + _35336 + 196] = mem[floor32(mem[_35336]) + _35336 + -(mem[_35336] % 32) + 228 len mem[_35336] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35336]) + _35336 + -mem[64] + 224]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35340 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35340 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35340 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35340 + 68] = 0
                                        mem[_35340 + 100] = this.address
                                        mem[_35340 + 132] = 128
                                        mem[_35340 + 164] = mem[_35340]
                                        s = 0
                                        while s < mem[_35340]:
                                            mem[s + _35340 + 196] = mem[s + _35340 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35340] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35340 + 164 len mem[_35340] + 32]
                                        else:
                                            mem[floor32(mem[_35340]) + _35340 + 196] = mem[floor32(mem[_35340]) + _35340 + -(mem[_35340] % 32) + 228 len mem[_35340] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35340], mem[_35340 + 196 len floor32(mem[_35340]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35344 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35344 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35344 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35344 + 68] = 0
                                        mem[_35344 + 100] = this.address
                                        mem[_35344 + 132] = 128
                                        mem[_35344 + 164] = mem[_35344]
                                        s = 0
                                        while s < mem[_35344]:
                                            mem[s + _35344 + 196] = mem[s + _35344 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35344] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35344 + 164 len mem[_35344] + 32]
                                        else:
                                            mem[floor32(mem[_35344]) + _35344 + 196] = mem[floor32(mem[_35344]) + _35344 + -(mem[_35344] % 32) + 228 len mem[_35344] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35344], mem[_35344 + 196 len floor32(mem[_35344]) + 32]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30777) << 96 == address(_30754):
                                    mem[_15711 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36072 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36072 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36072 + 36] = 0
                                        mem[_36072 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36072 + 100] = this.address
                                        mem[_36072 + 132] = 128
                                        mem[_36072 + 164] = mem[_36072]
                                        s = 0
                                        while s < mem[_36072]:
                                            mem[s + _36072 + 196] = mem[s + _36072 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36072] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36072 + 164 len mem[_36072] + 32]
                                        else:
                                            mem[floor32(mem[_36072]) + _36072 + 196] = mem[floor32(mem[_36072]) + _36072 + -(mem[_36072] % 32) + 228 len mem[_36072] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36072], mem[_36072 + 196 len floor32(mem[_36072]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36076 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36076 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36076 + 36] = 0
                                        mem[_36076 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36076 + 100] = this.address
                                        mem[_36076 + 132] = 128
                                        mem[_36076 + 164] = mem[_36076]
                                        s = 0
                                        while s < mem[_36076]:
                                            mem[s + _36076 + 196] = mem[s + _36076 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36076] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36076] + _36076 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36076]) + _36076 + 196] = mem[floor32(mem[_36076]) + _36076 + -(mem[_36076] % 32) + 228 len mem[_36076] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36076]) + _36076 + -mem[64] + 224]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36080 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36080 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36080 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36080 + 68] = 0
                                        mem[_36080 + 100] = this.address
                                        mem[_36080 + 132] = 128
                                        mem[_36080 + 164] = mem[_36080]
                                        s = 0
                                        while s < mem[_36080]:
                                            mem[s + _36080 + 196] = mem[s + _36080 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36080] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36080] + _36080 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36080]) + _36080 + 196] = mem[floor32(mem[_36080]) + _36080 + -(mem[_36080] % 32) + 228 len mem[_36080] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36080]) + _36080 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36084 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36084 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36084 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36084 + 68] = 0
                                        mem[_36084 + 100] = this.address
                                        mem[_36084 + 132] = 128
                                        mem[_36084 + 164] = mem[_36084]
                                        s = 0
                                        while s < mem[_36084]:
                                            mem[s + _36084 + 196] = mem[s + _36084 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36084] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36084 + 164 len mem[_36084] + 32]
                                        else:
                                            mem[floor32(mem[_36084]) + _36084 + 196] = mem[floor32(mem[_36084]) + _36084 + -(mem[_36084] % 32) + 228 len mem[_36084] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36084], mem[_36084 + 196 len floor32(mem[_36084]) + 32]
                        else:
                            mem[_15711 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15711 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30754))
                            staticcall address(_30754).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + ceil32(return_data.size) + 325] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30777) << 96 == address(_30754):
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35350 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35350 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35350 + 36] = 0
                                        mem[_35350 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35350 + 100] = this.address
                                        mem[_35350 + 132] = 128
                                        mem[_35350 + 164] = mem[_35350]
                                        s = 0
                                        while s < mem[_35350]:
                                            mem[s + _35350 + 196] = mem[s + _35350 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35350] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35350 + 164 len mem[_35350] + 32]
                                        else:
                                            mem[floor32(mem[_35350]) + _35350 + 196] = mem[floor32(mem[_35350]) + _35350 + -(mem[_35350] % 32) + 228 len mem[_35350] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35350], mem[_35350 + 196 len floor32(mem[_35350]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35354 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35354 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35354 + 36] = 0
                                        mem[_35354 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35354 + 100] = this.address
                                        mem[_35354 + 132] = 128
                                        mem[_35354 + 164] = mem[_35354]
                                        s = 0
                                        while s < mem[_35354]:
                                            mem[s + _35354 + 196] = mem[s + _35354 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35354] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35354] + _35354 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35354]) + _35354 + 196] = mem[floor32(mem[_35354]) + _35354 + -(mem[_35354] % 32) + 228 len mem[_35354] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35354]) + _35354 + -mem[64] + 224]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35358 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35358 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35358 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35358 + 68] = 0
                                        mem[_35358 + 100] = this.address
                                        mem[_35358 + 132] = 128
                                        mem[_35358 + 164] = mem[_35358]
                                        s = 0
                                        while s < mem[_35358]:
                                            mem[s + _35358 + 196] = mem[s + _35358 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35358] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35358] + _35358 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35358]) + _35358 + 196] = mem[floor32(mem[_35358]) + _35358 + -(mem[_35358] % 32) + 228 len mem[_35358] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35358]) + _35358 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35362 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35362 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35362 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35362 + 68] = 0
                                        mem[_35362 + 100] = this.address
                                        mem[_35362 + 132] = 128
                                        mem[_35362 + 164] = mem[_35362]
                                        s = 0
                                        while s < mem[_35362]:
                                            mem[s + _35362 + 196] = mem[s + _35362 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35362] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35362] + _35362 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35362]) + _35362 + 196] = mem[floor32(mem[_35362]) + _35362 + -(mem[_35362] % 32) + 228 len mem[_35362] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35362]) + _35362 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30777) << 96 == address(_30754):
                                    mem[_15711 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36092 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36092 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36092 + 36] = 0
                                        mem[_36092 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36092 + 100] = this.address
                                        mem[_36092 + 132] = 128
                                        mem[_36092 + 164] = mem[_36092]
                                        s = 0
                                        while s < mem[_36092]:
                                            mem[s + _36092 + 196] = mem[s + _36092 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36092] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36092] + _36092 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36092]) + _36092 + 196] = mem[floor32(mem[_36092]) + _36092 + -(mem[_36092] % 32) + 228 len mem[_36092] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36092]) + _36092 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36096 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36096 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36096 + 36] = 0
                                        mem[_36096 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36096 + 100] = this.address
                                        mem[_36096 + 132] = 128
                                        mem[_36096 + 164] = mem[_36096]
                                        s = 0
                                        while s < mem[_36096]:
                                            mem[s + _36096 + 196] = mem[s + _36096 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36096] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36096 + 164 len mem[_36096] + 32]
                                        else:
                                            mem[floor32(mem[_36096]) + _36096 + 196] = mem[floor32(mem[_36096]) + _36096 + -(mem[_36096] % 32) + 228 len mem[_36096] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36096], mem[_36096 + 196 len floor32(mem[_36096]) + 32]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36100 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36100 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36100 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36100 + 68] = 0
                                        mem[_36100 + 100] = this.address
                                        mem[_36100 + 132] = 128
                                        mem[_36100 + 164] = mem[_36100]
                                        s = 0
                                        while s < mem[_36100]:
                                            mem[s + _36100 + 196] = mem[s + _36100 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36100] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36100 + 164 len mem[_36100] + 32]
                                        else:
                                            mem[floor32(mem[_36100]) + _36100 + 196] = mem[floor32(mem[_36100]) + _36100 + -(mem[_36100] % 32) + 228 len mem[_36100] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36100], mem[_36100 + 196 len floor32(mem[_36100]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36104 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36104 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36104 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36104 + 68] = 0
                                        mem[_36104 + 100] = this.address
                                        mem[_36104 + 132] = 128
                                        mem[_36104 + 164] = mem[_36104]
                                        s = 0
                                        while s < mem[_36104]:
                                            mem[s + _36104 + 196] = mem[s + _36104 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36104] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36104] + _36104 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36104]) + _36104 + 196] = mem[floor32(mem[_36104]) + _36104 + -(mem[_36104] % 32) + 228 len mem[_36104] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36104]) + _36104 + -mem[64] + 224]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = mem[_15711 + ceil32(return_data.size) + 357]
                    continue 
                if s < _15736 * cd[100] / 100:
                    revert with 0, '-,'
                _30774 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                mem[_30774] = ('cd', 36).length
                mem[_30774 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_30774 + (32 * ('cd', 36).length) + 32] = 0
                if ('cd', 36).length < 2:
                    revert with 0, 'PancakeLibrary: INVALID_PATH'
                require ('cd', 36).length <= test266151307()
                _30848 = mem[64]
                mem[mem[64]] = ('cd', 36).length
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                if not ('cd', 36).length:
                    require 0 < mem[_30848]
                    mem[_30848 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30774]
                        _38499 = mem[(32 * idx) + _30774 + 32]
                        require idx + 1 < mem[_30774]
                        _39001 = mem[(32 * idx + 1) + _30774 + 32]
                        if mem[(32 * idx) + _30774 + 44 len 20] == mem[(32 * idx + 1) + _30774 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30774 + 44 len 20] < mem[(32 * idx + 1) + _30774 + 44 len 20]:
                            if not mem[(32 * idx) + _30774 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38499) == address(_38499):
                                require idx < mem[_30848]
                                if mem[(32 * idx) + _30848 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30848 + 32] / 9975 != mem[(32 * idx) + _30848 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                    require idx + 1 < mem[_30848]
                                    mem[(32 * idx + 1) + _30848 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30848 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30848 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                    require idx + 1 < mem[_30848]
                                    mem[(32 * idx + 1) + _30848 + 32] = 9975 * mem[(32 * idx) + _30848 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30774 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_39001) == address(_38499):
                                require idx < mem[_30848]
                                if mem[(32 * idx) + _30848 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30848 + 32] / 9975 != mem[(32 * idx) + _30848 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                    require idx + 1 < mem[_30848]
                                    mem[(32 * idx + 1) + _30848 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30848 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30848 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                    require idx + 1 < mem[_30848]
                                    mem[(32 * idx + 1) + _30848 + 32] = 9975 * mem[(32 * idx) + _30848 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30848]
                        if mem[(32 * idx) + _30848 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30848 + 32] / 9975 != mem[(32 * idx) + _30848 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30848 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30848 + 32])
                            require idx + 1 < mem[_30848]
                            mem[(32 * idx + 1) + _30848 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30848 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30848 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30848 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30848 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30848 + 32])
                            require idx + 1 < mem[_30848]
                            mem[(32 * idx + 1) + _30848 + 32] = 9975 * mem[(32 * idx) + _30848 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30848 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30848]
                    _38998 = mem[_30848 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _38998
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _38998
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39818 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39818] = ('cd', 36).length
                    mem[_39818 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39818 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39818]
                        require idx + 1 < mem[_39818]
                        if mem[(32 * idx) + _39818 + 44 len 20] == mem[(32 * idx + 1) + _39818 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39818 + 44 len 20] < mem[(32 * idx + 1) + _39818 + 44 len 20]:
                            if not mem[(32 * idx) + _39818 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30848]
                            _43006 = mem[(32 * idx + 1) + _30848 + 32]
                            if mem[(32 * idx) + _39818 + 44 len 20] == mem[(32 * idx) + _39818 + 44 len 20]:
                                if idx < mem[_39818] - 2:
                                    _43222 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43222 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43222 + 36] = 0
                                    mem[_43222 + 68] = _43006
                                    mem[_43222 + 100] = address(cd[4])
                                    mem[_43222 + 132] = 128
                                    mem[_43222 + 164] = mem[_43222]
                                    s = 0
                                    while s < mem[_43222]:
                                        mem[s + _43222 + 196] = mem[s + _43222 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43222] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43006, address(cd[4]), 128, mem[_43222 + 164 len mem[_43222] + 32]
                                    else:
                                        mem[floor32(mem[_43222]) + _43222 + 196] = mem[floor32(mem[_43222]) + _43222 + -(mem[_43222] % 32) + 228 len mem[_43222] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43006, address(cd[4]), 128, mem[_43222], mem[_43222 + 196 len floor32(mem[_43222]) + 32]
                                else:
                                    _43226 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43226 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43226 + 36] = 0
                                    mem[_43226 + 68] = _43006
                                    mem[_43226 + 100] = address(cd[68])
                                    mem[_43226 + 132] = 128
                                    mem[_43226 + 164] = mem[_43226]
                                    s = 0
                                    while s < mem[_43226]:
                                        mem[s + _43226 + 196] = mem[s + _43226 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43226] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43006, address(cd[68]), 128, mem[_43226 + 164 len mem[_43226] + 32]
                                    else:
                                        mem[floor32(mem[_43226]) + _43226 + 196] = mem[floor32(mem[_43226]) + _43226 + -(mem[_43226] % 32) + 228 len mem[_43226] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43006, address(cd[68]), 128, mem[_43226], mem[_43226 + 196 len floor32(mem[_43226]) + 32]
                            else:
                                if idx < mem[_39818] - 2:
                                    _43230 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43230 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43230 + 36] = _43006
                                    mem[_43230 + 68] = 0
                                    mem[_43230 + 100] = address(cd[4])
                                    mem[_43230 + 132] = 128
                                    mem[_43230 + 164] = mem[_43230]
                                    s = 0
                                    while s < mem[_43230]:
                                        mem[s + _43230 + 196] = mem[s + _43230 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43230] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43006, 0, address(cd[4]), 128, mem[_43230 + 164 len mem[_43230] + 32]
                                    else:
                                        mem[floor32(mem[_43230]) + _43230 + 196] = mem[floor32(mem[_43230]) + _43230 + -(mem[_43230] % 32) + 228 len mem[_43230] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43006, 0, address(cd[4]), 128, mem[_43230], mem[_43230 + 196 len floor32(mem[_43230]) + 32]
                                else:
                                    _43234 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43234 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43234 + 36] = _43006
                                    mem[_43234 + 68] = 0
                                    mem[_43234 + 100] = address(cd[68])
                                    mem[_43234 + 132] = 128
                                    mem[_43234 + 164] = mem[_43234]
                                    s = 0
                                    while s < mem[_43234]:
                                        mem[s + _43234 + 196] = mem[s + _43234 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43234] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43006, 0, address(cd[68]), 128, mem[_43234 + 164 len mem[_43234] + 32]
                                    else:
                                        mem[floor32(mem[_43234]) + _43234 + 196] = mem[floor32(mem[_43234]) + _43234 + -(mem[_43234] % 32) + 228 len mem[_43234] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43006, 0, address(cd[68]), 128, mem[_43234], mem[_43234 + 196 len floor32(mem[_43234]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39818 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30848]
                            _43007 = mem[(32 * idx + 1) + _30848 + 32]
                            if mem[(32 * idx) + _39818 + 44 len 20] == mem[(32 * idx + 1) + _39818 + 44 len 20]:
                                if idx < mem[_39818] - 2:
                                    _43238 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43238 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43238 + 36] = 0
                                    mem[_43238 + 68] = _43007
                                    mem[_43238 + 100] = address(cd[4])
                                    mem[_43238 + 132] = 128
                                    mem[_43238 + 164] = mem[_43238]
                                    s = 0
                                    while s < mem[_43238]:
                                        mem[s + _43238 + 196] = mem[s + _43238 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43238] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43007, address(cd[4]), 128, mem[_43238 + 164 len mem[_43238] + 32]
                                    else:
                                        mem[floor32(mem[_43238]) + _43238 + 196] = mem[floor32(mem[_43238]) + _43238 + -(mem[_43238] % 32) + 228 len mem[_43238] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43007, address(cd[4]), 128, mem[_43238], mem[_43238 + 196 len floor32(mem[_43238]) + 32]
                                else:
                                    _43242 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43242 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43242 + 36] = 0
                                    mem[_43242 + 68] = _43007
                                    mem[_43242 + 100] = address(cd[68])
                                    mem[_43242 + 132] = 128
                                    mem[_43242 + 164] = mem[_43242]
                                    s = 0
                                    while s < mem[_43242]:
                                        mem[s + _43242 + 196] = mem[s + _43242 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43242] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43007, address(cd[68]), 128, mem[_43242 + 164 len mem[_43242] + 32]
                                    else:
                                        mem[floor32(mem[_43242]) + _43242 + 196] = mem[floor32(mem[_43242]) + _43242 + -(mem[_43242] % 32) + 228 len mem[_43242] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43007, address(cd[68]), 128, mem[_43242], mem[_43242 + 196 len floor32(mem[_43242]) + 32]
                            else:
                                if idx < mem[_39818] - 2:
                                    _43246 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43246 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43246 + 36] = _43007
                                    mem[_43246 + 68] = 0
                                    mem[_43246 + 100] = address(cd[4])
                                    mem[_43246 + 132] = 128
                                    mem[_43246 + 164] = mem[_43246]
                                    s = 0
                                    while s < mem[_43246]:
                                        mem[s + _43246 + 196] = mem[s + _43246 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43246] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43007, 0, address(cd[4]), 128, mem[_43246 + 164 len mem[_43246] + 32]
                                    else:
                                        mem[floor32(mem[_43246]) + _43246 + 196] = mem[floor32(mem[_43246]) + _43246 + -(mem[_43246] % 32) + 228 len mem[_43246] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43007, 0, address(cd[4]), 128, mem[_43246], mem[_43246 + 196 len floor32(mem[_43246]) + 32]
                                else:
                                    _43250 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43250 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43250 + 36] = _43007
                                    mem[_43250 + 68] = 0
                                    mem[_43250 + 100] = address(cd[68])
                                    mem[_43250 + 132] = 128
                                    mem[_43250 + 164] = mem[_43250]
                                    s = 0
                                    while s < mem[_43250]:
                                        mem[s + _43250 + 196] = mem[s + _43250 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43250] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43007, 0, address(cd[68]), 128, mem[_43250 + 164 len mem[_43250] + 32]
                                    else:
                                        mem[floor32(mem[_43250]) + _43250 + 196] = mem[floor32(mem[_43250]) + _43250 + -(mem[_43250] % 32) + 228 len mem[_43250] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43007, 0, address(cd[68]), 128, mem[_43250], mem[_43250 + 196 len floor32(mem[_43250]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                else:
                    mem[_30848 + 32 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
                    require 0 < mem[_30848]
                    mem[_30848 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30774]
                        _38502 = mem[(32 * idx) + _30774 + 32]
                        require idx + 1 < mem[_30774]
                        _39005 = mem[(32 * idx + 1) + _30774 + 32]
                        if mem[(32 * idx) + _30774 + 44 len 20] == mem[(32 * idx + 1) + _30774 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30774 + 44 len 20] < mem[(32 * idx + 1) + _30774 + 44 len 20]:
                            if not mem[(32 * idx) + _30774 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38502) == address(_38502):
                                require idx < mem[_30848]
                                if mem[(32 * idx) + _30848 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30848 + 32] / 9975 != mem[(32 * idx) + _30848 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                    require idx + 1 < mem[_30848]
                                    mem[(32 * idx + 1) + _30848 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30848 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30848 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                    require idx + 1 < mem[_30848]
                                    mem[(32 * idx + 1) + _30848 + 32] = 9975 * mem[(32 * idx) + _30848 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30774 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_39005) == address(_38502):
                                require idx < mem[_30848]
                                if mem[(32 * idx) + _30848 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30848 + 32] / 9975 != mem[(32 * idx) + _30848 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                    require idx + 1 < mem[_30848]
                                    mem[(32 * idx + 1) + _30848 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30848 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30848 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                    require idx + 1 < mem[_30848]
                                    mem[(32 * idx + 1) + _30848 + 32] = 9975 * mem[(32 * idx) + _30848 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30848 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30848]
                        if mem[(32 * idx) + _30848 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30848 + 32] / 9975 != mem[(32 * idx) + _30848 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30848 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30848 + 32])
                            require idx + 1 < mem[_30848]
                            mem[(32 * idx + 1) + _30848 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30848 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30848 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30848 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30848 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30848 + 32])
                            require idx + 1 < mem[_30848]
                            mem[(32 * idx + 1) + _30848 + 32] = 9975 * mem[(32 * idx) + _30848 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30848 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30848]
                    _39002 = mem[_30848 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _39002
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _39002
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39819 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39819] = ('cd', 36).length
                    mem[_39819 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39819 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39819]
                        require idx + 1 < mem[_39819]
                        if mem[(32 * idx) + _39819 + 44 len 20] == mem[(32 * idx + 1) + _39819 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39819 + 44 len 20] < mem[(32 * idx + 1) + _39819 + 44 len 20]:
                            if not mem[(32 * idx) + _39819 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30848]
                            _43008 = mem[(32 * idx + 1) + _30848 + 32]
                            if mem[(32 * idx) + _39819 + 44 len 20] == mem[(32 * idx) + _39819 + 44 len 20]:
                                if idx < mem[_39819] - 2:
                                    _43254 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43254 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43254 + 36] = 0
                                    mem[_43254 + 68] = _43008
                                    mem[_43254 + 100] = address(cd[4])
                                    mem[_43254 + 132] = 128
                                    mem[_43254 + 164] = mem[_43254]
                                    s = 0
                                    while s < mem[_43254]:
                                        mem[s + _43254 + 196] = mem[s + _43254 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43254] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43008, address(cd[4]), 128, mem[_43254 + 164 len mem[_43254] + 32]
                                    else:
                                        mem[floor32(mem[_43254]) + _43254 + 196] = mem[floor32(mem[_43254]) + _43254 + -(mem[_43254] % 32) + 228 len mem[_43254] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43008, address(cd[4]), 128, mem[_43254], mem[_43254 + 196 len floor32(mem[_43254]) + 32]
                                else:
                                    _43258 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43258 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43258 + 36] = 0
                                    mem[_43258 + 68] = _43008
                                    mem[_43258 + 100] = address(cd[68])
                                    mem[_43258 + 132] = 128
                                    mem[_43258 + 164] = mem[_43258]
                                    s = 0
                                    while s < mem[_43258]:
                                        mem[s + _43258 + 196] = mem[s + _43258 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43258] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43008, address(cd[68]), 128, mem[_43258 + 164 len mem[_43258] + 32]
                                    else:
                                        mem[floor32(mem[_43258]) + _43258 + 196] = mem[floor32(mem[_43258]) + _43258 + -(mem[_43258] % 32) + 228 len mem[_43258] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43008, address(cd[68]), 128, mem[_43258], mem[_43258 + 196 len floor32(mem[_43258]) + 32]
                            else:
                                if idx < mem[_39819] - 2:
                                    _43262 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43262 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43262 + 36] = _43008
                                    mem[_43262 + 68] = 0
                                    mem[_43262 + 100] = address(cd[4])
                                    mem[_43262 + 132] = 128
                                    mem[_43262 + 164] = mem[_43262]
                                    s = 0
                                    while s < mem[_43262]:
                                        mem[s + _43262 + 196] = mem[s + _43262 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43262] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43008, 0, address(cd[4]), 128, mem[_43262 + 164 len mem[_43262] + 32]
                                    else:
                                        mem[floor32(mem[_43262]) + _43262 + 196] = mem[floor32(mem[_43262]) + _43262 + -(mem[_43262] % 32) + 228 len mem[_43262] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43008, 0, address(cd[4]), 128, mem[_43262], mem[_43262 + 196 len floor32(mem[_43262]) + 32]
                                else:
                                    _43266 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43266 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43266 + 36] = _43008
                                    mem[_43266 + 68] = 0
                                    mem[_43266 + 100] = address(cd[68])
                                    mem[_43266 + 132] = 128
                                    mem[_43266 + 164] = mem[_43266]
                                    s = 0
                                    while s < mem[_43266]:
                                        mem[s + _43266 + 196] = mem[s + _43266 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43266] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43008, 0, address(cd[68]), 128, mem[_43266 + 164 len mem[_43266] + 32]
                                    else:
                                        mem[floor32(mem[_43266]) + _43266 + 196] = mem[floor32(mem[_43266]) + _43266 + -(mem[_43266] % 32) + 228 len mem[_43266] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43008, 0, address(cd[68]), 128, mem[_43266], mem[_43266 + 196 len floor32(mem[_43266]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39819 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30848]
                            _43009 = mem[(32 * idx + 1) + _30848 + 32]
                            if mem[(32 * idx) + _39819 + 44 len 20] == mem[(32 * idx + 1) + _39819 + 44 len 20]:
                                if idx < mem[_39819] - 2:
                                    _43270 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43270 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43270 + 36] = 0
                                    mem[_43270 + 68] = _43009
                                    mem[_43270 + 100] = address(cd[4])
                                    mem[_43270 + 132] = 128
                                    mem[_43270 + 164] = mem[_43270]
                                    s = 0
                                    while s < mem[_43270]:
                                        mem[s + _43270 + 196] = mem[s + _43270 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43270] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43009, address(cd[4]), 128, mem[_43270 + 164 len mem[_43270] + 32]
                                    else:
                                        mem[floor32(mem[_43270]) + _43270 + 196] = mem[floor32(mem[_43270]) + _43270 + -(mem[_43270] % 32) + 228 len mem[_43270] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43009, address(cd[4]), 128, mem[_43270], mem[_43270 + 196 len floor32(mem[_43270]) + 32]
                                else:
                                    _43274 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43274 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43274 + 36] = 0
                                    mem[_43274 + 68] = _43009
                                    mem[_43274 + 100] = address(cd[68])
                                    mem[_43274 + 132] = 128
                                    mem[_43274 + 164] = mem[_43274]
                                    s = 0
                                    while s < mem[_43274]:
                                        mem[s + _43274 + 196] = mem[s + _43274 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43274] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43009, address(cd[68]), 128, mem[_43274 + 164 len mem[_43274] + 32]
                                    else:
                                        mem[floor32(mem[_43274]) + _43274 + 196] = mem[floor32(mem[_43274]) + _43274 + -(mem[_43274] % 32) + 228 len mem[_43274] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43009, address(cd[68]), 128, mem[_43274], mem[_43274 + 196 len floor32(mem[_43274]) + 32]
                            else:
                                if idx < mem[_39819] - 2:
                                    _43278 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43278 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43278 + 36] = _43009
                                    mem[_43278 + 68] = 0
                                    mem[_43278 + 100] = address(cd[4])
                                    mem[_43278 + 132] = 128
                                    mem[_43278 + 164] = mem[_43278]
                                    s = 0
                                    while s < mem[_43278]:
                                        mem[s + _43278 + 196] = mem[s + _43278 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43278] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43009, 0, address(cd[4]), 128, mem[_43278 + 164 len mem[_43278] + 32]
                                    else:
                                        mem[floor32(mem[_43278]) + _43278 + 196] = mem[floor32(mem[_43278]) + _43278 + -(mem[_43278] % 32) + 228 len mem[_43278] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43009, 0, address(cd[4]), 128, mem[_43278], mem[_43278 + 196 len floor32(mem[_43278]) + 32]
                                else:
                                    _43282 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43282 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43282 + 36] = _43009
                                    mem[_43282 + 68] = 0
                                    mem[_43282 + 100] = address(cd[68])
                                    mem[_43282 + 132] = 128
                                    mem[_43282 + 164] = mem[_43282]
                                    s = 0
                                    while s < mem[_43282]:
                                        mem[s + _43282 + 196] = mem[s + _43282 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43282] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43009, 0, address(cd[68]), 128, mem[_43282 + 164 len mem[_43282] + 32]
                                    else:
                                        mem[floor32(mem[_43282]) + _43282 + 196] = mem[floor32(mem[_43282]) + _43282 + -(mem[_43282] % 32) + 228 len mem[_43282] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43009, 0, address(cd[68]), 128, mem[_43282], mem[_43282 + 196 len floor32(mem[_43282]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
            else:
                require return_data.size >= 32
                if not mem[_15711 + 228]:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                mem[64] = _15711 + ceil32(return_data.size) + 581
                mem[_15711 + ceil32(return_data.size) + 197] = 0
                mem[_15711 + ceil32(return_data.size) + 229] = 0
                mem[_15711 + ceil32(return_data.size) + 261] = 0
                mem[_15711 + ceil32(return_data.size) + 293] = 0
                mem[_15711 + ceil32(return_data.size) + 325] = 0
                mem[_15711 + ceil32(return_data.size) + 357] = 0
                mem[_15711 + ceil32(return_data.size) + 389] = 0
                mem[_15711 + ceil32(return_data.size) + 421] = 0
                mem[_15711 + ceil32(return_data.size) + 453] = 0
                mem[_15711 + ceil32(return_data.size) + 485] = 0
                mem[_15711 + ceil32(return_data.size) + 517] = 0
                mem[_15711 + ceil32(return_data.size) + 549] = 0
                _30737 = mem[_15711]
                idx = 0
                s = 0
                while idx < _30737 - 1:
                    require idx < mem[_15711]
                    _30756 = mem[(32 * idx) + _15711 + 32]
                    require idx + 1 < mem[_15711]
                    _30781 = mem[(32 * idx + 1) + _15711 + 32]
                    mem[_15711 + ceil32(return_data.size) + 261] = mem[(32 * idx + 1) + _15711 + 44 len 20]
                    mem[_15711 + ceil32(return_data.size) + 229] = address(_30756)
                    if address(_30756) == address(_30781):
                        revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if address(_30756) < address(_30781):
                        if not address(_30756):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15711 + ceil32(return_data.size) + 293] = address(_30756)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15711 + ceil32(return_data.size) + 421] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15711 + ceil32(return_data.size) + 389] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30756) << 96 == address(_30756):
                            mem[_15711 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15711 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30756))
                            staticcall address(_30756).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + ceil32(return_data.size) + 325] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30756) << 96 == address(_30756):
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35376 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35376 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35376 + 36] = 0
                                        mem[_35376 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35376 + 100] = this.address
                                        mem[_35376 + 132] = 128
                                        mem[_35376 + 164] = mem[_35376]
                                        s = 0
                                        while s < mem[_35376]:
                                            mem[s + _35376 + 196] = mem[s + _35376 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35376] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35376 + 164 len mem[_35376] + 32]
                                        else:
                                            mem[floor32(mem[_35376]) + _35376 + 196] = mem[floor32(mem[_35376]) + _35376 + -(mem[_35376] % 32) + 228 len mem[_35376] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35376], mem[_35376 + 196 len floor32(mem[_35376]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35380 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35380 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35380 + 36] = 0
                                        mem[_35380 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35380 + 100] = this.address
                                        mem[_35380 + 132] = 128
                                        mem[_35380 + 164] = mem[_35380]
                                        s = 0
                                        while s < mem[_35380]:
                                            mem[s + _35380 + 196] = mem[s + _35380 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35380] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35380 + 164 len mem[_35380] + 32]
                                        else:
                                            mem[floor32(mem[_35380]) + _35380 + 196] = mem[floor32(mem[_35380]) + _35380 + -(mem[_35380] % 32) + 228 len mem[_35380] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35380], mem[_35380 + 196 len floor32(mem[_35380]) + 32]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35384 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35384 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35384 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35384 + 68] = 0
                                        mem[_35384 + 100] = this.address
                                        mem[_35384 + 132] = 128
                                        mem[_35384 + 164] = mem[_35384]
                                        s = 0
                                        while s < mem[_35384]:
                                            mem[s + _35384 + 196] = mem[s + _35384 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35384] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35384 + 164 len mem[_35384] + 32]
                                        else:
                                            mem[floor32(mem[_35384]) + _35384 + 196] = mem[floor32(mem[_35384]) + _35384 + -(mem[_35384] % 32) + 228 len mem[_35384] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35384], mem[_35384 + 196 len floor32(mem[_35384]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35388 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35388 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35388 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35388 + 68] = 0
                                        mem[_35388 + 100] = this.address
                                        mem[_35388 + 132] = 128
                                        mem[_35388 + 164] = mem[_35388]
                                        s = 0
                                        while s < mem[_35388]:
                                            mem[s + _35388 + 196] = mem[s + _35388 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35388] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35388] + _35388 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35388]) + _35388 + 196] = mem[floor32(mem[_35388]) + _35388 + -(mem[_35388] % 32) + 228 len mem[_35388] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35388]) + _35388 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30756) << 96 == address(_30756):
                                    mem[_15711 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36124 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36124 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36124 + 36] = 0
                                        mem[_36124 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36124 + 100] = this.address
                                        mem[_36124 + 132] = 128
                                        mem[_36124 + 164] = mem[_36124]
                                        s = 0
                                        while s < mem[_36124]:
                                            mem[s + _36124 + 196] = mem[s + _36124 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36124] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36124] + _36124 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36124]) + _36124 + 196] = mem[floor32(mem[_36124]) + _36124 + -(mem[_36124] % 32) + 228 len mem[_36124] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36124]) + _36124 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36128 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36128 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36128 + 36] = 0
                                        mem[_36128 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36128 + 100] = this.address
                                        mem[_36128 + 132] = 128
                                        mem[_36128 + 164] = mem[_36128]
                                        s = 0
                                        while s < mem[_36128]:
                                            mem[s + _36128 + 196] = mem[s + _36128 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36128] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36128] + _36128 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36128]) + _36128 + 196] = mem[floor32(mem[_36128]) + _36128 + -(mem[_36128] % 32) + 228 len mem[_36128] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36128]) + _36128 + -mem[64] + 224]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36132 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36132 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36132 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36132 + 68] = 0
                                        mem[_36132 + 100] = this.address
                                        mem[_36132 + 132] = 128
                                        mem[_36132 + 164] = mem[_36132]
                                        s = 0
                                        while s < mem[_36132]:
                                            mem[s + _36132 + 196] = mem[s + _36132 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36132] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36132 + 164 len mem[_36132] + 32]
                                        else:
                                            mem[floor32(mem[_36132]) + _36132 + 196] = mem[floor32(mem[_36132]) + _36132 + -(mem[_36132] % 32) + 228 len mem[_36132] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36132], mem[_36132 + 196 len floor32(mem[_36132]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36136 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36136 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36136 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36136 + 68] = 0
                                        mem[_36136 + 100] = this.address
                                        mem[_36136 + 132] = 128
                                        mem[_36136 + 164] = mem[_36136]
                                        s = 0
                                        while s < mem[_36136]:
                                            mem[s + _36136 + 196] = mem[s + _36136 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36136] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36136] + _36136 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36136]) + _36136 + 196] = mem[floor32(mem[_36136]) + _36136 + -(mem[_36136] % 32) + 228 len mem[_36136] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36136]) + _36136 + -mem[64] + 224]
                        else:
                            mem[_15711 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15711 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30756))
                            staticcall address(_30756).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + ceil32(return_data.size) + 325] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30756) << 96 == address(_30756):
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35394 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35394 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35394 + 36] = 0
                                        mem[_35394 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35394 + 100] = this.address
                                        mem[_35394 + 132] = 128
                                        mem[_35394 + 164] = mem[_35394]
                                        s = 0
                                        while s < mem[_35394]:
                                            mem[s + _35394 + 196] = mem[s + _35394 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35394] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35394 + 164 len mem[_35394] + 32]
                                        else:
                                            mem[floor32(mem[_35394]) + _35394 + 196] = mem[floor32(mem[_35394]) + _35394 + -(mem[_35394] % 32) + 228 len mem[_35394] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35394], mem[_35394 + 196 len floor32(mem[_35394]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35398 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35398 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35398 + 36] = 0
                                        mem[_35398 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35398 + 100] = this.address
                                        mem[_35398 + 132] = 128
                                        mem[_35398 + 164] = mem[_35398]
                                        s = 0
                                        while s < mem[_35398]:
                                            mem[s + _35398 + 196] = mem[s + _35398 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35398] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35398] + _35398 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35398]) + _35398 + 196] = mem[floor32(mem[_35398]) + _35398 + -(mem[_35398] % 32) + 228 len mem[_35398] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35398]) + _35398 + -mem[64] + 224]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35402 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35402 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35402 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35402 + 68] = 0
                                        mem[_35402 + 100] = this.address
                                        mem[_35402 + 132] = 128
                                        mem[_35402 + 164] = mem[_35402]
                                        s = 0
                                        while s < mem[_35402]:
                                            mem[s + _35402 + 196] = mem[s + _35402 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35402] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35402 + 164 len mem[_35402] + 32]
                                        else:
                                            mem[floor32(mem[_35402]) + _35402 + 196] = mem[floor32(mem[_35402]) + _35402 + -(mem[_35402] % 32) + 228 len mem[_35402] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35402], mem[_35402 + 196 len floor32(mem[_35402]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35406 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35406 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35406 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35406 + 68] = 0
                                        mem[_35406 + 100] = this.address
                                        mem[_35406 + 132] = 128
                                        mem[_35406 + 164] = mem[_35406]
                                        s = 0
                                        while s < mem[_35406]:
                                            mem[s + _35406 + 196] = mem[s + _35406 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35406] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35406 + 164 len mem[_35406] + 32]
                                        else:
                                            mem[floor32(mem[_35406]) + _35406 + 196] = mem[floor32(mem[_35406]) + _35406 + -(mem[_35406] % 32) + 228 len mem[_35406] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35406], mem[_35406 + 196 len floor32(mem[_35406]) + 32]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30756) << 96 == address(_30756):
                                    mem[_15711 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36144 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36144 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36144 + 36] = 0
                                        mem[_36144 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36144 + 100] = this.address
                                        mem[_36144 + 132] = 128
                                        mem[_36144 + 164] = mem[_36144]
                                        s = 0
                                        while s < mem[_36144]:
                                            mem[s + _36144 + 196] = mem[s + _36144 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36144] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36144 + 164 len mem[_36144] + 32]
                                        else:
                                            mem[floor32(mem[_36144]) + _36144 + 196] = mem[floor32(mem[_36144]) + _36144 + -(mem[_36144] % 32) + 228 len mem[_36144] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36144], mem[_36144 + 196 len floor32(mem[_36144]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36148 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36148 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36148 + 36] = 0
                                        mem[_36148 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36148 + 100] = this.address
                                        mem[_36148 + 132] = 128
                                        mem[_36148 + 164] = mem[_36148]
                                        s = 0
                                        while s < mem[_36148]:
                                            mem[s + _36148 + 196] = mem[s + _36148 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36148] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36148 + 164 len mem[_36148] + 32]
                                        else:
                                            mem[floor32(mem[_36148]) + _36148 + 196] = mem[floor32(mem[_36148]) + _36148 + -(mem[_36148] % 32) + 228 len mem[_36148] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36148], mem[_36148 + 196 len floor32(mem[_36148]) + 32]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36152 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36152 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36152 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36152 + 68] = 0
                                        mem[_36152 + 100] = this.address
                                        mem[_36152 + 132] = 128
                                        mem[_36152 + 164] = mem[_36152]
                                        s = 0
                                        while s < mem[_36152]:
                                            mem[s + _36152 + 196] = mem[s + _36152 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36152] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36152] + _36152 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36152]) + _36152 + 196] = mem[floor32(mem[_36152]) + _36152 + -(mem[_36152] % 32) + 228 len mem[_36152] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36152]) + _36152 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36156 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36156 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36156 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36156 + 68] = 0
                                        mem[_36156 + 100] = this.address
                                        mem[_36156 + 132] = 128
                                        mem[_36156 + 164] = mem[_36156]
                                        s = 0
                                        while s < mem[_36156]:
                                            mem[s + _36156 + 196] = mem[s + _36156 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36156] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36156 + 164 len mem[_36156] + 32]
                                        else:
                                            mem[floor32(mem[_36156]) + _36156 + 196] = mem[floor32(mem[_36156]) + _36156 + -(mem[_36156] % 32) + 228 len mem[_36156] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36156], mem[_36156 + 196 len floor32(mem[_36156]) + 32]
                    else:
                        if not address(_30781):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15711 + ceil32(return_data.size) + 293] = address(_30781)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15711 + ceil32(return_data.size) + 421] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15711 + ceil32(return_data.size) + 389] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30781) << 96 == address(_30756):
                            mem[_15711 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15711 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30756))
                            staticcall address(_30756).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + ceil32(return_data.size) + 325] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30781) << 96 == address(_30756):
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35412 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35412 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35412 + 36] = 0
                                        mem[_35412 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35412 + 100] = this.address
                                        mem[_35412 + 132] = 128
                                        mem[_35412 + 164] = mem[_35412]
                                        s = 0
                                        while s < mem[_35412]:
                                            mem[s + _35412 + 196] = mem[s + _35412 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35412] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35412 + 164 len mem[_35412] + 32]
                                        else:
                                            mem[floor32(mem[_35412]) + _35412 + 196] = mem[floor32(mem[_35412]) + _35412 + -(mem[_35412] % 32) + 228 len mem[_35412] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35412], mem[_35412 + 196 len floor32(mem[_35412]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35416 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35416 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35416 + 36] = 0
                                        mem[_35416 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35416 + 100] = this.address
                                        mem[_35416 + 132] = 128
                                        mem[_35416 + 164] = mem[_35416]
                                        s = 0
                                        while s < mem[_35416]:
                                            mem[s + _35416 + 196] = mem[s + _35416 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35416] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35416] + _35416 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35416]) + _35416 + 196] = mem[floor32(mem[_35416]) + _35416 + -(mem[_35416] % 32) + 228 len mem[_35416] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35416]) + _35416 + -mem[64] + 224]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35420 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35420 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35420 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35420 + 68] = 0
                                        mem[_35420 + 100] = this.address
                                        mem[_35420 + 132] = 128
                                        mem[_35420 + 164] = mem[_35420]
                                        s = 0
                                        while s < mem[_35420]:
                                            mem[s + _35420 + 196] = mem[s + _35420 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35420] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35420] + _35420 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35420]) + _35420 + 196] = mem[floor32(mem[_35420]) + _35420 + -(mem[_35420] % 32) + 228 len mem[_35420] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35420]) + _35420 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35424 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35424 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35424 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35424 + 68] = 0
                                        mem[_35424 + 100] = this.address
                                        mem[_35424 + 132] = 128
                                        mem[_35424 + 164] = mem[_35424]
                                        s = 0
                                        while s < mem[_35424]:
                                            mem[s + _35424 + 196] = mem[s + _35424 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35424] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35424] + _35424 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35424]) + _35424 + 196] = mem[floor32(mem[_35424]) + _35424 + -(mem[_35424] % 32) + 228 len mem[_35424] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35424]) + _35424 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30781) << 96 == address(_30756):
                                    mem[_15711 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36164 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36164 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36164 + 36] = 0
                                        mem[_36164 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36164 + 100] = this.address
                                        mem[_36164 + 132] = 128
                                        mem[_36164 + 164] = mem[_36164]
                                        s = 0
                                        while s < mem[_36164]:
                                            mem[s + _36164 + 196] = mem[s + _36164 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36164] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36164 + 164 len mem[_36164] + 32]
                                        else:
                                            mem[floor32(mem[_36164]) + _36164 + 196] = mem[floor32(mem[_36164]) + _36164 + -(mem[_36164] % 32) + 228 len mem[_36164] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36164], mem[_36164 + 196 len floor32(mem[_36164]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36168 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36168 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36168 + 36] = 0
                                        mem[_36168 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36168 + 100] = this.address
                                        mem[_36168 + 132] = 128
                                        mem[_36168 + 164] = mem[_36168]
                                        s = 0
                                        while s < mem[_36168]:
                                            mem[s + _36168 + 196] = mem[s + _36168 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36168] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36168] + _36168 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36168]) + _36168 + 196] = mem[floor32(mem[_36168]) + _36168 + -(mem[_36168] % 32) + 228 len mem[_36168] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36168]) + _36168 + -mem[64] + 224]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36172 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36172 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36172 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36172 + 68] = 0
                                        mem[_36172 + 100] = this.address
                                        mem[_36172 + 132] = 128
                                        mem[_36172 + 164] = mem[_36172]
                                        s = 0
                                        while s < mem[_36172]:
                                            mem[s + _36172 + 196] = mem[s + _36172 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36172] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36172] + _36172 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36172]) + _36172 + 196] = mem[floor32(mem[_36172]) + _36172 + -(mem[_36172] % 32) + 228 len mem[_36172] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36172]) + _36172 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36176 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36176 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36176 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36176 + 68] = 0
                                        mem[_36176 + 100] = this.address
                                        mem[_36176 + 132] = 128
                                        mem[_36176 + 164] = mem[_36176]
                                        s = 0
                                        while s < mem[_36176]:
                                            mem[s + _36176 + 196] = mem[s + _36176 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36176] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36176 + 164 len mem[_36176] + 32]
                                        else:
                                            mem[floor32(mem[_36176]) + _36176 + 196] = mem[floor32(mem[_36176]) + _36176 + -(mem[_36176] % 32) + 228 len mem[_36176] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36176], mem[_36176 + 196 len floor32(mem[_36176]) + 32]
                        else:
                            mem[_15711 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15711 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30756))
                            staticcall address(_30756).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15711 + ceil32(return_data.size) + 325] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30781) << 96 == address(_30756):
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35430 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35430 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35430 + 36] = 0
                                        mem[_35430 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35430 + 100] = this.address
                                        mem[_35430 + 132] = 128
                                        mem[_35430 + 164] = mem[_35430]
                                        s = 0
                                        while s < mem[_35430]:
                                            mem[s + _35430 + 196] = mem[s + _35430 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35430] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35430] + _35430 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35430]) + _35430 + 196] = mem[floor32(mem[_35430]) + _35430 + -(mem[_35430] % 32) + 228 len mem[_35430] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35430]) + _35430 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35434 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35434 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35434 + 36] = 0
                                        mem[_35434 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35434 + 100] = this.address
                                        mem[_35434 + 132] = 128
                                        mem[_35434 + 164] = mem[_35434]
                                        s = 0
                                        while s < mem[_35434]:
                                            mem[s + _35434 + 196] = mem[s + _35434 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35434] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35434 + 164 len mem[_35434] + 32]
                                        else:
                                            mem[floor32(mem[_35434]) + _35434 + 196] = mem[floor32(mem[_35434]) + _35434 + -(mem[_35434] % 32) + 228 len mem[_35434] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35434], mem[_35434 + 196 len floor32(mem[_35434]) + 32]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35438 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35438 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35438 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35438 + 68] = 0
                                        mem[_35438 + 100] = this.address
                                        mem[_35438 + 132] = 128
                                        mem[_35438 + 164] = mem[_35438]
                                        s = 0
                                        while s < mem[_35438]:
                                            mem[s + _35438 + 196] = mem[s + _35438 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35438] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35438] + _35438 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35438]) + _35438 + 196] = mem[floor32(mem[_35438]) + _35438 + -(mem[_35438] % 32) + 228 len mem[_35438] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35438]) + _35438 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _35442 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35442 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35442 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35442 + 68] = 0
                                        mem[_35442 + 100] = this.address
                                        mem[_35442 + 132] = 128
                                        mem[_35442 + 164] = mem[_35442]
                                        s = 0
                                        while s < mem[_35442]:
                                            mem[s + _35442 + 196] = mem[s + _35442 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35442] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35442] + _35442 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35442]) + _35442 + 196] = mem[floor32(mem[_35442]) + _35442 + -(mem[_35442] % 32) + 228 len mem[_35442] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35442]) + _35442 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15711 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30781) << 96 == address(_30756):
                                    mem[_15711 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15711 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36184 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36184 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36184 + 36] = 0
                                        mem[_36184 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36184 + 100] = this.address
                                        mem[_36184 + 132] = 128
                                        mem[_36184 + 164] = mem[_36184]
                                        s = 0
                                        while s < mem[_36184]:
                                            mem[s + _36184 + 196] = mem[s + _36184 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36184] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36184 + 164 len mem[_36184] + 32]
                                        else:
                                            mem[floor32(mem[_36184]) + _36184 + 196] = mem[floor32(mem[_36184]) + _36184 + -(mem[_36184] % 32) + 228 len mem[_36184] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36184], mem[_36184 + 196 len floor32(mem[_36184]) + 32]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36188 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36188 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36188 + 36] = 0
                                        mem[_36188 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36188 + 100] = this.address
                                        mem[_36188 + 132] = 128
                                        mem[_36188 + 164] = mem[_36188]
                                        s = 0
                                        while s < mem[_36188]:
                                            mem[s + _36188 + 196] = mem[s + _36188 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36188] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36188] + _36188 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36188]) + _36188 + 196] = mem[floor32(mem[_36188]) + _36188 + -(mem[_36188] % 32) + 228 len mem[_36188] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36188]) + _36188 + -mem[64] + 224]
                                else:
                                    mem[_15711 + ceil32(return_data.size) + 549] = 0
                                    mem[_15711 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15711] - 2:
                                        mem[_15711 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36192 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36192 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36192 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36192 + 68] = 0
                                        mem[_36192 + 100] = this.address
                                        mem[_36192 + 132] = 128
                                        mem[_36192 + 164] = mem[_36192]
                                        s = 0
                                        while s < mem[_36192]:
                                            mem[s + _36192 + 196] = mem[s + _36192 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36192] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36192] + _36192 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36192]) + _36192 + 196] = mem[floor32(mem[_36192]) + _36192 + -(mem[_36192] % 32) + 228 len mem[_36192] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36192]) + _36192 + -mem[64] + 224]
                                    else:
                                        mem[_15711 + ceil32(return_data.size) + 197] = this.address
                                        _36196 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36196 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36196 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36196 + 68] = 0
                                        mem[_36196 + 100] = this.address
                                        mem[_36196 + 132] = 128
                                        mem[_36196 + 164] = mem[_36196]
                                        s = 0
                                        while s < mem[_36196]:
                                            mem[s + _36196 + 196] = mem[s + _36196 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36196] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36196] + _36196 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36196]) + _36196 + 196] = mem[floor32(mem[_36196]) + _36196 + -(mem[_36196] % 32) + 228 len mem[_36196] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36196]) + _36196 + -mem[64] + 224]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = mem[_15711 + ceil32(return_data.size) + 357]
                    continue 
                if s < _15736 * cd[100] / 100:
                    revert with 0, '-,'
                _30778 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                mem[_30778] = ('cd', 36).length
                mem[_30778 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_30778 + (32 * ('cd', 36).length) + 32] = 0
                if ('cd', 36).length < 2:
                    revert with 0, 'PancakeLibrary: INVALID_PATH'
                require ('cd', 36).length <= test266151307()
                _30849 = mem[64]
                mem[mem[64]] = ('cd', 36).length
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                if not ('cd', 36).length:
                    require 0 < mem[_30849]
                    mem[_30849 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30778]
                        _38569 = mem[(32 * idx) + _30778 + 32]
                        require idx + 1 < mem[_30778]
                        _39041 = mem[(32 * idx + 1) + _30778 + 32]
                        if mem[(32 * idx) + _30778 + 44 len 20] == mem[(32 * idx + 1) + _30778 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30778 + 44 len 20] < mem[(32 * idx + 1) + _30778 + 44 len 20]:
                            if not mem[(32 * idx) + _30778 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38569) == address(_38569):
                                require idx < mem[_30849]
                                if mem[(32 * idx) + _30849 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30849 + 32] / 9975 != mem[(32 * idx) + _30849 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                    require idx + 1 < mem[_30849]
                                    mem[(32 * idx + 1) + _30849 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30849 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30849 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                    require idx + 1 < mem[_30849]
                                    mem[(32 * idx + 1) + _30849 + 32] = 9975 * mem[(32 * idx) + _30849 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30778 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_39041) == address(_38569):
                                require idx < mem[_30849]
                                if mem[(32 * idx) + _30849 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30849 + 32] / 9975 != mem[(32 * idx) + _30849 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                    require idx + 1 < mem[_30849]
                                    mem[(32 * idx + 1) + _30849 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30849 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30849 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                    require idx + 1 < mem[_30849]
                                    mem[(32 * idx + 1) + _30849 + 32] = 9975 * mem[(32 * idx) + _30849 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30849]
                        if mem[(32 * idx) + _30849 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30849 + 32] / 9975 != mem[(32 * idx) + _30849 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30849 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30849 + 32])
                            require idx + 1 < mem[_30849]
                            mem[(32 * idx + 1) + _30849 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30849 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30849 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30849 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30849 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30849 + 32])
                            require idx + 1 < mem[_30849]
                            mem[(32 * idx + 1) + _30849 + 32] = 9975 * mem[(32 * idx) + _30849 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30849 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30849]
                    _39038 = mem[_30849 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _39038
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _39038
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39820 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39820] = ('cd', 36).length
                    mem[_39820 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39820 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39820]
                        require idx + 1 < mem[_39820]
                        if mem[(32 * idx) + _39820 + 44 len 20] == mem[(32 * idx + 1) + _39820 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39820 + 44 len 20] < mem[(32 * idx + 1) + _39820 + 44 len 20]:
                            if not mem[(32 * idx) + _39820 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30849]
                            _43010 = mem[(32 * idx + 1) + _30849 + 32]
                            if mem[(32 * idx) + _39820 + 44 len 20] == mem[(32 * idx) + _39820 + 44 len 20]:
                                if idx < mem[_39820] - 2:
                                    _43286 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43286 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43286 + 36] = 0
                                    mem[_43286 + 68] = _43010
                                    mem[_43286 + 100] = address(cd[4])
                                    mem[_43286 + 132] = 128
                                    mem[_43286 + 164] = mem[_43286]
                                    s = 0
                                    while s < mem[_43286]:
                                        mem[s + _43286 + 196] = mem[s + _43286 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43286] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43010, address(cd[4]), 128, mem[_43286 + 164 len mem[_43286] + 32]
                                    else:
                                        mem[floor32(mem[_43286]) + _43286 + 196] = mem[floor32(mem[_43286]) + _43286 + -(mem[_43286] % 32) + 228 len mem[_43286] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43010, address(cd[4]), 128, mem[_43286], mem[_43286 + 196 len floor32(mem[_43286]) + 32]
                                else:
                                    _43290 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43290 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43290 + 36] = 0
                                    mem[_43290 + 68] = _43010
                                    mem[_43290 + 100] = address(cd[68])
                                    mem[_43290 + 132] = 128
                                    mem[_43290 + 164] = mem[_43290]
                                    s = 0
                                    while s < mem[_43290]:
                                        mem[s + _43290 + 196] = mem[s + _43290 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43290] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43010, address(cd[68]), 128, mem[_43290 + 164 len mem[_43290] + 32]
                                    else:
                                        mem[floor32(mem[_43290]) + _43290 + 196] = mem[floor32(mem[_43290]) + _43290 + -(mem[_43290] % 32) + 228 len mem[_43290] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43010, address(cd[68]), 128, mem[_43290], mem[_43290 + 196 len floor32(mem[_43290]) + 32]
                            else:
                                if idx < mem[_39820] - 2:
                                    _43294 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43294 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43294 + 36] = _43010
                                    mem[_43294 + 68] = 0
                                    mem[_43294 + 100] = address(cd[4])
                                    mem[_43294 + 132] = 128
                                    mem[_43294 + 164] = mem[_43294]
                                    s = 0
                                    while s < mem[_43294]:
                                        mem[s + _43294 + 196] = mem[s + _43294 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43294] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43010, 0, address(cd[4]), 128, mem[_43294 + 164 len mem[_43294] + 32]
                                    else:
                                        mem[floor32(mem[_43294]) + _43294 + 196] = mem[floor32(mem[_43294]) + _43294 + -(mem[_43294] % 32) + 228 len mem[_43294] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43010, 0, address(cd[4]), 128, mem[_43294], mem[_43294 + 196 len floor32(mem[_43294]) + 32]
                                else:
                                    _43298 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43298 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43298 + 36] = _43010
                                    mem[_43298 + 68] = 0
                                    mem[_43298 + 100] = address(cd[68])
                                    mem[_43298 + 132] = 128
                                    mem[_43298 + 164] = mem[_43298]
                                    s = 0
                                    while s < mem[_43298]:
                                        mem[s + _43298 + 196] = mem[s + _43298 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43298] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43010, 0, address(cd[68]), 128, mem[_43298 + 164 len mem[_43298] + 32]
                                    else:
                                        mem[floor32(mem[_43298]) + _43298 + 196] = mem[floor32(mem[_43298]) + _43298 + -(mem[_43298] % 32) + 228 len mem[_43298] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43010, 0, address(cd[68]), 128, mem[_43298], mem[_43298 + 196 len floor32(mem[_43298]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39820 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30849]
                            _43011 = mem[(32 * idx + 1) + _30849 + 32]
                            if mem[(32 * idx) + _39820 + 44 len 20] == mem[(32 * idx + 1) + _39820 + 44 len 20]:
                                if idx < mem[_39820] - 2:
                                    _43302 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43302 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43302 + 36] = 0
                                    mem[_43302 + 68] = _43011
                                    mem[_43302 + 100] = address(cd[4])
                                    mem[_43302 + 132] = 128
                                    mem[_43302 + 164] = mem[_43302]
                                    s = 0
                                    while s < mem[_43302]:
                                        mem[s + _43302 + 196] = mem[s + _43302 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43302] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43011, address(cd[4]), 128, mem[_43302 + 164 len mem[_43302] + 32]
                                    else:
                                        mem[floor32(mem[_43302]) + _43302 + 196] = mem[floor32(mem[_43302]) + _43302 + -(mem[_43302] % 32) + 228 len mem[_43302] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43011, address(cd[4]), 128, mem[_43302], mem[_43302 + 196 len floor32(mem[_43302]) + 32]
                                else:
                                    _43306 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43306 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43306 + 36] = 0
                                    mem[_43306 + 68] = _43011
                                    mem[_43306 + 100] = address(cd[68])
                                    mem[_43306 + 132] = 128
                                    mem[_43306 + 164] = mem[_43306]
                                    s = 0
                                    while s < mem[_43306]:
                                        mem[s + _43306 + 196] = mem[s + _43306 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43306] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43011, address(cd[68]), 128, mem[_43306 + 164 len mem[_43306] + 32]
                                    else:
                                        mem[floor32(mem[_43306]) + _43306 + 196] = mem[floor32(mem[_43306]) + _43306 + -(mem[_43306] % 32) + 228 len mem[_43306] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43011, address(cd[68]), 128, mem[_43306], mem[_43306 + 196 len floor32(mem[_43306]) + 32]
                            else:
                                if idx < mem[_39820] - 2:
                                    _43310 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43310 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43310 + 36] = _43011
                                    mem[_43310 + 68] = 0
                                    mem[_43310 + 100] = address(cd[4])
                                    mem[_43310 + 132] = 128
                                    mem[_43310 + 164] = mem[_43310]
                                    s = 0
                                    while s < mem[_43310]:
                                        mem[s + _43310 + 196] = mem[s + _43310 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43310] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43011, 0, address(cd[4]), 128, mem[_43310 + 164 len mem[_43310] + 32]
                                    else:
                                        mem[floor32(mem[_43310]) + _43310 + 196] = mem[floor32(mem[_43310]) + _43310 + -(mem[_43310] % 32) + 228 len mem[_43310] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43011, 0, address(cd[4]), 128, mem[_43310], mem[_43310 + 196 len floor32(mem[_43310]) + 32]
                                else:
                                    _43314 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43314 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43314 + 36] = _43011
                                    mem[_43314 + 68] = 0
                                    mem[_43314 + 100] = address(cd[68])
                                    mem[_43314 + 132] = 128
                                    mem[_43314 + 164] = mem[_43314]
                                    s = 0
                                    while s < mem[_43314]:
                                        mem[s + _43314 + 196] = mem[s + _43314 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43314] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43011, 0, address(cd[68]), 128, mem[_43314 + 164 len mem[_43314] + 32]
                                    else:
                                        mem[floor32(mem[_43314]) + _43314 + 196] = mem[floor32(mem[_43314]) + _43314 + -(mem[_43314] % 32) + 228 len mem[_43314] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43011, 0, address(cd[68]), 128, mem[_43314], mem[_43314 + 196 len floor32(mem[_43314]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                else:
                    mem[_30849 + 32 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
                    require 0 < mem[_30849]
                    mem[_30849 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30778]
                        _38572 = mem[(32 * idx) + _30778 + 32]
                        require idx + 1 < mem[_30778]
                        _39045 = mem[(32 * idx + 1) + _30778 + 32]
                        if mem[(32 * idx) + _30778 + 44 len 20] == mem[(32 * idx + 1) + _30778 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30778 + 44 len 20] < mem[(32 * idx + 1) + _30778 + 44 len 20]:
                            if not mem[(32 * idx) + _30778 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38572) == address(_38572):
                                require idx < mem[_30849]
                                if mem[(32 * idx) + _30849 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30849 + 32] / 9975 != mem[(32 * idx) + _30849 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                    require idx + 1 < mem[_30849]
                                    mem[(32 * idx + 1) + _30849 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30849 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30849 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                    require idx + 1 < mem[_30849]
                                    mem[(32 * idx + 1) + _30849 + 32] = 9975 * mem[(32 * idx) + _30849 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30778 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_39045) == address(_38572):
                                require idx < mem[_30849]
                                if mem[(32 * idx) + _30849 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30849 + 32] / 9975 != mem[(32 * idx) + _30849 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                    require idx + 1 < mem[_30849]
                                    mem[(32 * idx + 1) + _30849 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30849 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30849 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                    require idx + 1 < mem[_30849]
                                    mem[(32 * idx + 1) + _30849 + 32] = 9975 * mem[(32 * idx) + _30849 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30849 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30849]
                        if mem[(32 * idx) + _30849 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30849 + 32] / 9975 != mem[(32 * idx) + _30849 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30849 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30849 + 32])
                            require idx + 1 < mem[_30849]
                            mem[(32 * idx + 1) + _30849 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30849 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30849 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30849 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30849 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30849 + 32])
                            require idx + 1 < mem[_30849]
                            mem[(32 * idx + 1) + _30849 + 32] = 9975 * mem[(32 * idx) + _30849 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30849 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30849]
                    _39042 = mem[_30849 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _39042
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _39042
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39821 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39821] = ('cd', 36).length
                    mem[_39821 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39821 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39821]
                        require idx + 1 < mem[_39821]
                        if mem[(32 * idx) + _39821 + 44 len 20] == mem[(32 * idx + 1) + _39821 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39821 + 44 len 20] < mem[(32 * idx + 1) + _39821 + 44 len 20]:
                            if not mem[(32 * idx) + _39821 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30849]
                            _43012 = mem[(32 * idx + 1) + _30849 + 32]
                            if mem[(32 * idx) + _39821 + 44 len 20] == mem[(32 * idx) + _39821 + 44 len 20]:
                                if idx < mem[_39821] - 2:
                                    _43318 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43318 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43318 + 36] = 0
                                    mem[_43318 + 68] = _43012
                                    mem[_43318 + 100] = address(cd[4])
                                    mem[_43318 + 132] = 128
                                    mem[_43318 + 164] = mem[_43318]
                                    s = 0
                                    while s < mem[_43318]:
                                        mem[s + _43318 + 196] = mem[s + _43318 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43318] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43012, address(cd[4]), 128, mem[_43318 + 164 len mem[_43318] + 32]
                                    else:
                                        mem[floor32(mem[_43318]) + _43318 + 196] = mem[floor32(mem[_43318]) + _43318 + -(mem[_43318] % 32) + 228 len mem[_43318] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43012, address(cd[4]), 128, mem[_43318], mem[_43318 + 196 len floor32(mem[_43318]) + 32]
                                else:
                                    _43322 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43322 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43322 + 36] = 0
                                    mem[_43322 + 68] = _43012
                                    mem[_43322 + 100] = address(cd[68])
                                    mem[_43322 + 132] = 128
                                    mem[_43322 + 164] = mem[_43322]
                                    s = 0
                                    while s < mem[_43322]:
                                        mem[s + _43322 + 196] = mem[s + _43322 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43322] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43012, address(cd[68]), 128, mem[_43322 + 164 len mem[_43322] + 32]
                                    else:
                                        mem[floor32(mem[_43322]) + _43322 + 196] = mem[floor32(mem[_43322]) + _43322 + -(mem[_43322] % 32) + 228 len mem[_43322] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43012, address(cd[68]), 128, mem[_43322], mem[_43322 + 196 len floor32(mem[_43322]) + 32]
                            else:
                                if idx < mem[_39821] - 2:
                                    _43326 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43326 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43326 + 36] = _43012
                                    mem[_43326 + 68] = 0
                                    mem[_43326 + 100] = address(cd[4])
                                    mem[_43326 + 132] = 128
                                    mem[_43326 + 164] = mem[_43326]
                                    s = 0
                                    while s < mem[_43326]:
                                        mem[s + _43326 + 196] = mem[s + _43326 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43326] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43012, 0, address(cd[4]), 128, mem[_43326 + 164 len mem[_43326] + 32]
                                    else:
                                        mem[floor32(mem[_43326]) + _43326 + 196] = mem[floor32(mem[_43326]) + _43326 + -(mem[_43326] % 32) + 228 len mem[_43326] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43012, 0, address(cd[4]), 128, mem[_43326], mem[_43326 + 196 len floor32(mem[_43326]) + 32]
                                else:
                                    _43330 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43330 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43330 + 36] = _43012
                                    mem[_43330 + 68] = 0
                                    mem[_43330 + 100] = address(cd[68])
                                    mem[_43330 + 132] = 128
                                    mem[_43330 + 164] = mem[_43330]
                                    s = 0
                                    while s < mem[_43330]:
                                        mem[s + _43330 + 196] = mem[s + _43330 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43330] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43012, 0, address(cd[68]), 128, mem[_43330 + 164 len mem[_43330] + 32]
                                    else:
                                        mem[floor32(mem[_43330]) + _43330 + 196] = mem[floor32(mem[_43330]) + _43330 + -(mem[_43330] % 32) + 228 len mem[_43330] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43012, 0, address(cd[68]), 128, mem[_43330], mem[_43330 + 196 len floor32(mem[_43330]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39821 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30849]
                            _43013 = mem[(32 * idx + 1) + _30849 + 32]
                            if mem[(32 * idx) + _39821 + 44 len 20] == mem[(32 * idx + 1) + _39821 + 44 len 20]:
                                if idx < mem[_39821] - 2:
                                    _43334 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43334 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43334 + 36] = 0
                                    mem[_43334 + 68] = _43013
                                    mem[_43334 + 100] = address(cd[4])
                                    mem[_43334 + 132] = 128
                                    mem[_43334 + 164] = mem[_43334]
                                    s = 0
                                    while s < mem[_43334]:
                                        mem[s + _43334 + 196] = mem[s + _43334 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43334] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43013, address(cd[4]), 128, mem[_43334 + 164 len mem[_43334] + 32]
                                    else:
                                        mem[floor32(mem[_43334]) + _43334 + 196] = mem[floor32(mem[_43334]) + _43334 + -(mem[_43334] % 32) + 228 len mem[_43334] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43013, address(cd[4]), 128, mem[_43334], mem[_43334 + 196 len floor32(mem[_43334]) + 32]
                                else:
                                    _43338 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43338 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43338 + 36] = 0
                                    mem[_43338 + 68] = _43013
                                    mem[_43338 + 100] = address(cd[68])
                                    mem[_43338 + 132] = 128
                                    mem[_43338 + 164] = mem[_43338]
                                    s = 0
                                    while s < mem[_43338]:
                                        mem[s + _43338 + 196] = mem[s + _43338 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43338] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43013, address(cd[68]), 128, mem[_43338 + 164 len mem[_43338] + 32]
                                    else:
                                        mem[floor32(mem[_43338]) + _43338 + 196] = mem[floor32(mem[_43338]) + _43338 + -(mem[_43338] % 32) + 228 len mem[_43338] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43013, address(cd[68]), 128, mem[_43338], mem[_43338 + 196 len floor32(mem[_43338]) + 32]
                            else:
                                if idx < mem[_39821] - 2:
                                    _43342 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43342 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43342 + 36] = _43013
                                    mem[_43342 + 68] = 0
                                    mem[_43342 + 100] = address(cd[4])
                                    mem[_43342 + 132] = 128
                                    mem[_43342 + 164] = mem[_43342]
                                    s = 0
                                    while s < mem[_43342]:
                                        mem[s + _43342 + 196] = mem[s + _43342 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43342] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43013, 0, address(cd[4]), 128, mem[_43342 + 164 len mem[_43342] + 32]
                                    else:
                                        mem[floor32(mem[_43342]) + _43342 + 196] = mem[floor32(mem[_43342]) + _43342 + -(mem[_43342] % 32) + 228 len mem[_43342] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43013, 0, address(cd[4]), 128, mem[_43342], mem[_43342 + 196 len floor32(mem[_43342]) + 32]
                                else:
                                    _43346 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43346 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43346 + 36] = _43013
                                    mem[_43346 + 68] = 0
                                    mem[_43346 + 100] = address(cd[68])
                                    mem[_43346 + 132] = 128
                                    mem[_43346 + 164] = mem[_43346]
                                    s = 0
                                    while s < mem[_43346]:
                                        mem[s + _43346 + 196] = mem[s + _43346 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43346] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43013, 0, address(cd[68]), 128, mem[_43346 + 164 len mem[_43346] + 32]
                                    else:
                                        mem[floor32(mem[_43346]) + _43346 + 196] = mem[floor32(mem[_43346]) + _43346 + -(mem[_43346] % 32) + 228 len mem[_43346] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43013, 0, address(cd[68]), 128, mem[_43346], mem[_43346 + 196 len floor32(mem[_43346]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
    else:
        mem[(32 * ('cd', 36).length) + 160 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
        require 0 < ('cd', 36).length
        mem[(32 * ('cd', 36).length) + 160] = msg.value
        idx = 0
        s = 0
        s = 0
        while idx < ('cd', 36).length - 1:
            require idx < ('cd', 36).length
            _7860 = mem[(32 * idx) + 128]
            require idx + 1 < ('cd', 36).length
            _7869 = mem[(32 * idx + 1) + 128]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 
                            32,
                            35,
                            0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345,
                            mem[(64 * ('cd', 36).length) + 263 len 29]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require ext_code.size(address(cd[4]))
                staticcall address(cd[4]).getReserves() with:
                        gas gas_remaining wei
                mem[(64 * ('cd', 36).length) + 160 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if address(_7860) == address(_7860):
                    require idx < mem[(32 * ('cd', 36).length) + 128]
                    if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(64 * ('cd', 36).length) + 269 len 23]
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    38,
                                    0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[(64 * ('cd', 36).length) + 266 len 26]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    38,
                                    0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[(64 * ('cd', 36).length) + 266 len 26]
                    if 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] / 9975 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                    else:
                        require Mask(112, 0, ext_call.return_data[32])
                        if 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                    idx = idx + 1
                    s = Mask(112, 0, ext_call.return_data[32])
                    s = Mask(112, 0, ext_call.return_data[0])
                    continue 
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require ext_code.size(address(cd[4]))
                staticcall address(cd[4]).getReserves() with:
                        gas gas_remaining wei
                mem[(64 * ('cd', 36).length) + 160 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if address(_7869) == address(_7860):
                    require idx < mem[(32 * ('cd', 36).length) + 128]
                    if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(64 * ('cd', 36).length) + 269 len 23]
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    38,
                                    0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[(64 * ('cd', 36).length) + 266 len 26]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    38,
                                    0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[(64 * ('cd', 36).length) + 266 len 26]
                    if 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] / 9975 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                    else:
                        require Mask(112, 0, ext_call.return_data[32])
                        if 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                    idx = idx + 1
                    s = Mask(112, 0, ext_call.return_data[32])
                    s = Mask(112, 0, ext_call.return_data[0])
                    continue 
            require idx < mem[(32 * ('cd', 36).length) + 128]
            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                revert with 0, 
                            32,
                            41,
                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                            mem[(64 * ('cd', 36).length) + 269 len 23]
            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                revert with 0, 
                            32,
                            38,
                            0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954,
                            mem[(64 * ('cd', 36).length) + 266 len 26]
            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                revert with 0, 
                            32,
                            38,
                            0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954,
                            mem[(64 * ('cd', 36).length) + 266 len 26]
            if 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] / 9975 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                revert with 0, 'ds-math-mul-overflow'
            if not Mask(112, 0, ext_call.return_data[0]):
                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'ds-math-mul-overflow'
                if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'ds-math-add-overflow'
                require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
            else:
                require Mask(112, 0, ext_call.return_data[0])
                if 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                    revert with 0, 'ds-math-mul-overflow'
                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'ds-math-mul-overflow'
                if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'ds-math-add-overflow'
                require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + (32 * ('cd', 36).length) + 160])
            idx = idx + 1
            s = Mask(112, 0, ext_call.return_data[0])
            s = Mask(112, 0, ext_call.return_data[32])
            continue 
        require mem[(32 * ('cd', 36).length) + 128]
        _7866 = mem[(32 * ('cd', 36).length) + 160]
        mem[(64 * ('cd', 36).length) + 160] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
        require ext_code.size(WETHAddress)
        call WETHAddress.deposit() with:
           value _7866 wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require mem[(32 * ('cd', 36).length) + 128]
        _7877 = mem[(32 * ('cd', 36).length) + 160]
        mem[(64 * ('cd', 36).length) + 164] = address(cd[4])
        mem[(64 * ('cd', 36).length) + 196] = _7877
        require ext_code.size(WETHAddress)
        call WETHAddress.0xa9059cbb with:
             gas gas_remaining wei
            args address(cd[4]), _7877
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0]
        mem[64] = (98 * ('cd', 36).length) + 192
        mem[(64 * ('cd', 36).length) + 160] = ('cd', 36).length
        mem[(64 * ('cd', 36).length) + 192 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
        mem[(98 * ('cd', 36).length) + 192] = 0
        idx = 0
        while idx < ('cd', 36).length - 1:
            require idx < mem[(64 * ('cd', 36).length) + 160]
            require idx + 1 < mem[(64 * ('cd', 36).length) + 160]
            if mem[(32 * idx) + (64 * ('cd', 36).length) + 204 len 20] == mem[(32 * idx + 1) + (64 * ('cd', 36).length) + 204 len 20]:
                revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + (64 * ('cd', 36).length) + 204 len 20] < mem[(32 * idx + 1) + (64 * ('cd', 36).length) + 204 len 20]:
                if not mem[(32 * idx) + (64 * ('cd', 36).length) + 204 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _15734 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + (64 * ('cd', 36).length) + 204 len 20] == mem[(32 * idx) + (64 * ('cd', 36).length) + 204 len 20]:
                    if idx < mem[(64 * ('cd', 36).length) + 160] - 2:
                        _15788 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15788 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15788 + 36] = 0
                        mem[_15788 + 68] = _15734
                        mem[_15788 + 100] = address(cd[4])
                        mem[_15788 + 132] = 128
                        mem[_15788 + 164] = mem[_15788]
                        s = 0
                        while s < mem[_15788]:
                            mem[s + _15788 + 196] = mem[s + _15788 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15788] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15734, address(cd[4]), 128, mem[_15788 + 164 len mem[_15788] + 32]
                        else:
                            mem[floor32(mem[_15788]) + _15788 + 196] = mem[floor32(mem[_15788]) + _15788 + -(mem[_15788] % 32) + 228 len mem[_15788] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15734, address(cd[4]), 128, mem[_15788], mem[_15788 + 196 len floor32(mem[_15788]) + 32]
                    else:
                        _15792 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15792 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15792 + 36] = 0
                        mem[_15792 + 68] = _15734
                        mem[_15792 + 100] = this.address
                        mem[_15792 + 132] = 128
                        mem[_15792 + 164] = mem[_15792]
                        s = 0
                        while s < mem[_15792]:
                            mem[s + _15792 + 196] = mem[s + _15792 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15792] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15734, address(this.address), 128, mem[_15792 + 164 len mem[_15792] + 32]
                        else:
                            mem[floor32(mem[_15792]) + _15792 + 196] = mem[floor32(mem[_15792]) + _15792 + -(mem[_15792] % 32) + 228 len mem[_15792] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15734, address(this.address), 128, mem[_15792], mem[_15792 + 196 len floor32(mem[_15792]) + 32]
                else:
                    if idx < mem[(64 * ('cd', 36).length) + 160] - 2:
                        _15796 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15796 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15796 + 36] = _15734
                        mem[_15796 + 68] = 0
                        mem[_15796 + 100] = address(cd[4])
                        mem[_15796 + 132] = 128
                        mem[_15796 + 164] = mem[_15796]
                        s = 0
                        while s < mem[_15796]:
                            mem[s + _15796 + 196] = mem[s + _15796 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15796] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15734, 0, address(cd[4]), 128, mem[_15796 + 164 len mem[_15796] + 32]
                        else:
                            mem[floor32(mem[_15796]) + _15796 + 196] = mem[floor32(mem[_15796]) + _15796 + -(mem[_15796] % 32) + 228 len mem[_15796] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15734, 0, address(cd[4]), 128, mem[_15796], mem[_15796 + 196 len floor32(mem[_15796]) + 32]
                    else:
                        _15800 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15800 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15800 + 36] = _15734
                        mem[_15800 + 68] = 0
                        mem[_15800 + 100] = this.address
                        mem[_15800 + 132] = 128
                        mem[_15800 + 164] = mem[_15800]
                        s = 0
                        while s < mem[_15800]:
                            mem[s + _15800 + 196] = mem[s + _15800 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15800] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15734, 0, address(this.address), 128, mem[_15800 + 164 len mem[_15800] + 32]
                        else:
                            mem[floor32(mem[_15800]) + _15800 + 196] = mem[floor32(mem[_15800]) + _15800 + -(mem[_15800] % 32) + 228 len mem[_15800] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15734, 0, address(this.address), 128, mem[_15800], mem[_15800 + 196 len floor32(mem[_15800]) + 32]
            else:
                if not mem[(32 * idx + 1) + (64 * ('cd', 36).length) + 204 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _15735 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + (64 * ('cd', 36).length) + 204 len 20] == mem[(32 * idx + 1) + (64 * ('cd', 36).length) + 204 len 20]:
                    if idx < mem[(64 * ('cd', 36).length) + 160] - 2:
                        _15804 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15804 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15804 + 36] = 0
                        mem[_15804 + 68] = _15735
                        mem[_15804 + 100] = address(cd[4])
                        mem[_15804 + 132] = 128
                        mem[_15804 + 164] = mem[_15804]
                        s = 0
                        while s < mem[_15804]:
                            mem[s + _15804 + 196] = mem[s + _15804 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15804] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15735, address(cd[4]), 128, mem[_15804 + 164 len mem[_15804] + 32]
                        else:
                            mem[floor32(mem[_15804]) + _15804 + 196] = mem[floor32(mem[_15804]) + _15804 + -(mem[_15804] % 32) + 228 len mem[_15804] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15735, address(cd[4]), 128, mem[_15804], mem[_15804 + 196 len floor32(mem[_15804]) + 32]
                    else:
                        _15808 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15808 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15808 + 36] = 0
                        mem[_15808 + 68] = _15735
                        mem[_15808 + 100] = this.address
                        mem[_15808 + 132] = 128
                        mem[_15808 + 164] = mem[_15808]
                        s = 0
                        while s < mem[_15808]:
                            mem[s + _15808 + 196] = mem[s + _15808 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15808] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15735, address(this.address), 128, mem[_15808 + 164 len mem[_15808] + 32]
                        else:
                            mem[floor32(mem[_15808]) + _15808 + 196] = mem[floor32(mem[_15808]) + _15808 + -(mem[_15808] % 32) + 228 len mem[_15808] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _15735, address(this.address), 128, mem[_15808], mem[_15808 + 196 len floor32(mem[_15808]) + 32]
                else:
                    if idx < mem[(64 * ('cd', 36).length) + 160] - 2:
                        _15812 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15812 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15812 + 36] = _15735
                        mem[_15812 + 68] = 0
                        mem[_15812 + 100] = address(cd[4])
                        mem[_15812 + 132] = 128
                        mem[_15812 + 164] = mem[_15812]
                        s = 0
                        while s < mem[_15812]:
                            mem[s + _15812 + 196] = mem[s + _15812 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15812] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15735, 0, address(cd[4]), 128, mem[_15812 + 164 len mem[_15812] + 32]
                        else:
                            mem[floor32(mem[_15812]) + _15812 + 196] = mem[floor32(mem[_15812]) + _15812 + -(mem[_15812] % 32) + 228 len mem[_15812] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15735, 0, address(cd[4]), 128, mem[_15812], mem[_15812 + 196 len floor32(mem[_15812]) + 32]
                    else:
                        _15816 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_15816 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_15816 + 36] = _15735
                        mem[_15816 + 68] = 0
                        mem[_15816 + 100] = this.address
                        mem[_15816 + 132] = 128
                        mem[_15816 + 164] = mem[_15816]
                        s = 0
                        while s < mem[_15816]:
                            mem[s + _15816 + 196] = mem[s + _15816 + 32]
                            s = s + 32
                            continue 
                        if not mem[_15816] % 32:
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15735, 0, address(this.address), 128, mem[_15816 + 164 len mem[_15816] + 32]
                        else:
                            mem[floor32(mem[_15816]) + _15816 + 196] = mem[floor32(mem[_15816]) + _15816 + -(mem[_15816] % 32) + 228 len mem[_15816] % 32]
                            require ext_code.size(address(cd[4]))
                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _15735, 0, address(this.address), 128, mem[_15816], mem[_15816 + 196 len floor32(mem[_15816]) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        require 1 < ('cd', 36).length
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(('cd', 36)[1]))
        staticcall address(('cd', 36)[1]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        _15713 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        require 1 < ('cd', 36).length
        require 0 < mem[_15713]
        mem[_15713 + 32] = address(('cd', 36)[1])
        require 0 < ('cd', 36).length
        require 1 < mem[_15713]
        mem[_15713 + 64] = address(('cd', 36)[0])
        require 0 < mem[(32 * ('cd', 36).length) + 128]
        _15737 = mem[(32 * ('cd', 36).length) + 160]
        require mem[_15713] - 1 < mem[_15713]
        if mem[(32 * mem[_15713] - 1) + _15713 + 44 len 20] != WETHAddress:
            revert with 0, 'PancakeRouter: INVALID_PATH'
        require 1 < mem[_15713]
        require ext_code.size(address(('cd', 36)[0]))
        call address(('cd', 36)[0]).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args this.address, -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require mem[_15713]
        mem[_15713 + 132] = address(cd[4])
        mem[_15713 + 164] = ext_call.return_data[0]
        mem[_15713 + 96] = 68
        mem[_15713 + 132 len 28] = address(cd[4]) << 64
        mem[_15713 + 128 len 4] = unknown_0xa9059cbb(?????)
        mem[_15713 + 196 len 64] = unknown_0xa9059cbb(?????), address(cd[4]) << 64, 0, ext_call.return_data[0 len 28]
        mem[_15713 + 288 len 4] = ext_call.return_data[20 len 4]
        call address(('cd', 36)[1]) with:
             gas gas_remaining wei
            args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_15713 + 260 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if not mem[96]:
                mem[64] = _15713 + 580
                mem[_15713 + 196] = 0
                mem[_15713 + 228] = 0
                mem[_15713 + 260] = 0
                mem[_15713 + 292] = 0
                mem[_15713 + 324] = 0
                mem[_15713 + 356] = 0
                mem[_15713 + 388] = 0
                mem[_15713 + 420] = 0
                mem[_15713 + 452] = 0
                mem[_15713 + 484] = 0
                mem[_15713 + 516] = 0
                mem[_15713 + 548] = 0
                _30738 = mem[_15713]
                idx = 0
                s = 0
                while idx < _30738 - 1:
                    require idx < mem[_15713]
                    _30758 = mem[(32 * idx) + _15713 + 32]
                    require idx + 1 < mem[_15713]
                    _30785 = mem[(32 * idx + 1) + _15713 + 32]
                    mem[_15713 + 260] = mem[(32 * idx + 1) + _15713 + 44 len 20]
                    mem[_15713 + 228] = address(_30758)
                    if address(_30758) == address(_30785):
                        revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if address(_30758) < address(_30785):
                        if not address(_30758):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15713 + 292] = address(_30758)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15713 + 420] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15713 + 388] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30758) << 96 == address(_30758):
                            mem[_15713 + 484] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15713 + 452] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30758))
                            staticcall address(_30758).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + 324] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30758) << 96 == address(_30758):
                                    mem[_15713 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35456 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35456 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35456 + 36] = 0
                                        mem[_35456 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35456 + 100] = this.address
                                        mem[_35456 + 132] = 128
                                        mem[_35456 + 164] = mem[_35456]
                                        s = 0
                                        while s < mem[_35456]:
                                            mem[s + _35456 + 196] = mem[s + _35456 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35456] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35456] + _35456 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35456]) + _35456 + 196] = mem[floor32(mem[_35456]) + _35456 + -(mem[_35456] % 32) + 228 len mem[_35456] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35456]) + _35456 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35460 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35460 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35460 + 36] = 0
                                        mem[_35460 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35460 + 100] = this.address
                                        mem[_35460 + 132] = 128
                                        mem[_35460 + 164] = mem[_35460]
                                        s = 0
                                        while s < mem[_35460]:
                                            mem[s + _35460 + 196] = mem[s + _35460 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35460] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35460] + _35460 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35460]) + _35460 + 196] = mem[floor32(mem[_35460]) + _35460 + -(mem[_35460] % 32) + 228 len mem[_35460] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35460]) + _35460 + -mem[64] + 224]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35464 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35464 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35464 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35464 + 68] = 0
                                        mem[_35464 + 100] = this.address
                                        mem[_35464 + 132] = 128
                                        mem[_35464 + 164] = mem[_35464]
                                        s = 0
                                        while s < mem[_35464]:
                                            mem[s + _35464 + 196] = mem[s + _35464 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35464] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35464 + 164 len mem[_35464] + 32]
                                        else:
                                            mem[floor32(mem[_35464]) + _35464 + 196] = mem[floor32(mem[_35464]) + _35464 + -(mem[_35464] % 32) + 228 len mem[_35464] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35464], mem[_35464 + 196 len floor32(mem[_35464]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35468 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35468 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35468 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35468 + 68] = 0
                                        mem[_35468 + 100] = this.address
                                        mem[_35468 + 132] = 128
                                        mem[_35468 + 164] = mem[_35468]
                                        s = 0
                                        while s < mem[_35468]:
                                            mem[s + _35468 + 196] = mem[s + _35468 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35468] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35468] + _35468 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35468]) + _35468 + 196] = mem[floor32(mem[_35468]) + _35468 + -(mem[_35468] % 32) + 228 len mem[_35468] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35468]) + _35468 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30758) << 96 == address(_30758):
                                    mem[_15713 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36216 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36216 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36216 + 36] = 0
                                        mem[_36216 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36216 + 100] = this.address
                                        mem[_36216 + 132] = 128
                                        mem[_36216 + 164] = mem[_36216]
                                        s = 0
                                        while s < mem[_36216]:
                                            mem[s + _36216 + 196] = mem[s + _36216 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36216] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36216] + _36216 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36216]) + _36216 + 196] = mem[floor32(mem[_36216]) + _36216 + -(mem[_36216] % 32) + 228 len mem[_36216] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36216]) + _36216 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36220 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36220 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36220 + 36] = 0
                                        mem[_36220 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36220 + 100] = this.address
                                        mem[_36220 + 132] = 128
                                        mem[_36220 + 164] = mem[_36220]
                                        s = 0
                                        while s < mem[_36220]:
                                            mem[s + _36220 + 196] = mem[s + _36220 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36220] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36220] + _36220 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36220]) + _36220 + 196] = mem[floor32(mem[_36220]) + _36220 + -(mem[_36220] % 32) + 228 len mem[_36220] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36220]) + _36220 + -mem[64] + 224]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36224 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36224 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36224 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36224 + 68] = 0
                                        mem[_36224 + 100] = this.address
                                        mem[_36224 + 132] = 128
                                        mem[_36224 + 164] = mem[_36224]
                                        s = 0
                                        while s < mem[_36224]:
                                            mem[s + _36224 + 196] = mem[s + _36224 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36224] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36224] + _36224 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36224]) + _36224 + 196] = mem[floor32(mem[_36224]) + _36224 + -(mem[_36224] % 32) + 228 len mem[_36224] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36224]) + _36224 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36228 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36228 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36228 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36228 + 68] = 0
                                        mem[_36228 + 100] = this.address
                                        mem[_36228 + 132] = 128
                                        mem[_36228 + 164] = mem[_36228]
                                        s = 0
                                        while s < mem[_36228]:
                                            mem[s + _36228 + 196] = mem[s + _36228 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36228] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36228 + 164 len mem[_36228] + 32]
                                        else:
                                            mem[floor32(mem[_36228]) + _36228 + 196] = mem[floor32(mem[_36228]) + _36228 + -(mem[_36228] % 32) + 228 len mem[_36228] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36228], mem[_36228 + 196 len floor32(mem[_36228]) + 32]
                        else:
                            mem[_15713 + 484] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15713 + 452] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30758))
                            staticcall address(_30758).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + 324] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30758) << 96 == address(_30758):
                                    mem[_15713 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35474 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35474 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35474 + 36] = 0
                                        mem[_35474 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35474 + 100] = this.address
                                        mem[_35474 + 132] = 128
                                        mem[_35474 + 164] = mem[_35474]
                                        s = 0
                                        while s < mem[_35474]:
                                            mem[s + _35474 + 196] = mem[s + _35474 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35474] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35474 + 164 len mem[_35474] + 32]
                                        else:
                                            mem[floor32(mem[_35474]) + _35474 + 196] = mem[floor32(mem[_35474]) + _35474 + -(mem[_35474] % 32) + 228 len mem[_35474] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35474], mem[_35474 + 196 len floor32(mem[_35474]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35478 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35478 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35478 + 36] = 0
                                        mem[_35478 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35478 + 100] = this.address
                                        mem[_35478 + 132] = 128
                                        mem[_35478 + 164] = mem[_35478]
                                        s = 0
                                        while s < mem[_35478]:
                                            mem[s + _35478 + 196] = mem[s + _35478 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35478] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35478 + 164 len mem[_35478] + 32]
                                        else:
                                            mem[floor32(mem[_35478]) + _35478 + 196] = mem[floor32(mem[_35478]) + _35478 + -(mem[_35478] % 32) + 228 len mem[_35478] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35478], mem[_35478 + 196 len floor32(mem[_35478]) + 32]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35482 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35482 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35482 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35482 + 68] = 0
                                        mem[_35482 + 100] = this.address
                                        mem[_35482 + 132] = 128
                                        mem[_35482 + 164] = mem[_35482]
                                        s = 0
                                        while s < mem[_35482]:
                                            mem[s + _35482 + 196] = mem[s + _35482 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35482] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35482] + _35482 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35482]) + _35482 + 196] = mem[floor32(mem[_35482]) + _35482 + -(mem[_35482] % 32) + 228 len mem[_35482] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35482]) + _35482 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35486 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35486 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35486 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35486 + 68] = 0
                                        mem[_35486 + 100] = this.address
                                        mem[_35486 + 132] = 128
                                        mem[_35486 + 164] = mem[_35486]
                                        s = 0
                                        while s < mem[_35486]:
                                            mem[s + _35486 + 196] = mem[s + _35486 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35486] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35486 + 164 len mem[_35486] + 32]
                                        else:
                                            mem[floor32(mem[_35486]) + _35486 + 196] = mem[floor32(mem[_35486]) + _35486 + -(mem[_35486] % 32) + 228 len mem[_35486] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35486], mem[_35486 + 196 len floor32(mem[_35486]) + 32]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30758) << 96 == address(_30758):
                                    mem[_15713 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36236 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36236 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36236 + 36] = 0
                                        mem[_36236 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36236 + 100] = this.address
                                        mem[_36236 + 132] = 128
                                        mem[_36236 + 164] = mem[_36236]
                                        s = 0
                                        while s < mem[_36236]:
                                            mem[s + _36236 + 196] = mem[s + _36236 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36236] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36236] + _36236 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36236]) + _36236 + 196] = mem[floor32(mem[_36236]) + _36236 + -(mem[_36236] % 32) + 228 len mem[_36236] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36236]) + _36236 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36240 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36240 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36240 + 36] = 0
                                        mem[_36240 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36240 + 100] = this.address
                                        mem[_36240 + 132] = 128
                                        mem[_36240 + 164] = mem[_36240]
                                        s = 0
                                        while s < mem[_36240]:
                                            mem[s + _36240 + 196] = mem[s + _36240 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36240] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36240] + _36240 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36240]) + _36240 + 196] = mem[floor32(mem[_36240]) + _36240 + -(mem[_36240] % 32) + 228 len mem[_36240] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36240]) + _36240 + -mem[64] + 224]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36244 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36244 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36244 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36244 + 68] = 0
                                        mem[_36244 + 100] = this.address
                                        mem[_36244 + 132] = 128
                                        mem[_36244 + 164] = mem[_36244]
                                        s = 0
                                        while s < mem[_36244]:
                                            mem[s + _36244 + 196] = mem[s + _36244 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36244] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36244 + 164 len mem[_36244] + 32]
                                        else:
                                            mem[floor32(mem[_36244]) + _36244 + 196] = mem[floor32(mem[_36244]) + _36244 + -(mem[_36244] % 32) + 228 len mem[_36244] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36244], mem[_36244 + 196 len floor32(mem[_36244]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36248 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36248 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36248 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36248 + 68] = 0
                                        mem[_36248 + 100] = this.address
                                        mem[_36248 + 132] = 128
                                        mem[_36248 + 164] = mem[_36248]
                                        s = 0
                                        while s < mem[_36248]:
                                            mem[s + _36248 + 196] = mem[s + _36248 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36248] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36248] + _36248 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36248]) + _36248 + 196] = mem[floor32(mem[_36248]) + _36248 + -(mem[_36248] % 32) + 228 len mem[_36248] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36248]) + _36248 + -mem[64] + 224]
                    else:
                        if not address(_30785):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15713 + 292] = address(_30785)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15713 + 420] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15713 + 388] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30785) << 96 == address(_30758):
                            mem[_15713 + 484] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15713 + 452] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30758))
                            staticcall address(_30758).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + 324] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30785) << 96 == address(_30758):
                                    mem[_15713 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35492 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35492 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35492 + 36] = 0
                                        mem[_35492 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35492 + 100] = this.address
                                        mem[_35492 + 132] = 128
                                        mem[_35492 + 164] = mem[_35492]
                                        s = 0
                                        while s < mem[_35492]:
                                            mem[s + _35492 + 196] = mem[s + _35492 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35492] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35492 + 164 len mem[_35492] + 32]
                                        else:
                                            mem[floor32(mem[_35492]) + _35492 + 196] = mem[floor32(mem[_35492]) + _35492 + -(mem[_35492] % 32) + 228 len mem[_35492] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35492], mem[_35492 + 196 len floor32(mem[_35492]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35496 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35496 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35496 + 36] = 0
                                        mem[_35496 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35496 + 100] = this.address
                                        mem[_35496 + 132] = 128
                                        mem[_35496 + 164] = mem[_35496]
                                        s = 0
                                        while s < mem[_35496]:
                                            mem[s + _35496 + 196] = mem[s + _35496 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35496] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35496 + 164 len mem[_35496] + 32]
                                        else:
                                            mem[floor32(mem[_35496]) + _35496 + 196] = mem[floor32(mem[_35496]) + _35496 + -(mem[_35496] % 32) + 228 len mem[_35496] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35496], mem[_35496 + 196 len floor32(mem[_35496]) + 32]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35500 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35500 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35500 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35500 + 68] = 0
                                        mem[_35500 + 100] = this.address
                                        mem[_35500 + 132] = 128
                                        mem[_35500 + 164] = mem[_35500]
                                        s = 0
                                        while s < mem[_35500]:
                                            mem[s + _35500 + 196] = mem[s + _35500 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35500] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35500 + 164 len mem[_35500] + 32]
                                        else:
                                            mem[floor32(mem[_35500]) + _35500 + 196] = mem[floor32(mem[_35500]) + _35500 + -(mem[_35500] % 32) + 228 len mem[_35500] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35500], mem[_35500 + 196 len floor32(mem[_35500]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35504 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35504 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35504 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35504 + 68] = 0
                                        mem[_35504 + 100] = this.address
                                        mem[_35504 + 132] = 128
                                        mem[_35504 + 164] = mem[_35504]
                                        s = 0
                                        while s < mem[_35504]:
                                            mem[s + _35504 + 196] = mem[s + _35504 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35504] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35504] + _35504 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35504]) + _35504 + 196] = mem[floor32(mem[_35504]) + _35504 + -(mem[_35504] % 32) + 228 len mem[_35504] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35504]) + _35504 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30785) << 96 == address(_30758):
                                    mem[_15713 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36256 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36256 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36256 + 36] = 0
                                        mem[_36256 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36256 + 100] = this.address
                                        mem[_36256 + 132] = 128
                                        mem[_36256 + 164] = mem[_36256]
                                        s = 0
                                        while s < mem[_36256]:
                                            mem[s + _36256 + 196] = mem[s + _36256 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36256] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36256] + _36256 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36256]) + _36256 + 196] = mem[floor32(mem[_36256]) + _36256 + -(mem[_36256] % 32) + 228 len mem[_36256] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36256]) + _36256 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36260 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36260 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36260 + 36] = 0
                                        mem[_36260 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36260 + 100] = this.address
                                        mem[_36260 + 132] = 128
                                        mem[_36260 + 164] = mem[_36260]
                                        s = 0
                                        while s < mem[_36260]:
                                            mem[s + _36260 + 196] = mem[s + _36260 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36260] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36260 + 164 len mem[_36260] + 32]
                                        else:
                                            mem[floor32(mem[_36260]) + _36260 + 196] = mem[floor32(mem[_36260]) + _36260 + -(mem[_36260] % 32) + 228 len mem[_36260] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36260], mem[_36260 + 196 len floor32(mem[_36260]) + 32]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36264 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36264 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36264 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36264 + 68] = 0
                                        mem[_36264 + 100] = this.address
                                        mem[_36264 + 132] = 128
                                        mem[_36264 + 164] = mem[_36264]
                                        s = 0
                                        while s < mem[_36264]:
                                            mem[s + _36264 + 196] = mem[s + _36264 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36264] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36264 + 164 len mem[_36264] + 32]
                                        else:
                                            mem[floor32(mem[_36264]) + _36264 + 196] = mem[floor32(mem[_36264]) + _36264 + -(mem[_36264] % 32) + 228 len mem[_36264] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36264], mem[_36264 + 196 len floor32(mem[_36264]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36268 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36268 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36268 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36268 + 68] = 0
                                        mem[_36268 + 100] = this.address
                                        mem[_36268 + 132] = 128
                                        mem[_36268 + 164] = mem[_36268]
                                        s = 0
                                        while s < mem[_36268]:
                                            mem[s + _36268 + 196] = mem[s + _36268 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36268] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36268 + 164 len mem[_36268] + 32]
                                        else:
                                            mem[floor32(mem[_36268]) + _36268 + 196] = mem[floor32(mem[_36268]) + _36268 + -(mem[_36268] % 32) + 228 len mem[_36268] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36268], mem[_36268 + 196 len floor32(mem[_36268]) + 32]
                        else:
                            mem[_15713 + 484] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15713 + 452] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30758))
                            staticcall address(_30758).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + 324] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30785) << 96 == address(_30758):
                                    mem[_15713 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35510 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35510 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35510 + 36] = 0
                                        mem[_35510 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35510 + 100] = this.address
                                        mem[_35510 + 132] = 128
                                        mem[_35510 + 164] = mem[_35510]
                                        s = 0
                                        while s < mem[_35510]:
                                            mem[s + _35510 + 196] = mem[s + _35510 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35510] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35510 + 164 len mem[_35510] + 32]
                                        else:
                                            mem[floor32(mem[_35510]) + _35510 + 196] = mem[floor32(mem[_35510]) + _35510 + -(mem[_35510] % 32) + 228 len mem[_35510] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35510], mem[_35510 + 196 len floor32(mem[_35510]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35514 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35514 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35514 + 36] = 0
                                        mem[_35514 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35514 + 100] = this.address
                                        mem[_35514 + 132] = 128
                                        mem[_35514 + 164] = mem[_35514]
                                        s = 0
                                        while s < mem[_35514]:
                                            mem[s + _35514 + 196] = mem[s + _35514 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35514] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35514] + _35514 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35514]) + _35514 + 196] = mem[floor32(mem[_35514]) + _35514 + -(mem[_35514] % 32) + 228 len mem[_35514] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35514]) + _35514 + -mem[64] + 224]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35518 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35518 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35518 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35518 + 68] = 0
                                        mem[_35518 + 100] = this.address
                                        mem[_35518 + 132] = 128
                                        mem[_35518 + 164] = mem[_35518]
                                        s = 0
                                        while s < mem[_35518]:
                                            mem[s + _35518 + 196] = mem[s + _35518 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35518] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35518] + _35518 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35518]) + _35518 + 196] = mem[floor32(mem[_35518]) + _35518 + -(mem[_35518] % 32) + 228 len mem[_35518] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35518]) + _35518 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35522 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35522 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35522 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35522 + 68] = 0
                                        mem[_35522 + 100] = this.address
                                        mem[_35522 + 132] = 128
                                        mem[_35522 + 164] = mem[_35522]
                                        s = 0
                                        while s < mem[_35522]:
                                            mem[s + _35522 + 196] = mem[s + _35522 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35522] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35522] + _35522 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35522]) + _35522 + 196] = mem[floor32(mem[_35522]) + _35522 + -(mem[_35522] % 32) + 228 len mem[_35522] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35522]) + _35522 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30785) << 96 == address(_30758):
                                    mem[_15713 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36276 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36276 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36276 + 36] = 0
                                        mem[_36276 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36276 + 100] = this.address
                                        mem[_36276 + 132] = 128
                                        mem[_36276 + 164] = mem[_36276]
                                        s = 0
                                        while s < mem[_36276]:
                                            mem[s + _36276 + 196] = mem[s + _36276 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36276] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36276 + 164 len mem[_36276] + 32]
                                        else:
                                            mem[floor32(mem[_36276]) + _36276 + 196] = mem[floor32(mem[_36276]) + _36276 + -(mem[_36276] % 32) + 228 len mem[_36276] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36276], mem[_36276 + 196 len floor32(mem[_36276]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36280 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36280 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36280 + 36] = 0
                                        mem[_36280 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36280 + 100] = this.address
                                        mem[_36280 + 132] = 128
                                        mem[_36280 + 164] = mem[_36280]
                                        s = 0
                                        while s < mem[_36280]:
                                            mem[s + _36280 + 196] = mem[s + _36280 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36280] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36280 + 164 len mem[_36280] + 32]
                                        else:
                                            mem[floor32(mem[_36280]) + _36280 + 196] = mem[floor32(mem[_36280]) + _36280 + -(mem[_36280] % 32) + 228 len mem[_36280] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36280], mem[_36280 + 196 len floor32(mem[_36280]) + 32]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36284 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36284 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36284 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36284 + 68] = 0
                                        mem[_36284 + 100] = this.address
                                        mem[_36284 + 132] = 128
                                        mem[_36284 + 164] = mem[_36284]
                                        s = 0
                                        while s < mem[_36284]:
                                            mem[s + _36284 + 196] = mem[s + _36284 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36284] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36284 + 164 len mem[_36284] + 32]
                                        else:
                                            mem[floor32(mem[_36284]) + _36284 + 196] = mem[floor32(mem[_36284]) + _36284 + -(mem[_36284] % 32) + 228 len mem[_36284] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36284], mem[_36284 + 196 len floor32(mem[_36284]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36288 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36288 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36288 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36288 + 68] = 0
                                        mem[_36288 + 100] = this.address
                                        mem[_36288 + 132] = 128
                                        mem[_36288 + 164] = mem[_36288]
                                        s = 0
                                        while s < mem[_36288]:
                                            mem[s + _36288 + 196] = mem[s + _36288 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36288] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36288] + _36288 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36288]) + _36288 + 196] = mem[floor32(mem[_36288]) + _36288 + -(mem[_36288] % 32) + 228 len mem[_36288] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36288]) + _36288 + -mem[64] + 224]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = mem[_15713 + 356]
                    continue 
                if s < _15737 * cd[100] / 100:
                    revert with 0, '-,'
                _30782 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                mem[_30782] = ('cd', 36).length
                mem[_30782 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_30782 + (32 * ('cd', 36).length) + 32] = 0
                if ('cd', 36).length < 2:
                    revert with 0, 'PancakeLibrary: INVALID_PATH'
                require ('cd', 36).length <= test266151307()
                _30850 = mem[64]
                mem[mem[64]] = ('cd', 36).length
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                if not ('cd', 36).length:
                    require 0 < mem[_30850]
                    mem[_30850 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30782]
                        _38639 = mem[(32 * idx) + _30782 + 32]
                        require idx + 1 < mem[_30782]
                        _39081 = mem[(32 * idx + 1) + _30782 + 32]
                        if mem[(32 * idx) + _30782 + 44 len 20] == mem[(32 * idx + 1) + _30782 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30782 + 44 len 20] < mem[(32 * idx + 1) + _30782 + 44 len 20]:
                            if not mem[(32 * idx) + _30782 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38639) == address(_38639):
                                require idx < mem[_30850]
                                if mem[(32 * idx) + _30850 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30850 + 32] / 9975 != mem[(32 * idx) + _30850 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                    require idx + 1 < mem[_30850]
                                    mem[(32 * idx + 1) + _30850 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30850 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30850 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                    require idx + 1 < mem[_30850]
                                    mem[(32 * idx + 1) + _30850 + 32] = 9975 * mem[(32 * idx) + _30850 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30782 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_39081) == address(_38639):
                                require idx < mem[_30850]
                                if mem[(32 * idx) + _30850 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30850 + 32] / 9975 != mem[(32 * idx) + _30850 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                    require idx + 1 < mem[_30850]
                                    mem[(32 * idx + 1) + _30850 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30850 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30850 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                    require idx + 1 < mem[_30850]
                                    mem[(32 * idx + 1) + _30850 + 32] = 9975 * mem[(32 * idx) + _30850 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30850]
                        if mem[(32 * idx) + _30850 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30850 + 32] / 9975 != mem[(32 * idx) + _30850 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30850 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30850 + 32])
                            require idx + 1 < mem[_30850]
                            mem[(32 * idx + 1) + _30850 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30850 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30850 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30850 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30850 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30850 + 32])
                            require idx + 1 < mem[_30850]
                            mem[(32 * idx + 1) + _30850 + 32] = 9975 * mem[(32 * idx) + _30850 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30850 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30850]
                    _39078 = mem[_30850 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _39078
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _39078
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39822 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39822] = ('cd', 36).length
                    mem[_39822 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39822 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39822]
                        require idx + 1 < mem[_39822]
                        if mem[(32 * idx) + _39822 + 44 len 20] == mem[(32 * idx + 1) + _39822 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39822 + 44 len 20] < mem[(32 * idx + 1) + _39822 + 44 len 20]:
                            if not mem[(32 * idx) + _39822 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30850]
                            _43014 = mem[(32 * idx + 1) + _30850 + 32]
                            if mem[(32 * idx) + _39822 + 44 len 20] == mem[(32 * idx) + _39822 + 44 len 20]:
                                if idx < mem[_39822] - 2:
                                    _43350 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43350 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43350 + 36] = 0
                                    mem[_43350 + 68] = _43014
                                    mem[_43350 + 100] = address(cd[4])
                                    mem[_43350 + 132] = 128
                                    mem[_43350 + 164] = mem[_43350]
                                    s = 0
                                    while s < mem[_43350]:
                                        mem[s + _43350 + 196] = mem[s + _43350 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43350] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43014, address(cd[4]), 128, mem[_43350 + 164 len mem[_43350] + 32]
                                    else:
                                        mem[floor32(mem[_43350]) + _43350 + 196] = mem[floor32(mem[_43350]) + _43350 + -(mem[_43350] % 32) + 228 len mem[_43350] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43014, address(cd[4]), 128, mem[_43350], mem[_43350 + 196 len floor32(mem[_43350]) + 32]
                                else:
                                    _43354 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43354 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43354 + 36] = 0
                                    mem[_43354 + 68] = _43014
                                    mem[_43354 + 100] = address(cd[68])
                                    mem[_43354 + 132] = 128
                                    mem[_43354 + 164] = mem[_43354]
                                    s = 0
                                    while s < mem[_43354]:
                                        mem[s + _43354 + 196] = mem[s + _43354 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43354] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43014, address(cd[68]), 128, mem[_43354 + 164 len mem[_43354] + 32]
                                    else:
                                        mem[floor32(mem[_43354]) + _43354 + 196] = mem[floor32(mem[_43354]) + _43354 + -(mem[_43354] % 32) + 228 len mem[_43354] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43014, address(cd[68]), 128, mem[_43354], mem[_43354 + 196 len floor32(mem[_43354]) + 32]
                            else:
                                if idx < mem[_39822] - 2:
                                    _43358 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43358 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43358 + 36] = _43014
                                    mem[_43358 + 68] = 0
                                    mem[_43358 + 100] = address(cd[4])
                                    mem[_43358 + 132] = 128
                                    mem[_43358 + 164] = mem[_43358]
                                    s = 0
                                    while s < mem[_43358]:
                                        mem[s + _43358 + 196] = mem[s + _43358 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43358] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43014, 0, address(cd[4]), 128, mem[_43358 + 164 len mem[_43358] + 32]
                                    else:
                                        mem[floor32(mem[_43358]) + _43358 + 196] = mem[floor32(mem[_43358]) + _43358 + -(mem[_43358] % 32) + 228 len mem[_43358] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43014, 0, address(cd[4]), 128, mem[_43358], mem[_43358 + 196 len floor32(mem[_43358]) + 32]
                                else:
                                    _43362 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43362 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43362 + 36] = _43014
                                    mem[_43362 + 68] = 0
                                    mem[_43362 + 100] = address(cd[68])
                                    mem[_43362 + 132] = 128
                                    mem[_43362 + 164] = mem[_43362]
                                    s = 0
                                    while s < mem[_43362]:
                                        mem[s + _43362 + 196] = mem[s + _43362 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43362] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43014, 0, address(cd[68]), 128, mem[_43362 + 164 len mem[_43362] + 32]
                                    else:
                                        mem[floor32(mem[_43362]) + _43362 + 196] = mem[floor32(mem[_43362]) + _43362 + -(mem[_43362] % 32) + 228 len mem[_43362] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43014, 0, address(cd[68]), 128, mem[_43362], mem[_43362 + 196 len floor32(mem[_43362]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39822 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30850]
                            _43015 = mem[(32 * idx + 1) + _30850 + 32]
                            if mem[(32 * idx) + _39822 + 44 len 20] == mem[(32 * idx + 1) + _39822 + 44 len 20]:
                                if idx < mem[_39822] - 2:
                                    _43366 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43366 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43366 + 36] = 0
                                    mem[_43366 + 68] = _43015
                                    mem[_43366 + 100] = address(cd[4])
                                    mem[_43366 + 132] = 128
                                    mem[_43366 + 164] = mem[_43366]
                                    s = 0
                                    while s < mem[_43366]:
                                        mem[s + _43366 + 196] = mem[s + _43366 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43366] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43015, address(cd[4]), 128, mem[_43366 + 164 len mem[_43366] + 32]
                                    else:
                                        mem[floor32(mem[_43366]) + _43366 + 196] = mem[floor32(mem[_43366]) + _43366 + -(mem[_43366] % 32) + 228 len mem[_43366] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43015, address(cd[4]), 128, mem[_43366], mem[_43366 + 196 len floor32(mem[_43366]) + 32]
                                else:
                                    _43370 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43370 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43370 + 36] = 0
                                    mem[_43370 + 68] = _43015
                                    mem[_43370 + 100] = address(cd[68])
                                    mem[_43370 + 132] = 128
                                    mem[_43370 + 164] = mem[_43370]
                                    s = 0
                                    while s < mem[_43370]:
                                        mem[s + _43370 + 196] = mem[s + _43370 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43370] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43015, address(cd[68]), 128, mem[_43370 + 164 len mem[_43370] + 32]
                                    else:
                                        mem[floor32(mem[_43370]) + _43370 + 196] = mem[floor32(mem[_43370]) + _43370 + -(mem[_43370] % 32) + 228 len mem[_43370] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43015, address(cd[68]), 128, mem[_43370], mem[_43370 + 196 len floor32(mem[_43370]) + 32]
                            else:
                                if idx < mem[_39822] - 2:
                                    _43374 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43374 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43374 + 36] = _43015
                                    mem[_43374 + 68] = 0
                                    mem[_43374 + 100] = address(cd[4])
                                    mem[_43374 + 132] = 128
                                    mem[_43374 + 164] = mem[_43374]
                                    s = 0
                                    while s < mem[_43374]:
                                        mem[s + _43374 + 196] = mem[s + _43374 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43374] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43015, 0, address(cd[4]), 128, mem[_43374 + 164 len mem[_43374] + 32]
                                    else:
                                        mem[floor32(mem[_43374]) + _43374 + 196] = mem[floor32(mem[_43374]) + _43374 + -(mem[_43374] % 32) + 228 len mem[_43374] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43015, 0, address(cd[4]), 128, mem[_43374], mem[_43374 + 196 len floor32(mem[_43374]) + 32]
                                else:
                                    _43378 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43378 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43378 + 36] = _43015
                                    mem[_43378 + 68] = 0
                                    mem[_43378 + 100] = address(cd[68])
                                    mem[_43378 + 132] = 128
                                    mem[_43378 + 164] = mem[_43378]
                                    s = 0
                                    while s < mem[_43378]:
                                        mem[s + _43378 + 196] = mem[s + _43378 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43378] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43015, 0, address(cd[68]), 128, mem[_43378 + 164 len mem[_43378] + 32]
                                    else:
                                        mem[floor32(mem[_43378]) + _43378 + 196] = mem[floor32(mem[_43378]) + _43378 + -(mem[_43378] % 32) + 228 len mem[_43378] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43015, 0, address(cd[68]), 128, mem[_43378], mem[_43378 + 196 len floor32(mem[_43378]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                else:
                    mem[_30850 + 32 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
                    require 0 < mem[_30850]
                    mem[_30850 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30782]
                        _38642 = mem[(32 * idx) + _30782 + 32]
                        require idx + 1 < mem[_30782]
                        _39085 = mem[(32 * idx + 1) + _30782 + 32]
                        if mem[(32 * idx) + _30782 + 44 len 20] == mem[(32 * idx + 1) + _30782 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30782 + 44 len 20] < mem[(32 * idx + 1) + _30782 + 44 len 20]:
                            if not mem[(32 * idx) + _30782 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38642) == address(_38642):
                                require idx < mem[_30850]
                                if mem[(32 * idx) + _30850 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30850 + 32] / 9975 != mem[(32 * idx) + _30850 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                    require idx + 1 < mem[_30850]
                                    mem[(32 * idx + 1) + _30850 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30850 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30850 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                    require idx + 1 < mem[_30850]
                                    mem[(32 * idx + 1) + _30850 + 32] = 9975 * mem[(32 * idx) + _30850 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30782 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_39085) == address(_38642):
                                require idx < mem[_30850]
                                if mem[(32 * idx) + _30850 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30850 + 32] / 9975 != mem[(32 * idx) + _30850 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                    require idx + 1 < mem[_30850]
                                    mem[(32 * idx + 1) + _30850 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30850 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30850 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                    require idx + 1 < mem[_30850]
                                    mem[(32 * idx + 1) + _30850 + 32] = 9975 * mem[(32 * idx) + _30850 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30850 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30850]
                        if mem[(32 * idx) + _30850 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30850 + 32] / 9975 != mem[(32 * idx) + _30850 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30850 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30850 + 32])
                            require idx + 1 < mem[_30850]
                            mem[(32 * idx + 1) + _30850 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30850 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30850 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30850 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30850 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30850 + 32])
                            require idx + 1 < mem[_30850]
                            mem[(32 * idx + 1) + _30850 + 32] = 9975 * mem[(32 * idx) + _30850 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30850 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30850]
                    _39082 = mem[_30850 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _39082
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _39082
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39823 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39823] = ('cd', 36).length
                    mem[_39823 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39823 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39823]
                        require idx + 1 < mem[_39823]
                        if mem[(32 * idx) + _39823 + 44 len 20] == mem[(32 * idx + 1) + _39823 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39823 + 44 len 20] < mem[(32 * idx + 1) + _39823 + 44 len 20]:
                            if not mem[(32 * idx) + _39823 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30850]
                            _43016 = mem[(32 * idx + 1) + _30850 + 32]
                            if mem[(32 * idx) + _39823 + 44 len 20] == mem[(32 * idx) + _39823 + 44 len 20]:
                                if idx < mem[_39823] - 2:
                                    _43382 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43382 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43382 + 36] = 0
                                    mem[_43382 + 68] = _43016
                                    mem[_43382 + 100] = address(cd[4])
                                    mem[_43382 + 132] = 128
                                    mem[_43382 + 164] = mem[_43382]
                                    s = 0
                                    while s < mem[_43382]:
                                        mem[s + _43382 + 196] = mem[s + _43382 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43382] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43016, address(cd[4]), 128, mem[_43382 + 164 len mem[_43382] + 32]
                                    else:
                                        mem[floor32(mem[_43382]) + _43382 + 196] = mem[floor32(mem[_43382]) + _43382 + -(mem[_43382] % 32) + 228 len mem[_43382] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43016, address(cd[4]), 128, mem[_43382], mem[_43382 + 196 len floor32(mem[_43382]) + 32]
                                else:
                                    _43386 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43386 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43386 + 36] = 0
                                    mem[_43386 + 68] = _43016
                                    mem[_43386 + 100] = address(cd[68])
                                    mem[_43386 + 132] = 128
                                    mem[_43386 + 164] = mem[_43386]
                                    s = 0
                                    while s < mem[_43386]:
                                        mem[s + _43386 + 196] = mem[s + _43386 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43386] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43016, address(cd[68]), 128, mem[_43386 + 164 len mem[_43386] + 32]
                                    else:
                                        mem[floor32(mem[_43386]) + _43386 + 196] = mem[floor32(mem[_43386]) + _43386 + -(mem[_43386] % 32) + 228 len mem[_43386] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43016, address(cd[68]), 128, mem[_43386], mem[_43386 + 196 len floor32(mem[_43386]) + 32]
                            else:
                                if idx < mem[_39823] - 2:
                                    _43390 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43390 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43390 + 36] = _43016
                                    mem[_43390 + 68] = 0
                                    mem[_43390 + 100] = address(cd[4])
                                    mem[_43390 + 132] = 128
                                    mem[_43390 + 164] = mem[_43390]
                                    s = 0
                                    while s < mem[_43390]:
                                        mem[s + _43390 + 196] = mem[s + _43390 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43390] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43016, 0, address(cd[4]), 128, mem[_43390 + 164 len mem[_43390] + 32]
                                    else:
                                        mem[floor32(mem[_43390]) + _43390 + 196] = mem[floor32(mem[_43390]) + _43390 + -(mem[_43390] % 32) + 228 len mem[_43390] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43016, 0, address(cd[4]), 128, mem[_43390], mem[_43390 + 196 len floor32(mem[_43390]) + 32]
                                else:
                                    _43394 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43394 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43394 + 36] = _43016
                                    mem[_43394 + 68] = 0
                                    mem[_43394 + 100] = address(cd[68])
                                    mem[_43394 + 132] = 128
                                    mem[_43394 + 164] = mem[_43394]
                                    s = 0
                                    while s < mem[_43394]:
                                        mem[s + _43394 + 196] = mem[s + _43394 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43394] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43016, 0, address(cd[68]), 128, mem[_43394 + 164 len mem[_43394] + 32]
                                    else:
                                        mem[floor32(mem[_43394]) + _43394 + 196] = mem[floor32(mem[_43394]) + _43394 + -(mem[_43394] % 32) + 228 len mem[_43394] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43016, 0, address(cd[68]), 128, mem[_43394], mem[_43394 + 196 len floor32(mem[_43394]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39823 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30850]
                            _43017 = mem[(32 * idx + 1) + _30850 + 32]
                            if mem[(32 * idx) + _39823 + 44 len 20] == mem[(32 * idx + 1) + _39823 + 44 len 20]:
                                if idx < mem[_39823] - 2:
                                    _43398 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43398 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43398 + 36] = 0
                                    mem[_43398 + 68] = _43017
                                    mem[_43398 + 100] = address(cd[4])
                                    mem[_43398 + 132] = 128
                                    mem[_43398 + 164] = mem[_43398]
                                    s = 0
                                    while s < mem[_43398]:
                                        mem[s + _43398 + 196] = mem[s + _43398 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43398] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43017, address(cd[4]), 128, mem[_43398 + 164 len mem[_43398] + 32]
                                    else:
                                        mem[floor32(mem[_43398]) + _43398 + 196] = mem[floor32(mem[_43398]) + _43398 + -(mem[_43398] % 32) + 228 len mem[_43398] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43017, address(cd[4]), 128, mem[_43398], mem[_43398 + 196 len floor32(mem[_43398]) + 32]
                                else:
                                    _43402 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43402 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43402 + 36] = 0
                                    mem[_43402 + 68] = _43017
                                    mem[_43402 + 100] = address(cd[68])
                                    mem[_43402 + 132] = 128
                                    mem[_43402 + 164] = mem[_43402]
                                    s = 0
                                    while s < mem[_43402]:
                                        mem[s + _43402 + 196] = mem[s + _43402 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43402] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43017, address(cd[68]), 128, mem[_43402 + 164 len mem[_43402] + 32]
                                    else:
                                        mem[floor32(mem[_43402]) + _43402 + 196] = mem[floor32(mem[_43402]) + _43402 + -(mem[_43402] % 32) + 228 len mem[_43402] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43017, address(cd[68]), 128, mem[_43402], mem[_43402 + 196 len floor32(mem[_43402]) + 32]
                            else:
                                if idx < mem[_39823] - 2:
                                    _43406 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43406 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43406 + 36] = _43017
                                    mem[_43406 + 68] = 0
                                    mem[_43406 + 100] = address(cd[4])
                                    mem[_43406 + 132] = 128
                                    mem[_43406 + 164] = mem[_43406]
                                    s = 0
                                    while s < mem[_43406]:
                                        mem[s + _43406 + 196] = mem[s + _43406 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43406] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43017, 0, address(cd[4]), 128, mem[_43406 + 164 len mem[_43406] + 32]
                                    else:
                                        mem[floor32(mem[_43406]) + _43406 + 196] = mem[floor32(mem[_43406]) + _43406 + -(mem[_43406] % 32) + 228 len mem[_43406] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43017, 0, address(cd[4]), 128, mem[_43406], mem[_43406 + 196 len floor32(mem[_43406]) + 32]
                                else:
                                    _43410 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43410 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43410 + 36] = _43017
                                    mem[_43410 + 68] = 0
                                    mem[_43410 + 100] = address(cd[68])
                                    mem[_43410 + 132] = 128
                                    mem[_43410 + 164] = mem[_43410]
                                    s = 0
                                    while s < mem[_43410]:
                                        mem[s + _43410 + 196] = mem[s + _43410 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43410] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43017, 0, address(cd[68]), 128, mem[_43410 + 164 len mem[_43410] + 32]
                                    else:
                                        mem[floor32(mem[_43410]) + _43410 + 196] = mem[floor32(mem[_43410]) + _43410 + -(mem[_43410] % 32) + 228 len mem[_43410] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43017, 0, address(cd[68]), 128, mem[_43410], mem[_43410 + 196 len floor32(mem[_43410]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
            else:
                require mem[96] >= 32
                if not mem[128]:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                mem[64] = _15713 + 580
                mem[_15713 + 196] = 0
                mem[_15713 + 228] = 0
                mem[_15713 + 260] = 0
                mem[_15713 + 292] = 0
                mem[_15713 + 324] = 0
                mem[_15713 + 356] = 0
                mem[_15713 + 388] = 0
                mem[_15713 + 420] = 0
                mem[_15713 + 452] = 0
                mem[_15713 + 484] = 0
                mem[_15713 + 516] = 0
                mem[_15713 + 548] = 0
                _30739 = mem[_15713]
                idx = 0
                s = 0
                while idx < _30739 - 1:
                    require idx < mem[_15713]
                    _30760 = mem[(32 * idx) + _15713 + 32]
                    require idx + 1 < mem[_15713]
                    _30789 = mem[(32 * idx + 1) + _15713 + 32]
                    mem[_15713 + 260] = mem[(32 * idx + 1) + _15713 + 44 len 20]
                    mem[_15713 + 228] = address(_30760)
                    if address(_30760) == address(_30789):
                        revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if address(_30760) < address(_30789):
                        if not address(_30760):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15713 + 292] = address(_30760)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15713 + 420] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15713 + 388] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30760) << 96 == address(_30760):
                            mem[_15713 + 484] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15713 + 452] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30760))
                            staticcall address(_30760).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + 324] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30760) << 96 == address(_30760):
                                    mem[_15713 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35536 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35536 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35536 + 36] = 0
                                        mem[_35536 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35536 + 100] = this.address
                                        mem[_35536 + 132] = 128
                                        mem[_35536 + 164] = mem[_35536]
                                        s = 0
                                        while s < mem[_35536]:
                                            mem[s + _35536 + 196] = mem[s + _35536 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35536] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35536 + 164 len mem[_35536] + 32]
                                        else:
                                            mem[floor32(mem[_35536]) + _35536 + 196] = mem[floor32(mem[_35536]) + _35536 + -(mem[_35536] % 32) + 228 len mem[_35536] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35536], mem[_35536 + 196 len floor32(mem[_35536]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35540 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35540 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35540 + 36] = 0
                                        mem[_35540 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35540 + 100] = this.address
                                        mem[_35540 + 132] = 128
                                        mem[_35540 + 164] = mem[_35540]
                                        s = 0
                                        while s < mem[_35540]:
                                            mem[s + _35540 + 196] = mem[s + _35540 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35540] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35540] + _35540 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35540]) + _35540 + 196] = mem[floor32(mem[_35540]) + _35540 + -(mem[_35540] % 32) + 228 len mem[_35540] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35540]) + _35540 + -mem[64] + 224]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35544 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35544 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35544 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35544 + 68] = 0
                                        mem[_35544 + 100] = this.address
                                        mem[_35544 + 132] = 128
                                        mem[_35544 + 164] = mem[_35544]
                                        s = 0
                                        while s < mem[_35544]:
                                            mem[s + _35544 + 196] = mem[s + _35544 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35544] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35544 + 164 len mem[_35544] + 32]
                                        else:
                                            mem[floor32(mem[_35544]) + _35544 + 196] = mem[floor32(mem[_35544]) + _35544 + -(mem[_35544] % 32) + 228 len mem[_35544] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35544], mem[_35544 + 196 len floor32(mem[_35544]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35548 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35548 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35548 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35548 + 68] = 0
                                        mem[_35548 + 100] = this.address
                                        mem[_35548 + 132] = 128
                                        mem[_35548 + 164] = mem[_35548]
                                        s = 0
                                        while s < mem[_35548]:
                                            mem[s + _35548 + 196] = mem[s + _35548 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35548] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35548] + _35548 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35548]) + _35548 + 196] = mem[floor32(mem[_35548]) + _35548 + -(mem[_35548] % 32) + 228 len mem[_35548] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35548]) + _35548 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30760) << 96 == address(_30760):
                                    mem[_15713 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36308 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36308 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36308 + 36] = 0
                                        mem[_36308 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36308 + 100] = this.address
                                        mem[_36308 + 132] = 128
                                        mem[_36308 + 164] = mem[_36308]
                                        s = 0
                                        while s < mem[_36308]:
                                            mem[s + _36308 + 196] = mem[s + _36308 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36308] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36308 + 164 len mem[_36308] + 32]
                                        else:
                                            mem[floor32(mem[_36308]) + _36308 + 196] = mem[floor32(mem[_36308]) + _36308 + -(mem[_36308] % 32) + 228 len mem[_36308] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36308], mem[_36308 + 196 len floor32(mem[_36308]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36312 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36312 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36312 + 36] = 0
                                        mem[_36312 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36312 + 100] = this.address
                                        mem[_36312 + 132] = 128
                                        mem[_36312 + 164] = mem[_36312]
                                        s = 0
                                        while s < mem[_36312]:
                                            mem[s + _36312 + 196] = mem[s + _36312 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36312] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36312 + 164 len mem[_36312] + 32]
                                        else:
                                            mem[floor32(mem[_36312]) + _36312 + 196] = mem[floor32(mem[_36312]) + _36312 + -(mem[_36312] % 32) + 228 len mem[_36312] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36312], mem[_36312 + 196 len floor32(mem[_36312]) + 32]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36316 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36316 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36316 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36316 + 68] = 0
                                        mem[_36316 + 100] = this.address
                                        mem[_36316 + 132] = 128
                                        mem[_36316 + 164] = mem[_36316]
                                        s = 0
                                        while s < mem[_36316]:
                                            mem[s + _36316 + 196] = mem[s + _36316 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36316] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36316] + _36316 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36316]) + _36316 + 196] = mem[floor32(mem[_36316]) + _36316 + -(mem[_36316] % 32) + 228 len mem[_36316] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36316]) + _36316 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36320 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36320 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36320 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36320 + 68] = 0
                                        mem[_36320 + 100] = this.address
                                        mem[_36320 + 132] = 128
                                        mem[_36320 + 164] = mem[_36320]
                                        s = 0
                                        while s < mem[_36320]:
                                            mem[s + _36320 + 196] = mem[s + _36320 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36320] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36320 + 164 len mem[_36320] + 32]
                                        else:
                                            mem[floor32(mem[_36320]) + _36320 + 196] = mem[floor32(mem[_36320]) + _36320 + -(mem[_36320] % 32) + 228 len mem[_36320] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36320], mem[_36320 + 196 len floor32(mem[_36320]) + 32]
                        else:
                            mem[_15713 + 484] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15713 + 452] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30760))
                            staticcall address(_30760).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + 324] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30760) << 96 == address(_30760):
                                    mem[_15713 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35554 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35554 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35554 + 36] = 0
                                        mem[_35554 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35554 + 100] = this.address
                                        mem[_35554 + 132] = 128
                                        mem[_35554 + 164] = mem[_35554]
                                        s = 0
                                        while s < mem[_35554]:
                                            mem[s + _35554 + 196] = mem[s + _35554 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35554] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35554] + _35554 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35554]) + _35554 + 196] = mem[floor32(mem[_35554]) + _35554 + -(mem[_35554] % 32) + 228 len mem[_35554] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35554]) + _35554 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35558 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35558 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35558 + 36] = 0
                                        mem[_35558 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35558 + 100] = this.address
                                        mem[_35558 + 132] = 128
                                        mem[_35558 + 164] = mem[_35558]
                                        s = 0
                                        while s < mem[_35558]:
                                            mem[s + _35558 + 196] = mem[s + _35558 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35558] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35558 + 164 len mem[_35558] + 32]
                                        else:
                                            mem[floor32(mem[_35558]) + _35558 + 196] = mem[floor32(mem[_35558]) + _35558 + -(mem[_35558] % 32) + 228 len mem[_35558] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35558], mem[_35558 + 196 len floor32(mem[_35558]) + 32]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35562 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35562 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35562 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35562 + 68] = 0
                                        mem[_35562 + 100] = this.address
                                        mem[_35562 + 132] = 128
                                        mem[_35562 + 164] = mem[_35562]
                                        s = 0
                                        while s < mem[_35562]:
                                            mem[s + _35562 + 196] = mem[s + _35562 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35562] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35562] + _35562 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35562]) + _35562 + 196] = mem[floor32(mem[_35562]) + _35562 + -(mem[_35562] % 32) + 228 len mem[_35562] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35562]) + _35562 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35566 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35566 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35566 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35566 + 68] = 0
                                        mem[_35566 + 100] = this.address
                                        mem[_35566 + 132] = 128
                                        mem[_35566 + 164] = mem[_35566]
                                        s = 0
                                        while s < mem[_35566]:
                                            mem[s + _35566 + 196] = mem[s + _35566 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35566] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35566] + _35566 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35566]) + _35566 + 196] = mem[floor32(mem[_35566]) + _35566 + -(mem[_35566] % 32) + 228 len mem[_35566] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35566]) + _35566 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30760) << 96 == address(_30760):
                                    mem[_15713 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36328 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36328 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36328 + 36] = 0
                                        mem[_36328 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36328 + 100] = this.address
                                        mem[_36328 + 132] = 128
                                        mem[_36328 + 164] = mem[_36328]
                                        s = 0
                                        while s < mem[_36328]:
                                            mem[s + _36328 + 196] = mem[s + _36328 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36328] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36328 + 164 len mem[_36328] + 32]
                                        else:
                                            mem[floor32(mem[_36328]) + _36328 + 196] = mem[floor32(mem[_36328]) + _36328 + -(mem[_36328] % 32) + 228 len mem[_36328] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36328], mem[_36328 + 196 len floor32(mem[_36328]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36332 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36332 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36332 + 36] = 0
                                        mem[_36332 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36332 + 100] = this.address
                                        mem[_36332 + 132] = 128
                                        mem[_36332 + 164] = mem[_36332]
                                        s = 0
                                        while s < mem[_36332]:
                                            mem[s + _36332 + 196] = mem[s + _36332 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36332] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36332] + _36332 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36332]) + _36332 + 196] = mem[floor32(mem[_36332]) + _36332 + -(mem[_36332] % 32) + 228 len mem[_36332] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36332]) + _36332 + -mem[64] + 224]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36336 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36336 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36336 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36336 + 68] = 0
                                        mem[_36336 + 100] = this.address
                                        mem[_36336 + 132] = 128
                                        mem[_36336 + 164] = mem[_36336]
                                        s = 0
                                        while s < mem[_36336]:
                                            mem[s + _36336 + 196] = mem[s + _36336 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36336] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36336] + _36336 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36336]) + _36336 + 196] = mem[floor32(mem[_36336]) + _36336 + -(mem[_36336] % 32) + 228 len mem[_36336] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36336]) + _36336 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36340 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36340 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36340 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36340 + 68] = 0
                                        mem[_36340 + 100] = this.address
                                        mem[_36340 + 132] = 128
                                        mem[_36340 + 164] = mem[_36340]
                                        s = 0
                                        while s < mem[_36340]:
                                            mem[s + _36340 + 196] = mem[s + _36340 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36340] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36340] + _36340 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36340]) + _36340 + 196] = mem[floor32(mem[_36340]) + _36340 + -(mem[_36340] % 32) + 228 len mem[_36340] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36340]) + _36340 + -mem[64] + 224]
                    else:
                        if not address(_30789):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15713 + 292] = address(_30789)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15713 + 420] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15713 + 388] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30789) << 96 == address(_30760):
                            mem[_15713 + 484] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15713 + 452] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30760))
                            staticcall address(_30760).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + 324] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30789) << 96 == address(_30760):
                                    mem[_15713 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35572 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35572 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35572 + 36] = 0
                                        mem[_35572 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35572 + 100] = this.address
                                        mem[_35572 + 132] = 128
                                        mem[_35572 + 164] = mem[_35572]
                                        s = 0
                                        while s < mem[_35572]:
                                            mem[s + _35572 + 196] = mem[s + _35572 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35572] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35572] + _35572 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35572]) + _35572 + 196] = mem[floor32(mem[_35572]) + _35572 + -(mem[_35572] % 32) + 228 len mem[_35572] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35572]) + _35572 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35576 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35576 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35576 + 36] = 0
                                        mem[_35576 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35576 + 100] = this.address
                                        mem[_35576 + 132] = 128
                                        mem[_35576 + 164] = mem[_35576]
                                        s = 0
                                        while s < mem[_35576]:
                                            mem[s + _35576 + 196] = mem[s + _35576 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35576] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35576 + 164 len mem[_35576] + 32]
                                        else:
                                            mem[floor32(mem[_35576]) + _35576 + 196] = mem[floor32(mem[_35576]) + _35576 + -(mem[_35576] % 32) + 228 len mem[_35576] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35576], mem[_35576 + 196 len floor32(mem[_35576]) + 32]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35580 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35580 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35580 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35580 + 68] = 0
                                        mem[_35580 + 100] = this.address
                                        mem[_35580 + 132] = 128
                                        mem[_35580 + 164] = mem[_35580]
                                        s = 0
                                        while s < mem[_35580]:
                                            mem[s + _35580 + 196] = mem[s + _35580 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35580] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35580] + _35580 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35580]) + _35580 + 196] = mem[floor32(mem[_35580]) + _35580 + -(mem[_35580] % 32) + 228 len mem[_35580] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35580]) + _35580 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35584 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35584 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35584 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35584 + 68] = 0
                                        mem[_35584 + 100] = this.address
                                        mem[_35584 + 132] = 128
                                        mem[_35584 + 164] = mem[_35584]
                                        s = 0
                                        while s < mem[_35584]:
                                            mem[s + _35584 + 196] = mem[s + _35584 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35584] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35584] + _35584 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35584]) + _35584 + 196] = mem[floor32(mem[_35584]) + _35584 + -(mem[_35584] % 32) + 228 len mem[_35584] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35584]) + _35584 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30789) << 96 == address(_30760):
                                    mem[_15713 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36348 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36348 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36348 + 36] = 0
                                        mem[_36348 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36348 + 100] = this.address
                                        mem[_36348 + 132] = 128
                                        mem[_36348 + 164] = mem[_36348]
                                        s = 0
                                        while s < mem[_36348]:
                                            mem[s + _36348 + 196] = mem[s + _36348 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36348] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36348 + 164 len mem[_36348] + 32]
                                        else:
                                            mem[floor32(mem[_36348]) + _36348 + 196] = mem[floor32(mem[_36348]) + _36348 + -(mem[_36348] % 32) + 228 len mem[_36348] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36348], mem[_36348 + 196 len floor32(mem[_36348]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36352 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36352 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36352 + 36] = 0
                                        mem[_36352 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36352 + 100] = this.address
                                        mem[_36352 + 132] = 128
                                        mem[_36352 + 164] = mem[_36352]
                                        s = 0
                                        while s < mem[_36352]:
                                            mem[s + _36352 + 196] = mem[s + _36352 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36352] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36352 + 164 len mem[_36352] + 32]
                                        else:
                                            mem[floor32(mem[_36352]) + _36352 + 196] = mem[floor32(mem[_36352]) + _36352 + -(mem[_36352] % 32) + 228 len mem[_36352] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36352], mem[_36352 + 196 len floor32(mem[_36352]) + 32]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36356 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36356 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36356 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36356 + 68] = 0
                                        mem[_36356 + 100] = this.address
                                        mem[_36356 + 132] = 128
                                        mem[_36356 + 164] = mem[_36356]
                                        s = 0
                                        while s < mem[_36356]:
                                            mem[s + _36356 + 196] = mem[s + _36356 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36356] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36356] + _36356 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36356]) + _36356 + 196] = mem[floor32(mem[_36356]) + _36356 + -(mem[_36356] % 32) + 228 len mem[_36356] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36356]) + _36356 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36360 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36360 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36360 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36360 + 68] = 0
                                        mem[_36360 + 100] = this.address
                                        mem[_36360 + 132] = 128
                                        mem[_36360 + 164] = mem[_36360]
                                        s = 0
                                        while s < mem[_36360]:
                                            mem[s + _36360 + 196] = mem[s + _36360 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36360] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36360] + _36360 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36360]) + _36360 + 196] = mem[floor32(mem[_36360]) + _36360 + -(mem[_36360] % 32) + 228 len mem[_36360] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36360]) + _36360 + -mem[64] + 224]
                        else:
                            mem[_15713 + 484] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15713 + 452] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30760))
                            staticcall address(_30760).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + 324] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30789) << 96 == address(_30760):
                                    mem[_15713 + 548] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35590 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35590 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35590 + 36] = 0
                                        mem[_35590 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35590 + 100] = this.address
                                        mem[_35590 + 132] = 128
                                        mem[_35590 + 164] = mem[_35590]
                                        s = 0
                                        while s < mem[_35590]:
                                            mem[s + _35590 + 196] = mem[s + _35590 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35590] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35590 + 164 len mem[_35590] + 32]
                                        else:
                                            mem[floor32(mem[_35590]) + _35590 + 196] = mem[floor32(mem[_35590]) + _35590 + -(mem[_35590] % 32) + 228 len mem[_35590] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35590], mem[_35590 + 196 len floor32(mem[_35590]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35594 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35594 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35594 + 36] = 0
                                        mem[_35594 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35594 + 100] = this.address
                                        mem[_35594 + 132] = 128
                                        mem[_35594 + 164] = mem[_35594]
                                        s = 0
                                        while s < mem[_35594]:
                                            mem[s + _35594 + 196] = mem[s + _35594 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35594] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35594] + _35594 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35594]) + _35594 + 196] = mem[floor32(mem[_35594]) + _35594 + -(mem[_35594] % 32) + 228 len mem[_35594] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35594]) + _35594 + -mem[64] + 224]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _35598 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35598 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35598 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35598 + 68] = 0
                                        mem[_35598 + 100] = this.address
                                        mem[_35598 + 132] = 128
                                        mem[_35598 + 164] = mem[_35598]
                                        s = 0
                                        while s < mem[_35598]:
                                            mem[s + _35598 + 196] = mem[s + _35598 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35598] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35598 + 164 len mem[_35598] + 32]
                                        else:
                                            mem[floor32(mem[_35598]) + _35598 + 196] = mem[floor32(mem[_35598]) + _35598 + -(mem[_35598] % 32) + 228 len mem[_35598] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35598], mem[_35598 + 196 len floor32(mem[_35598]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _35602 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35602 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35602 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35602 + 68] = 0
                                        mem[_35602 + 100] = this.address
                                        mem[_35602 + 132] = 128
                                        mem[_35602 + 164] = mem[_35602]
                                        s = 0
                                        while s < mem[_35602]:
                                            mem[s + _35602 + 196] = mem[s + _35602 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35602] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35602 + 164 len mem[_35602] + 32]
                                        else:
                                            mem[floor32(mem[_35602]) + _35602 + 196] = mem[floor32(mem[_35602]) + _35602 + -(mem[_35602] % 32) + 228 len mem[_35602] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35602], mem[_35602 + 196 len floor32(mem[_35602]) + 32]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + 356] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30789) << 96 == address(_30760):
                                    mem[_15713 + 548] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + 516] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36368 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36368 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36368 + 36] = 0
                                        mem[_36368 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36368 + 100] = this.address
                                        mem[_36368 + 132] = 128
                                        mem[_36368 + 164] = mem[_36368]
                                        s = 0
                                        while s < mem[_36368]:
                                            mem[s + _36368 + 196] = mem[s + _36368 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36368] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36368 + 164 len mem[_36368] + 32]
                                        else:
                                            mem[floor32(mem[_36368]) + _36368 + 196] = mem[floor32(mem[_36368]) + _36368 + -(mem[_36368] % 32) + 228 len mem[_36368] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36368], mem[_36368 + 196 len floor32(mem[_36368]) + 32]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36372 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36372 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36372 + 36] = 0
                                        mem[_36372 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36372 + 100] = this.address
                                        mem[_36372 + 132] = 128
                                        mem[_36372 + 164] = mem[_36372]
                                        s = 0
                                        while s < mem[_36372]:
                                            mem[s + _36372 + 196] = mem[s + _36372 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36372] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36372] + _36372 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36372]) + _36372 + 196] = mem[floor32(mem[_36372]) + _36372 + -(mem[_36372] % 32) + 228 len mem[_36372] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36372]) + _36372 + -mem[64] + 224]
                                else:
                                    mem[_15713 + 548] = 0
                                    mem[_15713 + 516] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + 196] = address(cd[4])
                                        _36376 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36376 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36376 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36376 + 68] = 0
                                        mem[_36376 + 100] = this.address
                                        mem[_36376 + 132] = 128
                                        mem[_36376 + 164] = mem[_36376]
                                        s = 0
                                        while s < mem[_36376]:
                                            mem[s + _36376 + 196] = mem[s + _36376 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36376] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36376] + _36376 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36376]) + _36376 + 196] = mem[floor32(mem[_36376]) + _36376 + -(mem[_36376] % 32) + 228 len mem[_36376] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36376]) + _36376 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + 196] = this.address
                                        _36380 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36380 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36380 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36380 + 68] = 0
                                        mem[_36380 + 100] = this.address
                                        mem[_36380 + 132] = 128
                                        mem[_36380 + 164] = mem[_36380]
                                        s = 0
                                        while s < mem[_36380]:
                                            mem[s + _36380 + 196] = mem[s + _36380 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36380] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36380] + _36380 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36380]) + _36380 + 196] = mem[floor32(mem[_36380]) + _36380 + -(mem[_36380] % 32) + 228 len mem[_36380] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36380]) + _36380 + -mem[64] + 224]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = mem[_15713 + 356]
                    continue 
                if s < _15737 * cd[100] / 100:
                    revert with 0, '-,'
                _30786 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                mem[_30786] = ('cd', 36).length
                mem[_30786 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_30786 + (32 * ('cd', 36).length) + 32] = 0
                if ('cd', 36).length < 2:
                    revert with 0, 'PancakeLibrary: INVALID_PATH'
                require ('cd', 36).length <= test266151307()
                _30851 = mem[64]
                mem[mem[64]] = ('cd', 36).length
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                if not ('cd', 36).length:
                    require 0 < mem[_30851]
                    mem[_30851 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30786]
                        _38709 = mem[(32 * idx) + _30786 + 32]
                        require idx + 1 < mem[_30786]
                        _39121 = mem[(32 * idx + 1) + _30786 + 32]
                        if mem[(32 * idx) + _30786 + 44 len 20] == mem[(32 * idx + 1) + _30786 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30786 + 44 len 20] < mem[(32 * idx + 1) + _30786 + 44 len 20]:
                            if not mem[(32 * idx) + _30786 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38709) == address(_38709):
                                require idx < mem[_30851]
                                if mem[(32 * idx) + _30851 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30851 + 32] / 9975 != mem[(32 * idx) + _30851 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                    require idx + 1 < mem[_30851]
                                    mem[(32 * idx + 1) + _30851 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30851 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30851 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                    require idx + 1 < mem[_30851]
                                    mem[(32 * idx + 1) + _30851 + 32] = 9975 * mem[(32 * idx) + _30851 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30786 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_39121) == address(_38709):
                                require idx < mem[_30851]
                                if mem[(32 * idx) + _30851 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30851 + 32] / 9975 != mem[(32 * idx) + _30851 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                    require idx + 1 < mem[_30851]
                                    mem[(32 * idx + 1) + _30851 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30851 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30851 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                    require idx + 1 < mem[_30851]
                                    mem[(32 * idx + 1) + _30851 + 32] = 9975 * mem[(32 * idx) + _30851 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30851]
                        if mem[(32 * idx) + _30851 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30851 + 32] / 9975 != mem[(32 * idx) + _30851 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30851 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30851 + 32])
                            require idx + 1 < mem[_30851]
                            mem[(32 * idx + 1) + _30851 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30851 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30851 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30851 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30851 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30851 + 32])
                            require idx + 1 < mem[_30851]
                            mem[(32 * idx + 1) + _30851 + 32] = 9975 * mem[(32 * idx) + _30851 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30851 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30851]
                    _39118 = mem[_30851 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _39118
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _39118
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39824 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39824] = ('cd', 36).length
                    mem[_39824 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39824 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39824]
                        require idx + 1 < mem[_39824]
                        if mem[(32 * idx) + _39824 + 44 len 20] == mem[(32 * idx + 1) + _39824 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39824 + 44 len 20] < mem[(32 * idx + 1) + _39824 + 44 len 20]:
                            if not mem[(32 * idx) + _39824 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30851]
                            _43018 = mem[(32 * idx + 1) + _30851 + 32]
                            if mem[(32 * idx) + _39824 + 44 len 20] == mem[(32 * idx) + _39824 + 44 len 20]:
                                if idx < mem[_39824] - 2:
                                    _43414 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43414 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43414 + 36] = 0
                                    mem[_43414 + 68] = _43018
                                    mem[_43414 + 100] = address(cd[4])
                                    mem[_43414 + 132] = 128
                                    mem[_43414 + 164] = mem[_43414]
                                    s = 0
                                    while s < mem[_43414]:
                                        mem[s + _43414 + 196] = mem[s + _43414 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43414] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43018, address(cd[4]), 128, mem[_43414 + 164 len mem[_43414] + 32]
                                    else:
                                        mem[floor32(mem[_43414]) + _43414 + 196] = mem[floor32(mem[_43414]) + _43414 + -(mem[_43414] % 32) + 228 len mem[_43414] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43018, address(cd[4]), 128, mem[_43414], mem[_43414 + 196 len floor32(mem[_43414]) + 32]
                                else:
                                    _43418 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43418 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43418 + 36] = 0
                                    mem[_43418 + 68] = _43018
                                    mem[_43418 + 100] = address(cd[68])
                                    mem[_43418 + 132] = 128
                                    mem[_43418 + 164] = mem[_43418]
                                    s = 0
                                    while s < mem[_43418]:
                                        mem[s + _43418 + 196] = mem[s + _43418 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43418] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43018, address(cd[68]), 128, mem[_43418 + 164 len mem[_43418] + 32]
                                    else:
                                        mem[floor32(mem[_43418]) + _43418 + 196] = mem[floor32(mem[_43418]) + _43418 + -(mem[_43418] % 32) + 228 len mem[_43418] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43018, address(cd[68]), 128, mem[_43418], mem[_43418 + 196 len floor32(mem[_43418]) + 32]
                            else:
                                if idx < mem[_39824] - 2:
                                    _43422 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43422 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43422 + 36] = _43018
                                    mem[_43422 + 68] = 0
                                    mem[_43422 + 100] = address(cd[4])
                                    mem[_43422 + 132] = 128
                                    mem[_43422 + 164] = mem[_43422]
                                    s = 0
                                    while s < mem[_43422]:
                                        mem[s + _43422 + 196] = mem[s + _43422 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43422] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43018, 0, address(cd[4]), 128, mem[_43422 + 164 len mem[_43422] + 32]
                                    else:
                                        mem[floor32(mem[_43422]) + _43422 + 196] = mem[floor32(mem[_43422]) + _43422 + -(mem[_43422] % 32) + 228 len mem[_43422] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43018, 0, address(cd[4]), 128, mem[_43422], mem[_43422 + 196 len floor32(mem[_43422]) + 32]
                                else:
                                    _43426 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43426 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43426 + 36] = _43018
                                    mem[_43426 + 68] = 0
                                    mem[_43426 + 100] = address(cd[68])
                                    mem[_43426 + 132] = 128
                                    mem[_43426 + 164] = mem[_43426]
                                    s = 0
                                    while s < mem[_43426]:
                                        mem[s + _43426 + 196] = mem[s + _43426 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43426] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43018, 0, address(cd[68]), 128, mem[_43426 + 164 len mem[_43426] + 32]
                                    else:
                                        mem[floor32(mem[_43426]) + _43426 + 196] = mem[floor32(mem[_43426]) + _43426 + -(mem[_43426] % 32) + 228 len mem[_43426] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43018, 0, address(cd[68]), 128, mem[_43426], mem[_43426 + 196 len floor32(mem[_43426]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39824 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30851]
                            _43019 = mem[(32 * idx + 1) + _30851 + 32]
                            if mem[(32 * idx) + _39824 + 44 len 20] == mem[(32 * idx + 1) + _39824 + 44 len 20]:
                                if idx < mem[_39824] - 2:
                                    _43430 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43430 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43430 + 36] = 0
                                    mem[_43430 + 68] = _43019
                                    mem[_43430 + 100] = address(cd[4])
                                    mem[_43430 + 132] = 128
                                    mem[_43430 + 164] = mem[_43430]
                                    s = 0
                                    while s < mem[_43430]:
                                        mem[s + _43430 + 196] = mem[s + _43430 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43430] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43019, address(cd[4]), 128, mem[_43430 + 164 len mem[_43430] + 32]
                                    else:
                                        mem[floor32(mem[_43430]) + _43430 + 196] = mem[floor32(mem[_43430]) + _43430 + -(mem[_43430] % 32) + 228 len mem[_43430] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43019, address(cd[4]), 128, mem[_43430], mem[_43430 + 196 len floor32(mem[_43430]) + 32]
                                else:
                                    _43434 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43434 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43434 + 36] = 0
                                    mem[_43434 + 68] = _43019
                                    mem[_43434 + 100] = address(cd[68])
                                    mem[_43434 + 132] = 128
                                    mem[_43434 + 164] = mem[_43434]
                                    s = 0
                                    while s < mem[_43434]:
                                        mem[s + _43434 + 196] = mem[s + _43434 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43434] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43019, address(cd[68]), 128, mem[_43434 + 164 len mem[_43434] + 32]
                                    else:
                                        mem[floor32(mem[_43434]) + _43434 + 196] = mem[floor32(mem[_43434]) + _43434 + -(mem[_43434] % 32) + 228 len mem[_43434] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43019, address(cd[68]), 128, mem[_43434], mem[_43434 + 196 len floor32(mem[_43434]) + 32]
                            else:
                                if idx < mem[_39824] - 2:
                                    _43438 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43438 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43438 + 36] = _43019
                                    mem[_43438 + 68] = 0
                                    mem[_43438 + 100] = address(cd[4])
                                    mem[_43438 + 132] = 128
                                    mem[_43438 + 164] = mem[_43438]
                                    s = 0
                                    while s < mem[_43438]:
                                        mem[s + _43438 + 196] = mem[s + _43438 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43438] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43019, 0, address(cd[4]), 128, mem[_43438 + 164 len mem[_43438] + 32]
                                    else:
                                        mem[floor32(mem[_43438]) + _43438 + 196] = mem[floor32(mem[_43438]) + _43438 + -(mem[_43438] % 32) + 228 len mem[_43438] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43019, 0, address(cd[4]), 128, mem[_43438], mem[_43438 + 196 len floor32(mem[_43438]) + 32]
                                else:
                                    _43442 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43442 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43442 + 36] = _43019
                                    mem[_43442 + 68] = 0
                                    mem[_43442 + 100] = address(cd[68])
                                    mem[_43442 + 132] = 128
                                    mem[_43442 + 164] = mem[_43442]
                                    s = 0
                                    while s < mem[_43442]:
                                        mem[s + _43442 + 196] = mem[s + _43442 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43442] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43019, 0, address(cd[68]), 128, mem[_43442 + 164 len mem[_43442] + 32]
                                    else:
                                        mem[floor32(mem[_43442]) + _43442 + 196] = mem[floor32(mem[_43442]) + _43442 + -(mem[_43442] % 32) + 228 len mem[_43442] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43019, 0, address(cd[68]), 128, mem[_43442], mem[_43442 + 196 len floor32(mem[_43442]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                else:
                    mem[_30851 + 32 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
                    require 0 < mem[_30851]
                    mem[_30851 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30786]
                        _38712 = mem[(32 * idx) + _30786 + 32]
                        require idx + 1 < mem[_30786]
                        _39125 = mem[(32 * idx + 1) + _30786 + 32]
                        if mem[(32 * idx) + _30786 + 44 len 20] == mem[(32 * idx + 1) + _30786 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30786 + 44 len 20] < mem[(32 * idx + 1) + _30786 + 44 len 20]:
                            if not mem[(32 * idx) + _30786 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38712) == address(_38712):
                                require idx < mem[_30851]
                                if mem[(32 * idx) + _30851 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30851 + 32] / 9975 != mem[(32 * idx) + _30851 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                    require idx + 1 < mem[_30851]
                                    mem[(32 * idx + 1) + _30851 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30851 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30851 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                    require idx + 1 < mem[_30851]
                                    mem[(32 * idx + 1) + _30851 + 32] = 9975 * mem[(32 * idx) + _30851 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30786 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_39125) == address(_38712):
                                require idx < mem[_30851]
                                if mem[(32 * idx) + _30851 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30851 + 32] / 9975 != mem[(32 * idx) + _30851 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                    require idx + 1 < mem[_30851]
                                    mem[(32 * idx + 1) + _30851 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30851 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30851 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                    require idx + 1 < mem[_30851]
                                    mem[(32 * idx + 1) + _30851 + 32] = 9975 * mem[(32 * idx) + _30851 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30851 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30851]
                        if mem[(32 * idx) + _30851 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30851 + 32] / 9975 != mem[(32 * idx) + _30851 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30851 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30851 + 32])
                            require idx + 1 < mem[_30851]
                            mem[(32 * idx + 1) + _30851 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30851 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30851 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30851 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30851 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30851 + 32])
                            require idx + 1 < mem[_30851]
                            mem[(32 * idx + 1) + _30851 + 32] = 9975 * mem[(32 * idx) + _30851 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30851 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30851]
                    _39122 = mem[_30851 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _39122
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _39122
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39825 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39825] = ('cd', 36).length
                    mem[_39825 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39825 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39825]
                        require idx + 1 < mem[_39825]
                        if mem[(32 * idx) + _39825 + 44 len 20] == mem[(32 * idx + 1) + _39825 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39825 + 44 len 20] < mem[(32 * idx + 1) + _39825 + 44 len 20]:
                            if not mem[(32 * idx) + _39825 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30851]
                            _43020 = mem[(32 * idx + 1) + _30851 + 32]
                            if mem[(32 * idx) + _39825 + 44 len 20] == mem[(32 * idx) + _39825 + 44 len 20]:
                                if idx < mem[_39825] - 2:
                                    _43446 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43446 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43446 + 36] = 0
                                    mem[_43446 + 68] = _43020
                                    mem[_43446 + 100] = address(cd[4])
                                    mem[_43446 + 132] = 128
                                    mem[_43446 + 164] = mem[_43446]
                                    s = 0
                                    while s < mem[_43446]:
                                        mem[s + _43446 + 196] = mem[s + _43446 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43446] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43020, address(cd[4]), 128, mem[_43446 + 164 len mem[_43446] + 32]
                                    else:
                                        mem[floor32(mem[_43446]) + _43446 + 196] = mem[floor32(mem[_43446]) + _43446 + -(mem[_43446] % 32) + 228 len mem[_43446] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43020, address(cd[4]), 128, mem[_43446], mem[_43446 + 196 len floor32(mem[_43446]) + 32]
                                else:
                                    _43450 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43450 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43450 + 36] = 0
                                    mem[_43450 + 68] = _43020
                                    mem[_43450 + 100] = address(cd[68])
                                    mem[_43450 + 132] = 128
                                    mem[_43450 + 164] = mem[_43450]
                                    s = 0
                                    while s < mem[_43450]:
                                        mem[s + _43450 + 196] = mem[s + _43450 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43450] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43020, address(cd[68]), 128, mem[_43450 + 164 len mem[_43450] + 32]
                                    else:
                                        mem[floor32(mem[_43450]) + _43450 + 196] = mem[floor32(mem[_43450]) + _43450 + -(mem[_43450] % 32) + 228 len mem[_43450] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43020, address(cd[68]), 128, mem[_43450], mem[_43450 + 196 len floor32(mem[_43450]) + 32]
                            else:
                                if idx < mem[_39825] - 2:
                                    _43454 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43454 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43454 + 36] = _43020
                                    mem[_43454 + 68] = 0
                                    mem[_43454 + 100] = address(cd[4])
                                    mem[_43454 + 132] = 128
                                    mem[_43454 + 164] = mem[_43454]
                                    s = 0
                                    while s < mem[_43454]:
                                        mem[s + _43454 + 196] = mem[s + _43454 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43454] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43020, 0, address(cd[4]), 128, mem[_43454 + 164 len mem[_43454] + 32]
                                    else:
                                        mem[floor32(mem[_43454]) + _43454 + 196] = mem[floor32(mem[_43454]) + _43454 + -(mem[_43454] % 32) + 228 len mem[_43454] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43020, 0, address(cd[4]), 128, mem[_43454], mem[_43454 + 196 len floor32(mem[_43454]) + 32]
                                else:
                                    _43458 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43458 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43458 + 36] = _43020
                                    mem[_43458 + 68] = 0
                                    mem[_43458 + 100] = address(cd[68])
                                    mem[_43458 + 132] = 128
                                    mem[_43458 + 164] = mem[_43458]
                                    s = 0
                                    while s < mem[_43458]:
                                        mem[s + _43458 + 196] = mem[s + _43458 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43458] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43020, 0, address(cd[68]), 128, mem[_43458 + 164 len mem[_43458] + 32]
                                    else:
                                        mem[floor32(mem[_43458]) + _43458 + 196] = mem[floor32(mem[_43458]) + _43458 + -(mem[_43458] % 32) + 228 len mem[_43458] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43020, 0, address(cd[68]), 128, mem[_43458], mem[_43458 + 196 len floor32(mem[_43458]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39825 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30851]
                            _43021 = mem[(32 * idx + 1) + _30851 + 32]
                            if mem[(32 * idx) + _39825 + 44 len 20] == mem[(32 * idx + 1) + _39825 + 44 len 20]:
                                if idx < mem[_39825] - 2:
                                    _43462 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43462 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43462 + 36] = 0
                                    mem[_43462 + 68] = _43021
                                    mem[_43462 + 100] = address(cd[4])
                                    mem[_43462 + 132] = 128
                                    mem[_43462 + 164] = mem[_43462]
                                    s = 0
                                    while s < mem[_43462]:
                                        mem[s + _43462 + 196] = mem[s + _43462 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43462] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43021, address(cd[4]), 128, mem[_43462 + 164 len mem[_43462] + 32]
                                    else:
                                        mem[floor32(mem[_43462]) + _43462 + 196] = mem[floor32(mem[_43462]) + _43462 + -(mem[_43462] % 32) + 228 len mem[_43462] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43021, address(cd[4]), 128, mem[_43462], mem[_43462 + 196 len floor32(mem[_43462]) + 32]
                                else:
                                    _43466 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43466 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43466 + 36] = 0
                                    mem[_43466 + 68] = _43021
                                    mem[_43466 + 100] = address(cd[68])
                                    mem[_43466 + 132] = 128
                                    mem[_43466 + 164] = mem[_43466]
                                    s = 0
                                    while s < mem[_43466]:
                                        mem[s + _43466 + 196] = mem[s + _43466 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43466] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43021, address(cd[68]), 128, mem[_43466 + 164 len mem[_43466] + 32]
                                    else:
                                        mem[floor32(mem[_43466]) + _43466 + 196] = mem[floor32(mem[_43466]) + _43466 + -(mem[_43466] % 32) + 228 len mem[_43466] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43021, address(cd[68]), 128, mem[_43466], mem[_43466 + 196 len floor32(mem[_43466]) + 32]
                            else:
                                if idx < mem[_39825] - 2:
                                    _43470 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43470 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43470 + 36] = _43021
                                    mem[_43470 + 68] = 0
                                    mem[_43470 + 100] = address(cd[4])
                                    mem[_43470 + 132] = 128
                                    mem[_43470 + 164] = mem[_43470]
                                    s = 0
                                    while s < mem[_43470]:
                                        mem[s + _43470 + 196] = mem[s + _43470 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43470] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43021, 0, address(cd[4]), 128, mem[_43470 + 164 len mem[_43470] + 32]
                                    else:
                                        mem[floor32(mem[_43470]) + _43470 + 196] = mem[floor32(mem[_43470]) + _43470 + -(mem[_43470] % 32) + 228 len mem[_43470] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43021, 0, address(cd[4]), 128, mem[_43470], mem[_43470 + 196 len floor32(mem[_43470]) + 32]
                                else:
                                    _43474 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43474 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43474 + 36] = _43021
                                    mem[_43474 + 68] = 0
                                    mem[_43474 + 100] = address(cd[68])
                                    mem[_43474 + 132] = 128
                                    mem[_43474 + 164] = mem[_43474]
                                    s = 0
                                    while s < mem[_43474]:
                                        mem[s + _43474 + 196] = mem[s + _43474 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43474] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43021, 0, address(cd[68]), 128, mem[_43474 + 164 len mem[_43474] + 32]
                                    else:
                                        mem[floor32(mem[_43474]) + _43474 + 196] = mem[floor32(mem[_43474]) + _43474 + -(mem[_43474] % 32) + 228 len mem[_43474] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43021, 0, address(cd[68]), 128, mem[_43474], mem[_43474 + 196 len floor32(mem[_43474]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
        else:
            mem[_15713 + 196] = return_data.size
            mem[_15713 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if not return_data.size:
                mem[64] = _15713 + ceil32(return_data.size) + 581
                mem[_15713 + ceil32(return_data.size) + 197] = 0
                mem[_15713 + ceil32(return_data.size) + 229] = 0
                mem[_15713 + ceil32(return_data.size) + 261] = 0
                mem[_15713 + ceil32(return_data.size) + 293] = 0
                mem[_15713 + ceil32(return_data.size) + 325] = 0
                mem[_15713 + ceil32(return_data.size) + 357] = 0
                mem[_15713 + ceil32(return_data.size) + 389] = 0
                mem[_15713 + ceil32(return_data.size) + 421] = 0
                mem[_15713 + ceil32(return_data.size) + 453] = 0
                mem[_15713 + ceil32(return_data.size) + 485] = 0
                mem[_15713 + ceil32(return_data.size) + 517] = 0
                mem[_15713 + ceil32(return_data.size) + 549] = 0
                _30740 = mem[_15713]
                idx = 0
                s = 0
                while idx < _30740 - 1:
                    require idx < mem[_15713]
                    _30762 = mem[(32 * idx) + _15713 + 32]
                    require idx + 1 < mem[_15713]
                    _30793 = mem[(32 * idx + 1) + _15713 + 32]
                    mem[_15713 + ceil32(return_data.size) + 261] = mem[(32 * idx + 1) + _15713 + 44 len 20]
                    mem[_15713 + ceil32(return_data.size) + 229] = address(_30762)
                    if address(_30762) == address(_30793):
                        revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if address(_30762) < address(_30793):
                        if not address(_30762):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15713 + ceil32(return_data.size) + 293] = address(_30762)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15713 + ceil32(return_data.size) + 421] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15713 + ceil32(return_data.size) + 389] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30762) << 96 == address(_30762):
                            mem[_15713 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15713 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30762))
                            staticcall address(_30762).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + ceil32(return_data.size) + 325] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30762) << 96 == address(_30762):
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35616 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35616 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35616 + 36] = 0
                                        mem[_35616 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35616 + 100] = this.address
                                        mem[_35616 + 132] = 128
                                        mem[_35616 + 164] = mem[_35616]
                                        s = 0
                                        while s < mem[_35616]:
                                            mem[s + _35616 + 196] = mem[s + _35616 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35616] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35616] + _35616 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35616]) + _35616 + 196] = mem[floor32(mem[_35616]) + _35616 + -(mem[_35616] % 32) + 228 len mem[_35616] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35616]) + _35616 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35620 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35620 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35620 + 36] = 0
                                        mem[_35620 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35620 + 100] = this.address
                                        mem[_35620 + 132] = 128
                                        mem[_35620 + 164] = mem[_35620]
                                        s = 0
                                        while s < mem[_35620]:
                                            mem[s + _35620 + 196] = mem[s + _35620 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35620] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35620 + 164 len mem[_35620] + 32]
                                        else:
                                            mem[floor32(mem[_35620]) + _35620 + 196] = mem[floor32(mem[_35620]) + _35620 + -(mem[_35620] % 32) + 228 len mem[_35620] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35620], mem[_35620 + 196 len floor32(mem[_35620]) + 32]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35624 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35624 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35624 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35624 + 68] = 0
                                        mem[_35624 + 100] = this.address
                                        mem[_35624 + 132] = 128
                                        mem[_35624 + 164] = mem[_35624]
                                        s = 0
                                        while s < mem[_35624]:
                                            mem[s + _35624 + 196] = mem[s + _35624 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35624] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35624] + _35624 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35624]) + _35624 + 196] = mem[floor32(mem[_35624]) + _35624 + -(mem[_35624] % 32) + 228 len mem[_35624] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35624]) + _35624 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35628 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35628 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35628 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35628 + 68] = 0
                                        mem[_35628 + 100] = this.address
                                        mem[_35628 + 132] = 128
                                        mem[_35628 + 164] = mem[_35628]
                                        s = 0
                                        while s < mem[_35628]:
                                            mem[s + _35628 + 196] = mem[s + _35628 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35628] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35628 + 164 len mem[_35628] + 32]
                                        else:
                                            mem[floor32(mem[_35628]) + _35628 + 196] = mem[floor32(mem[_35628]) + _35628 + -(mem[_35628] % 32) + 228 len mem[_35628] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35628], mem[_35628 + 196 len floor32(mem[_35628]) + 32]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30762) << 96 == address(_30762):
                                    mem[_15713 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36400 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36400 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36400 + 36] = 0
                                        mem[_36400 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36400 + 100] = this.address
                                        mem[_36400 + 132] = 128
                                        mem[_36400 + 164] = mem[_36400]
                                        s = 0
                                        while s < mem[_36400]:
                                            mem[s + _36400 + 196] = mem[s + _36400 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36400] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36400 + 164 len mem[_36400] + 32]
                                        else:
                                            mem[floor32(mem[_36400]) + _36400 + 196] = mem[floor32(mem[_36400]) + _36400 + -(mem[_36400] % 32) + 228 len mem[_36400] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36400], mem[_36400 + 196 len floor32(mem[_36400]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36404 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36404 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36404 + 36] = 0
                                        mem[_36404 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36404 + 100] = this.address
                                        mem[_36404 + 132] = 128
                                        mem[_36404 + 164] = mem[_36404]
                                        s = 0
                                        while s < mem[_36404]:
                                            mem[s + _36404 + 196] = mem[s + _36404 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36404] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36404 + 164 len mem[_36404] + 32]
                                        else:
                                            mem[floor32(mem[_36404]) + _36404 + 196] = mem[floor32(mem[_36404]) + _36404 + -(mem[_36404] % 32) + 228 len mem[_36404] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36404], mem[_36404 + 196 len floor32(mem[_36404]) + 32]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36408 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36408 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36408 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36408 + 68] = 0
                                        mem[_36408 + 100] = this.address
                                        mem[_36408 + 132] = 128
                                        mem[_36408 + 164] = mem[_36408]
                                        s = 0
                                        while s < mem[_36408]:
                                            mem[s + _36408 + 196] = mem[s + _36408 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36408] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36408 + 164 len mem[_36408] + 32]
                                        else:
                                            mem[floor32(mem[_36408]) + _36408 + 196] = mem[floor32(mem[_36408]) + _36408 + -(mem[_36408] % 32) + 228 len mem[_36408] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36408], mem[_36408 + 196 len floor32(mem[_36408]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36412 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36412 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36412 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36412 + 68] = 0
                                        mem[_36412 + 100] = this.address
                                        mem[_36412 + 132] = 128
                                        mem[_36412 + 164] = mem[_36412]
                                        s = 0
                                        while s < mem[_36412]:
                                            mem[s + _36412 + 196] = mem[s + _36412 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36412] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36412] + _36412 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36412]) + _36412 + 196] = mem[floor32(mem[_36412]) + _36412 + -(mem[_36412] % 32) + 228 len mem[_36412] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36412]) + _36412 + -mem[64] + 224]
                        else:
                            mem[_15713 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15713 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30762))
                            staticcall address(_30762).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + ceil32(return_data.size) + 325] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30762) << 96 == address(_30762):
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35634 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35634 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35634 + 36] = 0
                                        mem[_35634 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35634 + 100] = this.address
                                        mem[_35634 + 132] = 128
                                        mem[_35634 + 164] = mem[_35634]
                                        s = 0
                                        while s < mem[_35634]:
                                            mem[s + _35634 + 196] = mem[s + _35634 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35634] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35634] + _35634 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35634]) + _35634 + 196] = mem[floor32(mem[_35634]) + _35634 + -(mem[_35634] % 32) + 228 len mem[_35634] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35634]) + _35634 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35638 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35638 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35638 + 36] = 0
                                        mem[_35638 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35638 + 100] = this.address
                                        mem[_35638 + 132] = 128
                                        mem[_35638 + 164] = mem[_35638]
                                        s = 0
                                        while s < mem[_35638]:
                                            mem[s + _35638 + 196] = mem[s + _35638 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35638] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35638 + 164 len mem[_35638] + 32]
                                        else:
                                            mem[floor32(mem[_35638]) + _35638 + 196] = mem[floor32(mem[_35638]) + _35638 + -(mem[_35638] % 32) + 228 len mem[_35638] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35638], mem[_35638 + 196 len floor32(mem[_35638]) + 32]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35642 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35642 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35642 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35642 + 68] = 0
                                        mem[_35642 + 100] = this.address
                                        mem[_35642 + 132] = 128
                                        mem[_35642 + 164] = mem[_35642]
                                        s = 0
                                        while s < mem[_35642]:
                                            mem[s + _35642 + 196] = mem[s + _35642 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35642] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35642 + 164 len mem[_35642] + 32]
                                        else:
                                            mem[floor32(mem[_35642]) + _35642 + 196] = mem[floor32(mem[_35642]) + _35642 + -(mem[_35642] % 32) + 228 len mem[_35642] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35642], mem[_35642 + 196 len floor32(mem[_35642]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35646 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35646 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35646 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35646 + 68] = 0
                                        mem[_35646 + 100] = this.address
                                        mem[_35646 + 132] = 128
                                        mem[_35646 + 164] = mem[_35646]
                                        s = 0
                                        while s < mem[_35646]:
                                            mem[s + _35646 + 196] = mem[s + _35646 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35646] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35646] + _35646 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35646]) + _35646 + 196] = mem[floor32(mem[_35646]) + _35646 + -(mem[_35646] % 32) + 228 len mem[_35646] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35646]) + _35646 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30762) << 96 == address(_30762):
                                    mem[_15713 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36420 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36420 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36420 + 36] = 0
                                        mem[_36420 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36420 + 100] = this.address
                                        mem[_36420 + 132] = 128
                                        mem[_36420 + 164] = mem[_36420]
                                        s = 0
                                        while s < mem[_36420]:
                                            mem[s + _36420 + 196] = mem[s + _36420 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36420] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36420 + 164 len mem[_36420] + 32]
                                        else:
                                            mem[floor32(mem[_36420]) + _36420 + 196] = mem[floor32(mem[_36420]) + _36420 + -(mem[_36420] % 32) + 228 len mem[_36420] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36420], mem[_36420 + 196 len floor32(mem[_36420]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36424 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36424 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36424 + 36] = 0
                                        mem[_36424 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36424 + 100] = this.address
                                        mem[_36424 + 132] = 128
                                        mem[_36424 + 164] = mem[_36424]
                                        s = 0
                                        while s < mem[_36424]:
                                            mem[s + _36424 + 196] = mem[s + _36424 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36424] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36424 + 164 len mem[_36424] + 32]
                                        else:
                                            mem[floor32(mem[_36424]) + _36424 + 196] = mem[floor32(mem[_36424]) + _36424 + -(mem[_36424] % 32) + 228 len mem[_36424] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36424], mem[_36424 + 196 len floor32(mem[_36424]) + 32]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36428 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36428 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36428 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36428 + 68] = 0
                                        mem[_36428 + 100] = this.address
                                        mem[_36428 + 132] = 128
                                        mem[_36428 + 164] = mem[_36428]
                                        s = 0
                                        while s < mem[_36428]:
                                            mem[s + _36428 + 196] = mem[s + _36428 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36428] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36428 + 164 len mem[_36428] + 32]
                                        else:
                                            mem[floor32(mem[_36428]) + _36428 + 196] = mem[floor32(mem[_36428]) + _36428 + -(mem[_36428] % 32) + 228 len mem[_36428] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36428], mem[_36428 + 196 len floor32(mem[_36428]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36432 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36432 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36432 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36432 + 68] = 0
                                        mem[_36432 + 100] = this.address
                                        mem[_36432 + 132] = 128
                                        mem[_36432 + 164] = mem[_36432]
                                        s = 0
                                        while s < mem[_36432]:
                                            mem[s + _36432 + 196] = mem[s + _36432 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36432] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36432] + _36432 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36432]) + _36432 + 196] = mem[floor32(mem[_36432]) + _36432 + -(mem[_36432] % 32) + 228 len mem[_36432] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36432]) + _36432 + -mem[64] + 224]
                    else:
                        if not address(_30793):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15713 + ceil32(return_data.size) + 293] = address(_30793)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15713 + ceil32(return_data.size) + 421] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15713 + ceil32(return_data.size) + 389] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30793) << 96 == address(_30762):
                            mem[_15713 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15713 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30762))
                            staticcall address(_30762).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + ceil32(return_data.size) + 325] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30793) << 96 == address(_30762):
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35652 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35652 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35652 + 36] = 0
                                        mem[_35652 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35652 + 100] = this.address
                                        mem[_35652 + 132] = 128
                                        mem[_35652 + 164] = mem[_35652]
                                        s = 0
                                        while s < mem[_35652]:
                                            mem[s + _35652 + 196] = mem[s + _35652 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35652] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35652] + _35652 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35652]) + _35652 + 196] = mem[floor32(mem[_35652]) + _35652 + -(mem[_35652] % 32) + 228 len mem[_35652] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35652]) + _35652 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35656 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35656 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35656 + 36] = 0
                                        mem[_35656 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35656 + 100] = this.address
                                        mem[_35656 + 132] = 128
                                        mem[_35656 + 164] = mem[_35656]
                                        s = 0
                                        while s < mem[_35656]:
                                            mem[s + _35656 + 196] = mem[s + _35656 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35656] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35656] + _35656 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35656]) + _35656 + 196] = mem[floor32(mem[_35656]) + _35656 + -(mem[_35656] % 32) + 228 len mem[_35656] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35656]) + _35656 + -mem[64] + 224]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35660 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35660 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35660 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35660 + 68] = 0
                                        mem[_35660 + 100] = this.address
                                        mem[_35660 + 132] = 128
                                        mem[_35660 + 164] = mem[_35660]
                                        s = 0
                                        while s < mem[_35660]:
                                            mem[s + _35660 + 196] = mem[s + _35660 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35660] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35660 + 164 len mem[_35660] + 32]
                                        else:
                                            mem[floor32(mem[_35660]) + _35660 + 196] = mem[floor32(mem[_35660]) + _35660 + -(mem[_35660] % 32) + 228 len mem[_35660] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35660], mem[_35660 + 196 len floor32(mem[_35660]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35664 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35664 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35664 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35664 + 68] = 0
                                        mem[_35664 + 100] = this.address
                                        mem[_35664 + 132] = 128
                                        mem[_35664 + 164] = mem[_35664]
                                        s = 0
                                        while s < mem[_35664]:
                                            mem[s + _35664 + 196] = mem[s + _35664 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35664] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35664] + _35664 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35664]) + _35664 + 196] = mem[floor32(mem[_35664]) + _35664 + -(mem[_35664] % 32) + 228 len mem[_35664] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35664]) + _35664 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30793) << 96 == address(_30762):
                                    mem[_15713 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36440 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36440 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36440 + 36] = 0
                                        mem[_36440 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36440 + 100] = this.address
                                        mem[_36440 + 132] = 128
                                        mem[_36440 + 164] = mem[_36440]
                                        s = 0
                                        while s < mem[_36440]:
                                            mem[s + _36440 + 196] = mem[s + _36440 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36440] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36440] + _36440 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36440]) + _36440 + 196] = mem[floor32(mem[_36440]) + _36440 + -(mem[_36440] % 32) + 228 len mem[_36440] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36440]) + _36440 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36444 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36444 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36444 + 36] = 0
                                        mem[_36444 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36444 + 100] = this.address
                                        mem[_36444 + 132] = 128
                                        mem[_36444 + 164] = mem[_36444]
                                        s = 0
                                        while s < mem[_36444]:
                                            mem[s + _36444 + 196] = mem[s + _36444 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36444] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36444] + _36444 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36444]) + _36444 + 196] = mem[floor32(mem[_36444]) + _36444 + -(mem[_36444] % 32) + 228 len mem[_36444] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36444]) + _36444 + -mem[64] + 224]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36448 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36448 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36448 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36448 + 68] = 0
                                        mem[_36448 + 100] = this.address
                                        mem[_36448 + 132] = 128
                                        mem[_36448 + 164] = mem[_36448]
                                        s = 0
                                        while s < mem[_36448]:
                                            mem[s + _36448 + 196] = mem[s + _36448 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36448] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36448 + 164 len mem[_36448] + 32]
                                        else:
                                            mem[floor32(mem[_36448]) + _36448 + 196] = mem[floor32(mem[_36448]) + _36448 + -(mem[_36448] % 32) + 228 len mem[_36448] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36448], mem[_36448 + 196 len floor32(mem[_36448]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36452 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36452 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36452 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36452 + 68] = 0
                                        mem[_36452 + 100] = this.address
                                        mem[_36452 + 132] = 128
                                        mem[_36452 + 164] = mem[_36452]
                                        s = 0
                                        while s < mem[_36452]:
                                            mem[s + _36452 + 196] = mem[s + _36452 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36452] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36452] + _36452 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36452]) + _36452 + 196] = mem[floor32(mem[_36452]) + _36452 + -(mem[_36452] % 32) + 228 len mem[_36452] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36452]) + _36452 + -mem[64] + 224]
                        else:
                            mem[_15713 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15713 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30762))
                            staticcall address(_30762).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + ceil32(return_data.size) + 325] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30793) << 96 == address(_30762):
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35670 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35670 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35670 + 36] = 0
                                        mem[_35670 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35670 + 100] = this.address
                                        mem[_35670 + 132] = 128
                                        mem[_35670 + 164] = mem[_35670]
                                        s = 0
                                        while s < mem[_35670]:
                                            mem[s + _35670 + 196] = mem[s + _35670 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35670] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35670] + _35670 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35670]) + _35670 + 196] = mem[floor32(mem[_35670]) + _35670 + -(mem[_35670] % 32) + 228 len mem[_35670] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35670]) + _35670 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35674 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35674 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35674 + 36] = 0
                                        mem[_35674 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35674 + 100] = this.address
                                        mem[_35674 + 132] = 128
                                        mem[_35674 + 164] = mem[_35674]
                                        s = 0
                                        while s < mem[_35674]:
                                            mem[s + _35674 + 196] = mem[s + _35674 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35674] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35674] + _35674 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35674]) + _35674 + 196] = mem[floor32(mem[_35674]) + _35674 + -(mem[_35674] % 32) + 228 len mem[_35674] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35674]) + _35674 + -mem[64] + 224]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35678 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35678 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35678 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35678 + 68] = 0
                                        mem[_35678 + 100] = this.address
                                        mem[_35678 + 132] = 128
                                        mem[_35678 + 164] = mem[_35678]
                                        s = 0
                                        while s < mem[_35678]:
                                            mem[s + _35678 + 196] = mem[s + _35678 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35678] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35678 + 164 len mem[_35678] + 32]
                                        else:
                                            mem[floor32(mem[_35678]) + _35678 + 196] = mem[floor32(mem[_35678]) + _35678 + -(mem[_35678] % 32) + 228 len mem[_35678] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35678], mem[_35678 + 196 len floor32(mem[_35678]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35682 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35682 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35682 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35682 + 68] = 0
                                        mem[_35682 + 100] = this.address
                                        mem[_35682 + 132] = 128
                                        mem[_35682 + 164] = mem[_35682]
                                        s = 0
                                        while s < mem[_35682]:
                                            mem[s + _35682 + 196] = mem[s + _35682 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35682] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35682 + 164 len mem[_35682] + 32]
                                        else:
                                            mem[floor32(mem[_35682]) + _35682 + 196] = mem[floor32(mem[_35682]) + _35682 + -(mem[_35682] % 32) + 228 len mem[_35682] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35682], mem[_35682 + 196 len floor32(mem[_35682]) + 32]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30793) << 96 == address(_30762):
                                    mem[_15713 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36460 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36460 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36460 + 36] = 0
                                        mem[_36460 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36460 + 100] = this.address
                                        mem[_36460 + 132] = 128
                                        mem[_36460 + 164] = mem[_36460]
                                        s = 0
                                        while s < mem[_36460]:
                                            mem[s + _36460 + 196] = mem[s + _36460 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36460] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36460 + 164 len mem[_36460] + 32]
                                        else:
                                            mem[floor32(mem[_36460]) + _36460 + 196] = mem[floor32(mem[_36460]) + _36460 + -(mem[_36460] % 32) + 228 len mem[_36460] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36460], mem[_36460 + 196 len floor32(mem[_36460]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36464 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36464 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36464 + 36] = 0
                                        mem[_36464 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36464 + 100] = this.address
                                        mem[_36464 + 132] = 128
                                        mem[_36464 + 164] = mem[_36464]
                                        s = 0
                                        while s < mem[_36464]:
                                            mem[s + _36464 + 196] = mem[s + _36464 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36464] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36464 + 164 len mem[_36464] + 32]
                                        else:
                                            mem[floor32(mem[_36464]) + _36464 + 196] = mem[floor32(mem[_36464]) + _36464 + -(mem[_36464] % 32) + 228 len mem[_36464] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36464], mem[_36464 + 196 len floor32(mem[_36464]) + 32]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36468 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36468 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36468 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36468 + 68] = 0
                                        mem[_36468 + 100] = this.address
                                        mem[_36468 + 132] = 128
                                        mem[_36468 + 164] = mem[_36468]
                                        s = 0
                                        while s < mem[_36468]:
                                            mem[s + _36468 + 196] = mem[s + _36468 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36468] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36468 + 164 len mem[_36468] + 32]
                                        else:
                                            mem[floor32(mem[_36468]) + _36468 + 196] = mem[floor32(mem[_36468]) + _36468 + -(mem[_36468] % 32) + 228 len mem[_36468] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36468], mem[_36468 + 196 len floor32(mem[_36468]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36472 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36472 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36472 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36472 + 68] = 0
                                        mem[_36472 + 100] = this.address
                                        mem[_36472 + 132] = 128
                                        mem[_36472 + 164] = mem[_36472]
                                        s = 0
                                        while s < mem[_36472]:
                                            mem[s + _36472 + 196] = mem[s + _36472 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36472] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36472] + _36472 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36472]) + _36472 + 196] = mem[floor32(mem[_36472]) + _36472 + -(mem[_36472] % 32) + 228 len mem[_36472] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36472]) + _36472 + -mem[64] + 224]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = mem[_15713 + ceil32(return_data.size) + 357]
                    continue 
                if s < _15737 * cd[100] / 100:
                    revert with 0, '-,'
                _30790 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                mem[_30790] = ('cd', 36).length
                mem[_30790 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_30790 + (32 * ('cd', 36).length) + 32] = 0
                if ('cd', 36).length < 2:
                    revert with 0, 'PancakeLibrary: INVALID_PATH'
                require ('cd', 36).length <= test266151307()
                _30852 = mem[64]
                mem[mem[64]] = ('cd', 36).length
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                if not ('cd', 36).length:
                    require 0 < mem[_30852]
                    mem[_30852 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30790]
                        _38779 = mem[(32 * idx) + _30790 + 32]
                        require idx + 1 < mem[_30790]
                        _39161 = mem[(32 * idx + 1) + _30790 + 32]
                        if mem[(32 * idx) + _30790 + 44 len 20] == mem[(32 * idx + 1) + _30790 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30790 + 44 len 20] < mem[(32 * idx + 1) + _30790 + 44 len 20]:
                            if not mem[(32 * idx) + _30790 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38779) == address(_38779):
                                require idx < mem[_30852]
                                if mem[(32 * idx) + _30852 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30852 + 32] / 9975 != mem[(32 * idx) + _30852 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                    require idx + 1 < mem[_30852]
                                    mem[(32 * idx + 1) + _30852 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30852 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30852 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                    require idx + 1 < mem[_30852]
                                    mem[(32 * idx + 1) + _30852 + 32] = 9975 * mem[(32 * idx) + _30852 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30790 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_39161) == address(_38779):
                                require idx < mem[_30852]
                                if mem[(32 * idx) + _30852 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30852 + 32] / 9975 != mem[(32 * idx) + _30852 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                    require idx + 1 < mem[_30852]
                                    mem[(32 * idx + 1) + _30852 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30852 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30852 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                    require idx + 1 < mem[_30852]
                                    mem[(32 * idx + 1) + _30852 + 32] = 9975 * mem[(32 * idx) + _30852 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30852]
                        if mem[(32 * idx) + _30852 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30852 + 32] / 9975 != mem[(32 * idx) + _30852 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30852 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30852 + 32])
                            require idx + 1 < mem[_30852]
                            mem[(32 * idx + 1) + _30852 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30852 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30852 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30852 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30852 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30852 + 32])
                            require idx + 1 < mem[_30852]
                            mem[(32 * idx + 1) + _30852 + 32] = 9975 * mem[(32 * idx) + _30852 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30852 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30852]
                    _39158 = mem[_30852 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _39158
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _39158
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39826 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39826] = ('cd', 36).length
                    mem[_39826 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39826 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39826]
                        require idx + 1 < mem[_39826]
                        if mem[(32 * idx) + _39826 + 44 len 20] == mem[(32 * idx + 1) + _39826 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39826 + 44 len 20] < mem[(32 * idx + 1) + _39826 + 44 len 20]:
                            if not mem[(32 * idx) + _39826 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30852]
                            _43022 = mem[(32 * idx + 1) + _30852 + 32]
                            if mem[(32 * idx) + _39826 + 44 len 20] == mem[(32 * idx) + _39826 + 44 len 20]:
                                if idx < mem[_39826] - 2:
                                    _43478 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43478 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43478 + 36] = 0
                                    mem[_43478 + 68] = _43022
                                    mem[_43478 + 100] = address(cd[4])
                                    mem[_43478 + 132] = 128
                                    mem[_43478 + 164] = mem[_43478]
                                    s = 0
                                    while s < mem[_43478]:
                                        mem[s + _43478 + 196] = mem[s + _43478 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43478] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43022, address(cd[4]), 128, mem[_43478 + 164 len mem[_43478] + 32]
                                    else:
                                        mem[floor32(mem[_43478]) + _43478 + 196] = mem[floor32(mem[_43478]) + _43478 + -(mem[_43478] % 32) + 228 len mem[_43478] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43022, address(cd[4]), 128, mem[_43478], mem[_43478 + 196 len floor32(mem[_43478]) + 32]
                                else:
                                    _43482 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43482 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43482 + 36] = 0
                                    mem[_43482 + 68] = _43022
                                    mem[_43482 + 100] = address(cd[68])
                                    mem[_43482 + 132] = 128
                                    mem[_43482 + 164] = mem[_43482]
                                    s = 0
                                    while s < mem[_43482]:
                                        mem[s + _43482 + 196] = mem[s + _43482 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43482] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43022, address(cd[68]), 128, mem[_43482 + 164 len mem[_43482] + 32]
                                    else:
                                        mem[floor32(mem[_43482]) + _43482 + 196] = mem[floor32(mem[_43482]) + _43482 + -(mem[_43482] % 32) + 228 len mem[_43482] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43022, address(cd[68]), 128, mem[_43482], mem[_43482 + 196 len floor32(mem[_43482]) + 32]
                            else:
                                if idx < mem[_39826] - 2:
                                    _43486 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43486 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43486 + 36] = _43022
                                    mem[_43486 + 68] = 0
                                    mem[_43486 + 100] = address(cd[4])
                                    mem[_43486 + 132] = 128
                                    mem[_43486 + 164] = mem[_43486]
                                    s = 0
                                    while s < mem[_43486]:
                                        mem[s + _43486 + 196] = mem[s + _43486 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43486] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43022, 0, address(cd[4]), 128, mem[_43486 + 164 len mem[_43486] + 32]
                                    else:
                                        mem[floor32(mem[_43486]) + _43486 + 196] = mem[floor32(mem[_43486]) + _43486 + -(mem[_43486] % 32) + 228 len mem[_43486] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43022, 0, address(cd[4]), 128, mem[_43486], mem[_43486 + 196 len floor32(mem[_43486]) + 32]
                                else:
                                    _43490 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43490 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43490 + 36] = _43022
                                    mem[_43490 + 68] = 0
                                    mem[_43490 + 100] = address(cd[68])
                                    mem[_43490 + 132] = 128
                                    mem[_43490 + 164] = mem[_43490]
                                    s = 0
                                    while s < mem[_43490]:
                                        mem[s + _43490 + 196] = mem[s + _43490 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43490] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43022, 0, address(cd[68]), 128, mem[_43490 + 164 len mem[_43490] + 32]
                                    else:
                                        mem[floor32(mem[_43490]) + _43490 + 196] = mem[floor32(mem[_43490]) + _43490 + -(mem[_43490] % 32) + 228 len mem[_43490] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43022, 0, address(cd[68]), 128, mem[_43490], mem[_43490 + 196 len floor32(mem[_43490]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39826 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30852]
                            _43023 = mem[(32 * idx + 1) + _30852 + 32]
                            if mem[(32 * idx) + _39826 + 44 len 20] == mem[(32 * idx + 1) + _39826 + 44 len 20]:
                                if idx < mem[_39826] - 2:
                                    _43494 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43494 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43494 + 36] = 0
                                    mem[_43494 + 68] = _43023
                                    mem[_43494 + 100] = address(cd[4])
                                    mem[_43494 + 132] = 128
                                    mem[_43494 + 164] = mem[_43494]
                                    s = 0
                                    while s < mem[_43494]:
                                        mem[s + _43494 + 196] = mem[s + _43494 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43494] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43023, address(cd[4]), 128, mem[_43494 + 164 len mem[_43494] + 32]
                                    else:
                                        mem[floor32(mem[_43494]) + _43494 + 196] = mem[floor32(mem[_43494]) + _43494 + -(mem[_43494] % 32) + 228 len mem[_43494] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43023, address(cd[4]), 128, mem[_43494], mem[_43494 + 196 len floor32(mem[_43494]) + 32]
                                else:
                                    _43498 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43498 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43498 + 36] = 0
                                    mem[_43498 + 68] = _43023
                                    mem[_43498 + 100] = address(cd[68])
                                    mem[_43498 + 132] = 128
                                    mem[_43498 + 164] = mem[_43498]
                                    s = 0
                                    while s < mem[_43498]:
                                        mem[s + _43498 + 196] = mem[s + _43498 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43498] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43023, address(cd[68]), 128, mem[_43498 + 164 len mem[_43498] + 32]
                                    else:
                                        mem[floor32(mem[_43498]) + _43498 + 196] = mem[floor32(mem[_43498]) + _43498 + -(mem[_43498] % 32) + 228 len mem[_43498] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43023, address(cd[68]), 128, mem[_43498], mem[_43498 + 196 len floor32(mem[_43498]) + 32]
                            else:
                                if idx < mem[_39826] - 2:
                                    _43502 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43502 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43502 + 36] = _43023
                                    mem[_43502 + 68] = 0
                                    mem[_43502 + 100] = address(cd[4])
                                    mem[_43502 + 132] = 128
                                    mem[_43502 + 164] = mem[_43502]
                                    s = 0
                                    while s < mem[_43502]:
                                        mem[s + _43502 + 196] = mem[s + _43502 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43502] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43023, 0, address(cd[4]), 128, mem[_43502 + 164 len mem[_43502] + 32]
                                    else:
                                        mem[floor32(mem[_43502]) + _43502 + 196] = mem[floor32(mem[_43502]) + _43502 + -(mem[_43502] % 32) + 228 len mem[_43502] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43023, 0, address(cd[4]), 128, mem[_43502], mem[_43502 + 196 len floor32(mem[_43502]) + 32]
                                else:
                                    _43506 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43506 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43506 + 36] = _43023
                                    mem[_43506 + 68] = 0
                                    mem[_43506 + 100] = address(cd[68])
                                    mem[_43506 + 132] = 128
                                    mem[_43506 + 164] = mem[_43506]
                                    s = 0
                                    while s < mem[_43506]:
                                        mem[s + _43506 + 196] = mem[s + _43506 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43506] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43023, 0, address(cd[68]), 128, mem[_43506 + 164 len mem[_43506] + 32]
                                    else:
                                        mem[floor32(mem[_43506]) + _43506 + 196] = mem[floor32(mem[_43506]) + _43506 + -(mem[_43506] % 32) + 228 len mem[_43506] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43023, 0, address(cd[68]), 128, mem[_43506], mem[_43506 + 196 len floor32(mem[_43506]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                else:
                    mem[_30852 + 32 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
                    require 0 < mem[_30852]
                    mem[_30852 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30790]
                        _38782 = mem[(32 * idx) + _30790 + 32]
                        require idx + 1 < mem[_30790]
                        _39165 = mem[(32 * idx + 1) + _30790 + 32]
                        if mem[(32 * idx) + _30790 + 44 len 20] == mem[(32 * idx + 1) + _30790 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30790 + 44 len 20] < mem[(32 * idx + 1) + _30790 + 44 len 20]:
                            if not mem[(32 * idx) + _30790 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38782) == address(_38782):
                                require idx < mem[_30852]
                                if mem[(32 * idx) + _30852 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30852 + 32] / 9975 != mem[(32 * idx) + _30852 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                    require idx + 1 < mem[_30852]
                                    mem[(32 * idx + 1) + _30852 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30852 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30852 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                    require idx + 1 < mem[_30852]
                                    mem[(32 * idx + 1) + _30852 + 32] = 9975 * mem[(32 * idx) + _30852 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30790 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_39165) == address(_38782):
                                require idx < mem[_30852]
                                if mem[(32 * idx) + _30852 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30852 + 32] / 9975 != mem[(32 * idx) + _30852 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                    require idx + 1 < mem[_30852]
                                    mem[(32 * idx + 1) + _30852 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30852 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30852 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                    require idx + 1 < mem[_30852]
                                    mem[(32 * idx + 1) + _30852 + 32] = 9975 * mem[(32 * idx) + _30852 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30852 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30852]
                        if mem[(32 * idx) + _30852 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30852 + 32] / 9975 != mem[(32 * idx) + _30852 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30852 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30852 + 32])
                            require idx + 1 < mem[_30852]
                            mem[(32 * idx + 1) + _30852 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30852 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30852 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30852 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30852 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30852 + 32])
                            require idx + 1 < mem[_30852]
                            mem[(32 * idx + 1) + _30852 + 32] = 9975 * mem[(32 * idx) + _30852 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30852 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30852]
                    _39162 = mem[_30852 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _39162
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _39162
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39827 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39827] = ('cd', 36).length
                    mem[_39827 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39827 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39827]
                        require idx + 1 < mem[_39827]
                        if mem[(32 * idx) + _39827 + 44 len 20] == mem[(32 * idx + 1) + _39827 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39827 + 44 len 20] < mem[(32 * idx + 1) + _39827 + 44 len 20]:
                            if not mem[(32 * idx) + _39827 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30852]
                            _43024 = mem[(32 * idx + 1) + _30852 + 32]
                            if mem[(32 * idx) + _39827 + 44 len 20] == mem[(32 * idx) + _39827 + 44 len 20]:
                                if idx < mem[_39827] - 2:
                                    _43510 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43510 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43510 + 36] = 0
                                    mem[_43510 + 68] = _43024
                                    mem[_43510 + 100] = address(cd[4])
                                    mem[_43510 + 132] = 128
                                    mem[_43510 + 164] = mem[_43510]
                                    s = 0
                                    while s < mem[_43510]:
                                        mem[s + _43510 + 196] = mem[s + _43510 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43510] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43024, address(cd[4]), 128, mem[_43510 + 164 len mem[_43510] + 32]
                                    else:
                                        mem[floor32(mem[_43510]) + _43510 + 196] = mem[floor32(mem[_43510]) + _43510 + -(mem[_43510] % 32) + 228 len mem[_43510] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43024, address(cd[4]), 128, mem[_43510], mem[_43510 + 196 len floor32(mem[_43510]) + 32]
                                else:
                                    _43514 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43514 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43514 + 36] = 0
                                    mem[_43514 + 68] = _43024
                                    mem[_43514 + 100] = address(cd[68])
                                    mem[_43514 + 132] = 128
                                    mem[_43514 + 164] = mem[_43514]
                                    s = 0
                                    while s < mem[_43514]:
                                        mem[s + _43514 + 196] = mem[s + _43514 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43514] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43024, address(cd[68]), 128, mem[_43514 + 164 len mem[_43514] + 32]
                                    else:
                                        mem[floor32(mem[_43514]) + _43514 + 196] = mem[floor32(mem[_43514]) + _43514 + -(mem[_43514] % 32) + 228 len mem[_43514] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43024, address(cd[68]), 128, mem[_43514], mem[_43514 + 196 len floor32(mem[_43514]) + 32]
                            else:
                                if idx < mem[_39827] - 2:
                                    _43518 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43518 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43518 + 36] = _43024
                                    mem[_43518 + 68] = 0
                                    mem[_43518 + 100] = address(cd[4])
                                    mem[_43518 + 132] = 128
                                    mem[_43518 + 164] = mem[_43518]
                                    s = 0
                                    while s < mem[_43518]:
                                        mem[s + _43518 + 196] = mem[s + _43518 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43518] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43024, 0, address(cd[4]), 128, mem[_43518 + 164 len mem[_43518] + 32]
                                    else:
                                        mem[floor32(mem[_43518]) + _43518 + 196] = mem[floor32(mem[_43518]) + _43518 + -(mem[_43518] % 32) + 228 len mem[_43518] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43024, 0, address(cd[4]), 128, mem[_43518], mem[_43518 + 196 len floor32(mem[_43518]) + 32]
                                else:
                                    _43522 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43522 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43522 + 36] = _43024
                                    mem[_43522 + 68] = 0
                                    mem[_43522 + 100] = address(cd[68])
                                    mem[_43522 + 132] = 128
                                    mem[_43522 + 164] = mem[_43522]
                                    s = 0
                                    while s < mem[_43522]:
                                        mem[s + _43522 + 196] = mem[s + _43522 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43522] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43024, 0, address(cd[68]), 128, mem[_43522 + 164 len mem[_43522] + 32]
                                    else:
                                        mem[floor32(mem[_43522]) + _43522 + 196] = mem[floor32(mem[_43522]) + _43522 + -(mem[_43522] % 32) + 228 len mem[_43522] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43024, 0, address(cd[68]), 128, mem[_43522], mem[_43522 + 196 len floor32(mem[_43522]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39827 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30852]
                            _43025 = mem[(32 * idx + 1) + _30852 + 32]
                            if mem[(32 * idx) + _39827 + 44 len 20] == mem[(32 * idx + 1) + _39827 + 44 len 20]:
                                if idx < mem[_39827] - 2:
                                    _43526 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43526 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43526 + 36] = 0
                                    mem[_43526 + 68] = _43025
                                    mem[_43526 + 100] = address(cd[4])
                                    mem[_43526 + 132] = 128
                                    mem[_43526 + 164] = mem[_43526]
                                    s = 0
                                    while s < mem[_43526]:
                                        mem[s + _43526 + 196] = mem[s + _43526 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43526] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43025, address(cd[4]), 128, mem[_43526 + 164 len mem[_43526] + 32]
                                    else:
                                        mem[floor32(mem[_43526]) + _43526 + 196] = mem[floor32(mem[_43526]) + _43526 + -(mem[_43526] % 32) + 228 len mem[_43526] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43025, address(cd[4]), 128, mem[_43526], mem[_43526 + 196 len floor32(mem[_43526]) + 32]
                                else:
                                    _43530 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43530 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43530 + 36] = 0
                                    mem[_43530 + 68] = _43025
                                    mem[_43530 + 100] = address(cd[68])
                                    mem[_43530 + 132] = 128
                                    mem[_43530 + 164] = mem[_43530]
                                    s = 0
                                    while s < mem[_43530]:
                                        mem[s + _43530 + 196] = mem[s + _43530 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43530] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43025, address(cd[68]), 128, mem[_43530 + 164 len mem[_43530] + 32]
                                    else:
                                        mem[floor32(mem[_43530]) + _43530 + 196] = mem[floor32(mem[_43530]) + _43530 + -(mem[_43530] % 32) + 228 len mem[_43530] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43025, address(cd[68]), 128, mem[_43530], mem[_43530 + 196 len floor32(mem[_43530]) + 32]
                            else:
                                if idx < mem[_39827] - 2:
                                    _43534 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43534 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43534 + 36] = _43025
                                    mem[_43534 + 68] = 0
                                    mem[_43534 + 100] = address(cd[4])
                                    mem[_43534 + 132] = 128
                                    mem[_43534 + 164] = mem[_43534]
                                    s = 0
                                    while s < mem[_43534]:
                                        mem[s + _43534 + 196] = mem[s + _43534 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43534] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43025, 0, address(cd[4]), 128, mem[_43534 + 164 len mem[_43534] + 32]
                                    else:
                                        mem[floor32(mem[_43534]) + _43534 + 196] = mem[floor32(mem[_43534]) + _43534 + -(mem[_43534] % 32) + 228 len mem[_43534] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43025, 0, address(cd[4]), 128, mem[_43534], mem[_43534 + 196 len floor32(mem[_43534]) + 32]
                                else:
                                    _43538 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43538 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43538 + 36] = _43025
                                    mem[_43538 + 68] = 0
                                    mem[_43538 + 100] = address(cd[68])
                                    mem[_43538 + 132] = 128
                                    mem[_43538 + 164] = mem[_43538]
                                    s = 0
                                    while s < mem[_43538]:
                                        mem[s + _43538 + 196] = mem[s + _43538 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43538] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43025, 0, address(cd[68]), 128, mem[_43538 + 164 len mem[_43538] + 32]
                                    else:
                                        mem[floor32(mem[_43538]) + _43538 + 196] = mem[floor32(mem[_43538]) + _43538 + -(mem[_43538] % 32) + 228 len mem[_43538] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43025, 0, address(cd[68]), 128, mem[_43538], mem[_43538 + 196 len floor32(mem[_43538]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
            else:
                require return_data.size >= 32
                if not mem[_15713 + 228]:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                mem[64] = _15713 + ceil32(return_data.size) + 581
                mem[_15713 + ceil32(return_data.size) + 197] = 0
                mem[_15713 + ceil32(return_data.size) + 229] = 0
                mem[_15713 + ceil32(return_data.size) + 261] = 0
                mem[_15713 + ceil32(return_data.size) + 293] = 0
                mem[_15713 + ceil32(return_data.size) + 325] = 0
                mem[_15713 + ceil32(return_data.size) + 357] = 0
                mem[_15713 + ceil32(return_data.size) + 389] = 0
                mem[_15713 + ceil32(return_data.size) + 421] = 0
                mem[_15713 + ceil32(return_data.size) + 453] = 0
                mem[_15713 + ceil32(return_data.size) + 485] = 0
                mem[_15713 + ceil32(return_data.size) + 517] = 0
                mem[_15713 + ceil32(return_data.size) + 549] = 0
                _30741 = mem[_15713]
                idx = 0
                s = 0
                while idx < _30741 - 1:
                    require idx < mem[_15713]
                    _30764 = mem[(32 * idx) + _15713 + 32]
                    require idx + 1 < mem[_15713]
                    _30797 = mem[(32 * idx + 1) + _15713 + 32]
                    mem[_15713 + ceil32(return_data.size) + 261] = mem[(32 * idx + 1) + _15713 + 44 len 20]
                    mem[_15713 + ceil32(return_data.size) + 229] = address(_30764)
                    if address(_30764) == address(_30797):
                        revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if address(_30764) < address(_30797):
                        if not address(_30764):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15713 + ceil32(return_data.size) + 293] = address(_30764)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15713 + ceil32(return_data.size) + 421] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15713 + ceil32(return_data.size) + 389] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30764) << 96 == address(_30764):
                            mem[_15713 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15713 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30764))
                            staticcall address(_30764).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + ceil32(return_data.size) + 325] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30764) << 96 == address(_30764):
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35696 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35696 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35696 + 36] = 0
                                        mem[_35696 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35696 + 100] = this.address
                                        mem[_35696 + 132] = 128
                                        mem[_35696 + 164] = mem[_35696]
                                        s = 0
                                        while s < mem[_35696]:
                                            mem[s + _35696 + 196] = mem[s + _35696 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35696] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35696] + _35696 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35696]) + _35696 + 196] = mem[floor32(mem[_35696]) + _35696 + -(mem[_35696] % 32) + 228 len mem[_35696] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35696]) + _35696 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35700 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35700 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35700 + 36] = 0
                                        mem[_35700 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35700 + 100] = this.address
                                        mem[_35700 + 132] = 128
                                        mem[_35700 + 164] = mem[_35700]
                                        s = 0
                                        while s < mem[_35700]:
                                            mem[s + _35700 + 196] = mem[s + _35700 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35700] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35700 + 164 len mem[_35700] + 32]
                                        else:
                                            mem[floor32(mem[_35700]) + _35700 + 196] = mem[floor32(mem[_35700]) + _35700 + -(mem[_35700] % 32) + 228 len mem[_35700] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35700], mem[_35700 + 196 len floor32(mem[_35700]) + 32]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35704 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35704 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35704 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35704 + 68] = 0
                                        mem[_35704 + 100] = this.address
                                        mem[_35704 + 132] = 128
                                        mem[_35704 + 164] = mem[_35704]
                                        s = 0
                                        while s < mem[_35704]:
                                            mem[s + _35704 + 196] = mem[s + _35704 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35704] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35704] + _35704 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35704]) + _35704 + 196] = mem[floor32(mem[_35704]) + _35704 + -(mem[_35704] % 32) + 228 len mem[_35704] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35704]) + _35704 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35708 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35708 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35708 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35708 + 68] = 0
                                        mem[_35708 + 100] = this.address
                                        mem[_35708 + 132] = 128
                                        mem[_35708 + 164] = mem[_35708]
                                        s = 0
                                        while s < mem[_35708]:
                                            mem[s + _35708 + 196] = mem[s + _35708 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35708] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35708] + _35708 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35708]) + _35708 + 196] = mem[floor32(mem[_35708]) + _35708 + -(mem[_35708] % 32) + 228 len mem[_35708] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35708]) + _35708 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30764) << 96 == address(_30764):
                                    mem[_15713 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36492 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36492 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36492 + 36] = 0
                                        mem[_36492 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36492 + 100] = this.address
                                        mem[_36492 + 132] = 128
                                        mem[_36492 + 164] = mem[_36492]
                                        s = 0
                                        while s < mem[_36492]:
                                            mem[s + _36492 + 196] = mem[s + _36492 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36492] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36492 + 164 len mem[_36492] + 32]
                                        else:
                                            mem[floor32(mem[_36492]) + _36492 + 196] = mem[floor32(mem[_36492]) + _36492 + -(mem[_36492] % 32) + 228 len mem[_36492] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36492], mem[_36492 + 196 len floor32(mem[_36492]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36496 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36496 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36496 + 36] = 0
                                        mem[_36496 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36496 + 100] = this.address
                                        mem[_36496 + 132] = 128
                                        mem[_36496 + 164] = mem[_36496]
                                        s = 0
                                        while s < mem[_36496]:
                                            mem[s + _36496 + 196] = mem[s + _36496 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36496] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36496 + 164 len mem[_36496] + 32]
                                        else:
                                            mem[floor32(mem[_36496]) + _36496 + 196] = mem[floor32(mem[_36496]) + _36496 + -(mem[_36496] % 32) + 228 len mem[_36496] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36496], mem[_36496 + 196 len floor32(mem[_36496]) + 32]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36500 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36500 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36500 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36500 + 68] = 0
                                        mem[_36500 + 100] = this.address
                                        mem[_36500 + 132] = 128
                                        mem[_36500 + 164] = mem[_36500]
                                        s = 0
                                        while s < mem[_36500]:
                                            mem[s + _36500 + 196] = mem[s + _36500 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36500] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36500] + _36500 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36500]) + _36500 + 196] = mem[floor32(mem[_36500]) + _36500 + -(mem[_36500] % 32) + 228 len mem[_36500] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36500]) + _36500 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36504 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36504 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36504 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36504 + 68] = 0
                                        mem[_36504 + 100] = this.address
                                        mem[_36504 + 132] = 128
                                        mem[_36504 + 164] = mem[_36504]
                                        s = 0
                                        while s < mem[_36504]:
                                            mem[s + _36504 + 196] = mem[s + _36504 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36504] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36504] + _36504 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36504]) + _36504 + 196] = mem[floor32(mem[_36504]) + _36504 + -(mem[_36504] % 32) + 228 len mem[_36504] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36504]) + _36504 + -mem[64] + 224]
                        else:
                            mem[_15713 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15713 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30764))
                            staticcall address(_30764).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + ceil32(return_data.size) + 325] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30764) << 96 == address(_30764):
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35714 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35714 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35714 + 36] = 0
                                        mem[_35714 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35714 + 100] = this.address
                                        mem[_35714 + 132] = 128
                                        mem[_35714 + 164] = mem[_35714]
                                        s = 0
                                        while s < mem[_35714]:
                                            mem[s + _35714 + 196] = mem[s + _35714 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35714] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35714 + 164 len mem[_35714] + 32]
                                        else:
                                            mem[floor32(mem[_35714]) + _35714 + 196] = mem[floor32(mem[_35714]) + _35714 + -(mem[_35714] % 32) + 228 len mem[_35714] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35714], mem[_35714 + 196 len floor32(mem[_35714]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35718 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35718 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35718 + 36] = 0
                                        mem[_35718 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35718 + 100] = this.address
                                        mem[_35718 + 132] = 128
                                        mem[_35718 + 164] = mem[_35718]
                                        s = 0
                                        while s < mem[_35718]:
                                            mem[s + _35718 + 196] = mem[s + _35718 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35718] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35718] + _35718 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35718]) + _35718 + 196] = mem[floor32(mem[_35718]) + _35718 + -(mem[_35718] % 32) + 228 len mem[_35718] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35718]) + _35718 + -mem[64] + 224]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35722 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35722 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35722 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35722 + 68] = 0
                                        mem[_35722 + 100] = this.address
                                        mem[_35722 + 132] = 128
                                        mem[_35722 + 164] = mem[_35722]
                                        s = 0
                                        while s < mem[_35722]:
                                            mem[s + _35722 + 196] = mem[s + _35722 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35722] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35722 + 164 len mem[_35722] + 32]
                                        else:
                                            mem[floor32(mem[_35722]) + _35722 + 196] = mem[floor32(mem[_35722]) + _35722 + -(mem[_35722] % 32) + 228 len mem[_35722] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35722], mem[_35722 + 196 len floor32(mem[_35722]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35726 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35726 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35726 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35726 + 68] = 0
                                        mem[_35726 + 100] = this.address
                                        mem[_35726 + 132] = 128
                                        mem[_35726 + 164] = mem[_35726]
                                        s = 0
                                        while s < mem[_35726]:
                                            mem[s + _35726 + 196] = mem[s + _35726 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35726] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35726 + 164 len mem[_35726] + 32]
                                        else:
                                            mem[floor32(mem[_35726]) + _35726 + 196] = mem[floor32(mem[_35726]) + _35726 + -(mem[_35726] % 32) + 228 len mem[_35726] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35726], mem[_35726 + 196 len floor32(mem[_35726]) + 32]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30764) << 96 == address(_30764):
                                    mem[_15713 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36512 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36512 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36512 + 36] = 0
                                        mem[_36512 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36512 + 100] = this.address
                                        mem[_36512 + 132] = 128
                                        mem[_36512 + 164] = mem[_36512]
                                        s = 0
                                        while s < mem[_36512]:
                                            mem[s + _36512 + 196] = mem[s + _36512 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36512] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36512 + 164 len mem[_36512] + 32]
                                        else:
                                            mem[floor32(mem[_36512]) + _36512 + 196] = mem[floor32(mem[_36512]) + _36512 + -(mem[_36512] % 32) + 228 len mem[_36512] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36512], mem[_36512 + 196 len floor32(mem[_36512]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36516 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36516 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36516 + 36] = 0
                                        mem[_36516 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36516 + 100] = this.address
                                        mem[_36516 + 132] = 128
                                        mem[_36516 + 164] = mem[_36516]
                                        s = 0
                                        while s < mem[_36516]:
                                            mem[s + _36516 + 196] = mem[s + _36516 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36516] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36516] + _36516 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36516]) + _36516 + 196] = mem[floor32(mem[_36516]) + _36516 + -(mem[_36516] % 32) + 228 len mem[_36516] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36516]) + _36516 + -mem[64] + 224]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36520 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36520 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36520 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36520 + 68] = 0
                                        mem[_36520 + 100] = this.address
                                        mem[_36520 + 132] = 128
                                        mem[_36520 + 164] = mem[_36520]
                                        s = 0
                                        while s < mem[_36520]:
                                            mem[s + _36520 + 196] = mem[s + _36520 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36520] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36520] + _36520 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36520]) + _36520 + 196] = mem[floor32(mem[_36520]) + _36520 + -(mem[_36520] % 32) + 228 len mem[_36520] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36520]) + _36520 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36524 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36524 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36524 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36524 + 68] = 0
                                        mem[_36524 + 100] = this.address
                                        mem[_36524 + 132] = 128
                                        mem[_36524 + 164] = mem[_36524]
                                        s = 0
                                        while s < mem[_36524]:
                                            mem[s + _36524 + 196] = mem[s + _36524 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36524] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36524] + _36524 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36524]) + _36524 + 196] = mem[floor32(mem[_36524]) + _36524 + -(mem[_36524] % 32) + 228 len mem[_36524] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36524]) + _36524 + -mem[64] + 224]
                    else:
                        if not address(_30797):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_15713 + ceil32(return_data.size) + 293] = address(_30797)
                        require ext_code.size(address(cd[4]))
                        staticcall address(cd[4]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        mem[_15713 + ceil32(return_data.size) + 421] = Mask(112, 0, ext_call.return_data[32])
                        mem[_15713 + ceil32(return_data.size) + 389] = Mask(112, 0, ext_call.return_data[0])
                        if uint64(_30797) << 96 == address(_30764):
                            mem[_15713 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[32])
                            mem[_15713 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[0])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30764))
                            staticcall address(_30764).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + ceil32(return_data.size) + 325] = Mask(144, 112, ext_call.return_data[0])
                            if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30797) << 96 == address(_30764):
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35732 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35732 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35732 + 36] = 0
                                        mem[_35732 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35732 + 100] = this.address
                                        mem[_35732 + 132] = 128
                                        mem[_35732 + 164] = mem[_35732]
                                        s = 0
                                        while s < mem[_35732]:
                                            mem[s + _35732 + 196] = mem[s + _35732 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35732] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35732] + _35732 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35732]) + _35732 + 196] = mem[floor32(mem[_35732]) + _35732 + -(mem[_35732] % 32) + 228 len mem[_35732] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35732]) + _35732 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35736 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35736 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35736 + 36] = 0
                                        mem[_35736 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35736 + 100] = this.address
                                        mem[_35736 + 132] = 128
                                        mem[_35736 + 164] = mem[_35736]
                                        s = 0
                                        while s < mem[_35736]:
                                            mem[s + _35736 + 196] = mem[s + _35736 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35736] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35736 + 164 len mem[_35736] + 32]
                                        else:
                                            mem[floor32(mem[_35736]) + _35736 + 196] = mem[floor32(mem[_35736]) + _35736 + -(mem[_35736] % 32) + 228 len mem[_35736] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35736], mem[_35736 + 196 len floor32(mem[_35736]) + 32]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35740 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35740 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35740 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35740 + 68] = 0
                                        mem[_35740 + 100] = this.address
                                        mem[_35740 + 132] = 128
                                        mem[_35740 + 164] = mem[_35740]
                                        s = 0
                                        while s < mem[_35740]:
                                            mem[s + _35740 + 196] = mem[s + _35740 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35740] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35740 + 164 len mem[_35740] + 32]
                                        else:
                                            mem[floor32(mem[_35740]) + _35740 + 196] = mem[floor32(mem[_35740]) + _35740 + -(mem[_35740] % 32) + 228 len mem[_35740] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35740], mem[_35740 + 196 len floor32(mem[_35740]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35744 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35744 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35744 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_35744 + 68] = 0
                                        mem[_35744 + 100] = this.address
                                        mem[_35744 + 132] = 128
                                        mem[_35744 + 164] = mem[_35744]
                                        s = 0
                                        while s < mem[_35744]:
                                            mem[s + _35744 + 196] = mem[s + _35744 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35744] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35744] + _35744 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35744]) + _35744 + 196] = mem[floor32(mem[_35744]) + _35744 + -(mem[_35744] % 32) + 228 len mem[_35744] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35744]) + _35744 + -mem[64] + 224]
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                if uint64(_30797) << 96 == address(_30764):
                                    mem[_15713 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36532 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36532 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36532 + 36] = 0
                                        mem[_36532 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36532 + 100] = this.address
                                        mem[_36532 + 132] = 128
                                        mem[_36532 + 164] = mem[_36532]
                                        s = 0
                                        while s < mem[_36532]:
                                            mem[s + _36532 + 196] = mem[s + _36532 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36532] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36532] + _36532 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36532]) + _36532 + 196] = mem[floor32(mem[_36532]) + _36532 + -(mem[_36532] % 32) + 228 len mem[_36532] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36532]) + _36532 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36536 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36536 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36536 + 36] = 0
                                        mem[_36536 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36536 + 100] = this.address
                                        mem[_36536 + 132] = 128
                                        mem[_36536 + 164] = mem[_36536]
                                        s = 0
                                        while s < mem[_36536]:
                                            mem[s + _36536 + 196] = mem[s + _36536 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36536] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36536] + _36536 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36536]) + _36536 + 196] = mem[floor32(mem[_36536]) + _36536 + -(mem[_36536] % 32) + 228 len mem[_36536] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36536]) + _36536 + -mem[64] + 224]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36540 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36540 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36540 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36540 + 68] = 0
                                        mem[_36540 + 100] = this.address
                                        mem[_36540 + 132] = 128
                                        mem[_36540 + 164] = mem[_36540]
                                        s = 0
                                        while s < mem[_36540]:
                                            mem[s + _36540 + 196] = mem[s + _36540 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36540] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36540] + _36540 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36540]) + _36540 + 196] = mem[floor32(mem[_36540]) + _36540 + -(mem[_36540] % 32) + 228 len mem[_36540] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36540]) + _36540 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36544 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36544 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36544 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                        mem[_36544 + 68] = 0
                                        mem[_36544 + 100] = this.address
                                        mem[_36544 + 132] = 128
                                        mem[_36544 + 164] = mem[_36544]
                                        s = 0
                                        while s < mem[_36544]:
                                            mem[s + _36544 + 196] = mem[s + _36544 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36544] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_36544] + _36544 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_36544]) + _36544 + 196] = mem[floor32(mem[_36544]) + _36544 + -(mem[_36544] % 32) + 228 len mem[_36544] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_36544]) + _36544 + -mem[64] + 224]
                        else:
                            mem[_15713 + ceil32(return_data.size) + 485] = Mask(112, 0, ext_call.return_data[0])
                            mem[_15713 + ceil32(return_data.size) + 453] = Mask(112, 0, ext_call.return_data[32])
                            mem[mem[64] + 4] = address(cd[4])
                            require ext_code.size(address(_30764))
                            staticcall address(_30764).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                revert with 0, 'ds-math-sub-underflow'
                            mem[_15713 + ceil32(return_data.size) + 325] = ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32])
                            if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            41,
                                            0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                            mem[mem[64] + 109 len 23]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                            if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30797) << 96 == address(_30764):
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35750 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35750 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35750 + 36] = 0
                                        mem[_35750 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35750 + 100] = this.address
                                        mem[_35750 + 132] = 128
                                        mem[_35750 + 164] = mem[_35750]
                                        s = 0
                                        while s < mem[_35750]:
                                            mem[s + _35750 + 196] = mem[s + _35750 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35750] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35750 + 164 len mem[_35750] + 32]
                                        else:
                                            mem[floor32(mem[_35750]) + _35750 + 196] = mem[floor32(mem[_35750]) + _35750 + -(mem[_35750] % 32) + 228 len mem[_35750] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35750], mem[_35750 + 196 len floor32(mem[_35750]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35754 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35754 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35754 + 36] = 0
                                        mem[_35754 + 68] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35754 + 100] = this.address
                                        mem[_35754 + 132] = 128
                                        mem[_35754 + 164] = mem[_35754]
                                        s = 0
                                        while s < mem[_35754]:
                                            mem[s + _35754 + 196] = mem[s + _35754 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35754] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35754 + 164 len mem[_35754] + 32]
                                        else:
                                            mem[floor32(mem[_35754]) + _35754 + 196] = mem[floor32(mem[_35754]) + _35754 + -(mem[_35754] % 32) + 228 len mem[_35754] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_35754], mem[_35754 + 196 len floor32(mem[_35754]) + 32]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _35758 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35758 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35758 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35758 + 68] = 0
                                        mem[_35758 + 100] = this.address
                                        mem[_35758 + 132] = 128
                                        mem[_35758 + 164] = mem[_35758]
                                        s = 0
                                        while s < mem[_35758]:
                                            mem[s + _35758 + 196] = mem[s + _35758 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35758] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len mem[_35758] + _35758 + -mem[64] + 192]
                                        else:
                                            mem[floor32(mem[_35758]) + _35758 + 196] = mem[floor32(mem[_35758]) + _35758 + -(mem[_35758] % 32) + 228 len mem[_35758] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len floor32(mem[_35758]) + _35758 + -mem[64] + 224]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _35762 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_35762 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_35762 + 36] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_35762 + 68] = 0
                                        mem[_35762 + 100] = this.address
                                        mem[_35762 + 132] = 128
                                        mem[_35762 + 164] = mem[_35762]
                                        s = 0
                                        while s < mem[_35762]:
                                            mem[s + _35762 + 196] = mem[s + _35762 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_35762] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35762 + 164 len mem[_35762] + 32]
                                        else:
                                            mem[floor32(mem[_35762]) + _35762 + 196] = mem[floor32(mem[_35762]) + _35762 + -(mem[_35762] % 32) + 228 len mem[_35762] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_35762], mem[_35762 + 196 len floor32(mem[_35762]) + 32]
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                mem[_15713 + ceil32(return_data.size) + 357] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                if uint64(_30797) << 96 == address(_30764):
                                    mem[_15713 + ceil32(return_data.size) + 549] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    mem[_15713 + ceil32(return_data.size) + 517] = 0
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36552 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36552 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36552 + 36] = 0
                                        mem[_36552 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36552 + 100] = this.address
                                        mem[_36552 + 132] = 128
                                        mem[_36552 + 164] = mem[_36552]
                                        s = 0
                                        while s < mem[_36552]:
                                            mem[s + _36552 + 196] = mem[s + _36552 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36552] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36552 + 164 len mem[_36552] + 32]
                                        else:
                                            mem[floor32(mem[_36552]) + _36552 + 196] = mem[floor32(mem[_36552]) + _36552 + -(mem[_36552] % 32) + 228 len mem[_36552] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36552], mem[_36552 + 196 len floor32(mem[_36552]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36556 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36556 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36556 + 36] = 0
                                        mem[_36556 + 68] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36556 + 100] = this.address
                                        mem[_36556 + 132] = 128
                                        mem[_36556 + 164] = mem[_36556]
                                        s = 0
                                        while s < mem[_36556]:
                                            mem[s + _36556 + 196] = mem[s + _36556 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36556] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36556 + 164 len mem[_36556] + 32]
                                        else:
                                            mem[floor32(mem[_36556]) + _36556 + 196] = mem[floor32(mem[_36556]) + _36556 + -(mem[_36556] % 32) + 228 len mem[_36556] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, mem[_36556], mem[_36556 + 196 len floor32(mem[_36556]) + 32]
                                else:
                                    mem[_15713 + ceil32(return_data.size) + 549] = 0
                                    mem[_15713 + ceil32(return_data.size) + 517] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if idx < mem[_15713] - 2:
                                        mem[_15713 + ceil32(return_data.size) + 197] = address(cd[4])
                                        _36560 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36560 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36560 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36560 + 68] = 0
                                        mem[_36560 + 100] = this.address
                                        mem[_36560 + 132] = 128
                                        mem[_36560 + 164] = mem[_36560]
                                        s = 0
                                        while s < mem[_36560]:
                                            mem[s + _36560 + 196] = mem[s + _36560 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36560] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36560 + 164 len mem[_36560] + 32]
                                        else:
                                            mem[floor32(mem[_36560]) + _36560 + 196] = mem[floor32(mem[_36560]) + _36560 + -(mem[_36560] % 32) + 228 len mem[_36560] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36560], mem[_36560 + 196 len floor32(mem[_36560]) + 32]
                                    else:
                                        mem[_15713 + ceil32(return_data.size) + 197] = this.address
                                        _36564 = mem[64]
                                        mem[mem[64]] = 0
                                        mem[64] = mem[64] + 32
                                        mem[_36564 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_36564 + 36] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                        mem[_36564 + 68] = 0
                                        mem[_36564 + 100] = this.address
                                        mem[_36564 + 132] = 128
                                        mem[_36564 + 164] = mem[_36564]
                                        s = 0
                                        while s < mem[_36564]:
                                            mem[s + _36564 + 196] = mem[s + _36564 + 32]
                                            s = s + 32
                                            continue 
                                        if not mem[_36564] % 32:
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36564 + 164 len mem[_36564] + 32]
                                        else:
                                            mem[floor32(mem[_36564]) + _36564 + 196] = mem[floor32(mem[_36564]) + _36564 + -(mem[_36564] % 32) + 228 len mem[_36564] % 32]
                                            require ext_code.size(address(cd[4]))
                                            call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, mem[_36564], mem[_36564 + 196 len floor32(mem[_36564]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = mem[_15713 + ceil32(return_data.size) + 357]
                    continue 
                if s < _15737 * cd[100] / 100:
                    revert with 0, '-,'
                _30794 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                mem[_30794] = ('cd', 36).length
                mem[_30794 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_30794 + (32 * ('cd', 36).length) + 32] = 0
                if ('cd', 36).length < 2:
                    revert with 0, 'PancakeLibrary: INVALID_PATH'
                require ('cd', 36).length <= test266151307()
                _30853 = mem[64]
                mem[mem[64]] = ('cd', 36).length
                mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                if not ('cd', 36).length:
                    require 0 < mem[_30853]
                    mem[_30853 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30794]
                        _38849 = mem[(32 * idx) + _30794 + 32]
                        require idx + 1 < mem[_30794]
                        _39201 = mem[(32 * idx + 1) + _30794 + 32]
                        if mem[(32 * idx) + _30794 + 44 len 20] == mem[(32 * idx + 1) + _30794 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30794 + 44 len 20] < mem[(32 * idx + 1) + _30794 + 44 len 20]:
                            if not mem[(32 * idx) + _30794 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38849) == address(_38849):
                                require idx < mem[_30853]
                                if mem[(32 * idx) + _30853 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30853 + 32] / 9975 != mem[(32 * idx) + _30853 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                    require idx + 1 < mem[_30853]
                                    mem[(32 * idx + 1) + _30853 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30853 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30853 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                    require idx + 1 < mem[_30853]
                                    mem[(32 * idx + 1) + _30853 + 32] = 9975 * mem[(32 * idx) + _30853 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30794 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_39201) == address(_38849):
                                require idx < mem[_30853]
                                if mem[(32 * idx) + _30853 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30853 + 32] / 9975 != mem[(32 * idx) + _30853 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                    require idx + 1 < mem[_30853]
                                    mem[(32 * idx + 1) + _30853 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30853 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30853 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                    require idx + 1 < mem[_30853]
                                    mem[(32 * idx + 1) + _30853 + 32] = 9975 * mem[(32 * idx) + _30853 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30853]
                        if mem[(32 * idx) + _30853 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30853 + 32] / 9975 != mem[(32 * idx) + _30853 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30853 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30853 + 32])
                            require idx + 1 < mem[_30853]
                            mem[(32 * idx + 1) + _30853 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30853 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30853 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30853 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30853 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30853 + 32])
                            require idx + 1 < mem[_30853]
                            mem[(32 * idx + 1) + _30853 + 32] = 9975 * mem[(32 * idx) + _30853 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30853 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30853]
                    _39198 = mem[_30853 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _39198
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _39198
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39828 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39828] = ('cd', 36).length
                    mem[_39828 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39828 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39828]
                        require idx + 1 < mem[_39828]
                        if mem[(32 * idx) + _39828 + 44 len 20] == mem[(32 * idx + 1) + _39828 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39828 + 44 len 20] < mem[(32 * idx + 1) + _39828 + 44 len 20]:
                            if not mem[(32 * idx) + _39828 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30853]
                            _43026 = mem[(32 * idx + 1) + _30853 + 32]
                            if mem[(32 * idx) + _39828 + 44 len 20] == mem[(32 * idx) + _39828 + 44 len 20]:
                                if idx < mem[_39828] - 2:
                                    _43542 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43542 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43542 + 36] = 0
                                    mem[_43542 + 68] = _43026
                                    mem[_43542 + 100] = address(cd[4])
                                    mem[_43542 + 132] = 128
                                    mem[_43542 + 164] = mem[_43542]
                                    s = 0
                                    while s < mem[_43542]:
                                        mem[s + _43542 + 196] = mem[s + _43542 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43542] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43026, address(cd[4]), 128, mem[_43542 + 164 len mem[_43542] + 32]
                                    else:
                                        mem[floor32(mem[_43542]) + _43542 + 196] = mem[floor32(mem[_43542]) + _43542 + -(mem[_43542] % 32) + 228 len mem[_43542] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43026, address(cd[4]), 128, mem[_43542], mem[_43542 + 196 len floor32(mem[_43542]) + 32]
                                else:
                                    _43546 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43546 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43546 + 36] = 0
                                    mem[_43546 + 68] = _43026
                                    mem[_43546 + 100] = address(cd[68])
                                    mem[_43546 + 132] = 128
                                    mem[_43546 + 164] = mem[_43546]
                                    s = 0
                                    while s < mem[_43546]:
                                        mem[s + _43546 + 196] = mem[s + _43546 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43546] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43026, address(cd[68]), 128, mem[_43546 + 164 len mem[_43546] + 32]
                                    else:
                                        mem[floor32(mem[_43546]) + _43546 + 196] = mem[floor32(mem[_43546]) + _43546 + -(mem[_43546] % 32) + 228 len mem[_43546] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43026, address(cd[68]), 128, mem[_43546], mem[_43546 + 196 len floor32(mem[_43546]) + 32]
                            else:
                                if idx < mem[_39828] - 2:
                                    _43550 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43550 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43550 + 36] = _43026
                                    mem[_43550 + 68] = 0
                                    mem[_43550 + 100] = address(cd[4])
                                    mem[_43550 + 132] = 128
                                    mem[_43550 + 164] = mem[_43550]
                                    s = 0
                                    while s < mem[_43550]:
                                        mem[s + _43550 + 196] = mem[s + _43550 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43550] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43026, 0, address(cd[4]), 128, mem[_43550 + 164 len mem[_43550] + 32]
                                    else:
                                        mem[floor32(mem[_43550]) + _43550 + 196] = mem[floor32(mem[_43550]) + _43550 + -(mem[_43550] % 32) + 228 len mem[_43550] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43026, 0, address(cd[4]), 128, mem[_43550], mem[_43550 + 196 len floor32(mem[_43550]) + 32]
                                else:
                                    _43554 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43554 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43554 + 36] = _43026
                                    mem[_43554 + 68] = 0
                                    mem[_43554 + 100] = address(cd[68])
                                    mem[_43554 + 132] = 128
                                    mem[_43554 + 164] = mem[_43554]
                                    s = 0
                                    while s < mem[_43554]:
                                        mem[s + _43554 + 196] = mem[s + _43554 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43554] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43026, 0, address(cd[68]), 128, mem[_43554 + 164 len mem[_43554] + 32]
                                    else:
                                        mem[floor32(mem[_43554]) + _43554 + 196] = mem[floor32(mem[_43554]) + _43554 + -(mem[_43554] % 32) + 228 len mem[_43554] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43026, 0, address(cd[68]), 128, mem[_43554], mem[_43554 + 196 len floor32(mem[_43554]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39828 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30853]
                            _43027 = mem[(32 * idx + 1) + _30853 + 32]
                            if mem[(32 * idx) + _39828 + 44 len 20] == mem[(32 * idx + 1) + _39828 + 44 len 20]:
                                if idx < mem[_39828] - 2:
                                    _43558 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43558 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43558 + 36] = 0
                                    mem[_43558 + 68] = _43027
                                    mem[_43558 + 100] = address(cd[4])
                                    mem[_43558 + 132] = 128
                                    mem[_43558 + 164] = mem[_43558]
                                    s = 0
                                    while s < mem[_43558]:
                                        mem[s + _43558 + 196] = mem[s + _43558 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43558] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43027, address(cd[4]), 128, mem[_43558 + 164 len mem[_43558] + 32]
                                    else:
                                        mem[floor32(mem[_43558]) + _43558 + 196] = mem[floor32(mem[_43558]) + _43558 + -(mem[_43558] % 32) + 228 len mem[_43558] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43027, address(cd[4]), 128, mem[_43558], mem[_43558 + 196 len floor32(mem[_43558]) + 32]
                                else:
                                    _43562 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43562 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43562 + 36] = 0
                                    mem[_43562 + 68] = _43027
                                    mem[_43562 + 100] = address(cd[68])
                                    mem[_43562 + 132] = 128
                                    mem[_43562 + 164] = mem[_43562]
                                    s = 0
                                    while s < mem[_43562]:
                                        mem[s + _43562 + 196] = mem[s + _43562 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43562] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43027, address(cd[68]), 128, mem[_43562 + 164 len mem[_43562] + 32]
                                    else:
                                        mem[floor32(mem[_43562]) + _43562 + 196] = mem[floor32(mem[_43562]) + _43562 + -(mem[_43562] % 32) + 228 len mem[_43562] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43027, address(cd[68]), 128, mem[_43562], mem[_43562 + 196 len floor32(mem[_43562]) + 32]
                            else:
                                if idx < mem[_39828] - 2:
                                    _43566 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43566 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43566 + 36] = _43027
                                    mem[_43566 + 68] = 0
                                    mem[_43566 + 100] = address(cd[4])
                                    mem[_43566 + 132] = 128
                                    mem[_43566 + 164] = mem[_43566]
                                    s = 0
                                    while s < mem[_43566]:
                                        mem[s + _43566 + 196] = mem[s + _43566 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43566] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43027, 0, address(cd[4]), 128, mem[_43566 + 164 len mem[_43566] + 32]
                                    else:
                                        mem[floor32(mem[_43566]) + _43566 + 196] = mem[floor32(mem[_43566]) + _43566 + -(mem[_43566] % 32) + 228 len mem[_43566] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43027, 0, address(cd[4]), 128, mem[_43566], mem[_43566 + 196 len floor32(mem[_43566]) + 32]
                                else:
                                    _43570 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43570 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43570 + 36] = _43027
                                    mem[_43570 + 68] = 0
                                    mem[_43570 + 100] = address(cd[68])
                                    mem[_43570 + 132] = 128
                                    mem[_43570 + 164] = mem[_43570]
                                    s = 0
                                    while s < mem[_43570]:
                                        mem[s + _43570 + 196] = mem[s + _43570 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43570] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43027, 0, address(cd[68]), 128, mem[_43570 + 164 len mem[_43570] + 32]
                                    else:
                                        mem[floor32(mem[_43570]) + _43570 + 196] = mem[floor32(mem[_43570]) + _43570 + -(mem[_43570] % 32) + 228 len mem[_43570] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43027, 0, address(cd[68]), 128, mem[_43570], mem[_43570 + 196 len floor32(mem[_43570]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                else:
                    mem[_30853 + 32 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
                    require 0 < mem[_30853]
                    mem[_30853 + 32] = s
                    idx = 0
                    s = 0
                    s = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_30794]
                        _38852 = mem[(32 * idx) + _30794 + 32]
                        require idx + 1 < mem[_30794]
                        _39205 = mem[(32 * idx + 1) + _30794 + 32]
                        if mem[(32 * idx) + _30794 + 44 len 20] == mem[(32 * idx + 1) + _30794 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _30794 + 44 len 20] < mem[(32 * idx + 1) + _30794 + 44 len 20]:
                            if not mem[(32 * idx) + _30794 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_38852) == address(_38852):
                                require idx < mem[_30853]
                                if mem[(32 * idx) + _30853 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30853 + 32] / 9975 != mem[(32 * idx) + _30853 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                    require idx + 1 < mem[_30853]
                                    mem[(32 * idx + 1) + _30853 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30853 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30853 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                    require idx + 1 < mem[_30853]
                                    mem[(32 * idx + 1) + _30853 + 32] = 9975 * mem[(32 * idx) + _30853 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        else:
                            if not mem[(32 * idx + 1) + _30794 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(cd[4]))
                            staticcall address(cd[4]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if address(_39205) == address(_38852):
                                require idx < mem[_30853]
                                if mem[(32 * idx) + _30853 + 32] <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[mem[64] + 109 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                                if 9975 * mem[(32 * idx) + _30853 + 32] / 9975 != mem[(32 * idx) + _30853 + 32]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                    require idx + 1 < mem[_30853]
                                    mem[(32 * idx + 1) + _30853 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if 9975 * mem[(32 * idx) + _30853 + 32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 9975 * mem[(32 * idx) + _30853 + 32]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                    require idx + 1 < mem[_30853]
                                    mem[(32 * idx + 1) + _30853 + 32] = 9975 * mem[(32 * idx) + _30853 + 32] * Mask(112, 0, ext_call.return_data[32]) / (10000 * Mask(112, 0, ext_call.return_data[0])) + (9975 * mem[(32 * idx) + _30853 + 32])
                                idx = idx + 1
                                s = Mask(112, 0, ext_call.return_data[32])
                                s = Mask(112, 0, ext_call.return_data[0])
                                continue 
                        require idx < mem[_30853]
                        if mem[(32 * idx) + _30853 + 32] <= 0:
                            revert with 0, 
                                        32,
                                        41,
                                        0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                        mem[mem[64] + 109 len 23]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[mem[64] + 106 len 26]
                        if 9975 * mem[(32 * idx) + _30853 + 32] / 9975 != mem[(32 * idx) + _30853 + 32]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30853 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30853 + 32])
                            require idx + 1 < mem[_30853]
                            mem[(32 * idx + 1) + _30853 + 32] = 0 / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30853 + 32])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 9975 * mem[(32 * idx) + _30853 + 32] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 9975 * mem[(32 * idx) + _30853 + 32]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30853 + 32]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30853 + 32])
                            require idx + 1 < mem[_30853]
                            mem[(32 * idx + 1) + _30853 + 32] = 9975 * mem[(32 * idx) + _30853 + 32] * Mask(112, 0, ext_call.return_data[0]) / (10000 * Mask(112, 0, ext_call.return_data[32])) + (9975 * mem[(32 * idx) + _30853 + 32])
                        idx = idx + 1
                        s = Mask(112, 0, ext_call.return_data[0])
                        s = Mask(112, 0, ext_call.return_data[32])
                        continue 
                    require mem[_30853]
                    _39202 = mem[_30853 + 32]
                    mem[mem[64] + 4] = address(cd[4])
                    mem[mem[64] + 36] = _39202
                    require ext_code.size(WETHAddress)
                    call WETHAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args address(cd[4]), _39202
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    _39829 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
                    mem[_39829] = ('cd', 36).length
                    mem[_39829 + 32 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_39829 + (32 * ('cd', 36).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_39829]
                        require idx + 1 < mem[_39829]
                        if mem[(32 * idx) + _39829 + 44 len 20] == mem[(32 * idx + 1) + _39829 + 44 len 20]:
                            revert with 0, 32, 35, 0x2150616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _39829 + 44 len 20] < mem[(32 * idx + 1) + _39829 + 44 len 20]:
                            if not mem[(32 * idx) + _39829 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30853]
                            _43028 = mem[(32 * idx + 1) + _30853 + 32]
                            if mem[(32 * idx) + _39829 + 44 len 20] == mem[(32 * idx) + _39829 + 44 len 20]:
                                if idx < mem[_39829] - 2:
                                    _43574 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43574 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43574 + 36] = 0
                                    mem[_43574 + 68] = _43028
                                    mem[_43574 + 100] = address(cd[4])
                                    mem[_43574 + 132] = 128
                                    mem[_43574 + 164] = mem[_43574]
                                    s = 0
                                    while s < mem[_43574]:
                                        mem[s + _43574 + 196] = mem[s + _43574 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43574] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43028, address(cd[4]), 128, mem[_43574 + 164 len mem[_43574] + 32]
                                    else:
                                        mem[floor32(mem[_43574]) + _43574 + 196] = mem[floor32(mem[_43574]) + _43574 + -(mem[_43574] % 32) + 228 len mem[_43574] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43028, address(cd[4]), 128, mem[_43574], mem[_43574 + 196 len floor32(mem[_43574]) + 32]
                                else:
                                    _43578 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43578 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43578 + 36] = 0
                                    mem[_43578 + 68] = _43028
                                    mem[_43578 + 100] = address(cd[68])
                                    mem[_43578 + 132] = 128
                                    mem[_43578 + 164] = mem[_43578]
                                    s = 0
                                    while s < mem[_43578]:
                                        mem[s + _43578 + 196] = mem[s + _43578 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43578] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43028, address(cd[68]), 128, mem[_43578 + 164 len mem[_43578] + 32]
                                    else:
                                        mem[floor32(mem[_43578]) + _43578 + 196] = mem[floor32(mem[_43578]) + _43578 + -(mem[_43578] % 32) + 228 len mem[_43578] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43028, address(cd[68]), 128, mem[_43578], mem[_43578 + 196 len floor32(mem[_43578]) + 32]
                            else:
                                if idx < mem[_39829] - 2:
                                    _43582 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43582 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43582 + 36] = _43028
                                    mem[_43582 + 68] = 0
                                    mem[_43582 + 100] = address(cd[4])
                                    mem[_43582 + 132] = 128
                                    mem[_43582 + 164] = mem[_43582]
                                    s = 0
                                    while s < mem[_43582]:
                                        mem[s + _43582 + 196] = mem[s + _43582 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43582] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43028, 0, address(cd[4]), 128, mem[_43582 + 164 len mem[_43582] + 32]
                                    else:
                                        mem[floor32(mem[_43582]) + _43582 + 196] = mem[floor32(mem[_43582]) + _43582 + -(mem[_43582] % 32) + 228 len mem[_43582] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43028, 0, address(cd[4]), 128, mem[_43582], mem[_43582 + 196 len floor32(mem[_43582]) + 32]
                                else:
                                    _43586 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43586 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43586 + 36] = _43028
                                    mem[_43586 + 68] = 0
                                    mem[_43586 + 100] = address(cd[68])
                                    mem[_43586 + 132] = 128
                                    mem[_43586 + 164] = mem[_43586]
                                    s = 0
                                    while s < mem[_43586]:
                                        mem[s + _43586 + 196] = mem[s + _43586 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43586] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43028, 0, address(cd[68]), 128, mem[_43586 + 164 len mem[_43586] + 32]
                                    else:
                                        mem[floor32(mem[_43586]) + _43586 + 196] = mem[floor32(mem[_43586]) + _43586 + -(mem[_43586] % 32) + 228 len mem[_43586] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43028, 0, address(cd[68]), 128, mem[_43586], mem[_43586 + 196 len floor32(mem[_43586]) + 32]
                        else:
                            if not mem[(32 * idx + 1) + _39829 + 44 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[_30853]
                            _43029 = mem[(32 * idx + 1) + _30853 + 32]
                            if mem[(32 * idx) + _39829 + 44 len 20] == mem[(32 * idx + 1) + _39829 + 44 len 20]:
                                if idx < mem[_39829] - 2:
                                    _43590 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43590 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43590 + 36] = 0
                                    mem[_43590 + 68] = _43029
                                    mem[_43590 + 100] = address(cd[4])
                                    mem[_43590 + 132] = 128
                                    mem[_43590 + 164] = mem[_43590]
                                    s = 0
                                    while s < mem[_43590]:
                                        mem[s + _43590 + 196] = mem[s + _43590 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43590] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43029, address(cd[4]), 128, mem[_43590 + 164 len mem[_43590] + 32]
                                    else:
                                        mem[floor32(mem[_43590]) + _43590 + 196] = mem[floor32(mem[_43590]) + _43590 + -(mem[_43590] % 32) + 228 len mem[_43590] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43029, address(cd[4]), 128, mem[_43590], mem[_43590 + 196 len floor32(mem[_43590]) + 32]
                                else:
                                    _43594 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43594 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43594 + 36] = 0
                                    mem[_43594 + 68] = _43029
                                    mem[_43594 + 100] = address(cd[68])
                                    mem[_43594 + 132] = 128
                                    mem[_43594 + 164] = mem[_43594]
                                    s = 0
                                    while s < mem[_43594]:
                                        mem[s + _43594 + 196] = mem[s + _43594 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43594] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43029, address(cd[68]), 128, mem[_43594 + 164 len mem[_43594] + 32]
                                    else:
                                        mem[floor32(mem[_43594]) + _43594 + 196] = mem[floor32(mem[_43594]) + _43594 + -(mem[_43594] % 32) + 228 len mem[_43594] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _43029, address(cd[68]), 128, mem[_43594], mem[_43594 + 196 len floor32(mem[_43594]) + 32]
                            else:
                                if idx < mem[_39829] - 2:
                                    _43598 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43598 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43598 + 36] = _43029
                                    mem[_43598 + 68] = 0
                                    mem[_43598 + 100] = address(cd[4])
                                    mem[_43598 + 132] = 128
                                    mem[_43598 + 164] = mem[_43598]
                                    s = 0
                                    while s < mem[_43598]:
                                        mem[s + _43598 + 196] = mem[s + _43598 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43598] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43029, 0, address(cd[4]), 128, mem[_43598 + 164 len mem[_43598] + 32]
                                    else:
                                        mem[floor32(mem[_43598]) + _43598 + 196] = mem[floor32(mem[_43598]) + _43598 + -(mem[_43598] % 32) + 228 len mem[_43598] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43029, 0, address(cd[4]), 128, mem[_43598], mem[_43598 + 196 len floor32(mem[_43598]) + 32]
                                else:
                                    _43602 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_43602 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_43602 + 36] = _43029
                                    mem[_43602 + 68] = 0
                                    mem[_43602 + 100] = address(cd[68])
                                    mem[_43602 + 132] = 128
                                    mem[_43602 + 164] = mem[_43602]
                                    s = 0
                                    while s < mem[_43602]:
                                        mem[s + _43602 + 196] = mem[s + _43602 + 32]
                                        s = s + 32
                                        continue 
                                    if not mem[_43602] % 32:
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43029, 0, address(cd[68]), 128, mem[_43602 + 164 len mem[_43602] + 32]
                                    else:
                                        mem[floor32(mem[_43602]) + _43602 + 196] = mem[floor32(mem[_43602]) + _43602 + -(mem[_43602] % 32) + 228 len mem[_43602] % 32]
                                        require ext_code.size(address(cd[4]))
                                        call address(cd[4]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _43029, 0, address(cd[68]), 128, mem[_43602], mem[_43602 + 196 len floor32(mem[_43602]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
}



}
