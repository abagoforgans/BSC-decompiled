contract main {




// =====================  Runtime code  =====================


const getInterestParameters = 80, 0, 4, 75


uint256 cumulativeIndex;
uint256 stor1;
uint256 stor2;
address owner;
address stor4;
uint256 totalLiquidity;
uint256 availableLiquidity;
mapping of uint256 balanceLiquidity;
uint256 balanceLiquidity;
uint256 profit;
uint256 rate;
address underlyingTokenAddress;
address stor12;
address dieselTokenAddress;
array of uint256 sub_044d78b4;

function sub_044d78b4(?) payable {
    return sub_044d78b4[0 len sub_044d78b4.length]
}

function getDieselToken() payable {
    return dieselTokenAddress
}

function getTotalLiquidity() payable {
    return totalLiquidity
}

function getRate() payable {
    return rate
}

function getProfit() payable {
    return profit
}

function getBalanceLiquidity() payable {
    return balanceLiquidity
}

function owner() payable {
    return owner
}

function getAvailableLiquidity() payable {
    return availableLiquidity
}

function getCumulativeIndex() payable {
    return cumulativeIndex
}

function getUnderlyingToken() payable {
    return underlyingTokenAddress
}

function getBalanceLiquidity(address arg1) payable {
    require calldata.size - 4 >= 32
    return balanceLiquidity[address(arg1)]
}

function _fallback() payable {
    revert
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function sub_5e702d0f(?) payable {
    require calldata.size - 4 >= 32
    require arg1 <= 4294967296
    require arg1 + 36 <= calldata.size
    require arg1.length <= 4294967296 and arg1 + arg1.length + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    sub_044d78b4[] = Array(len=arg1.length, data=arg1[all])
}

function getBalance(address arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    38,
                    0xfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                    mem[202 len 26]
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function getCurrentBalance(address arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(dieselTokenAddress)
    staticcall dieselTokenAddress.0x70a08231 with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        return 0
    if rate * ext_call.return_data[0] / ext_call.return_data[0] != rate:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    return (rate * ext_call.return_data[0] / 10^18)
}

function sub_efc16c75(?) payable {
    require calldata.size - 4 >= 64
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + arg2.length + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    require ext_code.size(stor12)
    staticcall stor12 with:
            gas gas_remaining wei
           args Array(len=arg2.length, data=arg2[all])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    call arg1.approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(ext_call.return_data[0]), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
}

function calcLinearIndex(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not stor1:
        if not cumulativeIndex:
            return 0
        if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        return (10^18 * cumulativeIndex / 10^18)
    if arg1 * stor1 / stor1 != arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if (arg1 * stor1 / 8760 * 24 * 3600) + 10^18 < arg1 * stor1 / 8760 * 24 * 3600:
        revert with 0, 'SafeMath: addition overflow'
    if not cumulativeIndex:
        return 0
    if (10^18 * cumulativeIndex) + (arg1 * stor1 / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != (arg1 * stor1 / 8760 * 24 * 3600) + 10^18:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    return ((10^18 * cumulativeIndex) + (arg1 * stor1 / 8760 * 24 * 3600 * cumulativeIndex) / 10^18)
}

function calcLinearCumulative_S1() payable {
    if stor2 > block.timestamp:
        revert with 0, 'SafeMath: subtraction overflow'
    if not stor1:
        if not cumulativeIndex:
            return 0
        if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        return (10^18 * cumulativeIndex / 10^18)
    if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
        revert with 0, 'SafeMath: addition overflow'
    if not cumulativeIndex:
        return 0
    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    return ((10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18)
}

function sub_5386f036(?) payable {
    require calldata.size - 4 >= 160
    require arg3 <= 4294967296
    require arg3 + 36 <= calldata.size
    require arg3.length <= 4294967296 and arg3 + (32 * arg3.length) + 36 <= calldata.size
    require arg5 <= 4294967296
    require arg5 + 36 <= calldata.size
    require arg5.length <= 4294967296 and arg5 + arg5.length + 36 <= calldata.size
    mem[128 len arg5.length] = arg5[all]
    mem[arg5.length + 128] = 0
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    mem[ceil32(arg5.length) + 128] = 0xfc518b4a00000000000000000000000000000000000000000000000000000000
    mem[ceil32(arg5.length) + 196 len ceil32(arg5.length)] = arg5[all], mem[arg5.length + 128 len ceil32(arg5.length) - arg5.length]
    require ext_code.size(stor12)
    staticcall stor12 with:
            gas gas_remaining wei
           args Array(len=arg5.length, data=arg5[all])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    mem[ceil32(arg5.length) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
    mem[ceil32(arg5.length) + 132] = arg1
    mem[ceil32(arg5.length) + 164] = arg2
    mem[ceil32(arg5.length) + 228] = this.address
    mem[ceil32(arg5.length) + 260] = arg4
    mem[ceil32(arg5.length) + 196] = 160
    mem[ceil32(arg5.length) + 292] = arg3.length
    mem[ceil32(arg5.length) + 324 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
    mem[ceil32(arg5.length) + (32 * arg3.length) + 324] = 0
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
         gas gas_remaining wei
        args arg1, arg2, Array(len=arg3.length, data=call.data[arg3 + 36 len floor32(arg3.length)]), this.address, arg4
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[ceil32(arg5.length) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(arg5.length) + ceil32(return_data.size) + 128
    require return_data.size >= 32
    require 0, Mask(224, 32, arg1) >> 32 <= 4294967296
    require 0, Mask(224, 32, arg1) >> 32 + 32 <= return_data.size
    require mem[ceil32(arg5.length) + 0, Mask(224, 32, arg1) >> 32 + 128] <= 4294967296 and 0, Mask(224, 32, arg1) >> 32 + (32 * mem[ceil32(arg5.length) + 0, Mask(224, 32, arg1) >> 32 + 128]) + 32 <= return_data.size
}

function getAPY(address arg1) payable {
    require calldata.size - 4 >= 32
    if not balanceLiquidity[address(arg1)]:
        return 0
    require ext_code.size(dieselTokenAddress)
    staticcall dieselTokenAddress.0x70a08231 with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if 0 <= balanceLiquidity[address(arg1)]:
            return 0
        if balanceLiquidity[address(arg1)] > 0:
            revert with 0, 'SafeMath: subtraction overflow'
        if not -balanceLiquidity[address(arg1)]:
            if balanceLiquidity[address(arg1)] <= 0:
                revert with 0, 'SafeMath: division by zero'
            if balanceLiquidity[address(arg1)]:
                return (0 / balanceLiquidity[address(arg1)])
        else:
            if -1 * 10^18 * balanceLiquidity[address(arg1)] / -balanceLiquidity[address(arg1)] != 10^18:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if not -1 * 10^18 * balanceLiquidity[address(arg1)]:
                if balanceLiquidity[address(arg1)] <= 0:
                    revert with 0, 'SafeMath: division by zero'
                if balanceLiquidity[address(arg1)]:
                    return (0 / balanceLiquidity[address(arg1)])
            else:
                if -100 * 10^18 * balanceLiquidity[address(arg1)] / -1 * 10^18 * balanceLiquidity[address(arg1)] != 100:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if balanceLiquidity[address(arg1)] <= 0:
                    revert with 0, 'SafeMath: division by zero'
                if balanceLiquidity[address(arg1)]:
                    return (-100 * 10^18 * balanceLiquidity[address(arg1)] / balanceLiquidity[address(arg1)])
    else:
        if rate * ext_call.return_data[0] / ext_call.return_data[0] != rate:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if rate * ext_call.return_data[0] / 10^18 <= balanceLiquidity[address(arg1)]:
            return 0
        if balanceLiquidity[address(arg1)] > rate * ext_call.return_data[0] / 10^18:
            revert with 0, 'SafeMath: subtraction overflow'
        if not (rate * ext_call.return_data[0] / 10^18) - balanceLiquidity[address(arg1)]:
            if balanceLiquidity[address(arg1)] <= 0:
                revert with 0, 'SafeMath: division by zero'
            if balanceLiquidity[address(arg1)]:
                return (0 / balanceLiquidity[address(arg1)])
        else:
            if (10^18 * rate * ext_call.return_data[0] / 10^18) - (10^18 * balanceLiquidity[address(arg1)]) / (rate * ext_call.return_data[0] / 10^18) - balanceLiquidity[address(arg1)] != 10^18:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if not (10^18 * rate * ext_call.return_data[0] / 10^18) - (10^18 * balanceLiquidity[address(arg1)]):
                if balanceLiquidity[address(arg1)] <= 0:
                    revert with 0, 'SafeMath: division by zero'
                if balanceLiquidity[address(arg1)]:
                    return (0 / balanceLiquidity[address(arg1)])
            else:
                if (100 * 10^18 * rate * ext_call.return_data[0] / 10^18) - (100 * 10^18 * balanceLiquidity[address(arg1)]) / (10^18 * rate * ext_call.return_data[0] / 10^18) - (10^18 * balanceLiquidity[address(arg1)]) != 100:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if balanceLiquidity[address(arg1)] <= 0:
                    revert with 0, 'SafeMath: division by zero'
                if balanceLiquidity[address(arg1)]:
                    return ((100 * 10^18 * rate * ext_call.return_data[0] / 10^18) - (100 * 10^18 * balanceLiquidity[address(arg1)]) / balanceLiquidity[address(arg1)])
    ('iszero', ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'balanceLiquidity', 7))))
    revert
}

function calcBorrowRate_S1() payable {
    if not totalLiquidity:
        return 0
    if availableLiquidity > totalLiquidity:
        revert with 0, 'SafeMath: subtraction overflow'
    if not totalLiquidity - availableLiquidity:
        if totalLiquidity <= 0:
            revert with 0, 'SafeMath: division by zero'
        require totalLiquidity
        if 0 / totalLiquidity < 80 * 10^18:
            if not 0 / totalLiquidity:
                return 0
            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                revert with 0, 'SafeMath: addition overflow'
            return (4 * 0 / totalLiquidity / 80)
        if 80 * 10^18 > 0 / totalLiquidity:
            revert with 0, 'SafeMath: subtraction overflow'
        if not (0 / totalLiquidity) - 80 * 10^18:
            return 4 * 10^18
        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
            revert with 0, 'SafeMath: addition overflow'
        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
            revert with 0, 'SafeMath: addition overflow'
        return (((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18)
    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
        if totalLiquidity <= 0:
            revert with 0, 'SafeMath: division by zero'
        require totalLiquidity
        if 0 / totalLiquidity < 80 * 10^18:
            if not 0 / totalLiquidity:
                return 0
            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                revert with 0, 'SafeMath: addition overflow'
            return (4 * 0 / totalLiquidity / 80)
        if 80 * 10^18 > 0 / totalLiquidity:
            revert with 0, 'SafeMath: subtraction overflow'
        if not (0 / totalLiquidity) - 80 * 10^18:
            return 4 * 10^18
        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
            revert with 0, 'SafeMath: addition overflow'
        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
            revert with 0, 'SafeMath: addition overflow'
        return (((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18)
    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if totalLiquidity <= 0:
        revert with 0, 'SafeMath: division by zero'
    require totalLiquidity
    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
        if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
            return 0
        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
            revert with 0, 'SafeMath: addition overflow'
        return (4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80)
    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
        revert with 0, 'SafeMath: subtraction overflow'
    if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
        return 4 * 10^18
    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
        revert with 0, 'SafeMath: addition overflow'
    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
        revert with 0, 'SafeMath: addition overflow'
    return (((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18)
}

function updateLeverageOpen(address arg1, uint256 arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    if arg3 > availableLiquidity:
        revert with 0, 'Not enough liquidity'
    require ext_code.size(underlyingTokenAddress)
    call underlyingTokenAddress.0x23b872dd with:
         gas gas_remaining wei
        args address(arg1), this.address, arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if arg2 + availableLiquidity < availableLiquidity:
        revert with 0, 'SafeMath: addition overflow'
    if arg3 > arg2 + availableLiquidity:
        revert with 0, 'SafeMath: subtraction overflow'
    availableLiquidity = arg2 + availableLiquidity - arg3
    if arg2 + totalLiquidity < totalLiquidity:
        revert with 0, 'SafeMath: addition overflow'
    totalLiquidity += arg2
    if stor2 > block.timestamp:
        revert with 0, 'SafeMath: subtraction overflow'
    if not stor1:
        if not cumulativeIndex:
            cumulativeIndex = 0
        else:
            if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
    else:
        if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
            revert with 0, 'SafeMath: addition overflow'
        if not cumulativeIndex:
            cumulativeIndex = 0
        else:
            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
    stor2 = block.timestamp
    if not arg2 + totalLiquidity:
        stor1 = 0
    else:
        if availableLiquidity > arg2 + totalLiquidity:
            revert with 0, 'SafeMath: subtraction overflow'
        if not arg2 + totalLiquidity - availableLiquidity:
            if arg2 + totalLiquidity <= 0:
                revert with 0, 'SafeMath: division by zero'
            require arg2 + totalLiquidity
            if 0 / arg2 + totalLiquidity < 80 * 10^18:
                if not 0 / arg2 + totalLiquidity:
                    stor1 = 0
                else:
                    if 4 * 0 / arg2 + totalLiquidity / 0 / arg2 + totalLiquidity != 4:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if 4 * 0 / arg2 + totalLiquidity / 80 < 4 * 0 / arg2 + totalLiquidity / 80:
                        revert with 0, 'SafeMath: addition overflow'
                    stor1 = 4 * 0 / arg2 + totalLiquidity / 80
            else:
                if 80 * 10^18 > 0 / arg2 + totalLiquidity:
                    revert with 0, 'SafeMath: subtraction overflow'
                if not (0 / arg2 + totalLiquidity) - 80 * 10^18:
                    stor1 = 4 * 10^18
                else:
                    if (75 * 0 / arg2 + totalLiquidity) - 6000 * 10^18 / (0 / arg2 + totalLiquidity) - 80 * 10^18 != 75:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if (75 * 0 / arg2 + totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / arg2 + totalLiquidity) - 6000 * 10^18 / 20:
                        revert with 0, 'SafeMath: addition overflow'
                    if ((75 * 0 / arg2 + totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / arg2 + totalLiquidity) - 6000 * 10^18 / 20:
                        revert with 0, 'SafeMath: addition overflow'
                    stor1 = ((75 * 0 / arg2 + totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
        else:
            if (10^18 * arg2) + (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / arg2 + totalLiquidity - availableLiquidity != 10^18:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if not (10^18 * arg2) + (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                if arg2 + totalLiquidity <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require arg2 + totalLiquidity
                if 0 / arg2 + totalLiquidity < 80 * 10^18:
                    if not 0 / arg2 + totalLiquidity:
                        stor1 = 0
                    else:
                        if 4 * 0 / arg2 + totalLiquidity / 0 / arg2 + totalLiquidity != 4:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if 4 * 0 / arg2 + totalLiquidity / 80 < 4 * 0 / arg2 + totalLiquidity / 80:
                            revert with 0, 'SafeMath: addition overflow'
                        stor1 = 4 * 0 / arg2 + totalLiquidity / 80
                else:
                    if 80 * 10^18 > 0 / arg2 + totalLiquidity:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not (0 / arg2 + totalLiquidity) - 80 * 10^18:
                        stor1 = 4 * 10^18
                    else:
                        if (75 * 0 / arg2 + totalLiquidity) - 6000 * 10^18 / (0 / arg2 + totalLiquidity) - 80 * 10^18 != 75:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if (75 * 0 / arg2 + totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / arg2 + totalLiquidity) - 6000 * 10^18 / 20:
                            revert with 0, 'SafeMath: addition overflow'
                        if ((75 * 0 / arg2 + totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / arg2 + totalLiquidity) - 6000 * 10^18 / 20:
                            revert with 0, 'SafeMath: addition overflow'
                        stor1 = ((75 * 0 / arg2 + totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
            else:
                if (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * arg2) + (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if arg2 + totalLiquidity <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require arg2 + totalLiquidity
                if (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity < 80 * 10^18:
                    if not (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity:
                        stor1 = 0
                    else:
                        if 4 * (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity / (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity != 4:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if 4 * (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity / 80 < 4 * (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity / 80:
                            revert with 0, 'SafeMath: addition overflow'
                        stor1 = 4 * (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity / 80
                else:
                    if 80 * 10^18 > (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not ((100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity) - 80 * 10^18:
                        stor1 = 4 * 10^18
                    else:
                        if (75 * (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity) - 80 * 10^18 != 75:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if (75 * (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity) - 6000 * 10^18 / 20:
                            revert with 0, 'SafeMath: addition overflow'
                        if ((75 * (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity) - 6000 * 10^18 / 20:
                            revert with 0, 'SafeMath: addition overflow'
                        stor1 = ((75 * (100 * 10^18 * arg2) + (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / arg2 + totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
}

function addLiquidity(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if arg1 >= 100 * 10^18:
        if stor4 != msg.sender:
            revert with 0, 'NOT MORE in TESTS'
    require ext_code.size(underlyingTokenAddress)
    call underlyingTokenAddress.0x23b872dd with:
         gas gas_remaining wei
        args msg.sender, this.address, arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not arg1:
        if rate <= 0:
            revert with 0, 'SafeMath: division by zero'
        require rate
        require ext_code.size(dieselTokenAddress)
        call dieselTokenAddress.0x40c10f19 with:
             gas gas_remaining wei
            args msg.sender, 0 / rate
    else:
        if 10^18 * arg1 / arg1 != 10^18:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if rate <= 0:
            revert with 0, 'SafeMath: division by zero'
        require rate
        require ext_code.size(dieselTokenAddress)
        call dieselTokenAddress.0x40c10f19 with:
             gas gas_remaining wei
            args msg.sender, 10^18 * arg1 / rate
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    if arg1 + balanceLiquidity < balanceLiquidity:
        revert with 0, 'SafeMath: addition overflow'
    balanceLiquidity += arg1
    if arg1 + balanceLiquidity[msg.sender] < balanceLiquidity[msg.sender]:
        revert with 0, 'SafeMath: addition overflow'
    balanceLiquidity[msg.sender] += arg1
    if arg1 + totalLiquidity < totalLiquidity:
        revert with 0, 'SafeMath: addition overflow'
    totalLiquidity += arg1
    if arg1 + availableLiquidity < availableLiquidity:
        revert with 0, 'SafeMath: addition overflow'
    availableLiquidity += arg1
    if stor2 > block.timestamp:
        revert with 0, 'SafeMath: subtraction overflow'
    if not stor1:
        if not cumulativeIndex:
            cumulativeIndex = 0
        else:
            if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
    else:
        if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
            revert with 0, 'SafeMath: addition overflow'
        if not cumulativeIndex:
            cumulativeIndex = 0
        else:
            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
    stor2 = block.timestamp
    if not totalLiquidity:
        stor1 = 0
    else:
        if arg1 + availableLiquidity > totalLiquidity:
            revert with 0, 'SafeMath: subtraction overflow'
        if not totalLiquidity - arg1 - availableLiquidity:
            if totalLiquidity <= 0:
                revert with 0, 'SafeMath: division by zero'
            require totalLiquidity
            if 0 / totalLiquidity < 80 * 10^18:
                if not 0 / totalLiquidity:
                    stor1 = 0
                else:
                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                        revert with 0, 'SafeMath: addition overflow'
                    stor1 = 4 * 0 / totalLiquidity / 80
            else:
                if 80 * 10^18 > 0 / totalLiquidity:
                    revert with 0, 'SafeMath: subtraction overflow'
                if not (0 / totalLiquidity) - 80 * 10^18:
                    stor1 = 4 * 10^18
                else:
                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                        revert with 0, 'SafeMath: addition overflow'
                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                        revert with 0, 'SafeMath: addition overflow'
                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
        else:
            if (10^18 * totalLiquidity) - (10^18 * arg1) - (10^18 * availableLiquidity) / totalLiquidity - arg1 - availableLiquidity != 10^18:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if not (10^18 * totalLiquidity) - (10^18 * arg1) - (10^18 * availableLiquidity):
                if totalLiquidity <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require totalLiquidity
                if 0 / totalLiquidity < 80 * 10^18:
                    if not 0 / totalLiquidity:
                        stor1 = 0
                    else:
                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                            revert with 0, 'SafeMath: addition overflow'
                        stor1 = 4 * 0 / totalLiquidity / 80
                else:
                    if 80 * 10^18 > 0 / totalLiquidity:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not (0 / totalLiquidity) - 80 * 10^18:
                        stor1 = 4 * 10^18
                    else:
                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                            revert with 0, 'SafeMath: addition overflow'
                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                            revert with 0, 'SafeMath: addition overflow'
                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
            else:
                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * arg1) - (10^18 * availableLiquidity) != 100:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if totalLiquidity <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require totalLiquidity
                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                    if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                        stor1 = 0
                    else:
                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                            revert with 0, 'SafeMath: addition overflow'
                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                else:
                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                        stor1 = 4 * 10^18
                    else:
                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                            revert with 0, 'SafeMath: addition overflow'
                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                            revert with 0, 'SafeMath: addition overflow'
                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * arg1) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
    emit AddLiquidity(arg1, msg.sender);
}

function removeLiquidity(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(dieselTokenAddress)
    staticcall dieselTokenAddress.0x70a08231 with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if balanceLiquidity[msg.sender] <= 0:
            revert with 0, 'SafeMath: division by zero'
        require balanceLiquidity[msg.sender]
        if not 0 / balanceLiquidity[msg.sender]:
            if 0 > availableLiquidity:
                revert with 0, 'Not enough liquidity'
            if arg1 > balanceLiquidity[msg.sender]:
                revert with 0, 'Not enough liquidity'
            if arg1 > balanceLiquidity:
                revert with 0, 'SafeMath: subtraction overflow'
            balanceLiquidity -= arg1
            if arg1 > balanceLiquidity[msg.sender]:
                revert with 0, 'SafeMath: subtraction overflow'
            balanceLiquidity[msg.sender] -= arg1
            if balanceLiquidity:
                if arg1 + profit < profit:
                    revert with 0, 'SafeMath: addition overflow'
                if 0 > arg1 + profit:
                    revert with 0, 'SafeMath: subtraction overflow'
                profit += arg1
                if 0 > totalLiquidity:
                    revert with 0, 'SafeMath: subtraction overflow'
                if 0 > availableLiquidity:
                    revert with 0, 'SafeMath: subtraction overflow'
                if 0 <= arg1:
                    require ext_code.size(underlyingTokenAddress)
                    call underlyingTokenAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args msg.sender, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(dieselTokenAddress)
                    call dieselTokenAddress.0x9dc29fac with:
                         gas gas_remaining wei
                        args msg.sender, 0 / balanceLiquidity[msg.sender]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if stor2 > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not stor1:
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                    else:
                        if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                            revert with 0, 'SafeMath: addition overflow'
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                    stor2 = block.timestamp
                    if not totalLiquidity:
                        stor1 = 0
                    else:
                        if availableLiquidity > totalLiquidity:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not totalLiquidity - availableLiquidity:
                            if totalLiquidity <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require totalLiquidity
                            if 0 / totalLiquidity < 80 * 10^18:
                                if not 0 / totalLiquidity:
                                    stor1 = 0
                                else:
                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = 4 * 0 / totalLiquidity / 80
                            else:
                                if 80 * 10^18 > 0 / totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not (0 / totalLiquidity) - 80 * 10^18:
                                    stor1 = 4 * 10^18
                                else:
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        else:
                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                    if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                    emit RemoveLiquidity(arg1, 0, msg.sender);
                else:
                    if arg1 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not -arg1:
                        if arg1 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require arg1
                        require ext_code.size(underlyingTokenAddress)
                        call underlyingTokenAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(dieselTokenAddress)
                        call dieselTokenAddress.0x9dc29fac with:
                             gas gas_remaining wei
                            args msg.sender, 0 / balanceLiquidity[msg.sender]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if stor2 > block.timestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not stor1:
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                        else:
                            if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                revert with 0, 'SafeMath: addition overflow'
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                        stor2 = block.timestamp
                        if not totalLiquidity:
                            stor1 = 0
                        else:
                            if availableLiquidity > totalLiquidity:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not totalLiquidity - availableLiquidity:
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                        if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                    else:
                        if -1 * 10^18 * arg1 / -arg1 != 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if not -1 * 10^18 * arg1:
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                        else:
                            if -100 * 10^18 * arg1 / -1 * 10^18 * arg1 != 100:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, -100 * 10^18 * arg1 / arg1, msg.sender);
            else:
                require ext_code.size(underlyingTokenAddress)
                staticcall underlyingTokenAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                profit = 0
                totalLiquidity = 0
                availableLiquidity = 0
                rate = 10^18
                if ext_call.return_data[0] <= arg1:
                    require ext_code.size(underlyingTokenAddress)
                    call underlyingTokenAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args msg.sender, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(dieselTokenAddress)
                    call dieselTokenAddress.0x9dc29fac with:
                         gas gas_remaining wei
                        args msg.sender, 0 / balanceLiquidity[msg.sender]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if stor2 > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not stor1:
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                    else:
                        if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                            revert with 0, 'SafeMath: addition overflow'
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                    stor2 = block.timestamp
                    if not totalLiquidity:
                        stor1 = 0
                    else:
                        if availableLiquidity > totalLiquidity:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not totalLiquidity - availableLiquidity:
                            if totalLiquidity <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require totalLiquidity
                            if 0 / totalLiquidity < 80 * 10^18:
                                if not 0 / totalLiquidity:
                                    stor1 = 0
                                else:
                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = 4 * 0 / totalLiquidity / 80
                            else:
                                if 80 * 10^18 > 0 / totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not (0 / totalLiquidity) - 80 * 10^18:
                                    stor1 = 4 * 10^18
                                else:
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        else:
                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                    if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                    emit RemoveLiquidity(arg1, 0, msg.sender);
                else:
                    if arg1 > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not ext_call.return_data[0] - arg1:
                        if arg1 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require arg1
                        require ext_code.size(underlyingTokenAddress)
                        call underlyingTokenAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(dieselTokenAddress)
                        call dieselTokenAddress.0x9dc29fac with:
                             gas gas_remaining wei
                            args msg.sender, 0 / balanceLiquidity[msg.sender]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if stor2 > block.timestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not stor1:
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                        else:
                            if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                revert with 0, 'SafeMath: addition overflow'
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                        stor2 = block.timestamp
                        if not totalLiquidity:
                            stor1 = 0
                        else:
                            if availableLiquidity > totalLiquidity:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not totalLiquidity - availableLiquidity:
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                        if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                    else:
                        if (10^18 * ext_call.return_data[0]) - (10^18 * arg1) / ext_call.return_data[0] - arg1 != 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if not (10^18 * ext_call.return_data[0]) - (10^18 * arg1):
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                        else:
                            if (100 * 10^18 * ext_call.return_data[0]) - (100 * 10^18 * arg1) / (10^18 * ext_call.return_data[0]) - (10^18 * arg1) != 100:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, (100 * 10^18 * ext_call.return_data[0]) - (100 * 10^18 * arg1) / arg1, msg.sender);
        else:
            if rate * 0 / balanceLiquidity[msg.sender] / 0 / balanceLiquidity[msg.sender] != rate:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if rate * 0 / balanceLiquidity[msg.sender] / 10^18 > availableLiquidity:
                revert with 0, 'Not enough liquidity'
            if arg1 > balanceLiquidity[msg.sender]:
                revert with 0, 'Not enough liquidity'
            if arg1 > balanceLiquidity:
                revert with 0, 'SafeMath: subtraction overflow'
            balanceLiquidity -= arg1
            if arg1 > balanceLiquidity[msg.sender]:
                revert with 0, 'SafeMath: subtraction overflow'
            balanceLiquidity[msg.sender] -= arg1
            if balanceLiquidity:
                if arg1 + profit < profit:
                    revert with 0, 'SafeMath: addition overflow'
                if rate * 0 / balanceLiquidity[msg.sender] / 10^18 > arg1 + profit:
                    revert with 0, 'SafeMath: subtraction overflow'
                profit = arg1 + profit - (rate * 0 / balanceLiquidity[msg.sender] / 10^18)
                if rate * 0 / balanceLiquidity[msg.sender] / 10^18 > totalLiquidity:
                    revert with 0, 'SafeMath: subtraction overflow'
                totalLiquidity -= rate * 0 / balanceLiquidity[msg.sender] / 10^18
                if rate * 0 / balanceLiquidity[msg.sender] / 10^18 > availableLiquidity:
                    revert with 0, 'SafeMath: subtraction overflow'
                availableLiquidity -= rate * 0 / balanceLiquidity[msg.sender] / 10^18
                if rate * 0 / balanceLiquidity[msg.sender] / 10^18 <= arg1:
                    require ext_code.size(underlyingTokenAddress)
                    call underlyingTokenAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args msg.sender, rate * 0 / balanceLiquidity[msg.sender] / 10^18
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(dieselTokenAddress)
                    call dieselTokenAddress.0x9dc29fac with:
                         gas gas_remaining wei
                        args msg.sender, 0 / balanceLiquidity[msg.sender]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if stor2 > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not stor1:
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                    else:
                        if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                            revert with 0, 'SafeMath: addition overflow'
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                    stor2 = block.timestamp
                    if not totalLiquidity:
                        stor1 = 0
                    else:
                        if availableLiquidity > totalLiquidity:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not totalLiquidity - availableLiquidity:
                            if totalLiquidity <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require totalLiquidity
                            if 0 / totalLiquidity < 80 * 10^18:
                                if not 0 / totalLiquidity:
                                    stor1 = 0
                                else:
                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = 4 * 0 / totalLiquidity / 80
                            else:
                                if 80 * 10^18 > 0 / totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not (0 / totalLiquidity) - 80 * 10^18:
                                    stor1 = 4 * 10^18
                                else:
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        else:
                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                    if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                    emit RemoveLiquidity(arg1, 0, msg.sender);
                else:
                    if arg1 > rate * 0 / balanceLiquidity[msg.sender] / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not (rate * 0 / balanceLiquidity[msg.sender] / 10^18) - arg1:
                        if arg1 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require arg1
                        require ext_code.size(underlyingTokenAddress)
                        call underlyingTokenAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, rate * 0 / balanceLiquidity[msg.sender] / 10^18
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(dieselTokenAddress)
                        call dieselTokenAddress.0x9dc29fac with:
                             gas gas_remaining wei
                            args msg.sender, 0 / balanceLiquidity[msg.sender]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if stor2 > block.timestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not stor1:
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                        else:
                            if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                revert with 0, 'SafeMath: addition overflow'
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                        stor2 = block.timestamp
                        if not totalLiquidity:
                            stor1 = 0
                        else:
                            if availableLiquidity > totalLiquidity:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not totalLiquidity - availableLiquidity:
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                        if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                    else:
                        if (10^18 * rate * 0 / balanceLiquidity[msg.sender] / 10^18) - (10^18 * arg1) / (rate * 0 / balanceLiquidity[msg.sender] / 10^18) - arg1 != 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if not (10^18 * rate * 0 / balanceLiquidity[msg.sender] / 10^18) - (10^18 * arg1):
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, rate * 0 / balanceLiquidity[msg.sender] / 10^18
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                        else:
                            if (100 * 10^18 * rate * 0 / balanceLiquidity[msg.sender] / 10^18) - (100 * 10^18 * arg1) / (10^18 * rate * 0 / balanceLiquidity[msg.sender] / 10^18) - (10^18 * arg1) != 100:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, rate * 0 / balanceLiquidity[msg.sender] / 10^18
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, (100 * 10^18 * rate * 0 / balanceLiquidity[msg.sender] / 10^18) - (100 * 10^18 * arg1) / arg1, msg.sender);
            else:
                require ext_code.size(underlyingTokenAddress)
                staticcall underlyingTokenAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                profit = 0
                totalLiquidity = 0
                availableLiquidity = 0
                rate = 10^18
                if ext_call.return_data[0] <= arg1:
                    require ext_code.size(underlyingTokenAddress)
                    call underlyingTokenAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args msg.sender, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(dieselTokenAddress)
                    call dieselTokenAddress.0x9dc29fac with:
                         gas gas_remaining wei
                        args msg.sender, 0 / balanceLiquidity[msg.sender]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if stor2 > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not stor1:
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                    else:
                        if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                            revert with 0, 'SafeMath: addition overflow'
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                    stor2 = block.timestamp
                    if not totalLiquidity:
                        stor1 = 0
                    else:
                        if availableLiquidity > totalLiquidity:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not totalLiquidity - availableLiquidity:
                            if totalLiquidity <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require totalLiquidity
                            if 0 / totalLiquidity < 80 * 10^18:
                                if not 0 / totalLiquidity:
                                    stor1 = 0
                                else:
                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = 4 * 0 / totalLiquidity / 80
                            else:
                                if 80 * 10^18 > 0 / totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not (0 / totalLiquidity) - 80 * 10^18:
                                    stor1 = 4 * 10^18
                                else:
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        else:
                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                    if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                    emit RemoveLiquidity(arg1, 0, msg.sender);
                else:
                    if arg1 > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not ext_call.return_data[0] - arg1:
                        if arg1 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require arg1
                        require ext_code.size(underlyingTokenAddress)
                        call underlyingTokenAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(dieselTokenAddress)
                        call dieselTokenAddress.0x9dc29fac with:
                             gas gas_remaining wei
                            args msg.sender, 0 / balanceLiquidity[msg.sender]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if stor2 > block.timestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not stor1:
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                        else:
                            if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                revert with 0, 'SafeMath: addition overflow'
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                        stor2 = block.timestamp
                        if not totalLiquidity:
                            stor1 = 0
                        else:
                            if availableLiquidity > totalLiquidity:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not totalLiquidity - availableLiquidity:
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                        if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                    else:
                        if (10^18 * ext_call.return_data[0]) - (10^18 * arg1) / ext_call.return_data[0] - arg1 != 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if not (10^18 * ext_call.return_data[0]) - (10^18 * arg1):
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                        else:
                            if (100 * 10^18 * ext_call.return_data[0]) - (100 * 10^18 * arg1) / (10^18 * ext_call.return_data[0]) - (10^18 * arg1) != 100:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, (100 * 10^18 * ext_call.return_data[0]) - (100 * 10^18 * arg1) / arg1, msg.sender);
    else:
        if arg1 * ext_call.return_data[0] / ext_call.return_data[0] != arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if balanceLiquidity[msg.sender] <= 0:
            revert with 0, 'SafeMath: division by zero'
        require balanceLiquidity[msg.sender]
        if not arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]:
            if 0 > availableLiquidity:
                revert with 0, 'Not enough liquidity'
            if arg1 > balanceLiquidity[msg.sender]:
                revert with 0, 'Not enough liquidity'
            if arg1 > balanceLiquidity:
                revert with 0, 'SafeMath: subtraction overflow'
            balanceLiquidity -= arg1
            if arg1 > balanceLiquidity[msg.sender]:
                revert with 0, 'SafeMath: subtraction overflow'
            balanceLiquidity[msg.sender] -= arg1
            if balanceLiquidity:
                if arg1 + profit < profit:
                    revert with 0, 'SafeMath: addition overflow'
                if 0 > arg1 + profit:
                    revert with 0, 'SafeMath: subtraction overflow'
                profit += arg1
                if 0 > totalLiquidity:
                    revert with 0, 'SafeMath: subtraction overflow'
                if 0 > availableLiquidity:
                    revert with 0, 'SafeMath: subtraction overflow'
                if 0 <= arg1:
                    require ext_code.size(underlyingTokenAddress)
                    call underlyingTokenAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args msg.sender, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(dieselTokenAddress)
                    call dieselTokenAddress.0x9dc29fac with:
                         gas gas_remaining wei
                        args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if stor2 > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not stor1:
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                    else:
                        if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                            revert with 0, 'SafeMath: addition overflow'
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                    stor2 = block.timestamp
                    if not totalLiquidity:
                        stor1 = 0
                    else:
                        if availableLiquidity > totalLiquidity:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not totalLiquidity - availableLiquidity:
                            if totalLiquidity <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require totalLiquidity
                            if 0 / totalLiquidity < 80 * 10^18:
                                if not 0 / totalLiquidity:
                                    stor1 = 0
                                else:
                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = 4 * 0 / totalLiquidity / 80
                            else:
                                if 80 * 10^18 > 0 / totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not (0 / totalLiquidity) - 80 * 10^18:
                                    stor1 = 4 * 10^18
                                else:
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        else:
                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                    if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                    emit RemoveLiquidity(arg1, 0, msg.sender);
                else:
                    if arg1 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not -arg1:
                        if arg1 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require arg1
                        require ext_code.size(underlyingTokenAddress)
                        call underlyingTokenAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(dieselTokenAddress)
                        call dieselTokenAddress.0x9dc29fac with:
                             gas gas_remaining wei
                            args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if stor2 > block.timestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not stor1:
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                        else:
                            if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                revert with 0, 'SafeMath: addition overflow'
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                        stor2 = block.timestamp
                        if not totalLiquidity:
                            stor1 = 0
                        else:
                            if availableLiquidity > totalLiquidity:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not totalLiquidity - availableLiquidity:
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                        if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                    else:
                        if -1 * 10^18 * arg1 / -arg1 != 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if not -1 * 10^18 * arg1:
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                        else:
                            if -100 * 10^18 * arg1 / -1 * 10^18 * arg1 != 100:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, -100 * 10^18 * arg1 / arg1, msg.sender);
            else:
                require ext_code.size(underlyingTokenAddress)
                staticcall underlyingTokenAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                profit = 0
                totalLiquidity = 0
                availableLiquidity = 0
                rate = 10^18
                if ext_call.return_data[0] <= arg1:
                    require ext_code.size(underlyingTokenAddress)
                    call underlyingTokenAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args msg.sender, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(dieselTokenAddress)
                    call dieselTokenAddress.0x9dc29fac with:
                         gas gas_remaining wei
                        args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if stor2 > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not stor1:
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                    else:
                        if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                            revert with 0, 'SafeMath: addition overflow'
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                    stor2 = block.timestamp
                    if not totalLiquidity:
                        stor1 = 0
                    else:
                        if availableLiquidity > totalLiquidity:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not totalLiquidity - availableLiquidity:
                            if totalLiquidity <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require totalLiquidity
                            if 0 / totalLiquidity < 80 * 10^18:
                                if not 0 / totalLiquidity:
                                    stor1 = 0
                                else:
                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = 4 * 0 / totalLiquidity / 80
                            else:
                                if 80 * 10^18 > 0 / totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not (0 / totalLiquidity) - 80 * 10^18:
                                    stor1 = 4 * 10^18
                                else:
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        else:
                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                    if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                    emit RemoveLiquidity(arg1, 0, msg.sender);
                else:
                    if arg1 > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not ext_call.return_data[0] - arg1:
                        if arg1 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require arg1
                        require ext_code.size(underlyingTokenAddress)
                        call underlyingTokenAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(dieselTokenAddress)
                        call dieselTokenAddress.0x9dc29fac with:
                             gas gas_remaining wei
                            args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if stor2 > block.timestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not stor1:
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                        else:
                            if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                revert with 0, 'SafeMath: addition overflow'
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                        stor2 = block.timestamp
                        if not totalLiquidity:
                            stor1 = 0
                        else:
                            if availableLiquidity > totalLiquidity:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not totalLiquidity - availableLiquidity:
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                        if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                    else:
                        if (10^18 * ext_call.return_data[0]) - (10^18 * arg1) / ext_call.return_data[0] - arg1 != 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if not (10^18 * ext_call.return_data[0]) - (10^18 * arg1):
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                        else:
                            if (100 * 10^18 * ext_call.return_data[0]) - (100 * 10^18 * arg1) / (10^18 * ext_call.return_data[0]) - (10^18 * arg1) != 100:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, (100 * 10^18 * ext_call.return_data[0]) - (100 * 10^18 * arg1) / arg1, msg.sender);
        else:
            if rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] != rate:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18 > availableLiquidity:
                revert with 0, 'Not enough liquidity'
            if arg1 > balanceLiquidity[msg.sender]:
                revert with 0, 'Not enough liquidity'
            if arg1 > balanceLiquidity:
                revert with 0, 'SafeMath: subtraction overflow'
            balanceLiquidity -= arg1
            if arg1 > balanceLiquidity[msg.sender]:
                revert with 0, 'SafeMath: subtraction overflow'
            balanceLiquidity[msg.sender] -= arg1
            if balanceLiquidity:
                if arg1 + profit < profit:
                    revert with 0, 'SafeMath: addition overflow'
                if rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18 > arg1 + profit:
                    revert with 0, 'SafeMath: subtraction overflow'
                profit = arg1 + profit - (rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18)
                if rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18 > totalLiquidity:
                    revert with 0, 'SafeMath: subtraction overflow'
                totalLiquidity -= rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18
                if rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18 > availableLiquidity:
                    revert with 0, 'SafeMath: subtraction overflow'
                availableLiquidity -= rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18
                if rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18 <= arg1:
                    require ext_code.size(underlyingTokenAddress)
                    call underlyingTokenAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args msg.sender, rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(dieselTokenAddress)
                    call dieselTokenAddress.0x9dc29fac with:
                         gas gas_remaining wei
                        args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if stor2 > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not stor1:
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                    else:
                        if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                            revert with 0, 'SafeMath: addition overflow'
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                    stor2 = block.timestamp
                    if not totalLiquidity:
                        stor1 = 0
                    else:
                        if availableLiquidity > totalLiquidity:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not totalLiquidity - availableLiquidity:
                            if totalLiquidity <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require totalLiquidity
                            if 0 / totalLiquidity < 80 * 10^18:
                                if not 0 / totalLiquidity:
                                    stor1 = 0
                                else:
                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = 4 * 0 / totalLiquidity / 80
                            else:
                                if 80 * 10^18 > 0 / totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not (0 / totalLiquidity) - 80 * 10^18:
                                    stor1 = 4 * 10^18
                                else:
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        else:
                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                    if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                    emit RemoveLiquidity(arg1, 0, msg.sender);
                else:
                    if arg1 > rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not (rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18) - arg1:
                        if arg1 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require arg1
                        require ext_code.size(underlyingTokenAddress)
                        call underlyingTokenAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(dieselTokenAddress)
                        call dieselTokenAddress.0x9dc29fac with:
                             gas gas_remaining wei
                            args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if stor2 > block.timestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not stor1:
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                        else:
                            if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                revert with 0, 'SafeMath: addition overflow'
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                        stor2 = block.timestamp
                        if not totalLiquidity:
                            stor1 = 0
                        else:
                            if availableLiquidity > totalLiquidity:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not totalLiquidity - availableLiquidity:
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                        if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                    else:
                        if (10^18 * rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18) - (10^18 * arg1) / (rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18) - arg1 != 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if not (10^18 * rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18) - (10^18 * arg1):
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                        else:
                            if (100 * 10^18 * rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18) - (100 * 10^18 * arg1) / (10^18 * rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18) - (10^18 * arg1) != 100:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, (100 * 10^18 * rate * arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender] / 10^18) - (100 * 10^18 * arg1) / arg1, msg.sender);
            else:
                require ext_code.size(underlyingTokenAddress)
                staticcall underlyingTokenAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                profit = 0
                totalLiquidity = 0
                availableLiquidity = 0
                rate = 10^18
                if ext_call.return_data[0] <= arg1:
                    require ext_code.size(underlyingTokenAddress)
                    call underlyingTokenAddress.0xa9059cbb with:
                         gas gas_remaining wei
                        args msg.sender, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(dieselTokenAddress)
                    call dieselTokenAddress.0x9dc29fac with:
                         gas gas_remaining wei
                        args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if stor2 > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not stor1:
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                    else:
                        if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                            revert with 0, 'SafeMath: addition overflow'
                        if not cumulativeIndex:
                            cumulativeIndex = 0
                        else:
                            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                    stor2 = block.timestamp
                    if not totalLiquidity:
                        stor1 = 0
                    else:
                        if availableLiquidity > totalLiquidity:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not totalLiquidity - availableLiquidity:
                            if totalLiquidity <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require totalLiquidity
                            if 0 / totalLiquidity < 80 * 10^18:
                                if not 0 / totalLiquidity:
                                    stor1 = 0
                                else:
                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = 4 * 0 / totalLiquidity / 80
                            else:
                                if 80 * 10^18 > 0 / totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not (0 / totalLiquidity) - 80 * 10^18:
                                    stor1 = 4 * 10^18
                                else:
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        else:
                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                    if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                    emit RemoveLiquidity(arg1, 0, msg.sender);
                else:
                    if arg1 > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not ext_call.return_data[0] - arg1:
                        if arg1 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require arg1
                        require ext_code.size(underlyingTokenAddress)
                        call underlyingTokenAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(dieselTokenAddress)
                        call dieselTokenAddress.0x9dc29fac with:
                             gas gas_remaining wei
                            args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if stor2 > block.timestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not stor1:
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                        else:
                            if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                revert with 0, 'SafeMath: addition overflow'
                            if not cumulativeIndex:
                                cumulativeIndex = 0
                            else:
                                if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                        stor2 = block.timestamp
                        if not totalLiquidity:
                            stor1 = 0
                        else:
                            if availableLiquidity > totalLiquidity:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not totalLiquidity - availableLiquidity:
                                if totalLiquidity <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalLiquidity
                                if 0 / totalLiquidity < 80 * 10^18:
                                    if not 0 / totalLiquidity:
                                        stor1 = 0
                                    else:
                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = 4 * 0 / totalLiquidity / 80
                                else:
                                    if 80 * 10^18 > 0 / totalLiquidity:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (0 / totalLiquidity) - 80 * 10^18:
                                        stor1 = 4 * 10^18
                                    else:
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            else:
                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                        if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                        emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                    else:
                        if (10^18 * ext_call.return_data[0]) - (10^18 * arg1) / ext_call.return_data[0] - arg1 != 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if not (10^18 * ext_call.return_data[0]) - (10^18 * arg1):
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, 0 / arg1, msg.sender);
                        else:
                            if (100 * 10^18 * ext_call.return_data[0]) - (100 * 10^18 * arg1) / (10^18 * ext_call.return_data[0]) - (10^18 * arg1) != 100:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if arg1 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require arg1
                            require ext_code.size(underlyingTokenAddress)
                            call underlyingTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(dieselTokenAddress)
                            call dieselTokenAddress.0x9dc29fac with:
                                 gas gas_remaining wei
                                args msg.sender, arg1 * ext_call.return_data[0] / balanceLiquidity[msg.sender]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if stor2 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not stor1:
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                            else:
                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not cumulativeIndex:
                                    cumulativeIndex = 0
                                else:
                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                            stor2 = block.timestamp
                            if not totalLiquidity:
                                stor1 = 0
                            else:
                                if availableLiquidity > totalLiquidity:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not totalLiquidity - availableLiquidity:
                                    if totalLiquidity <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalLiquidity
                                    if 0 / totalLiquidity < 80 * 10^18:
                                        if not 0 / totalLiquidity:
                                            stor1 = 0
                                        else:
                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = 4 * 0 / totalLiquidity / 80
                                    else:
                                        if 80 * 10^18 > 0 / totalLiquidity:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (0 / totalLiquidity) - 80 * 10^18:
                                            stor1 = 4 * 10^18
                                        else:
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                revert with 0, 'SafeMath: addition overflow'
                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                else:
                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if 0 / totalLiquidity < 80 * 10^18:
                                            if not 0 / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * 0 / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not (0 / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                    else:
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if totalLiquidity <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalLiquidity
                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity < 80 * 10^18:
                                            if not (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                stor1 = 0
                                            else:
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                        else:
                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if not ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                stor1 = 4 * 10^18
                                            else:
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                            emit RemoveLiquidity(arg1, (100 * 10^18 * ext_call.return_data[0]) - (100 * 10^18 * arg1) / arg1, msg.sender);
}

function sub_152ccef7(?) payable {
    require calldata.size - 4 >= 224
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    else:
        if not arg4:
            if arg6 + totalLiquidity < totalLiquidity:
                revert with 0, 'SafeMath: addition overflow'
            else:
                if arg3 > arg6 + totalLiquidity:
                    revert with 0, 'SafeMath: subtraction overflow'
                else:
                    totalLiquidity = arg6 + totalLiquidity - arg3
                    if arg6 + profit < profit:
                        revert with 0, 'SafeMath: addition overflow'
                    else:
                        profit += arg6
                        if not arg7:
                            if arg5 + availableLiquidity < availableLiquidity:
                                revert with 0, 'SafeMath: addition overflow'
                            else:
                                availableLiquidity += arg5
                                require ext_code.size(dieselTokenAddress)
                                staticcall dieselTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    if profit + balanceLiquidity < balanceLiquidity:
                                        revert with 0, 'SafeMath: addition overflow'
                                    else:
                                        if profit + balanceLiquidity:
                                            if (10^18 * profit) + (10^18 * balanceLiquidity) / profit + balanceLiquidity != 10^18:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            else:
                                                if ext_call.return_data[0] <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                else:
                                                    require ext_call.return_data[0]
                                                    rate = (10^18 * profit) + (10^18 * balanceLiquidity) / ext_call.return_data[0]
                                                    if stor2 > block.timestamp:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    else:
                                                        if stor1:
                                                            if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                            32,
                                                                            33,
                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[197 len 31]
                                                            else:
                                                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                else:
                                                                    if cumulativeIndex:
                                                                        if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                        32,
                                                                                        33,
                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                        mem[197 len 31]
                                                                        else:
                                                                            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                                                                            stor2 = block.timestamp
                                                                            if totalLiquidity:
                                                                                if availableLiquidity > totalLiquidity:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if totalLiquidity - availableLiquidity:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                stor1 = 0
                                                                    else:
                                                                        cumulativeIndex = 0
                                                                        stor2 = block.timestamp
                                                                        if totalLiquidity:
                                                                            if availableLiquidity > totalLiquidity:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if totalLiquidity - availableLiquidity:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            stor1 = 0
                                                        else:
                                                            if cumulativeIndex:
                                                                if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                32,
                                                                                33,
                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[197 len 31]
                                                                else:
                                                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                                                                    stor2 = block.timestamp
                                                                    if totalLiquidity:
                                                                        if availableLiquidity > totalLiquidity:
                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                        else:
                                                                            if totalLiquidity - availableLiquidity:
                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                if totalLiquidity <= 0:
                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                else:
                                                                                    require totalLiquidity
                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                            else:
                                                                                                stor1 = 4 * 10^18
                                                                                    else:
                                                                                        if 0 / totalLiquidity:
                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                        else:
                                                                                            stor1 = 0
                                                                    else:
                                                                        stor1 = 0
                                                            else:
                                                                cumulativeIndex = 0
                                                                stor2 = block.timestamp
                                                                if totalLiquidity:
                                                                    if availableLiquidity > totalLiquidity:
                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                    else:
                                                                        if totalLiquidity - availableLiquidity:
                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                            32,
                                                                                            33,
                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                            mem[197 len 31]
                                                                            else:
                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            if totalLiquidity <= 0:
                                                                                revert with 0, 'SafeMath: division by zero'
                                                                            else:
                                                                                require totalLiquidity
                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                        else:
                                                                                            stor1 = 4 * 10^18
                                                                                else:
                                                                                    if 0 / totalLiquidity:
                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                            else:
                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                    else:
                                                                                        stor1 = 0
                                                                else:
                                                                    stor1 = 0
                                        else:
                                            if ext_call.return_data[0] <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            else:
                                                require ext_call.return_data[0]
                                                rate = 0 / ext_call.return_data[0]
                                                if stor2 > block.timestamp:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                else:
                                                    if stor1:
                                                        if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                        32,
                                                                        33,
                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[197 len 31]
                                                        else:
                                                            if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            else:
                                                                if cumulativeIndex:
                                                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                    32,
                                                                                    33,
                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[197 len 31]
                                                                    else:
                                                                        cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                                                                        stor2 = block.timestamp
                                                                        if totalLiquidity:
                                                                            if availableLiquidity > totalLiquidity:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if totalLiquidity - availableLiquidity:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            stor1 = 0
                                                                else:
                                                                    cumulativeIndex = 0
                                                                    stor2 = block.timestamp
                                                                    if totalLiquidity:
                                                                        if availableLiquidity > totalLiquidity:
                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                        else:
                                                                            if totalLiquidity - availableLiquidity:
                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                if totalLiquidity <= 0:
                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                else:
                                                                                    require totalLiquidity
                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                            else:
                                                                                                stor1 = 4 * 10^18
                                                                                    else:
                                                                                        if 0 / totalLiquidity:
                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                        else:
                                                                                            stor1 = 0
                                                                    else:
                                                                        stor1 = 0
                                                    else:
                                                        if cumulativeIndex:
                                                            if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                            32,
                                                                            33,
                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[197 len 31]
                                                            else:
                                                                cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                                                                stor2 = block.timestamp
                                                                if totalLiquidity:
                                                                    if availableLiquidity > totalLiquidity:
                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                    else:
                                                                        if totalLiquidity - availableLiquidity:
                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                            32,
                                                                                            33,
                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                            mem[197 len 31]
                                                                            else:
                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            if totalLiquidity <= 0:
                                                                                revert with 0, 'SafeMath: division by zero'
                                                                            else:
                                                                                require totalLiquidity
                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                        else:
                                                                                            stor1 = 4 * 10^18
                                                                                else:
                                                                                    if 0 / totalLiquidity:
                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                            else:
                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                    else:
                                                                                        stor1 = 0
                                                                else:
                                                                    stor1 = 0
                                                        else:
                                                            cumulativeIndex = 0
                                                            stor2 = block.timestamp
                                                            if totalLiquidity:
                                                                if availableLiquidity > totalLiquidity:
                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                else:
                                                                    if totalLiquidity - availableLiquidity:
                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                        32,
                                                                                        33,
                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                        mem[197 len 31]
                                                                        else:
                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                            else:
                                                                                if totalLiquidity <= 0:
                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                else:
                                                                                    require totalLiquidity
                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                            else:
                                                                                                stor1 = 4 * 10^18
                                                                                    else:
                                                                                        if 0 / totalLiquidity:
                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                        else:
                                                                                            stor1 = 0
                                                                    else:
                                                                        if totalLiquidity <= 0:
                                                                            revert with 0, 'SafeMath: division by zero'
                                                                        else:
                                                                            require totalLiquidity
                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                            else:
                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                    else:
                                                                                        stor1 = 4 * 10^18
                                                                            else:
                                                                                if 0 / totalLiquidity:
                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                        else:
                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                else:
                                                                                    stor1 = 0
                                                            else:
                                                                stor1 = 0
                        else:
                            if not arg2:
                                if arg5 + availableLiquidity < availableLiquidity:
                                    revert with 0, 'SafeMath: addition overflow'
                                else:
                                    availableLiquidity += arg5
                                    require ext_code.size(dieselTokenAddress)
                                    staticcall dieselTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        if profit + balanceLiquidity < balanceLiquidity:
                                            revert with 0, 'SafeMath: addition overflow'
                                        else:
                                            if profit + balanceLiquidity:
                                                if (10^18 * profit) + (10^18 * balanceLiquidity) / profit + balanceLiquidity != 10^18:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                else:
                                                    if ext_call.return_data[0] <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    else:
                                                        require ext_call.return_data[0]
                                                        rate = (10^18 * profit) + (10^18 * balanceLiquidity) / ext_call.return_data[0]
                                                        if stor2 > block.timestamp:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        else:
                                                            if stor1:
                                                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                32,
                                                                                33,
                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[197 len 31]
                                                                else:
                                                                    if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    else:
                                                                        if cumulativeIndex:
                                                                            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                            32,
                                                                                            33,
                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                            mem[197 len 31]
                                                                            else:
                                                                                cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                                                                                stor2 = block.timestamp
                                                                                if totalLiquidity:
                                                                                    if availableLiquidity > totalLiquidity:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if totalLiquidity - availableLiquidity:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if totalLiquidity <= 0:
                                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                                        else:
                                                                                                            require totalLiquidity
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 10^18
                                                                                                            else:
                                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                else:
                                                                                                                    stor1 = 0
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if 0 / totalLiquidity:
                                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    stor1 = 0
                                                                        else:
                                                                            cumulativeIndex = 0
                                                                            stor2 = block.timestamp
                                                                            if totalLiquidity:
                                                                                if availableLiquidity > totalLiquidity:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if totalLiquidity - availableLiquidity:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                stor1 = 0
                                                            else:
                                                                if cumulativeIndex:
                                                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                    32,
                                                                                    33,
                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[197 len 31]
                                                                    else:
                                                                        cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                                                                        stor2 = block.timestamp
                                                                        if totalLiquidity:
                                                                            if availableLiquidity > totalLiquidity:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if totalLiquidity - availableLiquidity:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            stor1 = 0
                                                                else:
                                                                    cumulativeIndex = 0
                                                                    stor2 = block.timestamp
                                                                    if totalLiquidity:
                                                                        if availableLiquidity > totalLiquidity:
                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                        else:
                                                                            if totalLiquidity - availableLiquidity:
                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                if totalLiquidity <= 0:
                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                else:
                                                                                    require totalLiquidity
                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                            else:
                                                                                                stor1 = 4 * 10^18
                                                                                    else:
                                                                                        if 0 / totalLiquidity:
                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                        else:
                                                                                            stor1 = 0
                                                                    else:
                                                                        stor1 = 0
                                            else:
                                                if ext_call.return_data[0] <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                else:
                                                    require ext_call.return_data[0]
                                                    rate = 0 / ext_call.return_data[0]
                                                    if stor2 > block.timestamp:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    else:
                                                        if stor1:
                                                            if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                            32,
                                                                            33,
                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[197 len 31]
                                                            else:
                                                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                else:
                                                                    if cumulativeIndex:
                                                                        if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                        32,
                                                                                        33,
                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                        mem[197 len 31]
                                                                        else:
                                                                            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                                                                            stor2 = block.timestamp
                                                                            if totalLiquidity:
                                                                                if availableLiquidity > totalLiquidity:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if totalLiquidity - availableLiquidity:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                stor1 = 0
                                                                    else:
                                                                        cumulativeIndex = 0
                                                                        stor2 = block.timestamp
                                                                        if totalLiquidity:
                                                                            if availableLiquidity > totalLiquidity:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if totalLiquidity - availableLiquidity:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            stor1 = 0
                                                        else:
                                                            if cumulativeIndex:
                                                                if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                32,
                                                                                33,
                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[197 len 31]
                                                                else:
                                                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                                                                    stor2 = block.timestamp
                                                                    if totalLiquidity:
                                                                        if availableLiquidity > totalLiquidity:
                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                        else:
                                                                            if totalLiquidity - availableLiquidity:
                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                if totalLiquidity <= 0:
                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                else:
                                                                                    require totalLiquidity
                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                            else:
                                                                                                stor1 = 4 * 10^18
                                                                                    else:
                                                                                        if 0 / totalLiquidity:
                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                        else:
                                                                                            stor1 = 0
                                                                    else:
                                                                        stor1 = 0
                                                            else:
                                                                cumulativeIndex = 0
                                                                stor2 = block.timestamp
                                                                if totalLiquidity:
                                                                    if availableLiquidity > totalLiquidity:
                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                    else:
                                                                        if totalLiquidity - availableLiquidity:
                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                            32,
                                                                                            33,
                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                            mem[197 len 31]
                                                                            else:
                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            if totalLiquidity <= 0:
                                                                                revert with 0, 'SafeMath: division by zero'
                                                                            else:
                                                                                require totalLiquidity
                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                        else:
                                                                                            stor1 = 4 * 10^18
                                                                                else:
                                                                                    if 0 / totalLiquidity:
                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                            else:
                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                    else:
                                                                                        stor1 = 0
                                                                else:
                                                                    stor1 = 0
                            else:
                                require ext_code.size(underlyingTokenAddress)
                                call underlyingTokenAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args address(arg2), arg7
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    if arg5 + availableLiquidity < availableLiquidity:
                                        revert with 0, 'SafeMath: addition overflow'
                                    else:
                                        availableLiquidity += arg5
                                        require ext_code.size(dieselTokenAddress)
                                        staticcall dieselTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            if profit + balanceLiquidity < balanceLiquidity:
                                                revert with 0, 'SafeMath: addition overflow'
                                            else:
                                                if profit + balanceLiquidity:
                                                    if (10^18 * profit) + (10^18 * balanceLiquidity) / profit + balanceLiquidity != 10^18:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    else:
                                                        if ext_call.return_data[0] <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        else:
                                                            require ext_call.return_data[0]
                                                            rate = (10^18 * profit) + (10^18 * balanceLiquidity) / ext_call.return_data[0]
                                                            if stor2 > block.timestamp:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            else:
                                                                if stor1:
                                                                    if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                    32,
                                                                                    33,
                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[197 len 31]
                                                                    else:
                                                                        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        else:
                                                                            if cumulativeIndex:
                                                                                if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                                                                                    stor2 = block.timestamp
                                                                                    if totalLiquidity:
                                                                                        if availableLiquidity > totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if totalLiquidity - availableLiquidity:
                                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if totalLiquidity <= 0:
                                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                                            else:
                                                                                                                require totalLiquidity
                                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                    else:
                                                                                                                        if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                            32,
                                                                                                                                            33,
                                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                            mem[197 len 31]
                                                                                                                            else:
                                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                                    else:
                                                                                                                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                        else:
                                                                                                                            stor1 = 4 * 10^18
                                                                                                                else:
                                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                    else:
                                                                                                                        stor1 = 0
                                                                                                    else:
                                                                                                        if totalLiquidity <= 0:
                                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                                        else:
                                                                                                            require totalLiquidity
                                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 10^18
                                                                                                            else:
                                                                                                                if 0 / totalLiquidity:
                                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                                else:
                                                                                                                    stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        stor1 = 0
                                                                            else:
                                                                                cumulativeIndex = 0
                                                                                stor2 = block.timestamp
                                                                                if totalLiquidity:
                                                                                    if availableLiquidity > totalLiquidity:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if totalLiquidity - availableLiquidity:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if totalLiquidity <= 0:
                                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                                        else:
                                                                                                            require totalLiquidity
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 10^18
                                                                                                            else:
                                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                else:
                                                                                                                    stor1 = 0
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if 0 / totalLiquidity:
                                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    stor1 = 0
                                                                else:
                                                                    if cumulativeIndex:
                                                                        if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                        32,
                                                                                        33,
                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                        mem[197 len 31]
                                                                        else:
                                                                            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                                                                            stor2 = block.timestamp
                                                                            if totalLiquidity:
                                                                                if availableLiquidity > totalLiquidity:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if totalLiquidity - availableLiquidity:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                stor1 = 0
                                                                    else:
                                                                        cumulativeIndex = 0
                                                                        stor2 = block.timestamp
                                                                        if totalLiquidity:
                                                                            if availableLiquidity > totalLiquidity:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if totalLiquidity - availableLiquidity:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            stor1 = 0
                                                else:
                                                    if ext_call.return_data[0] <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    else:
                                                        require ext_call.return_data[0]
                                                        rate = 0 / ext_call.return_data[0]
                                                        if stor2 > block.timestamp:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        else:
                                                            if stor1:
                                                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                32,
                                                                                33,
                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[197 len 31]
                                                                else:
                                                                    if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    else:
                                                                        if cumulativeIndex:
                                                                            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                            32,
                                                                                            33,
                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                            mem[197 len 31]
                                                                            else:
                                                                                cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                                                                                stor2 = block.timestamp
                                                                                if totalLiquidity:
                                                                                    if availableLiquidity > totalLiquidity:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if totalLiquidity - availableLiquidity:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if totalLiquidity <= 0:
                                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                                        else:
                                                                                                            require totalLiquidity
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 10^18
                                                                                                            else:
                                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                else:
                                                                                                                    stor1 = 0
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if 0 / totalLiquidity:
                                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    stor1 = 0
                                                                        else:
                                                                            cumulativeIndex = 0
                                                                            stor2 = block.timestamp
                                                                            if totalLiquidity:
                                                                                if availableLiquidity > totalLiquidity:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if totalLiquidity - availableLiquidity:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                stor1 = 0
                                                            else:
                                                                if cumulativeIndex:
                                                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                    32,
                                                                                    33,
                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[197 len 31]
                                                                    else:
                                                                        cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                                                                        stor2 = block.timestamp
                                                                        if totalLiquidity:
                                                                            if availableLiquidity > totalLiquidity:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if totalLiquidity - availableLiquidity:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            stor1 = 0
                                                                else:
                                                                    cumulativeIndex = 0
                                                                    stor2 = block.timestamp
                                                                    if totalLiquidity:
                                                                        if availableLiquidity > totalLiquidity:
                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                        else:
                                                                            if totalLiquidity - availableLiquidity:
                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                if totalLiquidity <= 0:
                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                else:
                                                                                    require totalLiquidity
                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                            else:
                                                                                                stor1 = 4 * 10^18
                                                                                    else:
                                                                                        if 0 / totalLiquidity:
                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                        else:
                                                                                            stor1 = 0
                                                                    else:
                                                                        stor1 = 0
        else:
            require ext_code.size(underlyingTokenAddress)
            call underlyingTokenAddress.0xa9059cbb with:
                 gas gas_remaining wei
                args address(arg1), arg4
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            else:
                require return_data.size >= 32
                if arg6 + totalLiquidity < totalLiquidity:
                    revert with 0, 'SafeMath: addition overflow'
                else:
                    if arg3 > arg6 + totalLiquidity:
                        revert with 0, 'SafeMath: subtraction overflow'
                    else:
                        totalLiquidity = arg6 + totalLiquidity - arg3
                        if arg6 + profit < profit:
                            revert with 0, 'SafeMath: addition overflow'
                        else:
                            profit += arg6
                            if not arg7:
                                if arg5 + availableLiquidity < availableLiquidity:
                                    revert with 0, 'SafeMath: addition overflow'
                                else:
                                    availableLiquidity += arg5
                                    require ext_code.size(dieselTokenAddress)
                                    staticcall dieselTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        if profit + balanceLiquidity < balanceLiquidity:
                                            revert with 0, 'SafeMath: addition overflow'
                                        else:
                                            if profit + balanceLiquidity:
                                                if (10^18 * profit) + (10^18 * balanceLiquidity) / profit + balanceLiquidity != 10^18:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                else:
                                                    if ext_call.return_data[0] <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    else:
                                                        require ext_call.return_data[0]
                                                        rate = (10^18 * profit) + (10^18 * balanceLiquidity) / ext_call.return_data[0]
                                                        if stor2 > block.timestamp:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        else:
                                                            if stor1:
                                                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                32,
                                                                                33,
                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[197 len 31]
                                                                else:
                                                                    if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    else:
                                                                        if cumulativeIndex:
                                                                            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                            32,
                                                                                            33,
                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                            mem[197 len 31]
                                                                            else:
                                                                                cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                                                                                stor2 = block.timestamp
                                                                                if totalLiquidity:
                                                                                    if availableLiquidity > totalLiquidity:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if totalLiquidity - availableLiquidity:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if totalLiquidity <= 0:
                                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                                        else:
                                                                                                            require totalLiquidity
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 10^18
                                                                                                            else:
                                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                else:
                                                                                                                    stor1 = 0
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if 0 / totalLiquidity:
                                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    stor1 = 0
                                                                        else:
                                                                            cumulativeIndex = 0
                                                                            stor2 = block.timestamp
                                                                            if totalLiquidity:
                                                                                if availableLiquidity > totalLiquidity:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if totalLiquidity - availableLiquidity:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                stor1 = 0
                                                            else:
                                                                if cumulativeIndex:
                                                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                    32,
                                                                                    33,
                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[197 len 31]
                                                                    else:
                                                                        cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                                                                        stor2 = block.timestamp
                                                                        if totalLiquidity:
                                                                            if availableLiquidity > totalLiquidity:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if totalLiquidity - availableLiquidity:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            stor1 = 0
                                                                else:
                                                                    cumulativeIndex = 0
                                                                    stor2 = block.timestamp
                                                                    if totalLiquidity:
                                                                        if availableLiquidity > totalLiquidity:
                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                        else:
                                                                            if totalLiquidity - availableLiquidity:
                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                if totalLiquidity <= 0:
                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                else:
                                                                                    require totalLiquidity
                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                            else:
                                                                                                stor1 = 4 * 10^18
                                                                                    else:
                                                                                        if 0 / totalLiquidity:
                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                        else:
                                                                                            stor1 = 0
                                                                    else:
                                                                        stor1 = 0
                                            else:
                                                if ext_call.return_data[0] <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                else:
                                                    require ext_call.return_data[0]
                                                    rate = 0 / ext_call.return_data[0]
                                                    if stor2 > block.timestamp:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    else:
                                                        if stor1:
                                                            if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                            32,
                                                                            33,
                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[197 len 31]
                                                            else:
                                                                if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                else:
                                                                    if cumulativeIndex:
                                                                        if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                        32,
                                                                                        33,
                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                        mem[197 len 31]
                                                                        else:
                                                                            cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                                                                            stor2 = block.timestamp
                                                                            if totalLiquidity:
                                                                                if availableLiquidity > totalLiquidity:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if totalLiquidity - availableLiquidity:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                stor1 = 0
                                                                    else:
                                                                        cumulativeIndex = 0
                                                                        stor2 = block.timestamp
                                                                        if totalLiquidity:
                                                                            if availableLiquidity > totalLiquidity:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if totalLiquidity - availableLiquidity:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            stor1 = 0
                                                        else:
                                                            if cumulativeIndex:
                                                                if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                32,
                                                                                33,
                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[197 len 31]
                                                                else:
                                                                    cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                                                                    stor2 = block.timestamp
                                                                    if totalLiquidity:
                                                                        if availableLiquidity > totalLiquidity:
                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                        else:
                                                                            if totalLiquidity - availableLiquidity:
                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                if totalLiquidity <= 0:
                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                else:
                                                                                    require totalLiquidity
                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                            else:
                                                                                                stor1 = 4 * 10^18
                                                                                    else:
                                                                                        if 0 / totalLiquidity:
                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                        else:
                                                                                            stor1 = 0
                                                                    else:
                                                                        stor1 = 0
                                                            else:
                                                                cumulativeIndex = 0
                                                                stor2 = block.timestamp
                                                                if totalLiquidity:
                                                                    if availableLiquidity > totalLiquidity:
                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                    else:
                                                                        if totalLiquidity - availableLiquidity:
                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                            32,
                                                                                            33,
                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                            mem[197 len 31]
                                                                            else:
                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            if totalLiquidity <= 0:
                                                                                revert with 0, 'SafeMath: division by zero'
                                                                            else:
                                                                                require totalLiquidity
                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                        else:
                                                                                            stor1 = 4 * 10^18
                                                                                else:
                                                                                    if 0 / totalLiquidity:
                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                            else:
                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                    else:
                                                                                        stor1 = 0
                                                                else:
                                                                    stor1 = 0
                            else:
                                if not arg2:
                                    if arg5 + availableLiquidity < availableLiquidity:
                                        revert with 0, 'SafeMath: addition overflow'
                                    else:
                                        availableLiquidity += arg5
                                        require ext_code.size(dieselTokenAddress)
                                        staticcall dieselTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            if profit + balanceLiquidity < balanceLiquidity:
                                                revert with 0, 'SafeMath: addition overflow'
                                            else:
                                                if profit + balanceLiquidity:
                                                    if (10^18 * profit) + (10^18 * balanceLiquidity) / profit + balanceLiquidity != 10^18:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    else:
                                                        if ext_call.return_data[0] <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        else:
                                                            require ext_call.return_data[0]
                                                            rate = (10^18 * profit) + (10^18 * balanceLiquidity) / ext_call.return_data[0]
                                                            if stor2 > block.timestamp:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            else:
                                                                if stor1:
                                                                    if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                    32,
                                                                                    33,
                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[197 len 31]
                                                                    else:
                                                                        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        else:
                                                                            if cumulativeIndex:
                                                                                if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                                                                                    stor2 = block.timestamp
                                                                                    if totalLiquidity:
                                                                                        if availableLiquidity > totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if totalLiquidity - availableLiquidity:
                                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if totalLiquidity <= 0:
                                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                                            else:
                                                                                                                require totalLiquidity
                                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                    else:
                                                                                                                        if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                            32,
                                                                                                                                            33,
                                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                            mem[197 len 31]
                                                                                                                            else:
                                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                                    else:
                                                                                                                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                        else:
                                                                                                                            stor1 = 4 * 10^18
                                                                                                                else:
                                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                    else:
                                                                                                                        stor1 = 0
                                                                                                    else:
                                                                                                        if totalLiquidity <= 0:
                                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                                        else:
                                                                                                            require totalLiquidity
                                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 10^18
                                                                                                            else:
                                                                                                                if 0 / totalLiquidity:
                                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                                else:
                                                                                                                    stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        stor1 = 0
                                                                            else:
                                                                                cumulativeIndex = 0
                                                                                stor2 = block.timestamp
                                                                                if totalLiquidity:
                                                                                    if availableLiquidity > totalLiquidity:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if totalLiquidity - availableLiquidity:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if totalLiquidity <= 0:
                                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                                        else:
                                                                                                            require totalLiquidity
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 10^18
                                                                                                            else:
                                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                else:
                                                                                                                    stor1 = 0
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if 0 / totalLiquidity:
                                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    stor1 = 0
                                                                else:
                                                                    if cumulativeIndex:
                                                                        if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                        32,
                                                                                        33,
                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                        mem[197 len 31]
                                                                        else:
                                                                            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                                                                            stor2 = block.timestamp
                                                                            if totalLiquidity:
                                                                                if availableLiquidity > totalLiquidity:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if totalLiquidity - availableLiquidity:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                stor1 = 0
                                                                    else:
                                                                        cumulativeIndex = 0
                                                                        stor2 = block.timestamp
                                                                        if totalLiquidity:
                                                                            if availableLiquidity > totalLiquidity:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if totalLiquidity - availableLiquidity:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            stor1 = 0
                                                else:
                                                    if ext_call.return_data[0] <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    else:
                                                        require ext_call.return_data[0]
                                                        rate = 0 / ext_call.return_data[0]
                                                        if stor2 > block.timestamp:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        else:
                                                            if stor1:
                                                                if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                32,
                                                                                33,
                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[197 len 31]
                                                                else:
                                                                    if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    else:
                                                                        if cumulativeIndex:
                                                                            if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                            32,
                                                                                            33,
                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                            mem[197 len 31]
                                                                            else:
                                                                                cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                                                                                stor2 = block.timestamp
                                                                                if totalLiquidity:
                                                                                    if availableLiquidity > totalLiquidity:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if totalLiquidity - availableLiquidity:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if totalLiquidity <= 0:
                                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                                        else:
                                                                                                            require totalLiquidity
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 10^18
                                                                                                            else:
                                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                else:
                                                                                                                    stor1 = 0
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if 0 / totalLiquidity:
                                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    stor1 = 0
                                                                        else:
                                                                            cumulativeIndex = 0
                                                                            stor2 = block.timestamp
                                                                            if totalLiquidity:
                                                                                if availableLiquidity > totalLiquidity:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if totalLiquidity - availableLiquidity:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                stor1 = 0
                                                            else:
                                                                if cumulativeIndex:
                                                                    if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                    32,
                                                                                    33,
                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[197 len 31]
                                                                    else:
                                                                        cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                                                                        stor2 = block.timestamp
                                                                        if totalLiquidity:
                                                                            if availableLiquidity > totalLiquidity:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if totalLiquidity - availableLiquidity:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            stor1 = 0
                                                                else:
                                                                    cumulativeIndex = 0
                                                                    stor2 = block.timestamp
                                                                    if totalLiquidity:
                                                                        if availableLiquidity > totalLiquidity:
                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                        else:
                                                                            if totalLiquidity - availableLiquidity:
                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                if totalLiquidity <= 0:
                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                else:
                                                                                    require totalLiquidity
                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                            else:
                                                                                                stor1 = 4 * 10^18
                                                                                    else:
                                                                                        if 0 / totalLiquidity:
                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                else:
                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                        else:
                                                                                            stor1 = 0
                                                                    else:
                                                                        stor1 = 0
                                else:
                                    require ext_code.size(underlyingTokenAddress)
                                    call underlyingTokenAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args address(arg2), arg7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        if arg5 + availableLiquidity < availableLiquidity:
                                            revert with 0, 'SafeMath: addition overflow'
                                        else:
                                            availableLiquidity += arg5
                                            require ext_code.size(dieselTokenAddress)
                                            staticcall dieselTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                if profit + balanceLiquidity < balanceLiquidity:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if profit + balanceLiquidity:
                                                        if (10^18 * profit) + (10^18 * balanceLiquidity) / profit + balanceLiquidity != 10^18:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                        32,
                                                                        33,
                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[197 len 31]
                                                        else:
                                                            if ext_call.return_data[0] <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            else:
                                                                require ext_call.return_data[0]
                                                                rate = (10^18 * profit) + (10^18 * balanceLiquidity) / ext_call.return_data[0]
                                                                if stor2 > block.timestamp:
                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                else:
                                                                    if stor1:
                                                                        if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                        32,
                                                                                        33,
                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                        mem[197 len 31]
                                                                        else:
                                                                            if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                            else:
                                                                                if cumulativeIndex:
                                                                                    if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                                                                                        stor2 = block.timestamp
                                                                                        if totalLiquidity:
                                                                                            if availableLiquidity > totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if totalLiquidity - availableLiquidity:
                                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if totalLiquidity <= 0:
                                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                                else:
                                                                                                                    require totalLiquidity
                                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                        else:
                                                                                                                            if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                                32,
                                                                                                                                                33,
                                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                                mem[197 len 31]
                                                                                                                                else:
                                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                                    else:
                                                                                                                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                                        else:
                                                                                                                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                            else:
                                                                                                                                stor1 = 4 * 10^18
                                                                                                                    else:
                                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                            32,
                                                                                                                                            33,
                                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                            mem[197 len 31]
                                                                                                                            else:
                                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                        else:
                                                                                                                            stor1 = 0
                                                                                                        else:
                                                                                                            if totalLiquidity <= 0:
                                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                                            else:
                                                                                                                require totalLiquidity
                                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                    else:
                                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                            32,
                                                                                                                                            33,
                                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                            mem[197 len 31]
                                                                                                                            else:
                                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                                    else:
                                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                        else:
                                                                                                                            stor1 = 4 * 10^18
                                                                                                                else:
                                                                                                                    if 0 / totalLiquidity:
                                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                                    else:
                                                                                                                        stor1 = 0
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if 0 / totalLiquidity:
                                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                        else:
                                                                                            stor1 = 0
                                                                                else:
                                                                                    cumulativeIndex = 0
                                                                                    stor2 = block.timestamp
                                                                                    if totalLiquidity:
                                                                                        if availableLiquidity > totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if totalLiquidity - availableLiquidity:
                                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if totalLiquidity <= 0:
                                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                                            else:
                                                                                                                require totalLiquidity
                                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                    else:
                                                                                                                        if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                            32,
                                                                                                                                            33,
                                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                            mem[197 len 31]
                                                                                                                            else:
                                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                                    else:
                                                                                                                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                        else:
                                                                                                                            stor1 = 4 * 10^18
                                                                                                                else:
                                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                    else:
                                                                                                                        stor1 = 0
                                                                                                    else:
                                                                                                        if totalLiquidity <= 0:
                                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                                        else:
                                                                                                            require totalLiquidity
                                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 10^18
                                                                                                            else:
                                                                                                                if 0 / totalLiquidity:
                                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                                else:
                                                                                                                    stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        stor1 = 0
                                                                    else:
                                                                        if cumulativeIndex:
                                                                            if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                            32,
                                                                                            33,
                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                            mem[197 len 31]
                                                                            else:
                                                                                cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                                                                                stor2 = block.timestamp
                                                                                if totalLiquidity:
                                                                                    if availableLiquidity > totalLiquidity:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if totalLiquidity - availableLiquidity:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if totalLiquidity <= 0:
                                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                                        else:
                                                                                                            require totalLiquidity
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 10^18
                                                                                                            else:
                                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                else:
                                                                                                                    stor1 = 0
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if 0 / totalLiquidity:
                                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    stor1 = 0
                                                                        else:
                                                                            cumulativeIndex = 0
                                                                            stor2 = block.timestamp
                                                                            if totalLiquidity:
                                                                                if availableLiquidity > totalLiquidity:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if totalLiquidity - availableLiquidity:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                stor1 = 0
                                                    else:
                                                        if ext_call.return_data[0] <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        else:
                                                            require ext_call.return_data[0]
                                                            rate = 0 / ext_call.return_data[0]
                                                            if stor2 > block.timestamp:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            else:
                                                                if stor1:
                                                                    if (block.timestamp * stor1) - (stor2 * stor1) / stor1 != block.timestamp - stor2:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                    32,
                                                                                    33,
                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[197 len 31]
                                                                    else:
                                                                        if ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18 < (block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        else:
                                                                            if cumulativeIndex:
                                                                                if (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / cumulativeIndex != ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600) + 10^18:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    cumulativeIndex = (10^18 * cumulativeIndex) + ((block.timestamp * stor1) - (stor2 * stor1) / 8760 * 24 * 3600 * cumulativeIndex) / 10^18
                                                                                    stor2 = block.timestamp
                                                                                    if totalLiquidity:
                                                                                        if availableLiquidity > totalLiquidity:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if totalLiquidity - availableLiquidity:
                                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if totalLiquidity <= 0:
                                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                                            else:
                                                                                                                require totalLiquidity
                                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                    if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                    else:
                                                                                                                        if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                            32,
                                                                                                                                            33,
                                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                            mem[197 len 31]
                                                                                                                            else:
                                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                                    else:
                                                                                                                                        stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                        else:
                                                                                                                            stor1 = 4 * 10^18
                                                                                                                else:
                                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                    else:
                                                                                                                        stor1 = 0
                                                                                                    else:
                                                                                                        if totalLiquidity <= 0:
                                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                                        else:
                                                                                                            require totalLiquidity
                                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 10^18
                                                                                                            else:
                                                                                                                if 0 / totalLiquidity:
                                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                                else:
                                                                                                                    stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        stor1 = 0
                                                                            else:
                                                                                cumulativeIndex = 0
                                                                                stor2 = block.timestamp
                                                                                if totalLiquidity:
                                                                                    if availableLiquidity > totalLiquidity:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if totalLiquidity - availableLiquidity:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if totalLiquidity <= 0:
                                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                                        else:
                                                                                                            require totalLiquidity
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                                if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                        32,
                                                                                                                                        33,
                                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                        mem[197 len 31]
                                                                                                                        else:
                                                                                                                            if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                                else:
                                                                                                                                    stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 10^18
                                                                                                            else:
                                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                                else:
                                                                                                                    stor1 = 0
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if 0 / totalLiquidity:
                                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    stor1 = 0
                                                                else:
                                                                    if cumulativeIndex:
                                                                        if 10^18 * cumulativeIndex / cumulativeIndex != 10^18:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                        32,
                                                                                        33,
                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                        mem[197 len 31]
                                                                        else:
                                                                            cumulativeIndex = 10^18 * cumulativeIndex / 10^18
                                                                            stor2 = block.timestamp
                                                                            if totalLiquidity:
                                                                                if availableLiquidity > totalLiquidity:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if totalLiquidity - availableLiquidity:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                        32,
                                                                                                        33,
                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                        mem[197 len 31]
                                                                                        else:
                                                                                            if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                                if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if totalLiquidity <= 0:
                                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                                    else:
                                                                                                        require totalLiquidity
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                            if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                    32,
                                                                                                                                    33,
                                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                    mem[197 len 31]
                                                                                                                    else:
                                                                                                                        if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                                            else:
                                                                                                                                stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                                else:
                                                                                                                    stor1 = 4 * 10^18
                                                                                                        else:
                                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                            else:
                                                                                                                stor1 = 0
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if 0 / totalLiquidity:
                                                                                                            if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                    else:
                                                                                        if totalLiquidity <= 0:
                                                                                            revert with 0, 'SafeMath: division by zero'
                                                                                        else:
                                                                                            require totalLiquidity
                                                                                            if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                    else:
                                                                                                        stor1 = 4 * 10^18
                                                                                            else:
                                                                                                if 0 / totalLiquidity:
                                                                                                    if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                else:
                                                                                                    stor1 = 0
                                                                            else:
                                                                                stor1 = 0
                                                                    else:
                                                                        cumulativeIndex = 0
                                                                        stor2 = block.timestamp
                                                                        if totalLiquidity:
                                                                            if availableLiquidity > totalLiquidity:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if totalLiquidity - availableLiquidity:
                                                                                    if (10^18 * totalLiquidity) - (10^18 * availableLiquidity) / totalLiquidity - availableLiquidity != 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if (10^18 * totalLiquidity) - (10^18 * availableLiquidity):
                                                                                            if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / (10^18 * totalLiquidity) - (10^18 * availableLiquidity) != 100:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                if totalLiquidity <= 0:
                                                                                                    revert with 0, 'SafeMath: division by zero'
                                                                                                else:
                                                                                                    require totalLiquidity
                                                                                                    if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity >= 80 * 10^18:
                                                                                                        if 80 * 10^18 > (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18:
                                                                                                                if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / ((100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                                32,
                                                                                                                                33,
                                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                                mem[197 len 31]
                                                                                                                else:
                                                                                                                    if (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        if ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                                        else:
                                                                                                                            stor1 = ((75 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                            else:
                                                                                                                stor1 = 4 * 10^18
                                                                                                    else:
                                                                                                        if (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity:
                                                                                                            if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity != 4:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80 < 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    stor1 = 4 * (100 * 10^18 * totalLiquidity) - (100 * 10^18 * availableLiquidity) / totalLiquidity / 80
                                                                                                        else:
                                                                                                            stor1 = 0
                                                                                        else:
                                                                                            if totalLiquidity <= 0:
                                                                                                revert with 0, 'SafeMath: division by zero'
                                                                                            else:
                                                                                                require totalLiquidity
                                                                                                if 0 / totalLiquidity >= 80 * 10^18:
                                                                                                    if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                            if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                            32,
                                                                                                                            33,
                                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                            mem[197 len 31]
                                                                                                            else:
                                                                                                                if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                                                                else:
                                                                                                                    if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                                    else:
                                                                                                                        stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                        else:
                                                                                                            stor1 = 4 * 10^18
                                                                                                else:
                                                                                                    if 0 / totalLiquidity:
                                                                                                        if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = 4 * 0 / totalLiquidity / 80
                                                                                                    else:
                                                                                                        stor1 = 0
                                                                                else:
                                                                                    if totalLiquidity <= 0:
                                                                                        revert with 0, 'SafeMath: division by zero'
                                                                                    else:
                                                                                        require totalLiquidity
                                                                                        if 0 / totalLiquidity >= 80 * 10^18:
                                                                                            if 80 * 10^18 > 0 / totalLiquidity:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if (0 / totalLiquidity) - 80 * 10^18:
                                                                                                    if (75 * 0 / totalLiquidity) - 6000 * 10^18 / (0 / totalLiquidity) - 80 * 10^18 != 75:
                                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                    32,
                                                                                                                    33,
                                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                    mem[197 len 31]
                                                                                                    else:
                                                                                                        if (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                                                        else:
                                                                                                            if ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18 < (75 * 0 / totalLiquidity) - 6000 * 10^18 / 20:
                                                                                                                revert with 0, 'SafeMath: addition overflow'
                                                                                                            else:
                                                                                                                stor1 = ((75 * 0 / totalLiquidity) - 6000 * 10^18 / 20) + 4 * 10^18
                                                                                                else:
                                                                                                    stor1 = 4 * 10^18
                                                                                        else:
                                                                                            if 0 / totalLiquidity:
                                                                                                if 4 * 0 / totalLiquidity / 0 / totalLiquidity != 4:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if 4 * 0 / totalLiquidity / 80 < 4 * 0 / totalLiquidity / 80:
                                                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                                                    else:
                                                                                                        stor1 = 4 * 0 / totalLiquidity / 80
                                                                                            else:
                                                                                                stor1 = 0
                                                                        else:
                                                                            stor1 = 0
}



}
